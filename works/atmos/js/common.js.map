{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/jquery-form-styler/dist/jquery.formstyler.min.js","node_modules/jquery/dist/jquery.js","node_modules/lazysizes/lazysizes.js","node_modules/lazysizes/plugins/bgset/ls.bgset.js","node_modules/lazysizes/plugins/parent-fit/ls.parent-fit.js","node_modules/ssr-window/ssr-window.esm.js","node_modules/swiper/core/breakpoints/getBreakpoint.js","node_modules/swiper/core/breakpoints/index.js","node_modules/swiper/core/breakpoints/setBreakpoint.js","node_modules/swiper/core/check-overflow/index.js","node_modules/swiper/core/classes/addClasses.js","node_modules/swiper/core/classes/index.js","node_modules/swiper/core/classes/removeClasses.js","node_modules/swiper/core/core.js","node_modules/swiper/core/defaults.js","node_modules/swiper/core/events-emitter.js","node_modules/swiper/core/events/index.js","node_modules/swiper/core/events/onClick.js","node_modules/swiper/core/events/onLoad.js","node_modules/swiper/core/events/onResize.js","node_modules/swiper/core/events/onScroll.js","node_modules/swiper/core/events/onTouchEnd.js","node_modules/swiper/core/events/onTouchMove.js","node_modules/swiper/core/events/onTouchStart.js","node_modules/swiper/core/grab-cursor/index.js","node_modules/swiper/core/grab-cursor/setGrabCursor.js","node_modules/swiper/core/grab-cursor/unsetGrabCursor.js","node_modules/swiper/core/loop/index.js","node_modules/swiper/core/loop/loopCreate.js","node_modules/swiper/core/loop/loopDestroy.js","node_modules/swiper/core/loop/loopFix.js","node_modules/swiper/core/moduleExtendParams.js","node_modules/swiper/core/modules/observer/observer.js","node_modules/swiper/core/modules/resize/resize.js","node_modules/swiper/core/slide/index.js","node_modules/swiper/core/slide/slideNext.js","node_modules/swiper/core/slide/slidePrev.js","node_modules/swiper/core/slide/slideReset.js","node_modules/swiper/core/slide/slideTo.js","node_modules/swiper/core/slide/slideToClickedSlide.js","node_modules/swiper/core/slide/slideToClosest.js","node_modules/swiper/core/slide/slideToLoop.js","node_modules/swiper/core/transition/index.js","node_modules/swiper/core/transition/setTransition.js","node_modules/swiper/core/transition/transitionEmit.js","node_modules/swiper/core/transition/transitionEnd.js","node_modules/swiper/core/transition/transitionStart.js","node_modules/swiper/core/translate/getTranslate.js","node_modules/swiper/core/translate/index.js","node_modules/swiper/core/translate/maxTranslate.js","node_modules/swiper/core/translate/minTranslate.js","node_modules/swiper/core/translate/setTranslate.js","node_modules/swiper/core/translate/translateTo.js","node_modules/swiper/core/update/index.js","node_modules/swiper/core/update/updateActiveIndex.js","node_modules/swiper/core/update/updateAutoHeight.js","node_modules/swiper/core/update/updateClickedSlide.js","node_modules/swiper/core/update/updateProgress.js","node_modules/swiper/core/update/updateSize.js","node_modules/swiper/core/update/updateSlides.js","node_modules/swiper/core/update/updateSlidesClasses.js","node_modules/swiper/core/update/updateSlidesOffset.js","node_modules/swiper/core/update/updateSlidesProgress.js","node_modules/swiper/modules/a11y/a11y.js","node_modules/swiper/modules/autoplay/autoplay.js","node_modules/swiper/modules/controller/controller.js","node_modules/swiper/modules/effect-cards/effect-cards.js","node_modules/swiper/modules/effect-coverflow/effect-coverflow.js","node_modules/swiper/modules/effect-creative/effect-creative.js","node_modules/swiper/modules/effect-cube/effect-cube.js","node_modules/swiper/modules/effect-fade/effect-fade.js","node_modules/swiper/modules/effect-flip/effect-flip.js","node_modules/swiper/modules/free-mode/free-mode.js","node_modules/swiper/modules/grid/grid.js","node_modules/swiper/modules/hash-navigation/hash-navigation.js","node_modules/swiper/modules/history/history.js","node_modules/swiper/modules/keyboard/keyboard.js","node_modules/swiper/modules/manipulation/manipulation.js","node_modules/swiper/modules/manipulation/methods/addSlide.js","node_modules/swiper/modules/manipulation/methods/appendSlide.js","node_modules/swiper/modules/manipulation/methods/prependSlide.js","node_modules/swiper/modules/manipulation/methods/removeAllSlides.js","node_modules/swiper/modules/manipulation/methods/removeSlide.js","node_modules/swiper/modules/mousewheel/mousewheel.js","node_modules/swiper/modules/navigation/navigation.js","node_modules/swiper/modules/pagination/pagination.js","node_modules/swiper/modules/parallax/parallax.js","node_modules/swiper/modules/scrollbar/scrollbar.js","node_modules/swiper/modules/thumbs/thumbs.js","node_modules/swiper/modules/virtual/virtual.js","node_modules/swiper/modules/zoom/zoom.js","node_modules/swiper/shared/classes-to-selector.js","node_modules/swiper/shared/create-element-if-not-defined.js","node_modules/swiper/shared/create-shadow.js","node_modules/swiper/shared/effect-init.js","node_modules/swiper/shared/effect-target.js","node_modules/swiper/shared/effect-virtual-transition-end.js","node_modules/swiper/shared/get-browser.js","node_modules/swiper/shared/get-device.js","node_modules/swiper/shared/get-support.js","node_modules/swiper/shared/process-lazy-preloader.js","node_modules/swiper/shared/utils.js","node_modules/swiper/swiper.esm.js","src/js/_func/_jq/getAppHeight.js","src/js/_func/_jq/getScrollWidth.js","src/js/_func/_jq/headerScrollChange.js","src/js/_func/_jq/inputCount.js","src/js/_func/_jq/menuBtn.js","src/js/_func/_jq/modalMagnific.js","src/js/_func/_jq/scrollTo.js","src/js/common.js"],"names":[],"mappings":"AAAA;;;;ACAA;AACA,CAAC,UAAS,CAAC,EAAC;EAAC,UAAU,IAAE,OAAO,MAAM,IAAE,MAAM,CAAC,GAAG,GAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,EAAC,CAAC,CAAC,GAAC,QAAQ,YAAS,OAAO,iCAAA,OAAA,CAAP,OAAO,KAAC,MAAM,CAAC,OAAO,GAAC,CAAC,CAAC,CAAC,IAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC;AAAA,CAAC,CAAC,UAAS,CAAC,EAAC;EAAC,YAAY;;EAAC,SAAS,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC;IAAC,IAAI,CAAC,OAAO,GAAC,CAAC,EAAC,IAAI,CAAC,OAAO,GAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;IAAC,IAAI,CAAC,GAAC,IAAI,CAAC,OAAO,CAAC,MAAM;IAAC,KAAK,CAAC,KAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,IAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAAA;EAAC,SAAS,CAAC,CAAC,CAAC,EAAC;IAAC,IAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAE,QAAQ,IAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,IAAE,CAAC,CAAC,yBAAyB,CAAC,CAAC,MAAM,EAAC;MAAC,IAAI,CAAC,GAAC,CAAC,CAAC,yBAAyB,CAAC;QAAC,CAAC,GAAC,CAAC,CAAC,gCAAgC,EAAC,CAAC,CAAC;QAAC,CAAC,GAAC,CAAC,CAAC,4BAA4B,EAAC,CAAC,CAAC;MAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,GAAC,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,MAAM,IAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAC,CAAC,CAAC,WAAW,CAAC,gCAAgC,CAAC;IAAA;EAAC;EAAC,IAAI,CAAC,GAAC,QAAQ;IAAC,CAAC,GAAC;MAAC,QAAQ,EAAC,SAAS;MAAC,eAAe,EAAC,gBAAgB;MAAC,UAAU,EAAC,UAAU;MAAC,UAAU,EAAC,oBAAoB;MAAC,iBAAiB,EAAC,aAAa;MAAC,YAAY,EAAC,CAAC,CAAC;MAAC,iBAAiB,EAAC,EAAE;MAAC,oBAAoB,EAAC,uBAAuB;MAAC,uBAAuB,EAAC,UAAU;MAAC,oBAAoB,EAAC,CAAC;MAAC,sBAAsB,EAAC,CAAC,CAAC;MAAC,MAAM,EAAC,IAAI;MAAC,OAAO,EAAC;QAAC,EAAE,EAAC;UAAC,eAAe,EAAC,kBAAkB;UAAC,UAAU,EAAC,WAAW;UAAC,UAAU,EAAC,oBAAoB;UAAC,iBAAiB,EAAC,WAAW;UAAC,oBAAoB,EAAC,kBAAkB;UAAC,uBAAuB,EAAC;QAAW;MAAC,CAAC;MAAC,cAAc,EAAC,SAAA,eAAA,EAAU,CAAC,CAAC;MAAC,cAAc,EAAC,SAAA,eAAA,EAAU,CAAC,CAAC;MAAC,YAAY,EAAC,SAAA,aAAA,EAAU,CAAC;IAAC,CAAC;EAAC,CAAC,CAAC,SAAS,GAAC;IAAC,IAAI,EAAC,SAAA,KAAA,EAAU;MAAC,SAAS,CAAC,CAAA,EAAE;QAAC,KAAK,CAAC,KAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAE,EAAE,KAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAG,IAAI,CAAC,EAAE,GAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAC,CAAC,CAAC,QAAQ,CAAC,EAAC,IAAI,CAAC,KAAK,GAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC,IAAI,CAAC,OAAO,GAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC,IAAI,CAAC,IAAI,GAAC,CAAC,CAAC,IAAI,CAAC,CAAC;MAAA;MAAC,IAAI,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;QAAC,CAAC,GAAC,IAAI,CAAC,OAAO;QAAC,CAAC,GAAC,EAAE,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,qBAAqB,CAAC,IAAE,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;QAAC,CAAC,GAAC,EAAE,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,IAAE,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;MAAC,IAAG,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,EAAC;QAAC,IAAI,CAAC,GAAC,SAAF,CAAC,CAAA,EAAW;UAAC,IAAI,CAAC,GAAC,IAAI,CAAC,CAAD,CAAC;YAAC,CAAC,GAAC,CAAC,CAAC,qEAAqE,CAAC,CAAC,IAAI,CAAC;cAAC,EAAE,EAAC,CAAC,CAAC,EAAE;cAAC,KAAK,EAAC,CAAC,CAAC;YAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;UAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,IAAE,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,IAAE,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAC,CAAC,CAAC,KAAK,CAAC,UAAS,CAAC,EAAC;YAAC,CAAC,CAAC,cAAc,CAAC,CAAC,EAAC,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,KAAG,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,IAAE,CAAC,CAAC,IAAI,CAAC,SAAS,EAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,KAAG,CAAC,CAAC,IAAI,CAAC,SAAS,EAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;UAAA,CAAC,CAAC,EAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,aAAa,GAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAC,IAAI,CAAC,CAAC,EAAE,CAAC,cAAc,EAAC,UAAS,CAAC,EAAC;YAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,KAAG,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,EAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;UAAA,CAAC,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,eAAe,EAAC,YAAU;YAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,GAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAC,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC;UAAA,CAAC,CAAC,CAAC,EAAE,CAAC,gBAAgB,EAAC,UAAS,CAAC,EAAC;YAAC,EAAE,IAAE,CAAC,CAAC,KAAK,IAAE,CAAC,CAAC,KAAK,CAAC,CAAC;UAAA,CAAC,CAAC,CAAC,EAAE,CAAC,cAAc,EAAC,YAAU;YAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,IAAE,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC;UAAA,CAAC,CAAC,CAAC,EAAE,CAAC,aAAa,EAAC,YAAU;YAAC,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC;UAAA,CAAC,CAAC;QAAA,CAAC;QAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,SAAS,EAAC,YAAU;UAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,aAAa,GAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAC,IAAI,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,EAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAAA,CAAC,CAAC;MAAA,CAAC,MAAK,IAAG,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAC;QAAC,IAAI,CAAC,GAAC,SAAF,CAAC,CAAA,EAAW;UAAC,IAAI,CAAC,GAAC,IAAI,CAAC,CAAD,CAAC;YAAC,CAAC,GAAC,CAAC,CAAC,+DAA+D,CAAC,CAAC,IAAI,CAAC;cAAC,EAAE,EAAC,CAAC,CAAC,EAAE;cAAC,KAAK,EAAC,CAAC,CAAC;YAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;UAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,IAAE,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,IAAE,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,aAAa,GAAC,YAAU;YAAC,IAAI,CAAC,GAAC,IAAI;YAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,YAAU;cAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,KAAG,CAAC,CAAC,MAAM;YAAA,CAAC,CAAC;UAAA,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,YAAY,GAAC,YAAU;YAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;UAAA,CAAC,EAAC,CAAC,CAAC,KAAK,CAAC,UAAS,CAAC,EAAC;YAAC,IAAG,CAAC,CAAC,cAAc,CAAC,CAAC,EAAC,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,EAAC,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,EAAC;cAAC,IAAI,CAAC,GAAC,CAAC,CAAC,cAAc,GAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAC,IAAI,CAAC;cAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,EAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,EAAC,CAAC,CAAC,IAAI,CAAC,SAAS,EAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YAAA;UAAC,CAAC,CAAC,EAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,aAAa,GAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAC,IAAI,CAAC,CAAC,EAAE,CAAC,cAAc,EAAC,UAAS,CAAC,EAAC;YAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,KAAG,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,EAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;UAAA,CAAC,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,eAAe,EAAC,YAAU;YAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC;UAAA,CAAC,CAAC,CAAC,EAAE,CAAC,cAAc,EAAC,YAAU;YAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,IAAE,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC;UAAA,CAAC,CAAC,CAAC,EAAE,CAAC,aAAa,EAAC,YAAU;YAAC,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC;UAAA,CAAC,CAAC;QAAA,CAAC;QAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,SAAS,EAAC,YAAU;UAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,aAAa,GAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAC,IAAI,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,EAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAAA,CAAC,CAAC;MAAA,CAAC,MAAK,IAAG,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAC;QAAC,IAAI,CAAC,GAAC,SAAA,EAAA,EAAU;UAAC,IAAI,CAAC,GAAC,IAAI,CAAC,CAAD,CAAC;YAAC,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC;UAAC,KAAK,CAAC,KAAG,CAAC,KAAG,CAAC,GAAC,CAAC,CAAC,eAAe,CAAC;UAAC,IAAI,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;UAAC,KAAK,CAAC,KAAG,CAAC,IAAE,EAAE,KAAG,CAAC,KAAG,CAAC,GAAC,CAAC,CAAC,UAAU,CAAC;UAAC,IAAI,CAAC,GAAC,CAAC,CAAC,kDAAkD,GAAC,CAAC,GAAC,qCAAqC,GAAC,CAAC,GAAC,cAAc,CAAC,CAAC,IAAI,CAAC;YAAC,EAAE,EAAC,CAAC,CAAC,EAAE;YAAC,KAAK,EAAC,CAAC,CAAC;UAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;UAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,IAAE,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;UAAC,IAAI,CAAC,GAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAAC,CAAC,GAAC,CAAC,CAAC,mBAAmB,EAAC,CAAC,CAAC;UAAC,CAAC,IAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,EAAC,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,eAAe,EAAC,YAAU;YAAC,IAAI,CAAC,GAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAAC,IAAG,CAAC,CAAC,EAAE,CAAC,YAAY,CAAC,EAAC;cAAC,CAAC,GAAC,EAAE;cAAC,IAAI,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM;cAAC,IAAG,CAAC,GAAC,CAAC,EAAC;gBAAC,IAAI,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;gBAAC,KAAK,CAAC,KAAG,CAAC,KAAG,CAAC,GAAC,CAAC,CAAC,UAAU,CAAC,EAAC,CAAC,GAAC,CAAC,CAAC,OAAO,CAAC,IAAI,EAAC,CAAC,CAAC,EAAC,CAAC,GAAC,CAAC;cAAA;YAAC;YAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,EAAC,EAAE,CAAC,CAAC,EAAC,EAAE,KAAG,CAAC,IAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,IAAE,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC;UAAA,CAAC,CAAC,CAAC,EAAE,CAAC,cAAc,EAAC,YAAU;YAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC;UAAA,CAAC,CAAC,CAAC,EAAE,CAAC,aAAa,EAAC,YAAU;YAAC,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC;UAAA,CAAC,CAAC,CAAC,EAAE,CAAC,cAAc,EAAC,YAAU;YAAC,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC;UAAA,CAAC,CAAC;QAAA,CAAC;QAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,SAAS,EAAC,YAAU;UAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAAA,CAAC,CAAC;MAAA,CAAC,MAAK,IAAG,CAAC,CAAC,EAAE,CAAC,sBAAsB,CAAC,EAAC;QAAC,IAAI,CAAC,GAAC,SAAA,EAAA,EAAU;UAAC,IAAI,CAAC,GAAC,IAAI,CAAC,CAAD,CAAC;YAAC,CAAC,GAAC,CAAC,CAAC,gHAAgH,CAAC,CAAC,IAAI,CAAC;cAAC,EAAE,EAAC,CAAC,CAAC,EAAE;cAAC,KAAK,EAAC,CAAC,CAAC;YAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;UAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,sCAAsC,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,IAAE,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;UAAC,IAAI,CAAC;YAAC,CAAC;YAAC,CAAC;YAAC,CAAC,GAAC,IAAI;YAAC,CAAC,GAAC,IAAI;UAAC,KAAK,CAAC,KAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAG,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAC,KAAK,CAAC,KAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAG,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,GAAC,KAAK,CAAC,KAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC;UAAC,IAAI,CAAC,GAAC,SAAF,CAAC,CAAU,CAAC,EAAC;YAAC,IAAI,CAAC;cAAC,CAAC,GAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAG,CAAC,GAAC,CAAC,EAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAC,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,KAAG,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC;YAAC,IAAI,CAAC,GAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAE,EAAE,EAAE,MAAM;YAAC,IAAG,CAAC,GAAC,CAAC,EAAC;cAAC,KAAI,IAAI,CAAC,GAAC,GAAG,EAAC,CAAC,CAAC,MAAM,IAAE,CAAC,GAAE,CAAC,IAAE,GAAG;cAAC,CAAC,GAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC;YAAA;YAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,GAAC,CAAC,IAAE,CAAC,IAAE,CAAC,IAAE,CAAC,IAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,GAAC,CAAC,IAAE,CAAC,IAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,GAAC,CAAC,IAAE,CAAC,IAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;UAAA,CAAC;UAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,KAAG,CAAC,CAAC,EAAE,CAAC,WAAW,EAAC,qBAAqB,EAAC,YAAU;YAAC,IAAI,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC;YAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,GAAC,UAAU,CAAC,YAAU;cAAC,CAAC,GAAC,WAAW,CAAC,YAAU;gBAAC,CAAC,CAAC,CAAC,CAAC;cAAA,CAAC,EAAC,EAAE,CAAC;YAAA,CAAC,EAAC,GAAG,CAAC;UAAA,CAAC,CAAC,CAAC,EAAE,CAAC,kBAAkB,EAAC,qBAAqB,EAAC,YAAU;YAAC,YAAY,CAAC,CAAC,CAAC,EAAC,aAAa,CAAC,CAAC,CAAC;UAAA,CAAC,CAAC,CAAC,EAAE,CAAC,SAAS,EAAC,qBAAqB,EAAC,YAAU;YAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC;UAAA,CAAC,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,cAAc,EAAC,YAAU;YAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC;UAAA,CAAC,CAAC,CAAC,EAAE,CAAC,aAAa,EAAC,YAAU;YAAC,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC;UAAA,CAAC,CAAC,CAAC;QAAA,CAAC;QAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,SAAS,EAAC,YAAU;UAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAAA,CAAC,CAAC;MAAA,CAAC,MAAK,IAAG,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAC;QAAC,IAAI,CAAC,GAAC,SAAF,CAAC,CAAA,EAAW;UAAC,SAAS,CAAC,CAAC,CAAC,EAAC;YAAC,IAAI,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,GAAC,CAAC,CAAC,WAAW,CAAC,CAAC;cAAC,CAAC,GAAC,IAAI;cAAC,CAAC,GAAC,IAAI;YAAC,CAAC,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC,EAAE,CAAC,2BAA2B,EAAC,UAAS,CAAC,EAAC;cAAC,CAAC,GAAC,CAAC,CAAC,aAAa,CAAC,MAAM,GAAC,CAAC,IAAE,CAAC,CAAC,aAAa,CAAC,UAAU,GAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,SAAS,CAAC,CAAC,KAAG,CAAC,IAAE,CAAC,GAAC,CAAC,IAAE,CAAC,IAAE,CAAC,IAAE,CAAC,GAAC,CAAC,MAAI,CAAC,CAAC,eAAe,CAAC,CAAC,EAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;YAAA,CAAC,CAAC;UAAA;UAAC,SAAS,CAAC,CAAA,EAAE;YAAC,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,CAAC,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;cAAC,IAAI,CAAC,GAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAAC,CAAC,GAAC,EAAE;gBAAC,CAAC,GAAC,EAAE;gBAAC,CAAC,GAAC,EAAE;gBAAC,CAAC,GAAC,EAAE;gBAAC,CAAC,GAAC,EAAE;gBAAC,CAAC,GAAC,EAAE;gBAAC,CAAC,GAAC,EAAE;gBAAC,CAAC,GAAC,EAAE;gBAAC,CAAC,GAAC,EAAE;cAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAG,CAAC,GAAC,cAAc,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,KAAG,CAAC,GAAC,UAAU,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,oBAAoB,CAAC,KAAG,CAAC,GAAC,uBAAuB,CAAC,EAAC,KAAK,CAAC,KAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAE,EAAE,KAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAG,CAAC,GAAC,OAAO,GAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAC,CAAC,CAAC,QAAQ,GAAC,GAAG,CAAC,EAAC,KAAK,CAAC,KAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAE,EAAE,KAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAG,CAAC,GAAC,UAAU,GAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,GAAC,GAAG,CAAC,EAAC,KAAK,CAAC,KAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAG,CAAC,GAAC,GAAG,GAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC,CAAC,GAAC,oBAAoB,GAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,GAAC,GAAG,CAAC;cAAC,IAAI,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,CAAC;cAAC,KAAI,IAAI,CAAC,IAAI,CAAC,EAAC,EAAE,KAAG,CAAC,CAAC,CAAC,CAAC,KAAG,CAAC,IAAE,QAAQ,GAAC,CAAC,GAAC,IAAI,GAAC,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,CAAC;cAAC,CAAC,GAAC,CAAC,KAAG,EAAE,KAAG,CAAC,GAAC,UAAU,GAAC,CAAC,GAAC,CAAC,GAAC,GAAG,CAAC,EAAC,CAAC,GAAC,KAAK,GAAC,CAAC,GAAC,CAAC,GAAC,CAAC,GAAC,CAAC,GAAC,CAAC,GAAC,GAAG,GAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAC,OAAO,EAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,KAAG,KAAK,CAAC,KAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAG,CAAC,GAAC,GAAG,GAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAC,CAAC,GAAC,KAAK,GAAC,CAAC,GAAC,CAAC,GAAC,UAAU,GAAC,CAAC,GAAC,CAAC,GAAC,SAAS,GAAC,CAAC,GAAC,GAAG,GAAC,CAAC,GAAC,CAAC,GAAC,GAAG,GAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAC,OAAO,EAAC,CAAC,CAAC,EAAE,CAAC,cAAc,CAAC,KAAG,CAAC,GAAC,qBAAqB,GAAC,CAAC,GAAC,IAAI,GAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,GAAC,OAAO,GAAC,CAAC,CAAC,CAAC,EAAC,CAAC,IAAE,CAAC;YAAA;UAAC;UAAC,IAAI,CAAC,GAAC,CAAC,CAAC,QAAQ,EAAC,CAAC,CAAC;YAAC,CAAC,GAAC,EAAE;UAAC,IAAG,CAAC,CAAC,EAAE,CAAC,YAAY,CAAC,EAAC;YAAC,IAAG,CAAC,IAAE,CAAC,EAAC;YAAO,CAAC,YAAU;cAAC,IAAI,CAAC,GAAC,IAAI,CAAC,CAAD,CAAC;gBAAC,CAAC,GAAC,CAAC,CAAC,iDAAiD,CAAC,CAAC,IAAI,CAAC;kBAAC,EAAE,EAAC,CAAC,CAAC,EAAE;kBAAC,KAAK,EAAC,CAAC,CAAC;gBAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;cAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,MAAM,CAAC,MAAM,GAAC,CAAC,GAAC,OAAO,CAAC;cAAC,IAAI,CAAC,GAAC,CAAC,CAAC,IAAI,EAAC,CAAC,CAAC;gBAAC,CAAC,GAAC,CAAC,CAAC,IAAI,EAAC,CAAC,CAAC;gBAAC,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;gBAAC,CAAC,GAAC,CAAC,CAAC,WAAW,CAAC,CAAC;gBAAC,CAAC,GAAC,CAAC,CAAC,WAAW,CAAC,CAAC;cAAC,KAAK,CAAC,KAAG,CAAC,IAAE,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,GAAG,CAAC;gBAAC,MAAM,EAAC,CAAC,GAAC;cAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,CAAC;gBAAC,MAAM,EAAC,CAAC,GAAC;cAAC,CAAC,CAAC,EAAC,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC,CAAC,KAAG,CAAC,CAAC,GAAG,CAAC,WAAW,EAAC,QAAQ,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,MAAM,IAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,IAAE,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAC,CAAC,CAAC,IAAI,CAAC,YAAU;gBAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,IAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;cAAA,CAAC,CAAC,KAAG,CAAC,CAAC,MAAM,CAAC,gCAAgC,CAAC,CAAC,KAAK,CAAC,UAAS,CAAC,EAAC;gBAAC,CAAC,CAAC,KAAK,CAAC,CAAC;gBAAC,IAAI,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC;gBAAC,IAAG,CAAC,CAAC,OAAO,IAAE,CAAC,CAAC,OAAO,IAAE,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAC,CAAC,CAAC,QAAQ,IAAE,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAC,CAAC,CAAC,OAAO,IAAE,CAAC,CAAC,OAAO,IAAE,CAAC,CAAC,QAAQ,IAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,gBAAgB,CAAC,EAAC,CAAC,CAAC,CAAC,OAAO,IAAE,CAAC,CAAC,OAAO,MAAI,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,GAAC,CAAC,CAAC,WAAW,CAAC,gBAAgB,CAAC,GAAC,CAAC,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,EAAC,CAAC,CAAC,QAAQ,EAAC;kBAAC,IAAI,CAAC,GAAC,CAAC,CAAC;oBAAC,CAAC,GAAC,CAAC,CAAC;kBAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,YAAU;oBAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAG,CAAC,GAAC,CAAC,CAAC,CAAC;kBAAA,CAAC,CAAC,EAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,YAAU;oBAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAG,CAAC,GAAC,CAAC,CAAC,CAAC;kBAAA,CAAC,CAAC,EAAC,CAAC,IAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,YAAU;oBAAC,IAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,EAAC,OAAM,CAAC,CAAC;oBAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;kBAAA,CAAC,CAAC,EAAC,CAAC,IAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,YAAU;oBAAC,IAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,EAAC,OAAM,CAAC,CAAC;oBAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;kBAAA,CAAC,CAAC,EAAC,CAAC,IAAE,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,MAAM,IAAE,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;gBAAA;gBAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,YAAU;kBAAC,IAAI,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC;oBAAC,CAAC,GAAC,CAAC,CAAC,KAAK,CAAC,CAAC;kBAAC,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,KAAG,CAAC,IAAE,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAAC,CAAC,CAAC,CAAC;gBAAA,CAAC,CAAC,EAAC,CAAC,CAAC,MAAM,CAAC,CAAC;cAAA,CAAC,CAAC,EAAC,CAAC,CAAC,IAAI,CAAC,UAAS,CAAC,EAAC;gBAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,aAAa,EAAC,CAAC,CAAC;cAAA,CAAC,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,eAAe,EAAC,YAAU;gBAAC,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC;gBAAC,IAAI,CAAC,GAAC,EAAE;gBAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,YAAU;kBAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBAAA,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,UAAS,CAAC,EAAC;kBAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,EAAC,CAAC,CAAC,GAAC,CAAC,CAAC;gBAAA,CAAC,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;cAAA,CAAC,CAAC,CAAC,EAAE,CAAC,cAAc,EAAC,YAAU;gBAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC;cAAA,CAAC,CAAC,CAAC,EAAE,CAAC,aAAa,EAAC,YAAU;gBAAC,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC;cAAA,CAAC,CAAC,EAAC,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAE,CAAC,CAAC,EAAE,CAAC,gBAAgB,EAAC,UAAS,CAAC,EAAC;gBAAC,EAAE,IAAE,CAAC,CAAC,KAAK,IAAE,EAAE,IAAE,CAAC,CAAC,KAAK,IAAE,EAAE,IAAE,CAAC,CAAC,KAAK,IAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAC,CAAC,CAAC,EAAC,EAAE,IAAE,CAAC,CAAC,KAAK,IAAE,EAAE,IAAE,CAAC,CAAC,KAAK,IAAE,EAAE,IAAE,CAAC,CAAC,KAAK,IAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAC,CAAC,CAAC,WAAW,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC;cAAA,CAAC,CAAC,CAAC;YAAA,CAAC,CAAC,CAAC;UAAA,CAAC,MAAI,CAAC,YAAU;YAAC,IAAI,CAAC,GAAC,IAAI,CAAC,CAAD,CAAC;cAAC,CAAC,GAAC,EAAE;cAAC,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC;cAAC,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;cAAC,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC;cAAC,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC;cAAC,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC;cAAC,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC;YAAC,KAAK,CAAC,KAAG,CAAC,KAAG,CAAC,GAAC,CAAC,CAAC,iBAAiB,CAAC,EAAC,KAAK,CAAC,KAAG,CAAC,IAAE,EAAE,KAAG,CAAC,KAAG,CAAC,GAAC,CAAC,CAAC,YAAY,CAAC,EAAC,KAAK,CAAC,KAAG,CAAC,IAAE,EAAE,KAAG,CAAC,KAAG,CAAC,GAAC,CAAC,CAAC,iBAAiB,CAAC,EAAC,KAAK,CAAC,KAAG,CAAC,IAAE,EAAE,KAAG,CAAC,KAAG,CAAC,GAAC,CAAC,CAAC,oBAAoB,CAAC,EAAC,KAAK,CAAC,KAAG,CAAC,KAAG,CAAC,GAAC,CAAC,CAAC,uBAAuB,CAAC,EAAC,KAAK,CAAC,KAAG,CAAC,IAAE,EAAE,KAAG,CAAC,KAAG,CAAC,GAAC,CAAC,CAAC,sBAAsB,CAAC;YAAC,IAAI,CAAC,GAAC,CAAC,CAAC,wNAAwN,CAAC,CAAC,IAAI,CAAC;cAAC,EAAE,EAAC,CAAC,CAAC,EAAE;cAAC,KAAK,EAAC,CAAC,CAAC;YAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;YAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YAAC,IAAI,CAAC,GAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC;YAAC,CAAC,GAAC,CAAC,GAAC,CAAC,GAAC,CAAC,GAAC,CAAC;YAAC,IAAI,CAAC,GAAC,CAAC,CAAC,0BAA0B,EAAC,CAAC,CAAC;cAAC,CAAC,GAAC,CAAC,CAAC,+BAA+B,EAAC,CAAC,CAAC;cAAC,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC;YAAC,CAAC,CAAC,CAAC,EAAC,CAAC,KAAG,CAAC,GAAC,yFAAyF,GAAC,CAAC,GAAC,+CAA+C,GAAC,CAAC,GAAC,QAAQ,CAAC;YAAC,IAAI,CAAC,GAAC,CAAC,CAAC,sCAAsC,GAAC,CAAC,GAAC,MAAM,GAAC,CAAC,GAAC,aAAa,CAAC;YAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YAAC,IAAI,CAAC,GAAC,CAAC,CAAC,IAAI,EAAC,CAAC,CAAC;cAAC,CAAC,GAAC,CAAC,CAAC,IAAI,EAAC,CAAC,CAAC;cAAC,CAAC,GAAC,CAAC,CAAC,OAAO,EAAC,CAAC,CAAC;cAAC,CAAC,GAAC,CAAC,CAAC,6BAA6B,EAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAAC,CAAC,CAAC,MAAM,GAAC,CAAC,IAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAC,EAAE,KAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,IAAE,CAAC,CAAC,KAAG,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YAAC,IAAI,CAAC,GAAC,CAAC;cAAC,CAAC,GAAC,CAAC;YAAC,IAAG,CAAC,CAAC,GAAG,CAAC;cAAC,OAAO,EAAC;YAAc,CAAC,CAAC,EAAC,CAAC,CAAC,IAAI,CAAC,YAAU;cAAC,IAAI,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC;cAAC,CAAC,CAAC,UAAU,CAAC,CAAC,GAAC,CAAC,KAAG,CAAC,GAAC,CAAC,CAAC,UAAU,CAAC,CAAC,EAAC,CAAC,GAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YAAA,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG,CAAC;cAAC,OAAO,EAAC;YAAE,CAAC,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,cAAc,CAAC,IAAE,CAAC,CAAC,KAAK,CAAC,CAAC,GAAC,CAAC,EAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAI;cAAC,IAAI,CAAC,GAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC;gBAAC,CAAC,GAAC,CAAC,CAAC,UAAU,CAAC,CAAC;cAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,IAAE,CAAC,CAAC,UAAU,CAAC,CAAC,IAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YAAA;YAAC,CAAC,GAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC,EAAE,KAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAE,EAAE,KAAG,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,IAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAAC,IAAI,CAAC,GAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;cAAC,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAE,CAAC;cAAC,CAAC,GAAC,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC;cAAC,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC;YAAC,IAAG,CAAC,CAAC,MAAM,GAAC,CAAC,IAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAC,KAAK,CAAC,KAAG,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,EAAC;cAAC,IAAI,CAAC,GAAC,CAAC,CAAC,WAAW,CAAC,CAAC;cAAC,CAAC,CAAC,KAAG,CAAC,KAAG,CAAC,GAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,IAAI,CAAC,WAAW,EAAC,CAAC,CAAC;YAAA;YAAC,IAAI,CAAC,GAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC;YAAC,IAAG,MAAM,IAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAE,CAAC,CAAC,GAAG,CAAC;cAAC,IAAI,EAAC;YAAC,CAAC,CAAC,EAAC,MAAM,IAAE,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,KAAG,CAAC,CAAC,GAAG,CAAC;cAAC,GAAG,EAAC;YAAC,CAAC,CAAC,EAAC,CAAC,GAAC,CAAC,CAAC,EAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,CAAC,MAAM,KAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAE,CAAC,CAAC,IAAI,CAAC,CAAC,IAAE,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAC,CAAC,CAAC,IAAI,CAAC,YAAY,EAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,EAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAC,CAAC,CAAC;YAAC,CAAC,CAAC,KAAK,CAAC,YAAU;cAAC,IAAG,CAAC,CAAC,kBAAkB,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,IAAE,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC;gBAAC,IAAI,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC;kBAAC,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;kBAAC,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG;kBAAC,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAC,CAAC,IAAE,CAAC,GAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;kBAAC,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC;gBAAC,KAAK,CAAC,KAAG,CAAC,IAAE,EAAE,KAAG,CAAC,KAAG,CAAC,GAAC,CAAC,CAAC,oBAAoB,CAAC;gBAAC,IAAI,CAAC,GAAC,CAAC,GAAC,CAAC;kBAAC,CAAC,GAAC,CAAC,GAAC,CAAC;gBAAC,CAAC,GAAC,CAAC,IAAE,CAAC,GAAC,CAAC,KAAG,CAAC,GAAC,CAAC,CAAC,EAAC,CAAC,KAAG,CAAC,KAAG,CAAC,GAAC,MAAM,CAAC;gBAAC,IAAI,CAAC,GAAC,SAAF,CAAC,CAAA,EAAW;kBAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC;oBAAC,MAAM,EAAC,MAAM;oBAAC,GAAG,EAAC;kBAAC,CAAC,CAAC;kBAAC,IAAI,CAAC,GAAC,SAAF,CAAC,CAAA,EAAW;oBAAC,CAAC,CAAC,GAAG,CAAC,YAAY,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAC,EAAE,GAAC,CAAC,IAAE,CAAC,CAAC,GAAC,CAAC,CAAC;kBAAA,CAAC;kBAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG,CAAC,YAAY,EAAC,CAAC,CAAC,EAAC,MAAM,IAAE,CAAC,IAAE,CAAC,CAAC,GAAG,CAAC,YAAY,EAAC,CAAC,CAAC,EAAC,CAAC,GAAC,CAAC,CAAC,WAAW,CAAC,CAAC,GAAC,EAAE,IAAE,CAAC,CAAC,CAAC;gBAAA,CAAC;gBAAC,CAAC,CAAC,KAAG,CAAC,IAAE,CAAC,KAAG,CAAC,GAAC,CAAC,GAAC,CAAC,GAAC,CAAC,GAAC,EAAE,IAAE,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAG,YAAU;kBAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC;oBAAC,GAAG,EAAC,MAAM;oBAAC,MAAM,EAAC;kBAAC,CAAC,CAAC;kBAAC,IAAI,CAAC,GAAC,SAAF,CAAC,CAAA,EAAW;oBAAC,CAAC,CAAC,GAAG,CAAC,YAAY,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAC,EAAE,GAAC,CAAC,IAAE,CAAC,CAAC,GAAC,CAAC,CAAC;kBAAA,CAAC;kBAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG,CAAC,YAAY,EAAC,CAAC,CAAC,EAAC,MAAM,IAAE,CAAC,IAAE,CAAC,CAAC,GAAG,CAAC,YAAY,EAAC,CAAC,CAAC,EAAC,CAAC,GAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAC,EAAE,GAAC,CAAC,CAAC,WAAW,CAAC,CAAC,GAAC,EAAE,IAAE,CAAC,CAAC,CAAC;gBAAA,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,GAAC,CAAC,CAAC,KAAG,CAAC,IAAE,CAAC,KAAG,CAAC,GAAC,CAAC,GAAC,CAAC,GAAC,CAAC,GAAC,EAAE,KAAG,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,IAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC;kBAAC,MAAM,EAAC,MAAM;kBAAC,GAAG,EAAC;gBAAC,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG,CAAC,YAAY,EAAC,CAAC,CAAC,EAAC,MAAM,IAAE,CAAC,IAAE,CAAC,CAAC,GAAG,CAAC,YAAY,EAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,GAAC,CAAC,CAAC,UAAU,CAAC,CAAC,GAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAE,CAAC,CAAC,GAAG,CAAC;kBAAC,IAAI,EAAC,MAAM;kBAAC,KAAK,EAAC;gBAAC,CAAC,CAAC,EAAC,CAAC,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC;kBAAC,MAAM,EAAC,CAAC,GAAC;gBAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAC,CAAC,CAAC,GAAG,CAAC;kBAAC,MAAM,EAAC;gBAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,IAAE,CAAC,CAAC,oCAAoC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAC,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,KAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,CAAC,WAAW,CAAC,wBAAwB,CAAC,EAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,IAAE,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,MAAM,KAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,CAAC,KAAK,CAAC,YAAU;kBAAC,IAAI,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;kBAAC,CAAC,CAAC,IAAI,CAAC,YAAU;oBAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,KAAK,GAAC,CAAC,GAAC,KAAK,EAAC,GAAG,CAAC,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;kBAAA,CAAC,CAAC,EAAC,EAAE,KAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAE,EAAE,KAAG,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,IAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,MAAM,GAAC,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBAAA,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,MAAM,KAAG,EAAE,KAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAE,CAAC,CAAC,WAAW,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,IAAE,CAAC,KAAG,CAAC,IAAE,CAAC,CAAC,EAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAC,CAAC,CAAC,WAAW,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC;cAAA;YAAC,CAAC,CAAC,EAAC,CAAC,CAAC,KAAK,CAAC,YAAU;cAAC,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC;YAAA,CAAC,CAAC;YAAC,IAAI,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC;YAAC,CAAC,CAAC,MAAM,CAAC,gCAAgC,CAAC,CAAC,KAAK,CAAC,YAAU;cAAC,CAAC,CAAC,KAAK,CAAC,CAAC;cAAC,IAAI,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC;gBAAC,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,CAAC;cAAC,IAAG,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,EAAC;gBAAC,IAAI,CAAC,GAAC,CAAC,CAAC,KAAK,CAAC,CAAC;gBAAC,CAAC,IAAE,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,MAAM,EAAC,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,cAAc,CAAC,EAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAAC,CAAC,CAAC,CAAC,EAAC,CAAC,GAAC,CAAC,EAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAC,CAAC,CAAC,IAAI,CAAC,YAAY,EAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAC,CAAC,CAAC,MAAM,CAAC,CAAC;cAAA;cAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,CAAC,WAAW,CAAC,wBAAwB,CAAC,EAAC,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;YAAA,CAAC,CAAC,EAAC,CAAC,CAAC,QAAQ,CAAC,YAAU;cAAC,CAAC,CAAC,QAAQ,EAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YAAA,CAAC,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,eAAe,EAAC,YAAU;cAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,aAAa,CAAC,EAAC,CAAC,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAE,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,GAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAC,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC;YAAA,CAAC,CAAC,CAAC,EAAE,CAAC,cAAc,EAAC,YAAU;cAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAC,CAAC,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,wBAAwB,CAAC,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC,IAAI,CAAC,CAAC;YAAA,CAAC,CAAC,CAAC,EAAE,CAAC,aAAa,EAAC,YAAU;cAAC,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC;YAAA,CAAC,CAAC,CAAC,EAAE,CAAC,6BAA6B,EAAC,UAAS,CAAC,EAAC;cAAC,IAAI,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;cAAC,EAAE,KAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAC,EAAE,IAAE,CAAC,CAAC,KAAK,IAAE,EAAE,IAAE,CAAC,CAAC,KAAK,IAAE,EAAE,IAAE,CAAC,CAAC,KAAK,IAAE,EAAE,IAAE,CAAC,CAAC,KAAK,KAAG,EAAE,KAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC,EAAE,IAAE,CAAC,CAAC,KAAK,IAAE,EAAE,IAAE,CAAC,CAAC,KAAK,IAAE,EAAE,IAAE,CAAC,CAAC,KAAK,IAAE,EAAE,IAAE,CAAC,CAAC,KAAK,IAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAC,CAAC,CAAC,WAAW,CAAC,CAAC,GAAC,CAAC,CAAC,EAAC,EAAE,IAAE,CAAC,CAAC,KAAK,KAAG,CAAC,CAAC,cAAc,CAAC,CAAC,EAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,CAAC,WAAW,CAAC,wBAAwB,CAAC,EAAC,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAAA,CAAC,CAAC,CAAC,EAAE,CAAC,gBAAgB,EAAC,UAAS,CAAC,EAAC;cAAC,EAAE,IAAE,CAAC,CAAC,KAAK,KAAG,CAAC,CAAC,cAAc,CAAC,CAAC,EAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YAAA,CAAC,CAAC,EAAC,CAAC,CAAC,UAAU,KAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,OAAO,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,UAAU,GAAC,CAAC,CAAC,CAAC;UAAA,CAAC,CAAC,CAAC;QAAA,CAAC;QAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,SAAS,EAAC,YAAU;UAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAAA,CAAC,CAAC;MAAA,CAAC,MAAK,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAE,CAAC,CAAC,EAAE,CAAC,OAAO,EAAC,YAAU;QAAC,UAAU,CAAC,YAAU;UAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC;QAAA,CAAC,EAAC,CAAC,CAAC;MAAA,CAAC,CAAC;IAAA,CAAC;IAAC,OAAO,EAAC,SAAA,QAAA,EAAU;MAAC,IAAI,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;MAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,IAAE,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAE,CAAC,CAAC,UAAU,CAAC,GAAG,GAAC,CAAC,CAAC,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,aAAa,GAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAC,IAAI,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,IAAE,CAAC,CAAC,EAAE,CAAC,sBAAsB,CAAC,GAAC,CAAC,CAAC,UAAU,CAAC,GAAG,GAAC,CAAC,CAAC,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAE,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAG,CAAC,CAAC,UAAU,CAAC,GAAG,GAAC,CAAC,CAAC,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;IAAA;EAAC,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAC,UAAS,CAAC,EAAC;IAAC,IAAI,CAAC,GAAC,SAAS;IAAC,IAAG,KAAK,CAAC,KAAG,CAAC,IAAE,QAAQ,IAAA,OAAA,CAAS,CAAC,GAAC,OAAO,IAAI,CAAC,IAAI,CAAC,YAAU;MAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAC,GAAG,GAAC,CAAC,CAAC,IAAE,CAAC,CAAC,IAAI,CAAC,IAAI,EAAC,GAAG,GAAC,CAAC,EAAC,IAAI,CAAC,CAAC,IAAI,EAAC,CAAC,CAAC,CAAC;IAAA,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,YAAU;MAAC,IAAI,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,GAAC,CAAC,CAAC;MAAC,CAAC,IAAE,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IAAA,CAAC,CAAC,EAAC,IAAI;IAAC,IAAG,QAAQ,IAAE,OAAO,CAAC,IAAE,GAAG,KAAG,CAAC,CAAC,CAAC,CAAC,IAAE,MAAM,KAAG,CAAC,EAAC;MAAC,IAAI,CAAC;MAAC,OAAO,IAAI,CAAC,IAAI,CAAC,YAAU;QAAC,IAAI,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAC,GAAG,GAAC,CAAC,CAAC;QAAC,CAAC,YAAY,CAAC,IAAE,UAAU,IAAE,OAAO,CAAC,CAAC,CAAC,CAAC,KAAG,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC;MAAA,CAAC,CAAC,EAAC,KAAK,CAAC,KAAG,CAAC,GAAC,CAAC,GAAC,IAAI;IAAA;EAAC,CAAC,EAAC,CAAC,CAAC,UAAU,GAAC,CAAC,CAAC;AAAA,CAAC,CAAC;;;;;;ACD99iB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC,WAAU,MAAM,EAAE,OAAO,EAAG;EAE5B,IAAK,QAAO,MAAM,iCAAA,OAAA,CAAN,MAAM,OAAK,QAAQ,IAAI,OAAA,CAAO,MAAM,CAAC,OAAO,MAAK,QAAQ,EAAG;IACvE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,QAAQ,GAC/B,OAAO,CAAE,MAAM,EAAE,IAAK,CAAC,GACvB,UAAU,CAAC,EAAG;MACb,IAAK,CAAC,CAAC,CAAC,QAAQ,EAAG;QAClB,MAAM,IAAI,KAAK,CAAE,0CAA2C,CAAC;MAC9D;MACA,OAAO,OAAO,CAAE,CAAE,CAAC;IACpB,CAAC;EACH,CAAC,MAAM;IACN,OAAO,CAAE,MAAO,CAAC;EAClB;;EAED;AACA,CAAC,EAAC,OAAO,MAAM,KAAK,WAAW,GAAG,MAAM,SAAO,EAAE,UAAU,MAAM,EAAE,QAAQ,EAAG;EAE9E;EACA;EACA;EACA;EACA;EACA,IAAI,UAAU,GAAG,EAAE;EAEnB,IAAI,QAAQ,GAAG,MAAM,CAAC,QAAQ;EAE9B,IAAI,MAAK,GAAG,UAAU,CAAC,KAAK;EAE5B,IAAI,MAAM,GAAG,UAAU,CAAC,MAAM;EAE9B,IAAI,IAAI,GAAG,UAAU,CAAC,IAAI;EAE1B,IAAI,OAAO,GAAG,UAAU,CAAC,OAAO;EAEhC,IAAI,UAAU,GAAG,CAAC,CAAC;EAEnB,IAAI,QAAQ,GAAG,UAAU,CAAC,QAAQ;EAElC,IAAI,MAAM,GAAG,UAAU,CAAC,cAAc;EAEtC,IAAI,OAAO,GAAG,CAAC,CAAC;EAIhB,IACC,OAAO,GAAG,QAAQ;IAElB;IACA,MAAM,GAAG,SAAT,MAAM,CAAa,QAAQ,EAAE,OAAO,EAAG;MAEtC;MACA;MACA,OAAO,IAAI,MAAM,CAAC,EAAE,CAAC,IAAI,CAAE,QAAQ,EAAE,OAAQ,CAAC;IAC/C,CAAC;IAED;IACA;IACA,KAAK,GAAG,oCAAoC;IAE5C;IACA,SAAS,GAAG,OAAO;IACnB,UAAU,GAAG,cAAc;IAE3B;IACA,UAAU,GAAG,SAAb,UAAU,CAAa,GAAG,EAAE,MAAM,EAAG;MACpC,OAAO,MAAM,CAAC,WAAW,CAAC,CAAC;IAC5B,CAAC;EAEF,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,SAAS,GAAG;IAE9B;IACA,MAAM,EAAE,OAAO;IAEf,WAAW,EAAE,MAAM;IAEnB;IACA,QAAQ,EAAE,EAAE;IAEZ;IACA,MAAM,EAAE,CAAC;IAET,OAAO,EAAE,SAAA,QAAA,EAAW;MACnB,OAAO,MAAK,CAAC,IAAI,CAAE,IAAK,CAAC;IAC1B,CAAC;IAED;IACA;IACA,GAAG,EAAE,SAAA,IAAU,GAAG,EAAG;MACpB,OAAO,GAAG,IAAI,IAAI;MAEjB;MACE,GAAG,GAAG,CAAC,GAAG,IAAI,CAAE,GAAG,GAAG,IAAI,CAAC,MAAM,CAAE,GAAG,IAAI,CAAE,GAAG,CAAE;MAEnD;MACA,MAAK,CAAC,IAAI,CAAE,IAAK,CAAC;IACpB,CAAC;IAED;IACA;IACA,SAAS,EAAE,SAAA,UAAU,KAAK,EAAG;MAE5B;MACA,IAAI,GAAG,GAAG,MAAM,CAAC,KAAK,CAAE,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,KAAM,CAAC;;MAEnD;MACA,GAAG,CAAC,UAAU,GAAG,IAAI;MACrB,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO;;MAE1B;MACA,OAAO,GAAG;IACX,CAAC;IAED;IACA,IAAI,EAAE,SAAA,KAAU,QAAQ,EAAG;MAC1B,OAAO,MAAM,CAAC,IAAI,CAAE,IAAI,EAAE,QAAS,CAAC;IACrC,CAAC;IAED,GAAG,EAAE,SAAA,IAAU,QAAQ,EAAG;MACzB,OAAO,IAAI,CAAC,SAAS,CAAE,MAAM,CAAC,GAAG,CAAE,IAAI,EAAE,UAAU,IAAI,EAAE,CAAC,EAAG;QAC5D,OAAO,QAAQ,CAAC,IAAI,CAAE,IAAI,EAAE,CAAC,EAAE,IAAK,CAAC;MACtC,CAAE,CAAE,CAAC;IACN,CAAC;IAED,KAAK,EAAE,SAAA,MAAA,EAAW;MACjB,OAAO,IAAI,CAAC,SAAS,CAAE,MAAK,CAAC,KAAK,CAAE,IAAI,EAAE,SAAU,CAAE,CAAC;IACxD,CAAC;IAED,KAAK,EAAE,SAAA,MAAA,EAAW;MACjB,OAAO,IAAI,CAAC,EAAE,CAAE,CAAE,CAAC;IACpB,CAAC;IAED,IAAI,EAAE,SAAA,KAAA,EAAW;MAChB,OAAO,IAAI,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC;IACrB,CAAC;IAED,EAAE,EAAE,SAAA,GAAU,CAAC,EAAG;MACjB,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM;QACpB,CAAC,GAAG,CAAC,CAAC,IAAK,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAE;MAC7B,OAAO,IAAI,CAAC,SAAS,CAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAE,IAAI,CAAE,CAAC,CAAE,CAAE,GAAG,EAAG,CAAC;IAChE,CAAC;IAED,GAAG,EAAE,SAAA,IAAA,EAAW;MACf,OAAO,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7C,CAAC;IAED;IACA;IACA,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,UAAU,CAAC,IAAI;IACrB,MAAM,EAAE,UAAU,CAAC;EACpB,CAAC;EAED,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,EAAE,CAAC,MAAM,GAAG,YAAW;IAC7C,IAAI,GAAG;MAAE,WAAW;MAAE,IAAI;MAAE,IAAI;MAAE,OAAO;MAAE,KAAK;MAC/C,MAAM,GAAG,SAAS,CAAE,CAAC,CAAE,IAAI,CAAC,CAAC;MAC7B,CAAC,GAAG,CAAC;MACL,MAAM,GAAG,SAAS,CAAC,MAAM;MACzB,IAAI,GAAG,KAAK;;IAEb;IACA,IAAK,OAAO,MAAM,KAAK,SAAS,EAAG;MAClC,IAAI,GAAG,MAAM;;MAEb;MACA,MAAM,GAAG,SAAS,CAAE,CAAC,CAAE,IAAI,CAAC,CAAC;MAC7B,CAAC,EAAE;IACJ;;IAEA;IACA,IAAK,OAAA,CAAO,MAAM,MAAK,QAAQ,IAAI,CAAC,MAAM,CAAC,UAAU,CAAE,MAAO,CAAC,EAAG;MACjE,MAAM,GAAG,CAAC,CAAC;IACZ;;IAEA;IACA,IAAK,CAAC,KAAK,MAAM,EAAG;MACnB,MAAM,GAAG,IAAI;MACb,CAAC,EAAE;IACJ;IAEA,OAAQ,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAG;MAEzB;MACA,IAAK,CAAE,OAAO,GAAG,SAAS,CAAE,CAAC,CAAE,KAAM,IAAI,EAAG;QAE3C;QACA,KAAM,IAAI,IAAI,OAAO,EAAG;UACvB,GAAG,GAAG,MAAM,CAAE,IAAI,CAAE;UACpB,IAAI,GAAG,OAAO,CAAE,IAAI,CAAE;;UAEtB;UACA,IAAK,MAAM,KAAK,IAAI,EAAG;YACtB;UACD;;UAEA;UACA,IAAK,IAAI,IAAI,IAAI,KAAM,MAAM,CAAC,aAAa,CAAE,IAAK,CAAC,KAChD,WAAW,GAAG,MAAM,CAAC,OAAO,CAAE,IAAK,CAAC,CAAE,CAAE,EAAG;YAE7C,IAAK,WAAW,EAAG;cAClB,WAAW,GAAG,KAAK;cACnB,KAAK,GAAG,GAAG,IAAI,MAAM,CAAC,OAAO,CAAE,GAAI,CAAC,GAAG,GAAG,GAAG,EAAE;YAEhD,CAAC,MAAM;cACN,KAAK,GAAG,GAAG,IAAI,MAAM,CAAC,aAAa,CAAE,GAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;YACtD;;YAEA;YACA,MAAM,CAAE,IAAI,CAAE,GAAG,MAAM,CAAC,MAAM,CAAE,IAAI,EAAE,KAAK,EAAE,IAAK,CAAC;;YAEpD;UACA,CAAC,MAAM,IAAK,IAAI,KAAK,SAAS,EAAG;YAChC,MAAM,CAAE,IAAI,CAAE,GAAG,IAAI;UACtB;QACD;MACD;IACD;;IAEA;IACA,OAAO,MAAM;EACd,CAAC;EAED,MAAM,CAAC,MAAM,CAAE;IAEd;IACA,OAAO,EAAE,QAAQ,GAAG,CAAE,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAG,OAAO,CAAE,KAAK,EAAE,EAAG,CAAC;IAEpE;IACA,OAAO,EAAE,IAAI;IAEb,KAAK,EAAE,SAAA,MAAU,GAAG,EAAG;MACtB,MAAM,IAAI,KAAK,CAAE,GAAI,CAAC;IACvB,CAAC;IAED,IAAI,EAAE,SAAA,KAAA,EAAW,CAAC,CAAC;IAEnB;IACA;IACA;IACA,UAAU,EAAE,SAAA,WAAU,GAAG,EAAG;MAC3B,OAAO,MAAM,CAAC,IAAI,CAAE,GAAI,CAAC,KAAK,UAAU;IACzC,CAAC;IAED,OAAO,EAAE,KAAK,CAAC,OAAO,IAAI,UAAU,GAAG,EAAG;MACzC,OAAO,MAAM,CAAC,IAAI,CAAE,GAAI,CAAC,KAAK,OAAO;IACtC,CAAC;IAED,QAAQ,EAAE,SAAA,SAAU,GAAG,EAAG;MACzB;MACA,OAAO,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM;IACxC,CAAC;IAED,SAAS,EAAE,SAAA,UAAU,GAAG,EAAG;MAE1B;MACA;MACA;MACA;MACA,IAAI,aAAa,GAAG,GAAG,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC;MACzC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAE,GAAI,CAAC,IAAM,aAAa,GAAG,UAAU,CAAE,aAAc,CAAC,GAAG,CAAC,IAAM,CAAC;IAC1F,CAAC;IAED,aAAa,EAAE,SAAA,cAAU,GAAG,EAAG;MAC9B,IAAI,IAAI;MACR,KAAM,IAAI,IAAI,GAAG,EAAG;QACnB,OAAO,KAAK;MACb;MACA,OAAO,IAAI;IACZ,CAAC;IAED,aAAa,EAAE,SAAA,cAAU,GAAG,EAAG;MAC9B,IAAI,GAAG;;MAEP;MACA;MACA;MACA,IAAK,CAAC,GAAG,IAAI,MAAM,CAAC,IAAI,CAAE,GAAI,CAAC,KAAK,QAAQ,IAAI,GAAG,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAE,GAAI,CAAC,EAAG;QACxF,OAAO,KAAK;MACb;MAEA,IAAI;QAEH;QACA,IAAK,GAAG,CAAC,WAAW,IACnB,CAAC,MAAM,CAAC,IAAI,CAAE,GAAG,EAAE,aAAc,CAAC,IAClC,CAAC,MAAM,CAAC,IAAI,CAAE,GAAG,CAAC,WAAW,CAAC,SAAS,EAAE,eAAgB,CAAC,EAAG;UAC7D,OAAO,KAAK;QACb;MACD,CAAC,CAAC,OAAQ,CAAC,EAAG;QAEb;QACA,OAAO,KAAK;MACb;;MAEA;MACA;MACA,IAAK,CAAC,OAAO,CAAC,QAAQ,EAAG;QACxB,KAAM,GAAG,IAAI,GAAG,EAAG;UAClB,OAAO,MAAM,CAAC,IAAI,CAAE,GAAG,EAAE,GAAI,CAAC;QAC/B;MACD;;MAEA;MACA;MACA,KAAM,GAAG,IAAI,GAAG,EAAG,CAAC;MAEpB,OAAO,GAAG,KAAK,SAAS,IAAI,MAAM,CAAC,IAAI,CAAE,GAAG,EAAE,GAAI,CAAC;IACpD,CAAC;IAED,IAAI,EAAE,SAAA,KAAU,GAAG,EAAG;MACrB,IAAK,GAAG,IAAI,IAAI,EAAG;QAClB,OAAO,GAAG,GAAG,EAAE;MAChB;MACA,OAAO,OAAA,CAAO,GAAG,MAAK,QAAQ,IAAI,OAAO,GAAG,KAAK,UAAU,GAC1D,UAAU,CAAE,QAAQ,CAAC,IAAI,CAAE,GAAI,CAAC,CAAE,IAAI,QAAQ,GAAA,OAAA,CACvC,GAAG;IACZ,CAAC;IAED;IACA;IACA,UAAU,EAAE,SAAA,WAAU,IAAI,EAAG;MAC5B,IAAK,IAAI,IAAI,MAAM,CAAC,IAAI,CAAE,IAAK,CAAC,EAAG;QAElC;QACA;QACA;QACA,CAAE,MAAM,CAAC,UAAU,IAAI,UAAU,IAAI,EAAG;UACvC,MAAM,CAAE,MAAM,CAAE,CAAC,IAAI,CAAE,MAAM,EAAE,IAAK,CAAC,CAAC,CAAC;QACxC,CAAC,EAAI,IAAK,CAAC;MACZ;IACD,CAAC;IAED;IACA;IACA,SAAS,EAAE,SAAA,UAAU,MAAM,EAAG;MAC7B,OAAO,MAAM,CAAC,OAAO,CAAE,SAAS,EAAE,KAAM,CAAC,CAAC,OAAO,CAAE,UAAU,EAAE,UAAW,CAAC;IAC5E,CAAC;IAED,QAAQ,EAAE,SAAA,SAAU,IAAI,EAAE,IAAI,EAAG;MAChC,OAAO,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,IAAI,CAAC,WAAW,CAAC,CAAC;IAC3E,CAAC;IAED,IAAI,EAAE,SAAA,KAAU,GAAG,EAAE,QAAQ,EAAG;MAC/B,IAAI,MAAM;QAAE,CAAC,GAAG,CAAC;MAEjB,IAAK,WAAW,CAAE,GAAI,CAAC,EAAG;QACzB,MAAM,GAAG,GAAG,CAAC,MAAM;QACnB,OAAQ,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAG;UACzB,IAAK,QAAQ,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC,CAAE,EAAE,CAAC,EAAE,GAAG,CAAE,CAAC,CAAG,CAAC,KAAK,KAAK,EAAG;YACvD;UACD;QACD;MACD,CAAC,MAAM;QACN,KAAM,CAAC,IAAI,GAAG,EAAG;UAChB,IAAK,QAAQ,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC,CAAE,EAAE,CAAC,EAAE,GAAG,CAAE,CAAC,CAAG,CAAC,KAAK,KAAK,EAAG;YACvD;UACD;QACD;MACD;MAEA,OAAO,GAAG;IACX,CAAC;IAED;IACA,IAAI,EAAE,SAAA,KAAU,IAAI,EAAG;MACtB,OAAO,IAAI,IAAI,IAAI,GAClB,EAAE,GACF,CAAE,IAAI,GAAG,EAAE,EAAG,OAAO,CAAE,KAAK,EAAE,EAAG,CAAC;IACpC,CAAC;IAED;IACA,SAAS,EAAE,SAAA,UAAU,GAAG,EAAE,OAAO,EAAG;MACnC,IAAI,GAAG,GAAG,OAAO,IAAI,EAAE;MAEvB,IAAK,GAAG,IAAI,IAAI,EAAG;QAClB,IAAK,WAAW,CAAE,MAAM,CAAE,GAAI,CAAE,CAAC,EAAG;UACnC,MAAM,CAAC,KAAK,CAAE,GAAG,EAChB,OAAO,GAAG,KAAK,QAAQ,GACvB,CAAE,GAAG,CAAE,GAAG,GACX,CAAC;QACF,CAAC,MAAM;UACN,IAAI,CAAC,IAAI,CAAE,GAAG,EAAE,GAAI,CAAC;QACtB;MACD;MAEA,OAAO,GAAG;IACX,CAAC;IAED,OAAO,EAAE,SAAA,QAAU,IAAI,EAAE,GAAG,EAAE,CAAC,EAAG;MACjC,IAAI,GAAG;MAEP,IAAK,GAAG,EAAG;QACV,IAAK,OAAO,EAAG;UACd,OAAO,OAAO,CAAC,IAAI,CAAE,GAAG,EAAE,IAAI,EAAE,CAAE,CAAC;QACpC;QAEA,GAAG,GAAG,GAAG,CAAC,MAAM;QAChB,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,GAAG,GAAG,CAAE,CAAC,GAAG,CAAC,GAAG,CAAC;QAE9C,OAAQ,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAG;UAEtB;UACA,IAAK,CAAC,IAAI,GAAG,IAAI,GAAG,CAAE,CAAC,CAAE,KAAK,IAAI,EAAG;YACpC,OAAO,CAAC;UACT;QACD;MACD;MAEA,OAAO,CAAC,CAAC;IACV,CAAC;IAED,KAAK,EAAE,SAAA,MAAU,KAAK,EAAE,MAAM,EAAG;MAChC,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM;QACvB,CAAC,GAAG,CAAC;QACL,CAAC,GAAG,KAAK,CAAC,MAAM;MAEjB,OAAQ,CAAC,GAAG,GAAG,EAAG;QACjB,KAAK,CAAE,CAAC,EAAE,CAAE,GAAG,MAAM,CAAE,CAAC,EAAE,CAAE;MAC7B;;MAEA;MACA;MACA,IAAK,GAAG,KAAK,GAAG,EAAG;QAClB,OAAQ,MAAM,CAAE,CAAC,CAAE,KAAK,SAAS,EAAG;UACnC,KAAK,CAAE,CAAC,EAAE,CAAE,GAAG,MAAM,CAAE,CAAC,EAAE,CAAE;QAC7B;MACD;MAEA,KAAK,CAAC,MAAM,GAAG,CAAC;MAEhB,OAAO,KAAK;IACb,CAAC;IAED,IAAI,EAAE,SAAA,KAAU,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAG;MACzC,IAAI,eAAe;QAClB,OAAO,GAAG,EAAE;QACZ,CAAC,GAAG,CAAC;QACL,MAAM,GAAG,KAAK,CAAC,MAAM;QACrB,cAAc,GAAG,CAAC,MAAM;;MAEzB;MACA;MACA,OAAQ,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAG;QACzB,eAAe,GAAG,CAAC,QAAQ,CAAE,KAAK,CAAE,CAAC,CAAE,EAAE,CAAE,CAAC;QAC5C,IAAK,eAAe,KAAK,cAAc,EAAG;UACzC,OAAO,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC,CAAG,CAAC;QAC3B;MACD;MAEA,OAAO,OAAO;IACf,CAAC;IAED;IACA,GAAG,EAAE,SAAA,IAAU,KAAK,EAAE,QAAQ,EAAE,GAAG,EAAG;MACrC,IAAI,MAAM;QAAE,KAAK;QAChB,CAAC,GAAG,CAAC;QACL,GAAG,GAAG,EAAE;;MAET;MACA,IAAK,WAAW,CAAE,KAAM,CAAC,EAAG;QAC3B,MAAM,GAAG,KAAK,CAAC,MAAM;QACrB,OAAQ,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAG;UACzB,KAAK,GAAG,QAAQ,CAAE,KAAK,CAAE,CAAC,CAAE,EAAE,CAAC,EAAE,GAAI,CAAC;UAEtC,IAAK,KAAK,IAAI,IAAI,EAAG;YACpB,GAAG,CAAC,IAAI,CAAE,KAAM,CAAC;UAClB;QACD;;QAED;MACA,CAAC,MAAM;QACN,KAAM,CAAC,IAAI,KAAK,EAAG;UAClB,KAAK,GAAG,QAAQ,CAAE,KAAK,CAAE,CAAC,CAAE,EAAE,CAAC,EAAE,GAAI,CAAC;UAEtC,IAAK,KAAK,IAAI,IAAI,EAAG;YACpB,GAAG,CAAC,IAAI,CAAE,KAAM,CAAC;UAClB;QACD;MACD;;MAEA;MACA,OAAO,MAAM,CAAC,KAAK,CAAE,EAAE,EAAE,GAAI,CAAC;IAC/B,CAAC;IAED;IACA,IAAI,EAAE,CAAC;IAEP;IACA;IACA,KAAK,EAAE,SAAA,MAAU,EAAE,EAAE,OAAO,EAAG;MAC9B,IAAI,IAAI,EAAE,KAAK,EAAE,GAAG;MAEpB,IAAK,OAAO,OAAO,KAAK,QAAQ,EAAG;QAClC,GAAG,GAAG,EAAE,CAAE,OAAO,CAAE;QACnB,OAAO,GAAG,EAAE;QACZ,EAAE,GAAG,GAAG;MACT;;MAEA;MACA;MACA,IAAK,CAAC,MAAM,CAAC,UAAU,CAAE,EAAG,CAAC,EAAG;QAC/B,OAAO,SAAS;MACjB;;MAEA;MACA,IAAI,GAAG,MAAK,CAAC,IAAI,CAAE,SAAS,EAAE,CAAE,CAAC;MACjC,KAAK,GAAG,SAAA,MAAA,EAAW;QAClB,OAAO,EAAE,CAAC,KAAK,CAAE,OAAO,IAAI,IAAI,EAAE,IAAI,CAAC,MAAM,CAAE,MAAK,CAAC,IAAI,CAAE,SAAU,CAAE,CAAE,CAAC;MAC3E,CAAC;;MAED;MACA,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,EAAE;MAE/C,OAAO,KAAK;IACb,CAAC;IAED,GAAG,EAAE,SAAA,IAAA,EAAW;MACf,OAAO,CAAG,IAAI,IAAI,CAAC,CAAG;IACvB,CAAC;IAED;IACA;IACA,OAAO,EAAE;EACV,CAAE,CAAC;;EAEH;EACA;EACA;EACA;EACA;EACA,IAAK,OAAO,MAAM,KAAK,UAAU,EAAG;IACnC,MAAM,CAAC,EAAE,CAAE,MAAM,CAAC,QAAQ,CAAE,GAAG,UAAU,CAAE,MAAM,CAAC,QAAQ,CAAE;EAC7D;EACA;;EAEA;EACA,MAAM,CAAC,IAAI,CAAE,sEAAsE,CAAC,KAAK,CAAE,GAAI,CAAC,EAChG,UAAU,CAAC,EAAE,IAAI,EAAG;IACnB,UAAU,CAAE,UAAU,GAAG,IAAI,GAAG,GAAG,CAAE,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;EAC3D,CAAE,CAAC;EAEH,SAAS,WAAW,CAAE,GAAG,EAAG;IAE3B;IACA;IACA;IACA;IACA,IAAI,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,QAAQ,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM;MAClD,IAAI,GAAG,MAAM,CAAC,IAAI,CAAE,GAAI,CAAC;IAE1B,IAAK,IAAI,KAAK,UAAU,IAAI,MAAM,CAAC,QAAQ,CAAE,GAAI,CAAC,EAAG;MACpD,OAAO,KAAK;IACb;IAEA,OAAO,IAAI,KAAK,OAAO,IAAI,MAAM,KAAK,CAAC,IACtC,OAAO,MAAM,KAAK,QAAQ,IAAI,MAAM,GAAG,CAAC,IAAM,MAAM,GAAG,CAAC,IAAM,GAAG;EACnE;EACA,IAAI,MAAM;EACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,UAAU,MAAM,EAAG;IAEpB,IAAI,CAAC;MACJ,OAAO;MACP,IAAI;MACJ,OAAO;MACP,KAAK;MACL,QAAQ;MACR,OAAO;MACP,MAAM;MACN,gBAAgB;MAChB,SAAS;MACT,YAAY;MAEZ;MACA,WAAW;MACX,QAAQ;MACR,OAAO;MACP,cAAc;MACd,SAAS;MACT,aAAa;MACb,OAAO;MACP,QAAQ;MAER;MACA,OAAO,GAAG,QAAQ,GAAG,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC;MACnC,YAAY,GAAG,MAAM,CAAC,QAAQ;MAC9B,OAAO,GAAG,CAAC;MACX,IAAI,GAAG,CAAC;MACR,UAAU,GAAG,WAAW,CAAC,CAAC;MAC1B,UAAU,GAAG,WAAW,CAAC,CAAC;MAC1B,aAAa,GAAG,WAAW,CAAC,CAAC;MAC7B,SAAS,GAAG,SAAA,UAAU,CAAC,EAAE,CAAC,EAAG;QAC5B,IAAK,CAAC,KAAK,CAAC,EAAG;UACd,YAAY,GAAG,IAAI;QACpB;QACA,OAAO,CAAC;MACT,CAAC;MAED;MACA,YAAY,GAAG,CAAC,IAAI,EAAE;MAEtB;MACA,MAAM,GAAI,CAAC,CAAC,CAAE,cAAc;MAC5B,GAAG,GAAG,EAAE;MACR,GAAG,GAAG,GAAG,CAAC,GAAG;MACb,WAAW,GAAG,GAAG,CAAC,IAAI;MACtB,IAAI,GAAG,GAAG,CAAC,IAAI;MACf,KAAK,GAAG,GAAG,CAAC,KAAK;MACjB;MACA;MACA,OAAO,GAAG,SAAV,OAAO,CAAa,IAAI,EAAE,IAAI,EAAG;QAChC,IAAI,CAAC,GAAG,CAAC;UACR,GAAG,GAAG,IAAI,CAAC,MAAM;QAClB,OAAQ,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAG;UACtB,IAAK,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,EAAG;YACvB,OAAO,CAAC;UACT;QACD;QACA,OAAO,CAAC,CAAC;MACV,CAAC;MAED,QAAQ,GAAG,4HAA4H;MAEvI;;MAEA;MACA,UAAU,GAAG,qBAAqB;MAElC;MACA,UAAU,GAAG,kCAAkC;MAE/C;MACA,UAAU,GAAG,KAAK,GAAG,UAAU,GAAG,IAAI,GAAG,UAAU,GAAG,MAAM,GAAG,UAAU;MACxE;MACA,eAAe,GAAG,UAAU;MAC5B;MACA,0DAA0D,GAAG,UAAU,GAAG,MAAM,GAAG,UAAU,GAC7F,MAAM;MAEP,OAAO,GAAG,IAAI,GAAG,UAAU,GAAG,UAAU;MACvC;MACA;MACA,uDAAuD;MACvD;MACA,0BAA0B,GAAG,UAAU,GAAG,MAAM;MAChD;MACA,IAAI,GACJ,QAAQ;MAET;MACA,WAAW,GAAG,IAAI,MAAM,CAAE,UAAU,GAAG,GAAG,EAAE,GAAI,CAAC;MACjD,KAAK,GAAG,IAAI,MAAM,CAAE,GAAG,GAAG,UAAU,GAAG,6BAA6B,GAAG,UAAU,GAAG,IAAI,EAAE,GAAI,CAAC;MAE/F,MAAM,GAAG,IAAI,MAAM,CAAE,GAAG,GAAG,UAAU,GAAG,IAAI,GAAG,UAAU,GAAG,GAAI,CAAC;MACjE,YAAY,GAAG,IAAI,MAAM,CAAE,GAAG,GAAG,UAAU,GAAG,UAAU,GAAG,UAAU,GAAG,GAAG,GAAG,UAAU,GAAG,GAAI,CAAC;MAEhG,gBAAgB,GAAG,IAAI,MAAM,CAAE,GAAG,GAAG,UAAU,GAAG,gBAAgB,GAAG,UAAU,GAAG,MAAM,EAAE,GAAI,CAAC;MAE/F,OAAO,GAAG,IAAI,MAAM,CAAE,OAAQ,CAAC;MAC/B,WAAW,GAAG,IAAI,MAAM,CAAE,GAAG,GAAG,UAAU,GAAG,GAAI,CAAC;MAElD,SAAS,GAAG;QACX,IAAI,EAAE,IAAI,MAAM,CAAE,KAAK,GAAG,UAAU,GAAG,GAAI,CAAC;QAC5C,OAAO,EAAE,IAAI,MAAM,CAAE,OAAO,GAAG,UAAU,GAAG,GAAI,CAAC;QACjD,KAAK,EAAE,IAAI,MAAM,CAAE,IAAI,GAAG,UAAU,GAAG,OAAQ,CAAC;QAChD,MAAM,EAAE,IAAI,MAAM,CAAE,GAAG,GAAG,UAAW,CAAC;QACtC,QAAQ,EAAE,IAAI,MAAM,CAAE,GAAG,GAAG,OAAQ,CAAC;QACrC,OAAO,EAAE,IAAI,MAAM,CAAE,wDAAwD,GAAG,UAAU,GACzF,8BAA8B,GAAG,UAAU,GAAG,aAAa,GAAG,UAAU,GACxE,YAAY,GAAG,UAAU,GAAG,QAAQ,EAAE,GAAI,CAAC;QAC5C,MAAM,EAAE,IAAI,MAAM,CAAE,MAAM,GAAG,QAAQ,GAAG,IAAI,EAAE,GAAI,CAAC;QACnD;QACA;QACA,cAAc,EAAE,IAAI,MAAM,CAAE,GAAG,GAAG,UAAU,GAAG,kDAAkD,GAChG,UAAU,GAAG,kBAAkB,GAAG,UAAU,GAAG,kBAAkB,EAAE,GAAI;MACzE,CAAC;MAED,OAAO,GAAG,qCAAqC;MAC/C,OAAO,GAAG,QAAQ;MAElB,OAAO,GAAG,wBAAwB;MAElC;MACA,UAAU,GAAG,kCAAkC;MAE/C,QAAQ,GAAG,MAAM;MACjB,OAAO,GAAG,OAAO;MAEjB;MACA,SAAS,GAAG,IAAI,MAAM,CAAE,oBAAoB,GAAG,UAAU,GAAG,KAAK,GAAG,UAAU,GAAG,MAAM,EAAE,IAAK,CAAC;MAC/F,SAAS,GAAG,SAAZ,SAAS,CAAa,CAAC,EAAE,OAAO,EAAE,iBAAiB,EAAG;QACrD,IAAI,IAAI,GAAG,IAAI,GAAG,OAAO,GAAG,OAAO;QACnC;QACA;QACA;QACA,OAAO,IAAI,KAAK,IAAI,IAAI,iBAAiB,GACxC,OAAO,GACP,IAAI,GAAG,CAAC;QACP;QACA,MAAM,CAAC,YAAY,CAAE,IAAI,GAAG,OAAQ,CAAC;QACrC;QACA,MAAM,CAAC,YAAY,CAAE,IAAI,IAAI,EAAE,GAAG,MAAM,EAAE,IAAI,GAAG,KAAK,GAAG,MAAO,CAAC;MACpE,CAAC;MAED;MACA;MACA;MACA;MACA,aAAa,GAAG,SAAhB,aAAa,CAAA,EAAc;QAC1B,WAAW,CAAC,CAAC;MACd,CAAC;;IAEF;IACA,IAAI;MACH,IAAI,CAAC,KAAK,CACR,GAAG,GAAG,KAAK,CAAC,IAAI,CAAE,YAAY,CAAC,UAAW,CAAC,EAC5C,YAAY,CAAC,UACd,CAAC;MACD;MACA;MACA,GAAG,CAAE,YAAY,CAAC,UAAU,CAAC,MAAM,CAAE,CAAC,QAAQ;IAC/C,CAAC,CAAC,OAAQ,CAAC,EAAG;MACb,IAAI,GAAG;QAAE,KAAK,EAAE,GAAG,CAAC,MAAM;QAEzB;QACA,UAAU,MAAM,EAAE,GAAG,EAAG;UACvB,WAAW,CAAC,KAAK,CAAE,MAAM,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,CAAC;QAC7C,CAAC;QAED;QACA;QACA,UAAU,MAAM,EAAE,GAAG,EAAG;UACvB,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM;YACpB,CAAC,GAAG,CAAC;UACN;UACA,OAAS,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAI,CAAC;UACpC,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC;QACtB;MACD,CAAC;IACF;IAEA,SAAS,MAAM,CAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAG;MACnD,IAAI,CAAC;QAAE,CAAC;QAAE,IAAI;QAAE,GAAG;QAAE,SAAS;QAAE,KAAK;QAAE,MAAM;QAAE,WAAW;QACzD,UAAU,GAAG,OAAO,IAAI,OAAO,CAAC,aAAa;QAE7C;QACA,QAAQ,GAAG,OAAO,GAAG,OAAO,CAAC,QAAQ,GAAG,CAAC;MAE1C,OAAO,GAAG,OAAO,IAAI,EAAE;;MAEvB;MACA,IAAK,OAAO,QAAQ,KAAK,QAAQ,IAAI,CAAC,QAAQ,IAC7C,QAAQ,KAAK,CAAC,IAAI,QAAQ,KAAK,CAAC,IAAI,QAAQ,KAAK,EAAE,EAAG;QAEtD,OAAO,OAAO;MACf;;MAEA;MACA,IAAK,CAAC,IAAI,EAAG;QAEZ,IAAK,CAAE,OAAO,GAAG,OAAO,CAAC,aAAa,IAAI,OAAO,GAAG,YAAY,MAAO,QAAQ,EAAG;UACjF,WAAW,CAAE,OAAQ,CAAC;QACvB;QACA,OAAO,GAAG,OAAO,IAAI,QAAQ;QAE7B,IAAK,cAAc,EAAG;UAErB;UACA;UACA,IAAK,QAAQ,KAAK,EAAE,KAAK,KAAK,GAAG,UAAU,CAAC,IAAI,CAAE,QAAS,CAAC,CAAC,EAAG;YAE/D;YACA,IAAM,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EAAI;cAErB;cACA,IAAK,QAAQ,KAAK,CAAC,EAAG;gBACrB,IAAM,IAAI,GAAG,OAAO,CAAC,cAAc,CAAE,CAAE,CAAC,EAAI;kBAE3C;kBACA;kBACA;kBACA,IAAK,IAAI,CAAC,EAAE,KAAK,CAAC,EAAG;oBACpB,OAAO,CAAC,IAAI,CAAE,IAAK,CAAC;oBACpB,OAAO,OAAO;kBACf;gBACD,CAAC,MAAM;kBACN,OAAO,OAAO;gBACf;;gBAED;cACA,CAAC,MAAM;gBAEN;gBACA;gBACA;gBACA,IAAK,UAAU,KAAK,IAAI,GAAG,UAAU,CAAC,cAAc,CAAE,CAAE,CAAC,CAAC,IACzD,QAAQ,CAAE,OAAO,EAAE,IAAK,CAAC,IACzB,IAAI,CAAC,EAAE,KAAK,CAAC,EAAG;kBAEhB,OAAO,CAAC,IAAI,CAAE,IAAK,CAAC;kBACpB,OAAO,OAAO;gBACf;cACD;;cAED;YACA,CAAC,MAAM,IAAK,KAAK,CAAC,CAAC,CAAC,EAAG;cACtB,IAAI,CAAC,KAAK,CAAE,OAAO,EAAE,OAAO,CAAC,oBAAoB,CAAE,QAAS,CAAE,CAAC;cAC/D,OAAO,OAAO;;cAEf;YACA,CAAC,MAAM,IAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,sBAAsB,IAC3D,OAAO,CAAC,sBAAsB,EAAG;cAEjC,IAAI,CAAC,KAAK,CAAE,OAAO,EAAE,OAAO,CAAC,sBAAsB,CAAE,CAAE,CAAE,CAAC;cAC1D,OAAO,OAAO;YACf;UACD;;UAEA;UACA,IAAK,OAAO,CAAC,GAAG,IACf,CAAC,aAAa,CAAE,QAAQ,GAAG,GAAG,CAAE,KAC/B,CAAC,SAAS,IAAI,CAAC,SAAS,CAAC,IAAI,CAAE,QAAS,CAAC,CAAC,EAAG;YAE9C,IAAK,QAAQ,KAAK,CAAC,EAAG;cACrB,UAAU,GAAG,OAAO;cACpB,WAAW,GAAG,QAAQ;;cAEvB;cACA;cACA;cACA;YACA,CAAC,MAAM,IAAK,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,QAAQ,EAAG;cAEzD;cACA,IAAM,GAAG,GAAG,OAAO,CAAC,YAAY,CAAE,IAAK,CAAC,EAAI;gBAC3C,GAAG,GAAG,GAAG,CAAC,OAAO,CAAE,OAAO,EAAE,MAAO,CAAC;cACrC,CAAC,MAAM;gBACN,OAAO,CAAC,YAAY,CAAE,IAAI,EAAG,GAAG,GAAG,OAAS,CAAC;cAC9C;;cAEA;cACA,MAAM,GAAG,QAAQ,CAAE,QAAS,CAAC;cAC7B,CAAC,GAAG,MAAM,CAAC,MAAM;cACjB,SAAS,GAAG,WAAW,CAAC,IAAI,CAAE,GAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,OAAO,GAAG,GAAG,GAAG,IAAI;cACtE,OAAQ,CAAC,EAAE,EAAG;gBACb,MAAM,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,GAAG,GAAG,UAAU,CAAE,MAAM,CAAC,CAAC,CAAE,CAAC;cACtD;cACA,WAAW,GAAG,MAAM,CAAC,IAAI,CAAE,GAAI,CAAC;;cAEhC;cACA,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAE,QAAS,CAAC,IAAI,WAAW,CAAE,OAAO,CAAC,UAAW,CAAC,IAC1E,OAAO;YACT;YAEA,IAAK,WAAW,EAAG;cAClB,IAAI;gBACH,IAAI,CAAC,KAAK,CAAE,OAAO,EAClB,UAAU,CAAC,gBAAgB,CAAE,WAAY,CAC1C,CAAC;gBACD,OAAO,OAAO;cACf,CAAC,CAAC,OAAQ,QAAQ,EAAG,CACrB,CAAC,SAAS;gBACT,IAAK,GAAG,KAAK,OAAO,EAAG;kBACtB,OAAO,CAAC,eAAe,CAAE,IAAK,CAAC;gBAChC;cACD;YACD;UACD;QACD;MACD;;MAEA;MACA,OAAO,MAAM,CAAE,QAAQ,CAAC,OAAO,CAAE,KAAK,EAAE,IAAK,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,IAAK,CAAC;IACzE;;IAEA;AACA;AACA;AACA;AACA;AACA;IACA,SAAS,WAAW,CAAA,EAAG;MACtB,IAAI,IAAI,GAAG,EAAE;MAEb,SAAS,KAAK,CAAE,GAAG,EAAE,KAAK,EAAG;QAC5B;QACA,IAAK,IAAI,CAAC,IAAI,CAAE,GAAG,GAAG,GAAI,CAAC,GAAG,IAAI,CAAC,WAAW,EAAG;UAChD;UACA,OAAO,KAAK,CAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAE;QAC7B;QACA,OAAQ,KAAK,CAAE,GAAG,GAAG,GAAG,CAAE,GAAG,KAAK;MACnC;MACA,OAAO,KAAK;IACb;;IAEA;AACA;AACA;AACA;IACA,SAAS,YAAY,CAAE,EAAE,EAAG;MAC3B,EAAE,CAAE,OAAO,CAAE,GAAG,IAAI;MACpB,OAAO,EAAE;IACV;;IAEA;AACA;AACA;AACA;IACA,SAAS,MAAM,CAAE,EAAE,EAAG;MACrB,IAAI,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;MAEvC,IAAI;QACH,OAAO,CAAC,CAAC,EAAE,CAAE,GAAI,CAAC;MACnB,CAAC,CAAC,OAAO,CAAC,EAAE;QACX,OAAO,KAAK;MACb,CAAC,SAAS;QACT;QACA,IAAK,GAAG,CAAC,UAAU,EAAG;UACrB,GAAG,CAAC,UAAU,CAAC,WAAW,CAAE,GAAI,CAAC;QAClC;QACA;QACA,GAAG,GAAG,IAAI;MACX;IACD;;IAEA;AACA;AACA;AACA;AACA;IACA,SAAS,SAAS,CAAE,KAAK,EAAE,OAAO,EAAG;MACpC,IAAI,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC;QACzB,CAAC,GAAG,GAAG,CAAC,MAAM;MAEf,OAAQ,CAAC,EAAE,EAAG;QACb,IAAI,CAAC,UAAU,CAAE,GAAG,CAAC,CAAC,CAAC,CAAE,GAAG,OAAO;MACpC;IACD;;IAEA;AACA;AACA;AACA;AACA;AACA;IACA,SAAS,YAAY,CAAE,CAAC,EAAE,CAAC,EAAG;MAC7B,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;QACf,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,CAAC,IACjD,CAAE,CAAC,CAAC,CAAC,WAAW,IAAI,YAAY,KAC9B,CAAC,CAAC,CAAC,WAAW,IAAI,YAAY,CAAE;;MAEpC;MACA,IAAK,IAAI,EAAG;QACX,OAAO,IAAI;MACZ;;MAEA;MACA,IAAK,GAAG,EAAG;QACV,OAAS,GAAG,GAAG,GAAG,CAAC,WAAW,EAAI;UACjC,IAAK,GAAG,KAAK,CAAC,EAAG;YAChB,OAAO,CAAC,CAAC;UACV;QACD;MACD;MAEA,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAClB;;IAEA;AACA;AACA;AACA;IACA,SAAS,iBAAiB,CAAE,IAAI,EAAG;MAClC,OAAO,UAAU,IAAI,EAAG;QACvB,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QACtC,OAAO,IAAI,KAAK,OAAO,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI;MAC9C,CAAC;IACF;;IAEA;AACA;AACA;AACA;IACA,SAAS,kBAAkB,CAAE,IAAI,EAAG;MACnC,OAAO,UAAU,IAAI,EAAG;QACvB,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QACtC,OAAO,CAAC,IAAI,KAAK,OAAO,IAAI,IAAI,KAAK,QAAQ,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI;MACrE,CAAC;IACF;;IAEA;AACA;AACA;AACA;IACA,SAAS,sBAAsB,CAAE,EAAE,EAAG;MACrC,OAAO,YAAY,CAAC,UAAU,QAAQ,EAAG;QACxC,QAAQ,GAAG,CAAC,QAAQ;QACpB,OAAO,YAAY,CAAC,UAAU,IAAI,EAAE,OAAO,EAAG;UAC7C,IAAI,CAAC;YACJ,YAAY,GAAG,EAAE,CAAE,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,QAAS,CAAC;YAC9C,CAAC,GAAG,YAAY,CAAC,MAAM;;UAExB;UACA,OAAQ,CAAC,EAAE,EAAG;YACb,IAAK,IAAI,CAAG,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAG,EAAG;cACpC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAClC;UACD;QACD,CAAC,CAAC;MACH,CAAC,CAAC;IACH;;IAEA;AACA;AACA;AACA;AACA;IACA,SAAS,WAAW,CAAE,OAAO,EAAG;MAC/B,OAAO,OAAO,IAAI,OAAO,OAAO,CAAC,oBAAoB,KAAK,WAAW,IAAI,OAAO;IACjF;;IAEA;IACA,OAAO,GAAG,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC;;IAE7B;AACA;AACA;AACA;AACA;IACA,KAAK,GAAG,MAAM,CAAC,KAAK,GAAG,UAAU,IAAI,EAAG;MACvC;MACA;MACA,IAAI,eAAe,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,EAAE,eAAe;MAC1E,OAAO,eAAe,GAAG,eAAe,CAAC,QAAQ,KAAK,MAAM,GAAG,KAAK;IACrE,CAAC;;IAED;AACA;AACA;AACA;AACA;IACA,WAAW,GAAG,MAAM,CAAC,WAAW,GAAG,UAAU,IAAI,EAAG;MACnD,IAAI,UAAU;QAAE,MAAM;QACrB,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC,aAAa,IAAI,IAAI,GAAG,YAAY;;MAEvD;MACA,IAAK,GAAG,KAAK,QAAQ,IAAI,GAAG,CAAC,QAAQ,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,EAAG;QACrE,OAAO,QAAQ;MAChB;;MAEA;MACA,QAAQ,GAAG,GAAG;MACd,OAAO,GAAG,QAAQ,CAAC,eAAe;MAClC,cAAc,GAAG,CAAC,KAAK,CAAE,QAAS,CAAC;;MAEnC;MACA;MACA,IAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,WAAW,KAAK,MAAM,CAAC,GAAG,KAAK,MAAM,EAAG;QAC/D;QACA,IAAK,MAAM,CAAC,gBAAgB,EAAG;UAC9B,MAAM,CAAC,gBAAgB,CAAE,QAAQ,EAAE,aAAa,EAAE,KAAM,CAAC;;UAE1D;QACA,CAAC,MAAM,IAAK,MAAM,CAAC,WAAW,EAAG;UAChC,MAAM,CAAC,WAAW,CAAE,UAAU,EAAE,aAAc,CAAC;QAChD;MACD;;MAEA;AACD;;MAEC;MACA;MACA;MACA,OAAO,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,GAAG,EAAG;QAC3C,GAAG,CAAC,SAAS,GAAG,GAAG;QACnB,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,WAAW,CAAC;MACtC,CAAC,CAAC;;MAEF;AACD;;MAEC;MACA,OAAO,CAAC,oBAAoB,GAAG,MAAM,CAAC,UAAU,GAAG,EAAG;QACrD,GAAG,CAAC,WAAW,CAAE,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAE,CAAC;QAC7C,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC,MAAM;MAC7C,CAAC,CAAC;;MAEF;MACA,OAAO,CAAC,sBAAsB,GAAG,OAAO,CAAC,IAAI,CAAE,QAAQ,CAAC,sBAAuB,CAAC;;MAEhF;MACA;MACA;MACA;MACA,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,UAAU,GAAG,EAAG;QACxC,OAAO,CAAC,WAAW,CAAE,GAAI,CAAC,CAAC,EAAE,GAAG,OAAO;QACvC,OAAO,CAAC,QAAQ,CAAC,iBAAiB,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAE,OAAQ,CAAC,CAAC,MAAM;MACpF,CAAC,CAAC;;MAEF;MACA,IAAK,OAAO,CAAC,OAAO,EAAG;QACtB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,UAAU,EAAE,EAAE,OAAO,EAAG;UACzC,IAAK,OAAO,OAAO,CAAC,cAAc,KAAK,WAAW,IAAI,cAAc,EAAG;YACtE,IAAI,CAAC,GAAG,OAAO,CAAC,cAAc,CAAE,EAAG,CAAC;YACpC,OAAO,CAAC,GAAG,CAAE,CAAC,CAAE,GAAG,EAAE;UACtB;QACD,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,UAAU,EAAE,EAAG;UAClC,IAAI,MAAM,GAAG,EAAE,CAAC,OAAO,CAAE,SAAS,EAAE,SAAU,CAAC;UAC/C,OAAO,UAAU,IAAI,EAAG;YACvB,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,MAAM;UAC1C,CAAC;QACF,CAAC;MACF,CAAC,MAAM;QACN;QACA;QACA,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QAEtB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAI,UAAU,EAAE,EAAG;UACnC,IAAI,MAAM,GAAG,EAAE,CAAC,OAAO,CAAE,SAAS,EAAE,SAAU,CAAC;UAC/C,OAAO,UAAU,IAAI,EAAG;YACvB,IAAI,IAAI,GAAG,OAAO,IAAI,CAAC,gBAAgB,KAAK,WAAW,IACtD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC;YAC5B,OAAO,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,MAAM;UACrC,CAAC;QACF,CAAC;MACF;;MAEA;MACA,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,oBAAoB,GAC9C,UAAU,GAAG,EAAE,OAAO,EAAG;QACxB,IAAK,OAAO,OAAO,CAAC,oBAAoB,KAAK,WAAW,EAAG;UAC1D,OAAO,OAAO,CAAC,oBAAoB,CAAE,GAAI,CAAC;;UAE3C;QACA,CAAC,MAAM,IAAK,OAAO,CAAC,GAAG,EAAG;UACzB,OAAO,OAAO,CAAC,gBAAgB,CAAE,GAAI,CAAC;QACvC;MACD,CAAC,GAED,UAAU,GAAG,EAAE,OAAO,EAAG;QACxB,IAAI,IAAI;UACP,GAAG,GAAG,EAAE;UACR,CAAC,GAAG,CAAC;UACL;UACA,OAAO,GAAG,OAAO,CAAC,oBAAoB,CAAE,GAAI,CAAC;;QAE9C;QACA,IAAK,GAAG,KAAK,GAAG,EAAG;UAClB,OAAS,IAAI,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,EAAI;YAC/B,IAAK,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAG;cAC1B,GAAG,CAAC,IAAI,CAAE,IAAK,CAAC;YACjB;UACD;UAEA,OAAO,GAAG;QACX;QACA,OAAO,OAAO;MACf,CAAC;;MAEF;MACA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,sBAAsB,IAAI,UAAU,SAAS,EAAE,OAAO,EAAG;QACrF,IAAK,OAAO,OAAO,CAAC,sBAAsB,KAAK,WAAW,IAAI,cAAc,EAAG;UAC9E,OAAO,OAAO,CAAC,sBAAsB,CAAE,SAAU,CAAC;QACnD;MACD,CAAC;;MAED;AACD;;MAEC;;MAEA;MACA,aAAa,GAAG,EAAE;;MAElB;MACA;MACA;MACA;MACA;MACA,SAAS,GAAG,EAAE;MAEd,IAAM,OAAO,CAAC,GAAG,GAAG,OAAO,CAAC,IAAI,CAAE,QAAQ,CAAC,gBAAiB,CAAC,EAAI;QAChE;QACA;QACA,MAAM,CAAC,UAAU,GAAG,EAAG;UACtB;UACA;UACA;UACA;UACA;UACA,OAAO,CAAC,WAAW,CAAE,GAAI,CAAC,CAAC,SAAS,GAAG,SAAS,GAAG,OAAO,GAAG,QAAQ,GACpE,cAAc,GAAG,OAAO,GAAG,2BAA2B,GACtD,wCAAwC;;UAEzC;UACA;UACA;UACA;UACA,IAAK,GAAG,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,CAAC,MAAM,EAAG;YAC1D,SAAS,CAAC,IAAI,CAAE,QAAQ,GAAG,UAAU,GAAG,cAAe,CAAC;UACzD;;UAEA;UACA;UACA,IAAK,CAAC,GAAG,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,MAAM,EAAG;YACjD,SAAS,CAAC,IAAI,CAAE,KAAK,GAAG,UAAU,GAAG,YAAY,GAAG,QAAQ,GAAG,GAAI,CAAC;UACrE;;UAEA;UACA,IAAK,CAAC,GAAG,CAAC,gBAAgB,CAAE,OAAO,GAAG,OAAO,GAAG,IAAK,CAAC,CAAC,MAAM,EAAG;YAC/D,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;UACrB;;UAEA;UACA;UACA;UACA,IAAK,CAAC,GAAG,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,MAAM,EAAG;YAC/C,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC;UAC3B;;UAEA;UACA;UACA;UACA,IAAK,CAAC,GAAG,CAAC,gBAAgB,CAAE,IAAI,GAAG,OAAO,GAAG,IAAK,CAAC,CAAC,MAAM,EAAG;YAC5D,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC;UAC3B;QACD,CAAC,CAAC;QAEF,MAAM,CAAC,UAAU,GAAG,EAAG;UACtB;UACA;UACA,IAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC;UAC3C,KAAK,CAAC,YAAY,CAAE,MAAM,EAAE,QAAS,CAAC;UACtC,GAAG,CAAC,WAAW,CAAE,KAAM,CAAC,CAAC,YAAY,CAAE,MAAM,EAAE,GAAI,CAAC;;UAEpD;UACA;UACA,IAAK,GAAG,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,MAAM,EAAG;YAC9C,SAAS,CAAC,IAAI,CAAE,MAAM,GAAG,UAAU,GAAG,aAAc,CAAC;UACtD;;UAEA;UACA;UACA,IAAK,CAAC,GAAG,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,MAAM,EAAG;YAC/C,SAAS,CAAC,IAAI,CAAE,UAAU,EAAE,WAAY,CAAC;UAC1C;;UAEA;UACA,GAAG,CAAC,gBAAgB,CAAC,MAAM,CAAC;UAC5B,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC,CAAC;MACH;MAEA,IAAM,OAAO,CAAC,eAAe,GAAG,OAAO,CAAC,IAAI,CAAG,OAAO,GAAG,OAAO,CAAC,OAAO,IACvE,OAAO,CAAC,qBAAqB,IAC7B,OAAO,CAAC,kBAAkB,IAC1B,OAAO,CAAC,gBAAgB,IACxB,OAAO,CAAC,iBAAmB,CAAC,EAAI;QAEhC,MAAM,CAAC,UAAU,GAAG,EAAG;UACtB;UACA;UACA,OAAO,CAAC,iBAAiB,GAAG,OAAO,CAAC,IAAI,CAAE,GAAG,EAAE,KAAM,CAAC;;UAEtD;UACA;UACA,OAAO,CAAC,IAAI,CAAE,GAAG,EAAE,WAAY,CAAC;UAChC,aAAa,CAAC,IAAI,CAAE,IAAI,EAAE,OAAQ,CAAC;QACpC,CAAC,CAAC;MACH;MAEA,SAAS,GAAG,SAAS,CAAC,MAAM,IAAI,IAAI,MAAM,CAAE,SAAS,CAAC,IAAI,CAAC,GAAG,CAAE,CAAC;MACjE,aAAa,GAAG,aAAa,CAAC,MAAM,IAAI,IAAI,MAAM,CAAE,aAAa,CAAC,IAAI,CAAC,GAAG,CAAE,CAAC;;MAE7E;AACD;MACC,UAAU,GAAG,OAAO,CAAC,IAAI,CAAE,OAAO,CAAC,uBAAwB,CAAC;;MAE5D;MACA;MACA;MACA,QAAQ,GAAG,UAAU,IAAI,OAAO,CAAC,IAAI,CAAE,OAAO,CAAC,QAAS,CAAC,GACxD,UAAU,CAAC,EAAE,CAAC,EAAG;QAChB,IAAI,KAAK,GAAG,CAAC,CAAC,QAAQ,KAAK,CAAC,GAAG,CAAC,CAAC,eAAe,GAAG,CAAC;UACnD,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,UAAU;QACxB,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,EAAG,GAAG,IAAI,GAAG,CAAC,QAAQ,KAAK,CAAC,KAChD,KAAK,CAAC,QAAQ,GACb,KAAK,CAAC,QAAQ,CAAE,GAAI,CAAC,GACrB,CAAC,CAAC,uBAAuB,IAAI,CAAC,CAAC,uBAAuB,CAAE,GAAI,CAAC,GAAG,EAAE,CACnE,CAAC;MACH,CAAC,GACD,UAAU,CAAC,EAAE,CAAC,EAAG;QAChB,IAAK,CAAC,EAAG;UACR,OAAS,CAAC,GAAG,CAAC,CAAC,UAAU,EAAI;YAC5B,IAAK,CAAC,KAAK,CAAC,EAAG;cACd,OAAO,IAAI;YACZ;UACD;QACD;QACA,OAAO,KAAK;MACb,CAAC;;MAEF;AACD;;MAEC;MACA,SAAS,GAAG,UAAU,GACtB,UAAU,CAAC,EAAE,CAAC,EAAG;QAEhB;QACA,IAAK,CAAC,KAAK,CAAC,EAAG;UACd,YAAY,GAAG,IAAI;UACnB,OAAO,CAAC;QACT;;QAEA;QACA,IAAI,OAAO,GAAG,CAAC,CAAC,CAAC,uBAAuB,GAAG,CAAC,CAAC,CAAC,uBAAuB;QACrE,IAAK,OAAO,EAAG;UACd,OAAO,OAAO;QACf;;QAEA;QACA,OAAO,GAAG,CAAE,CAAC,CAAC,aAAa,IAAI,CAAC,OAAS,CAAC,CAAC,aAAa,IAAI,CAAC,CAAE,GAC9D,CAAC,CAAC,uBAAuB,CAAE,CAAE,CAAC;QAE9B;QACA,CAAC;;QAEF;QACA,IAAK,OAAO,GAAG,CAAC,IACd,CAAC,OAAO,CAAC,YAAY,IAAI,CAAC,CAAC,uBAAuB,CAAE,CAAE,CAAC,KAAK,OAAQ,EAAG;UAExE;UACA,IAAK,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,aAAa,KAAK,YAAY,IAAI,QAAQ,CAAC,YAAY,EAAE,CAAC,CAAC,EAAG;YACtF,OAAO,CAAC,CAAC;UACV;UACA,IAAK,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,aAAa,KAAK,YAAY,IAAI,QAAQ,CAAC,YAAY,EAAE,CAAC,CAAC,EAAG;YACtF,OAAO,CAAC;UACT;;UAEA;UACA,OAAO,SAAS,GACb,OAAO,CAAE,SAAS,EAAE,CAAE,CAAC,GAAG,OAAO,CAAE,SAAS,EAAE,CAAE,CAAC,GACnD,CAAC;QACH;QAEA,OAAO,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;MAC5B,CAAC,GACD,UAAU,CAAC,EAAE,CAAC,EAAG;QAChB;QACA,IAAK,CAAC,KAAK,CAAC,EAAG;UACd,YAAY,GAAG,IAAI;UACnB,OAAO,CAAC;QACT;QAEA,IAAI,GAAG;UACN,CAAC,GAAG,CAAC;UACL,GAAG,GAAG,CAAC,CAAC,UAAU;UAClB,GAAG,GAAG,CAAC,CAAC,UAAU;UAClB,EAAE,GAAG,CAAE,CAAC,CAAE;UACV,EAAE,GAAG,CAAE,CAAC,CAAE;;QAEX;QACA,IAAK,CAAC,GAAG,IAAI,CAAC,GAAG,EAAG;UACnB,OAAO,CAAC,KAAK,QAAQ,GAAG,CAAC,CAAC,GACzB,CAAC,KAAK,QAAQ,GAAG,CAAC,GAClB,GAAG,GAAG,CAAC,CAAC,GACR,GAAG,GAAG,CAAC,GACP,SAAS,GACP,OAAO,CAAE,SAAS,EAAE,CAAE,CAAC,GAAG,OAAO,CAAE,SAAS,EAAE,CAAE,CAAC,GACnD,CAAC;;UAEH;QACA,CAAC,MAAM,IAAK,GAAG,KAAK,GAAG,EAAG;UACzB,OAAO,YAAY,CAAE,CAAC,EAAE,CAAE,CAAC;QAC5B;;QAEA;QACA,GAAG,GAAG,CAAC;QACP,OAAS,GAAG,GAAG,GAAG,CAAC,UAAU,EAAI;UAChC,EAAE,CAAC,OAAO,CAAE,GAAI,CAAC;QAClB;QACA,GAAG,GAAG,CAAC;QACP,OAAS,GAAG,GAAG,GAAG,CAAC,UAAU,EAAI;UAChC,EAAE,CAAC,OAAO,CAAE,GAAI,CAAC;QAClB;;QAEA;QACA,OAAQ,EAAE,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,EAAG;UACzB,CAAC,EAAE;QACJ;QAEA,OAAO,CAAC;QACP;QACA,YAAY,CAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE,CAAC;QAE5B;QACA,EAAE,CAAC,CAAC,CAAC,KAAK,YAAY,GAAG,CAAC,CAAC,GAC3B,EAAE,CAAC,CAAC,CAAC,KAAK,YAAY,GAAG,CAAC,GAC1B,CAAC;MACH,CAAC;MAED,OAAO,QAAQ;IAChB,CAAC;IAED,MAAM,CAAC,OAAO,GAAG,UAAU,IAAI,EAAE,QAAQ,EAAG;MAC3C,OAAO,MAAM,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,QAAS,CAAC;IAC5C,CAAC;IAED,MAAM,CAAC,eAAe,GAAG,UAAU,IAAI,EAAE,IAAI,EAAG;MAC/C;MACA,IAAK,CAAE,IAAI,CAAC,aAAa,IAAI,IAAI,MAAO,QAAQ,EAAG;QAClD,WAAW,CAAE,IAAK,CAAC;MACpB;;MAEA;MACA,IAAI,GAAG,IAAI,CAAC,OAAO,CAAE,gBAAgB,EAAE,QAAS,CAAC;MAEjD,IAAK,OAAO,CAAC,eAAe,IAAI,cAAc,IAC7C,CAAC,aAAa,CAAE,IAAI,GAAG,GAAG,CAAE,KAC1B,CAAC,aAAa,IAAI,CAAC,aAAa,CAAC,IAAI,CAAE,IAAK,CAAC,CAAE,KAC/C,CAAC,SAAS,IAAQ,CAAC,SAAS,CAAC,IAAI,CAAE,IAAK,CAAC,CAAE,EAAG;QAEhD,IAAI;UACH,IAAI,GAAG,GAAG,OAAO,CAAC,IAAI,CAAE,IAAI,EAAE,IAAK,CAAC;;UAEpC;UACA,IAAK,GAAG,IAAI,OAAO,CAAC,iBAAiB;UACnC;UACA;UACA,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,KAAK,EAAE,EAAG;YAClD,OAAO,GAAG;UACX;QACD,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC;MACd;MAEA,OAAO,MAAM,CAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAE,IAAI,CAAG,CAAC,CAAC,MAAM,GAAG,CAAC;IAC3D,CAAC;IAED,MAAM,CAAC,QAAQ,GAAG,UAAU,OAAO,EAAE,IAAI,EAAG;MAC3C;MACA,IAAK,CAAE,OAAO,CAAC,aAAa,IAAI,OAAO,MAAO,QAAQ,EAAG;QACxD,WAAW,CAAE,OAAQ,CAAC;MACvB;MACA,OAAO,QAAQ,CAAE,OAAO,EAAE,IAAK,CAAC;IACjC,CAAC;IAED,MAAM,CAAC,IAAI,GAAG,UAAU,IAAI,EAAE,IAAI,EAAG;MACpC;MACA,IAAK,CAAE,IAAI,CAAC,aAAa,IAAI,IAAI,MAAO,QAAQ,EAAG;QAClD,WAAW,CAAE,IAAK,CAAC;MACpB;MAEA,IAAI,EAAE,GAAG,IAAI,CAAC,UAAU,CAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAE;QAC7C;QACA,GAAG,GAAG,EAAE,IAAI,MAAM,CAAC,IAAI,CAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAE,CAAC,GAC7D,EAAE,CAAE,IAAI,EAAE,IAAI,EAAE,CAAC,cAAe,CAAC,GACjC,SAAS;MAEX,OAAO,GAAG,KAAK,SAAS,GACvB,GAAG,GACH,OAAO,CAAC,UAAU,IAAI,CAAC,cAAc,GACpC,IAAI,CAAC,YAAY,CAAE,IAAK,CAAC,GACzB,CAAC,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,SAAS,GACnD,GAAG,CAAC,KAAK,GACT,IAAI;IACR,CAAC;IAED,MAAM,CAAC,KAAK,GAAG,UAAU,GAAG,EAAG;MAC9B,MAAM,IAAI,KAAK,CAAE,yCAAyC,GAAG,GAAI,CAAC;IACnE,CAAC;;IAED;AACA;AACA;AACA;IACA,MAAM,CAAC,UAAU,GAAG,UAAU,OAAO,EAAG;MACvC,IAAI,IAAI;QACP,UAAU,GAAG,EAAE;QACf,CAAC,GAAG,CAAC;QACL,CAAC,GAAG,CAAC;;MAEN;MACA,YAAY,GAAG,CAAC,OAAO,CAAC,gBAAgB;MACxC,SAAS,GAAG,CAAC,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,KAAK,CAAE,CAAE,CAAC;MACrD,OAAO,CAAC,IAAI,CAAE,SAAU,CAAC;MAEzB,IAAK,YAAY,EAAG;QACnB,OAAS,IAAI,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,EAAI;UAC/B,IAAK,IAAI,KAAK,OAAO,CAAE,CAAC,CAAE,EAAG;YAC5B,CAAC,GAAG,UAAU,CAAC,IAAI,CAAE,CAAE,CAAC;UACzB;QACD;QACA,OAAQ,CAAC,EAAE,EAAG;UACb,OAAO,CAAC,MAAM,CAAE,UAAU,CAAE,CAAC,CAAE,EAAE,CAAE,CAAC;QACrC;MACD;;MAEA;MACA;MACA,SAAS,GAAG,IAAI;MAEhB,OAAO,OAAO;IACf,CAAC;;IAED;AACA;AACA;AACA;IACA,OAAO,GAAG,MAAM,CAAC,OAAO,GAAG,UAAU,IAAI,EAAG;MAC3C,IAAI,IAAI;QACP,GAAG,GAAG,EAAE;QACR,CAAC,GAAG,CAAC;QACL,QAAQ,GAAG,IAAI,CAAC,QAAQ;MAEzB,IAAK,CAAC,QAAQ,EAAG;QAChB;QACA,OAAS,IAAI,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,EAAI;UAC5B;UACA,GAAG,IAAI,OAAO,CAAE,IAAK,CAAC;QACvB;MACD,CAAC,MAAM,IAAK,QAAQ,KAAK,CAAC,IAAI,QAAQ,KAAK,CAAC,IAAI,QAAQ,KAAK,EAAE,EAAG;QACjE;QACA;QACA,IAAK,OAAO,IAAI,CAAC,WAAW,KAAK,QAAQ,EAAG;UAC3C,OAAO,IAAI,CAAC,WAAW;QACxB,CAAC,MAAM;UACN;UACA,KAAM,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,GAAG,IAAI,CAAC,WAAW,EAAG;YAC7D,GAAG,IAAI,OAAO,CAAE,IAAK,CAAC;UACvB;QACD;MACD,CAAC,MAAM,IAAK,QAAQ,KAAK,CAAC,IAAI,QAAQ,KAAK,CAAC,EAAG;QAC9C,OAAO,IAAI,CAAC,SAAS;MACtB;MACA;;MAEA,OAAO,GAAG;IACX,CAAC;IAED,IAAI,GAAG,MAAM,CAAC,SAAS,GAAG;MAEzB;MACA,WAAW,EAAE,EAAE;MAEf,YAAY,EAAE,YAAY;MAE1B,KAAK,EAAE,SAAS;MAEhB,UAAU,EAAE,CAAC,CAAC;MAEd,IAAI,EAAE,CAAC,CAAC;MAER,QAAQ,EAAE;QACT,GAAG,EAAE;UAAE,GAAG,EAAE,YAAY;UAAE,KAAK,EAAE;QAAK,CAAC;QACvC,GAAG,EAAE;UAAE,GAAG,EAAE;QAAa,CAAC;QAC1B,GAAG,EAAE;UAAE,GAAG,EAAE,iBAAiB;UAAE,KAAK,EAAE;QAAK,CAAC;QAC5C,GAAG,EAAE;UAAE,GAAG,EAAE;QAAkB;MAC/B,CAAC;MAED,SAAS,EAAE;QACV,MAAM,EAAE,SAAA,KAAU,KAAK,EAAG;UACzB,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAE,SAAS,EAAE,SAAU,CAAC;;UAEnD;UACA,KAAK,CAAC,CAAC,CAAC,GAAG,CAAE,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,EAAG,OAAO,CAAE,SAAS,EAAE,SAAU,CAAC;UAErF,IAAK,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,EAAG;YACxB,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG;UAChC;UAEA,OAAO,KAAK,CAAC,KAAK,CAAE,CAAC,EAAE,CAAE,CAAC;QAC3B,CAAC;QAED,OAAO,EAAE,SAAA,MAAU,KAAK,EAAG;UAC1B;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;UACG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;UAEjC,IAAK,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAE,CAAC,EAAE,CAAE,CAAC,KAAK,KAAK,EAAG;YACvC;YACA,IAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAG;cAChB,MAAM,CAAC,KAAK,CAAE,KAAK,CAAC,CAAC,CAAE,CAAC;YACzB;;YAEA;YACA;YACA,KAAK,CAAC,CAAC,CAAC,GAAG,EAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAK,KAAK,CAAC,CAAC,CAAC,KAAK,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,KAAK,CAAE,CAAE;YACzG,KAAK,CAAC,CAAC,CAAC,GAAG,EAAK,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,IAAM,KAAK,CAAC,CAAC,CAAC,KAAK,KAAK,CAAE;;YAE9D;UACA,CAAC,MAAM,IAAK,KAAK,CAAC,CAAC,CAAC,EAAG;YACtB,MAAM,CAAC,KAAK,CAAE,KAAK,CAAC,CAAC,CAAE,CAAC;UACzB;UAEA,OAAO,KAAK;QACb,CAAC;QAED,QAAQ,EAAE,SAAA,OAAU,KAAK,EAAG;UAC3B,IAAI,MAAM;YACT,QAAQ,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;UAEjC,IAAK,SAAS,CAAC,OAAO,CAAC,CAAC,IAAI,CAAE,KAAK,CAAC,CAAC,CAAE,CAAC,EAAG;YAC1C,OAAO,IAAI;UACZ;;UAEA;UACA,IAAK,KAAK,CAAC,CAAC,CAAC,EAAG;YACf,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE;;YAEtC;UACA,CAAC,MAAM,IAAK,QAAQ,IAAI,OAAO,CAAC,IAAI,CAAE,QAAS,CAAC;UAC/C;UACC,MAAM,GAAG,QAAQ,CAAE,QAAQ,EAAE,IAAK,CAAC,CAAC;UACrC;UACC,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAE,GAAG,EAAE,QAAQ,CAAC,MAAM,GAAG,MAAO,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,EAAG;YAEjF;YACA,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAE,CAAC,EAAE,MAAO,CAAC;YACtC,KAAK,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAE,CAAC,EAAE,MAAO,CAAC;UACvC;;UAEA;UACA,OAAO,KAAK,CAAC,KAAK,CAAE,CAAC,EAAE,CAAE,CAAC;QAC3B;MACD,CAAC;MAED,MAAM,EAAE;QAEP,KAAK,EAAE,SAAA,IAAU,gBAAgB,EAAG;UACnC,IAAI,QAAQ,GAAG,gBAAgB,CAAC,OAAO,CAAE,SAAS,EAAE,SAAU,CAAC,CAAC,WAAW,CAAC,CAAC;UAC7E,OAAO,gBAAgB,KAAK,GAAG,GAC9B,YAAW;YAAE,OAAO,IAAI;UAAE,CAAC,GAC3B,UAAU,IAAI,EAAG;YAChB,OAAO,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,QAAQ;UACjE,CAAC;QACH,CAAC;QAED,OAAO,EAAE,SAAA,MAAU,SAAS,EAAG;UAC9B,IAAI,OAAO,GAAG,UAAU,CAAE,SAAS,GAAG,GAAG,CAAE;UAE3C,OAAO,OAAO,IACb,CAAC,OAAO,GAAG,IAAI,MAAM,CAAE,KAAK,GAAG,UAAU,GAAG,GAAG,GAAG,SAAS,GAAG,GAAG,GAAG,UAAU,GAAG,KAAM,CAAC,KACxF,UAAU,CAAE,SAAS,EAAE,UAAU,IAAI,EAAG;YACvC,OAAO,OAAO,CAAC,IAAI,CAAE,OAAO,IAAI,CAAC,SAAS,KAAK,QAAQ,IAAI,IAAI,CAAC,SAAS,IAAI,OAAO,IAAI,CAAC,YAAY,KAAK,WAAW,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,EAAG,CAAC;UAC5J,CAAC,CAAC;QACJ,CAAC;QAED,MAAM,EAAE,SAAA,KAAU,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAG;UACzC,OAAO,UAAU,IAAI,EAAG;YACvB,IAAI,MAAM,GAAG,MAAM,CAAC,IAAI,CAAE,IAAI,EAAE,IAAK,CAAC;YAEtC,IAAK,MAAM,IAAI,IAAI,EAAG;cACrB,OAAO,QAAQ,KAAK,IAAI;YACzB;YACA,IAAK,CAAC,QAAQ,EAAG;cAChB,OAAO,IAAI;YACZ;YAEA,MAAM,IAAI,EAAE;YAEZ,OAAO,QAAQ,KAAK,GAAG,GAAG,MAAM,KAAK,KAAK,GACzC,QAAQ,KAAK,IAAI,GAAG,MAAM,KAAK,KAAK,GACpC,QAAQ,KAAK,IAAI,GAAG,KAAK,IAAI,MAAM,CAAC,OAAO,CAAE,KAAM,CAAC,KAAK,CAAC,GAC1D,QAAQ,KAAK,IAAI,GAAG,KAAK,IAAI,MAAM,CAAC,OAAO,CAAE,KAAM,CAAC,GAAG,CAAC,CAAC,GACzD,QAAQ,KAAK,IAAI,GAAG,KAAK,IAAI,MAAM,CAAC,KAAK,CAAE,CAAC,KAAK,CAAC,MAAO,CAAC,KAAK,KAAK,GACpE,QAAQ,KAAK,IAAI,GAAG,CAAE,GAAG,GAAG,MAAM,CAAC,OAAO,CAAE,WAAW,EAAE,GAAI,CAAC,GAAG,GAAG,EAAG,OAAO,CAAE,KAAM,CAAC,GAAG,CAAC,CAAC,GAC5F,QAAQ,KAAK,IAAI,GAAG,MAAM,KAAK,KAAK,IAAI,MAAM,CAAC,KAAK,CAAE,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAE,CAAC,KAAK,KAAK,GAAG,GAAG,GAC3F,KAAK;UACP,CAAC;QACF,CAAC;QAED,OAAO,EAAE,SAAA,MAAU,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAG;UACtD,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAE,CAAC,EAAE,CAAE,CAAC,KAAK,KAAK;YACxC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC,KAAK,MAAM;YACrC,MAAM,GAAG,IAAI,KAAK,SAAS;UAE5B,OAAO,KAAK,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC;UAE/B;UACA,UAAU,IAAI,EAAG;YAChB,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU;UACzB,CAAC,GAED,UAAU,IAAI,EAAE,OAAO,EAAE,GAAG,EAAG;YAC9B,IAAI,KAAK;cAAE,WAAW;cAAE,UAAU;cAAE,IAAI;cAAE,SAAS;cAAE,KAAK;cACzD,GAAG,GAAG,MAAM,KAAK,OAAO,GAAG,aAAa,GAAG,iBAAiB;cAC5D,MAAM,GAAG,IAAI,CAAC,UAAU;cACxB,IAAI,GAAG,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;cAC5C,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM;cAC1B,IAAI,GAAG,KAAK;YAEb,IAAK,MAAM,EAAG;cAEb;cACA,IAAK,MAAM,EAAG;gBACb,OAAQ,GAAG,EAAG;kBACb,IAAI,GAAG,IAAI;kBACX,OAAS,IAAI,GAAG,IAAI,CAAE,GAAG,CAAE,EAAI;oBAC9B,IAAK,MAAM,GACV,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,IAAI,GACpC,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAG;sBAEtB,OAAO,KAAK;oBACb;kBACD;kBACA;kBACA,KAAK,GAAG,GAAG,GAAG,IAAI,KAAK,MAAM,IAAI,CAAC,KAAK,IAAI,aAAa;gBACzD;gBACA,OAAO,IAAI;cACZ;cAEA,KAAK,GAAG,CAAE,OAAO,GAAG,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,SAAS,CAAE;;cAE1D;cACA,IAAK,OAAO,IAAI,QAAQ,EAAG;gBAE1B;;gBAEA;gBACA,IAAI,GAAG,MAAM;gBACb,UAAU,GAAG,IAAI,CAAE,OAAO,CAAE,KAAK,IAAI,CAAE,OAAO,CAAE,GAAG,CAAC,CAAC,CAAC;;gBAEtD;gBACA;gBACA,WAAW,GAAG,UAAU,CAAE,IAAI,CAAC,QAAQ,CAAE,KACvC,UAAU,CAAE,IAAI,CAAC,QAAQ,CAAE,GAAG,CAAC,CAAC,CAAC;gBAEnC,KAAK,GAAG,WAAW,CAAE,IAAI,CAAE,IAAI,EAAE;gBACjC,SAAS,GAAG,KAAK,CAAE,CAAC,CAAE,KAAK,OAAO,IAAI,KAAK,CAAE,CAAC,CAAE;gBAChD,IAAI,GAAG,SAAS,IAAI,KAAK,CAAE,CAAC,CAAE;gBAC9B,IAAI,GAAG,SAAS,IAAI,MAAM,CAAC,UAAU,CAAE,SAAS,CAAE;gBAElD,OAAS,IAAI,GAAG,EAAE,SAAS,IAAI,IAAI,IAAI,IAAI,CAAE,GAAG,CAAE;gBAEjD;gBACC,IAAI,GAAG,SAAS,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,EAAI;kBAEzC;kBACA,IAAK,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,EAAE,IAAI,IAAI,IAAI,KAAK,IAAI,EAAG;oBACrD,WAAW,CAAE,IAAI,CAAE,GAAG,CAAE,OAAO,EAAE,SAAS,EAAE,IAAI,CAAE;oBAClD;kBACD;gBACD;cAED,CAAC,MAAM;gBACN;gBACA,IAAK,QAAQ,EAAG;kBACf;kBACA,IAAI,GAAG,IAAI;kBACX,UAAU,GAAG,IAAI,CAAE,OAAO,CAAE,KAAK,IAAI,CAAE,OAAO,CAAE,GAAG,CAAC,CAAC,CAAC;;kBAEtD;kBACA;kBACA,WAAW,GAAG,UAAU,CAAE,IAAI,CAAC,QAAQ,CAAE,KACvC,UAAU,CAAE,IAAI,CAAC,QAAQ,CAAE,GAAG,CAAC,CAAC,CAAC;kBAEnC,KAAK,GAAG,WAAW,CAAE,IAAI,CAAE,IAAI,EAAE;kBACjC,SAAS,GAAG,KAAK,CAAE,CAAC,CAAE,KAAK,OAAO,IAAI,KAAK,CAAE,CAAC,CAAE;kBAChD,IAAI,GAAG,SAAS;gBACjB;;gBAEA;gBACA;gBACA,IAAK,IAAI,KAAK,KAAK,EAAG;kBACrB;kBACA,OAAS,IAAI,GAAG,EAAE,SAAS,IAAI,IAAI,IAAI,IAAI,CAAE,GAAG,CAAE,KAChD,IAAI,GAAG,SAAS,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,EAAI;oBAEzC,IAAK,CAAE,MAAM,GACZ,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,IAAI,GACpC,IAAI,CAAC,QAAQ,KAAK,CAAC,KACnB,EAAE,IAAI,EAAG;sBAET;sBACA,IAAK,QAAQ,EAAG;wBACf,UAAU,GAAG,IAAI,CAAE,OAAO,CAAE,KAAK,IAAI,CAAE,OAAO,CAAE,GAAG,CAAC,CAAC,CAAC;;wBAEtD;wBACA;wBACA,WAAW,GAAG,UAAU,CAAE,IAAI,CAAC,QAAQ,CAAE,KACvC,UAAU,CAAE,IAAI,CAAC,QAAQ,CAAE,GAAG,CAAC,CAAC,CAAC;wBAEnC,WAAW,CAAE,IAAI,CAAE,GAAG,CAAE,OAAO,EAAE,IAAI,CAAE;sBACxC;sBAEA,IAAK,IAAI,KAAK,IAAI,EAAG;wBACpB;sBACD;oBACD;kBACD;gBACD;cACD;;cAEA;cACA,IAAI,IAAI,IAAI;cACZ,OAAO,IAAI,KAAK,KAAK,IAAM,IAAI,GAAG,KAAK,KAAK,CAAC,IAAI,IAAI,GAAG,KAAK,IAAI,CAAG;YACrE;UACD,CAAC;QACH,CAAC;QAED,QAAQ,EAAE,SAAA,OAAU,MAAM,EAAE,QAAQ,EAAG;UACtC;UACA;UACA;UACA;UACA,IAAI,IAAI;YACP,EAAE,GAAG,IAAI,CAAC,OAAO,CAAE,MAAM,CAAE,IAAI,IAAI,CAAC,UAAU,CAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAE,IACrE,MAAM,CAAC,KAAK,CAAE,sBAAsB,GAAG,MAAO,CAAC;;UAEjD;UACA;UACA;UACA,IAAK,EAAE,CAAE,OAAO,CAAE,EAAG;YACpB,OAAO,EAAE,CAAE,QAAS,CAAC;UACtB;;UAEA;UACA,IAAK,EAAE,CAAC,MAAM,GAAG,CAAC,EAAG;YACpB,IAAI,GAAG,CAAE,MAAM,EAAE,MAAM,EAAE,EAAE,EAAE,QAAQ,CAAE;YACvC,OAAO,IAAI,CAAC,UAAU,CAAC,cAAc,CAAE,MAAM,CAAC,WAAW,CAAC,CAAE,CAAC,GAC5D,YAAY,CAAC,UAAU,IAAI,EAAE,OAAO,EAAG;cACtC,IAAI,GAAG;gBACN,OAAO,GAAG,EAAE,CAAE,IAAI,EAAE,QAAS,CAAC;gBAC9B,CAAC,GAAG,OAAO,CAAC,MAAM;cACnB,OAAQ,CAAC,EAAE,EAAG;gBACb,GAAG,GAAG,OAAO,CAAE,IAAI,EAAE,OAAO,CAAC,CAAC,CAAE,CAAC;gBACjC,IAAI,CAAE,GAAG,CAAE,GAAG,EAAG,OAAO,CAAE,GAAG,CAAE,GAAG,OAAO,CAAC,CAAC,CAAC,CAAE;cAC/C;YACD,CAAC,CAAC,GACF,UAAU,IAAI,EAAG;cAChB,OAAO,EAAE,CAAE,IAAI,EAAE,CAAC,EAAE,IAAK,CAAC;YAC3B,CAAC;UACH;UAEA,OAAO,EAAE;QACV;MACD,CAAC;MAED,OAAO,EAAE;QACR;QACA,KAAK,EAAE,YAAY,CAAC,UAAU,QAAQ,EAAG;UACxC;UACA;UACA;UACA,IAAI,KAAK,GAAG,EAAE;YACb,OAAO,GAAG,EAAE;YACZ,OAAO,GAAG,OAAO,CAAE,QAAQ,CAAC,OAAO,CAAE,KAAK,EAAE,IAAK,CAAE,CAAC;UAErD,OAAO,OAAO,CAAE,OAAO,CAAE,GACxB,YAAY,CAAC,UAAU,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,EAAG;YACpD,IAAI,IAAI;cACP,SAAS,GAAG,OAAO,CAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,EAAG,CAAC;cAC1C,CAAC,GAAG,IAAI,CAAC,MAAM;;YAEhB;YACA,OAAQ,CAAC,EAAE,EAAG;cACb,IAAM,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,EAAI;gBAC5B,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;cAC/B;YACD;UACD,CAAC,CAAC,GACF,UAAU,IAAI,EAAE,OAAO,EAAE,GAAG,EAAG;YAC9B,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI;YACf,OAAO,CAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,OAAQ,CAAC;YACpC;YACA,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI;YACf,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;UACtB,CAAC;QACH,CAAC,CAAC;QAEF,KAAK,EAAE,YAAY,CAAC,UAAU,QAAQ,EAAG;UACxC,OAAO,UAAU,IAAI,EAAG;YACvB,OAAO,MAAM,CAAE,QAAQ,EAAE,IAAK,CAAC,CAAC,MAAM,GAAG,CAAC;UAC3C,CAAC;QACF,CAAC,CAAC;QAEF,UAAU,EAAE,YAAY,CAAC,UAAU,IAAI,EAAG;UACzC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAE,SAAS,EAAE,SAAU,CAAC;UAC3C,OAAO,UAAU,IAAI,EAAG;YACvB,OAAO,CAAE,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,SAAS,IAAI,OAAO,CAAE,IAAK,CAAC,EAAG,OAAO,CAAE,IAAK,CAAC,GAAG,CAAC,CAAC;UACtF,CAAC;QACF,CAAC,CAAC;QAEF;QACA;QACA;QACA;QACA;QACA;QACA;QACA,MAAM,EAAE,YAAY,CAAE,UAAU,IAAI,EAAG;UACtC;UACA,IAAK,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,EAAG;YACpC,MAAM,CAAC,KAAK,CAAE,oBAAoB,GAAG,IAAK,CAAC;UAC5C;UACA,IAAI,GAAG,IAAI,CAAC,OAAO,CAAE,SAAS,EAAE,SAAU,CAAC,CAAC,WAAW,CAAC,CAAC;UACzD,OAAO,UAAU,IAAI,EAAG;YACvB,IAAI,QAAQ;YACZ,GAAG;cACF,IAAM,QAAQ,GAAG,cAAc,GAC9B,IAAI,CAAC,IAAI,GACT,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAI;gBAE9D,QAAQ,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC;gBACjC,OAAO,QAAQ,KAAK,IAAI,IAAI,QAAQ,CAAC,OAAO,CAAE,IAAI,GAAG,GAAI,CAAC,KAAK,CAAC;cACjE;YACD,CAAC,QAAS,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,QAAQ,KAAK,CAAC;YACzD,OAAO,KAAK;UACb,CAAC;QACF,CAAC,CAAC;QAEF;QACA,QAAQ,EAAE,SAAA,OAAU,IAAI,EAAG;UAC1B,IAAI,IAAI,GAAG,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI;UAClD,OAAO,IAAI,IAAI,IAAI,CAAC,KAAK,CAAE,CAAE,CAAC,KAAK,IAAI,CAAC,EAAE;QAC3C,CAAC;QAED,MAAM,EAAE,SAAA,KAAU,IAAI,EAAG;UACxB,OAAO,IAAI,KAAK,OAAO;QACxB,CAAC;QAED,OAAO,EAAE,SAAA,MAAU,IAAI,EAAG;UACzB,OAAO,IAAI,KAAK,QAAQ,CAAC,aAAa,KAAK,CAAC,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QACtI,CAAC;QAED;QACA,SAAS,EAAE,SAAA,QAAU,IAAI,EAAG;UAC3B,OAAO,IAAI,CAAC,QAAQ,KAAK,KAAK;QAC/B,CAAC;QAED,UAAU,EAAE,SAAA,SAAU,IAAI,EAAG;UAC5B,OAAO,IAAI,CAAC,QAAQ,KAAK,IAAI;QAC9B,CAAC;QAED,SAAS,EAAE,SAAA,QAAU,IAAI,EAAG;UAC3B;UACA;UACA,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;UAC1C,OAAQ,QAAQ,KAAK,OAAO,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,IAAM,QAAQ,KAAK,QAAQ,IAAI,CAAC,CAAC,IAAI,CAAC,QAAS;QAC9F,CAAC;QAED,UAAU,EAAE,SAAA,SAAU,IAAI,EAAG;UAC5B;UACA;UACA,IAAK,IAAI,CAAC,UAAU,EAAG;YACtB,IAAI,CAAC,UAAU,CAAC,aAAa;UAC9B;UAEA,OAAO,IAAI,CAAC,QAAQ,KAAK,IAAI;QAC9B,CAAC;QAED;QACA,OAAO,EAAE,SAAA,MAAU,IAAI,EAAG;UACzB;UACA;UACA;UACA;UACA,KAAM,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,GAAG,IAAI,CAAC,WAAW,EAAG;YAC7D,IAAK,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAG;cACxB,OAAO,KAAK;YACb;UACD;UACA,OAAO,IAAI;QACZ,CAAC;QAED,QAAQ,EAAE,SAAA,OAAU,IAAI,EAAG;UAC1B,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAE,IAAK,CAAC;QACtC,CAAC;QAED;QACA,QAAQ,EAAE,SAAA,OAAU,IAAI,EAAG;UAC1B,OAAO,OAAO,CAAC,IAAI,CAAE,IAAI,CAAC,QAAS,CAAC;QACrC,CAAC;QAED,OAAO,EAAE,SAAA,MAAU,IAAI,EAAG;UACzB,OAAO,OAAO,CAAC,IAAI,CAAE,IAAI,CAAC,QAAS,CAAC;QACrC,CAAC;QAED,QAAQ,EAAE,SAAA,OAAU,IAAI,EAAG;UAC1B,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;UACtC,OAAO,IAAI,KAAK,OAAO,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,QAAQ;QACvE,CAAC;QAED,MAAM,EAAE,SAAA,KAAU,IAAI,EAAG;UACxB,IAAI,IAAI;UACR,OAAO,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,OAAO,IAC7C,IAAI,CAAC,IAAI,KAAK,MAAM;UAEpB;UACA;UACE,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,KAAK,MAAM,CAAE;QACjF,CAAC;QAED;QACA,OAAO,EAAE,sBAAsB,CAAC,YAAW;UAC1C,OAAO,CAAE,CAAC,CAAE;QACb,CAAC,CAAC;QAEF,MAAM,EAAE,sBAAsB,CAAC,UAAU,YAAY,EAAE,MAAM,EAAG;UAC/D,OAAO,CAAE,MAAM,GAAG,CAAC,CAAE;QACtB,CAAC,CAAC;QAEF,IAAI,EAAE,sBAAsB,CAAC,UAAU,YAAY,EAAE,MAAM,EAAE,QAAQ,EAAG;UACvE,OAAO,CAAE,QAAQ,GAAG,CAAC,GAAG,QAAQ,GAAG,MAAM,GAAG,QAAQ,CAAE;QACvD,CAAC,CAAC;QAEF,MAAM,EAAE,sBAAsB,CAAC,UAAU,YAAY,EAAE,MAAM,EAAG;UAC/D,IAAI,CAAC,GAAG,CAAC;UACT,OAAQ,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,EAAG;YAC5B,YAAY,CAAC,IAAI,CAAE,CAAE,CAAC;UACvB;UACA,OAAO,YAAY;QACpB,CAAC,CAAC;QAEF,KAAK,EAAE,sBAAsB,CAAC,UAAU,YAAY,EAAE,MAAM,EAAG;UAC9D,IAAI,CAAC,GAAG,CAAC;UACT,OAAQ,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,EAAG;YAC5B,YAAY,CAAC,IAAI,CAAE,CAAE,CAAC;UACvB;UACA,OAAO,YAAY;QACpB,CAAC,CAAC;QAEF,IAAI,EAAE,sBAAsB,CAAC,UAAU,YAAY,EAAE,MAAM,EAAE,QAAQ,EAAG;UACvE,IAAI,CAAC,GAAG,QAAQ,GAAG,CAAC,GAAG,QAAQ,GAAG,MAAM,GAAG,QAAQ;UACnD,OAAQ,EAAE,CAAC,IAAI,CAAC,GAAI;YACnB,YAAY,CAAC,IAAI,CAAE,CAAE,CAAC;UACvB;UACA,OAAO,YAAY;QACpB,CAAC,CAAC;QAEF,IAAI,EAAE,sBAAsB,CAAC,UAAU,YAAY,EAAE,MAAM,EAAE,QAAQ,EAAG;UACvE,IAAI,CAAC,GAAG,QAAQ,GAAG,CAAC,GAAG,QAAQ,GAAG,MAAM,GAAG,QAAQ;UACnD,OAAQ,EAAE,CAAC,GAAG,MAAM,GAAI;YACvB,YAAY,CAAC,IAAI,CAAE,CAAE,CAAC;UACvB;UACA,OAAO,YAAY;QACpB,CAAC;MACF;IACD,CAAC;IAED,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;;IAExC;IACA,KAAM,CAAC,IAAI;MAAE,KAAK,EAAE,IAAI;MAAE,QAAQ,EAAE,IAAI;MAAE,IAAI,EAAE,IAAI;MAAE,QAAQ,EAAE,IAAI;MAAE,KAAK,EAAE;IAAK,CAAC,EAAG;MACrF,IAAI,CAAC,OAAO,CAAE,CAAC,CAAE,GAAG,iBAAiB,CAAE,CAAE,CAAC;IAC3C;IACA,KAAM,CAAC,IAAI;MAAE,MAAM,EAAE,IAAI;MAAE,KAAK,EAAE;IAAK,CAAC,EAAG;MAC1C,IAAI,CAAC,OAAO,CAAE,CAAC,CAAE,GAAG,kBAAkB,CAAE,CAAE,CAAC;IAC5C;;IAEA;IACA,SAAS,UAAU,CAAA,EAAG,CAAC;IACvB,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO;IAClD,IAAI,CAAC,UAAU,GAAG,IAAI,UAAU,CAAC,CAAC;IAElC,QAAQ,GAAG,MAAM,CAAC,QAAQ,GAAG,UAAU,QAAQ,EAAE,SAAS,EAAG;MAC5D,IAAI,OAAO;QAAE,KAAK;QAAE,MAAM;QAAE,IAAI;QAC/B,KAAK;QAAE,MAAM;QAAE,UAAU;QACzB,MAAM,GAAG,UAAU,CAAE,QAAQ,GAAG,GAAG,CAAE;MAEtC,IAAK,MAAM,EAAG;QACb,OAAO,SAAS,GAAG,CAAC,GAAG,MAAM,CAAC,KAAK,CAAE,CAAE,CAAC;MACzC;MAEA,KAAK,GAAG,QAAQ;MAChB,MAAM,GAAG,EAAE;MACX,UAAU,GAAG,IAAI,CAAC,SAAS;MAE3B,OAAQ,KAAK,EAAG;QAEf;QACA,IAAK,CAAC,OAAO,KAAK,KAAK,GAAG,MAAM,CAAC,IAAI,CAAE,KAAM,CAAC,CAAC,EAAG;UACjD,IAAK,KAAK,EAAG;YACZ;YACA,KAAK,GAAG,KAAK,CAAC,KAAK,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,MAAO,CAAC,IAAI,KAAK;UAChD;UACA,MAAM,CAAC,IAAI,CAAG,MAAM,GAAG,EAAI,CAAC;QAC7B;QAEA,OAAO,GAAG,KAAK;;QAEf;QACA,IAAM,KAAK,GAAG,YAAY,CAAC,IAAI,CAAE,KAAM,CAAC,EAAI;UAC3C,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;UACvB,MAAM,CAAC,IAAI,CAAC;YACX,KAAK,EAAE,OAAO;YACd;YACA,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAE,KAAK,EAAE,GAAI;UACpC,CAAC,CAAC;UACF,KAAK,GAAG,KAAK,CAAC,KAAK,CAAE,OAAO,CAAC,MAAO,CAAC;QACtC;;QAEA;QACA,KAAM,IAAI,IAAI,IAAI,CAAC,MAAM,EAAG;UAC3B,IAAK,CAAC,KAAK,GAAG,SAAS,CAAE,IAAI,CAAE,CAAC,IAAI,CAAE,KAAM,CAAC,MAAM,CAAC,UAAU,CAAE,IAAI,CAAE,KACpE,KAAK,GAAG,UAAU,CAAE,IAAI,CAAE,CAAE,KAAM,CAAC,CAAC,CAAC,EAAG;YACzC,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;YACvB,MAAM,CAAC,IAAI,CAAC;cACX,KAAK,EAAE,OAAO;cACd,IAAI,EAAE,IAAI;cACV,OAAO,EAAE;YACV,CAAC,CAAC;YACF,KAAK,GAAG,KAAK,CAAC,KAAK,CAAE,OAAO,CAAC,MAAO,CAAC;UACtC;QACD;QAEA,IAAK,CAAC,OAAO,EAAG;UACf;QACD;MACD;;MAEA;MACA;MACA;MACA,OAAO,SAAS,GACf,KAAK,CAAC,MAAM,GACZ,KAAK,GACJ,MAAM,CAAC,KAAK,CAAE,QAAS,CAAC;MACxB;MACA,UAAU,CAAE,QAAQ,EAAE,MAAO,CAAC,CAAC,KAAK,CAAE,CAAE,CAAC;IAC5C,CAAC;IAED,SAAS,UAAU,CAAE,MAAM,EAAG;MAC7B,IAAI,CAAC,GAAG,CAAC;QACR,GAAG,GAAG,MAAM,CAAC,MAAM;QACnB,QAAQ,GAAG,EAAE;MACd,OAAQ,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAG;QACtB,QAAQ,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK;MAC5B;MACA,OAAO,QAAQ;IAChB;IAEA,SAAS,aAAa,CAAE,OAAO,EAAE,UAAU,EAAE,IAAI,EAAG;MACnD,IAAI,GAAG,GAAG,UAAU,CAAC,GAAG;QACvB,gBAAgB,GAAG,IAAI,IAAI,GAAG,KAAK,YAAY;QAC/C,QAAQ,GAAG,IAAI,EAAE;MAElB,OAAO,UAAU,CAAC,KAAK;MACtB;MACA,UAAU,IAAI,EAAE,OAAO,EAAE,GAAG,EAAG;QAC9B,OAAS,IAAI,GAAG,IAAI,CAAE,GAAG,CAAE,EAAI;UAC9B,IAAK,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,gBAAgB,EAAG;YAC9C,OAAO,OAAO,CAAE,IAAI,EAAE,OAAO,EAAE,GAAI,CAAC;UACrC;QACD;MACD,CAAC;MAED;MACA,UAAU,IAAI,EAAE,OAAO,EAAE,GAAG,EAAG;QAC9B,IAAI,QAAQ;UAAE,WAAW;UAAE,UAAU;UACpC,QAAQ,GAAG,CAAE,OAAO,EAAE,QAAQ,CAAE;;QAEjC;QACA,IAAK,GAAG,EAAG;UACV,OAAS,IAAI,GAAG,IAAI,CAAE,GAAG,CAAE,EAAI;YAC9B,IAAK,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,gBAAgB,EAAG;cAC9C,IAAK,OAAO,CAAE,IAAI,EAAE,OAAO,EAAE,GAAI,CAAC,EAAG;gBACpC,OAAO,IAAI;cACZ;YACD;UACD;QACD,CAAC,MAAM;UACN,OAAS,IAAI,GAAG,IAAI,CAAE,GAAG,CAAE,EAAI;YAC9B,IAAK,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,gBAAgB,EAAG;cAC9C,UAAU,GAAG,IAAI,CAAE,OAAO,CAAE,KAAK,IAAI,CAAE,OAAO,CAAE,GAAG,CAAC,CAAC,CAAC;;cAEtD;cACA;cACA,WAAW,GAAG,UAAU,CAAE,IAAI,CAAC,QAAQ,CAAE,KAAK,UAAU,CAAE,IAAI,CAAC,QAAQ,CAAE,GAAG,CAAC,CAAC,CAAC;cAE/E,IAAK,CAAC,QAAQ,GAAG,WAAW,CAAE,GAAG,CAAE,KAClC,QAAQ,CAAE,CAAC,CAAE,KAAK,OAAO,IAAI,QAAQ,CAAE,CAAC,CAAE,KAAK,QAAQ,EAAG;gBAE1D;gBACA,OAAQ,QAAQ,CAAE,CAAC,CAAE,GAAG,QAAQ,CAAE,CAAC,CAAE;cACtC,CAAC,MAAM;gBACN;gBACA,WAAW,CAAE,GAAG,CAAE,GAAG,QAAQ;;gBAE7B;gBACA,IAAM,QAAQ,CAAE,CAAC,CAAE,GAAG,OAAO,CAAE,IAAI,EAAE,OAAO,EAAE,GAAI,CAAC,EAAI;kBACtD,OAAO,IAAI;gBACZ;cACD;YACD;UACD;QACD;MACD,CAAC;IACH;IAEA,SAAS,cAAc,CAAE,QAAQ,EAAG;MACnC,OAAO,QAAQ,CAAC,MAAM,GAAG,CAAC,GACzB,UAAU,IAAI,EAAE,OAAO,EAAE,GAAG,EAAG;QAC9B,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM;QACvB,OAAQ,CAAC,EAAE,EAAG;UACb,IAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAE,IAAI,EAAE,OAAO,EAAE,GAAI,CAAC,EAAG;YACzC,OAAO,KAAK;UACb;QACD;QACA,OAAO,IAAI;MACZ,CAAC,GACD,QAAQ,CAAC,CAAC,CAAC;IACb;IAEA,SAAS,gBAAgB,CAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAG;MACxD,IAAI,CAAC,GAAG,CAAC;QACR,GAAG,GAAG,QAAQ,CAAC,MAAM;MACtB,OAAQ,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAG;QACtB,MAAM,CAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,OAAQ,CAAC;MACzC;MACA,OAAO,OAAO;IACf;IAEA,SAAS,QAAQ,CAAE,SAAS,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,EAAG;MACzD,IAAI,IAAI;QACP,YAAY,GAAG,EAAE;QACjB,CAAC,GAAG,CAAC;QACL,GAAG,GAAG,SAAS,CAAC,MAAM;QACtB,MAAM,GAAG,GAAG,IAAI,IAAI;MAErB,OAAQ,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAG;QACtB,IAAM,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,EAAI;UAC5B,IAAK,CAAC,MAAM,IAAI,MAAM,CAAE,IAAI,EAAE,OAAO,EAAE,GAAI,CAAC,EAAG;YAC9C,YAAY,CAAC,IAAI,CAAE,IAAK,CAAC;YACzB,IAAK,MAAM,EAAG;cACb,GAAG,CAAC,IAAI,CAAE,CAAE,CAAC;YACd;UACD;QACD;MACD;MAEA,OAAO,YAAY;IACpB;IAEA,SAAS,UAAU,CAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,YAAY,EAAG;MACzF,IAAK,UAAU,IAAI,CAAC,UAAU,CAAE,OAAO,CAAE,EAAG;QAC3C,UAAU,GAAG,UAAU,CAAE,UAAW,CAAC;MACtC;MACA,IAAK,UAAU,IAAI,CAAC,UAAU,CAAE,OAAO,CAAE,EAAG;QAC3C,UAAU,GAAG,UAAU,CAAE,UAAU,EAAE,YAAa,CAAC;MACpD;MACA,OAAO,YAAY,CAAC,UAAU,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,EAAG;QAC3D,IAAI,IAAI;UAAE,CAAC;UAAE,IAAI;UAChB,MAAM,GAAG,EAAE;UACX,OAAO,GAAG,EAAE;UACZ,WAAW,GAAG,OAAO,CAAC,MAAM;UAE5B;UACA,KAAK,GAAG,IAAI,IAAI,gBAAgB,CAAE,QAAQ,IAAI,GAAG,EAAE,OAAO,CAAC,QAAQ,GAAG,CAAE,OAAO,CAAE,GAAG,OAAO,EAAE,EAAG,CAAC;UAEjG;UACA,SAAS,GAAG,SAAS,KAAM,IAAI,IAAI,CAAC,QAAQ,CAAE,GAC7C,QAAQ,CAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAI,CAAC,GAClD,KAAK;UAEN,UAAU,GAAG,OAAO;UACnB;UACA,UAAU,KAAM,IAAI,GAAG,SAAS,GAAG,WAAW,IAAI,UAAU,CAAE;UAE7D;UACA,EAAE;UAEF;UACA,OAAO,GACR,SAAS;;QAEX;QACA,IAAK,OAAO,EAAG;UACd,OAAO,CAAE,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,GAAI,CAAC;QAC/C;;QAEA;QACA,IAAK,UAAU,EAAG;UACjB,IAAI,GAAG,QAAQ,CAAE,UAAU,EAAE,OAAQ,CAAC;UACtC,UAAU,CAAE,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,GAAI,CAAC;;UAEpC;UACA,CAAC,GAAG,IAAI,CAAC,MAAM;UACf,OAAQ,CAAC,EAAE,EAAG;YACb,IAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,EAAI;cACvB,UAAU,CAAE,OAAO,CAAC,CAAC,CAAC,CAAE,GAAG,EAAE,SAAS,CAAE,OAAO,CAAC,CAAC,CAAC,CAAE,GAAG,IAAI,CAAC;YAC7D;UACD;QACD;QAEA,IAAK,IAAI,EAAG;UACX,IAAK,UAAU,IAAI,SAAS,EAAG;YAC9B,IAAK,UAAU,EAAG;cACjB;cACA,IAAI,GAAG,EAAE;cACT,CAAC,GAAG,UAAU,CAAC,MAAM;cACrB,OAAQ,CAAC,EAAE,EAAG;gBACb,IAAM,IAAI,GAAG,UAAU,CAAC,CAAC,CAAC,EAAI;kBAC7B;kBACA,IAAI,CAAC,IAAI,CAAG,SAAS,CAAC,CAAC,CAAC,GAAG,IAAM,CAAC;gBACnC;cACD;cACA,UAAU,CAAE,IAAI,EAAG,UAAU,GAAG,EAAE,EAAG,IAAI,EAAE,GAAI,CAAC;YACjD;;YAEA;YACA,CAAC,GAAG,UAAU,CAAC,MAAM;YACrB,OAAQ,CAAC,EAAE,EAAG;cACb,IAAK,CAAC,IAAI,GAAG,UAAU,CAAC,CAAC,CAAC,KACzB,CAAC,IAAI,GAAG,UAAU,GAAG,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAG;gBAE/D,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;cACrC;YACD;UACD;;UAED;QACA,CAAC,MAAM;UACN,UAAU,GAAG,QAAQ,CACpB,UAAU,KAAK,OAAO,GACrB,UAAU,CAAC,MAAM,CAAE,WAAW,EAAE,UAAU,CAAC,MAAO,CAAC,GACnD,UACF,CAAC;UACD,IAAK,UAAU,EAAG;YACjB,UAAU,CAAE,IAAI,EAAE,OAAO,EAAE,UAAU,EAAE,GAAI,CAAC;UAC7C,CAAC,MAAM;YACN,IAAI,CAAC,KAAK,CAAE,OAAO,EAAE,UAAW,CAAC;UAClC;QACD;MACD,CAAC,CAAC;IACH;IAEA,SAAS,iBAAiB,CAAE,MAAM,EAAG;MACpC,IAAI,YAAY;QAAE,OAAO;QAAE,CAAC;QAC3B,GAAG,GAAG,MAAM,CAAC,MAAM;QACnB,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAE,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAE;QACjD,gBAAgB,GAAG,eAAe,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;QACxD,CAAC,GAAG,eAAe,GAAG,CAAC,GAAG,CAAC;QAE3B;QACA,YAAY,GAAG,aAAa,CAAE,UAAU,IAAI,EAAG;UAC9C,OAAO,IAAI,KAAK,YAAY;QAC7B,CAAC,EAAE,gBAAgB,EAAE,IAAK,CAAC;QAC3B,eAAe,GAAG,aAAa,CAAE,UAAU,IAAI,EAAG;UACjD,OAAO,OAAO,CAAE,YAAY,EAAE,IAAK,CAAC,GAAG,CAAC,CAAC;QAC1C,CAAC,EAAE,gBAAgB,EAAE,IAAK,CAAC;QAC3B,QAAQ,GAAG,CAAE,UAAU,IAAI,EAAE,OAAO,EAAE,GAAG,EAAG;UAC3C,IAAI,GAAG,GAAK,CAAC,eAAe,KAAM,GAAG,IAAI,OAAO,KAAK,gBAAgB,CAAE,KACtE,CAAC,YAAY,GAAG,OAAO,EAAE,QAAQ,GAChC,YAAY,CAAE,IAAI,EAAE,OAAO,EAAE,GAAI,CAAC,GAClC,eAAe,CAAE,IAAI,EAAE,OAAO,EAAE,GAAI,CAAC,CAAE;UACzC;UACA,YAAY,GAAG,IAAI;UACnB,OAAO,GAAG;QACX,CAAC,CAAE;MAEJ,OAAQ,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAG;QACtB,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAE,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAE,EAAI;UAClD,QAAQ,GAAG,CAAE,aAAa,CAAC,cAAc,CAAE,QAAS,CAAC,EAAE,OAAO,CAAC,CAAE;QAClE,CAAC,MAAM;UACN,OAAO,GAAG,IAAI,CAAC,MAAM,CAAE,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAE,CAAC,KAAK,CAAE,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,OAAQ,CAAC;;UAExE;UACA,IAAK,OAAO,CAAE,OAAO,CAAE,EAAG;YACzB;YACA,CAAC,GAAG,EAAE,CAAC;YACP,OAAQ,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAG;cACtB,IAAK,IAAI,CAAC,QAAQ,CAAE,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAE,EAAG;gBACtC;cACD;YACD;YACA,OAAO,UAAU,CAChB,CAAC,GAAG,CAAC,IAAI,cAAc,CAAE,QAAS,CAAC,EACnC,CAAC,GAAG,CAAC,IAAI,UAAU;YAClB;YACA,MAAM,CAAC,KAAK,CAAE,CAAC,EAAE,CAAC,GAAG,CAAE,CAAC,CAAC,MAAM,CAAC;cAAE,KAAK,EAAE,MAAM,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG;YAAG,CAAC,CACnF,CAAC,CAAC,OAAO,CAAE,KAAK,EAAE,IAAK,CAAC,EACxB,OAAO,EACP,CAAC,GAAG,CAAC,IAAI,iBAAiB,CAAE,MAAM,CAAC,KAAK,CAAE,CAAC,EAAE,CAAE,CAAE,CAAC,EAClD,CAAC,GAAG,GAAG,IAAI,iBAAiB,CAAG,MAAM,GAAG,MAAM,CAAC,KAAK,CAAE,CAAE,CAAG,CAAC,EAC5D,CAAC,GAAG,GAAG,IAAI,UAAU,CAAE,MAAO,CAC/B,CAAC;UACF;UACA,QAAQ,CAAC,IAAI,CAAE,OAAQ,CAAC;QACzB;MACD;MAEA,OAAO,cAAc,CAAE,QAAS,CAAC;IAClC;IAEA,SAAS,wBAAwB,CAAE,eAAe,EAAE,WAAW,EAAG;MACjE,IAAI,KAAK,GAAG,WAAW,CAAC,MAAM,GAAG,CAAC;QACjC,SAAS,GAAG,eAAe,CAAC,MAAM,GAAG,CAAC;QACtC,YAAY,GAAG,SAAf,YAAY,CAAa,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,SAAS,EAAG;UACjE,IAAI,IAAI;YAAE,CAAC;YAAE,OAAO;YACnB,YAAY,GAAG,CAAC;YAChB,CAAC,GAAG,GAAG;YACP,SAAS,GAAG,IAAI,IAAI,EAAE;YACtB,UAAU,GAAG,EAAE;YACf,aAAa,GAAG,gBAAgB;YAChC;YACA,KAAK,GAAG,IAAI,IAAI,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAE,GAAG,EAAE,SAAU,CAAC;YAC/D;YACA,aAAa,GAAI,OAAO,IAAI,aAAa,IAAI,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,GAAI;YAC7E,GAAG,GAAG,KAAK,CAAC,MAAM;UAEnB,IAAK,SAAS,EAAG;YAChB,gBAAgB,GAAG,OAAO,KAAK,QAAQ,IAAI,OAAO,IAAI,SAAS;UAChE;;UAEA;UACA;UACA;UACA,OAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC,EAAE,EAAG;YACrD,IAAK,SAAS,IAAI,IAAI,EAAG;cACxB,CAAC,GAAG,CAAC;cACL,IAAK,CAAC,OAAO,IAAI,IAAI,CAAC,aAAa,KAAK,QAAQ,EAAG;gBAClD,WAAW,CAAE,IAAK,CAAC;gBACnB,GAAG,GAAG,CAAC,cAAc;cACtB;cACA,OAAS,OAAO,GAAG,eAAe,CAAC,CAAC,EAAE,CAAC,EAAI;gBAC1C,IAAK,OAAO,CAAE,IAAI,EAAE,OAAO,IAAI,QAAQ,EAAE,GAAG,CAAC,EAAG;kBAC/C,OAAO,CAAC,IAAI,CAAE,IAAK,CAAC;kBACpB;gBACD;cACD;cACA,IAAK,SAAS,EAAG;gBAChB,OAAO,GAAG,aAAa;cACxB;YACD;;YAEA;YACA,IAAK,KAAK,EAAG;cACZ;cACA,IAAM,IAAI,GAAG,CAAC,OAAO,IAAI,IAAI,EAAI;gBAChC,YAAY,EAAE;cACf;;cAEA;cACA,IAAK,IAAI,EAAG;gBACX,SAAS,CAAC,IAAI,CAAE,IAAK,CAAC;cACvB;YACD;UACD;;UAEA;UACA;UACA,YAAY,IAAI,CAAC;;UAEjB;UACA;UACA;UACA;UACA;UACA;UACA;UACA,IAAK,KAAK,IAAI,CAAC,KAAK,YAAY,EAAG;YAClC,CAAC,GAAG,CAAC;YACL,OAAS,OAAO,GAAG,WAAW,CAAC,CAAC,EAAE,CAAC,EAAI;cACtC,OAAO,CAAE,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,GAAI,CAAC;YAC/C;YAEA,IAAK,IAAI,EAAG;cACX;cACA,IAAK,YAAY,GAAG,CAAC,EAAG;gBACvB,OAAQ,CAAC,EAAE,EAAG;kBACb,IAAK,EAAE,SAAS,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,EAAG;oBACvC,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,CAAE,OAAQ,CAAC;kBACpC;gBACD;cACD;;cAEA;cACA,UAAU,GAAG,QAAQ,CAAE,UAAW,CAAC;YACpC;;YAEA;YACA,IAAI,CAAC,KAAK,CAAE,OAAO,EAAE,UAAW,CAAC;;YAEjC;YACA,IAAK,SAAS,IAAI,CAAC,IAAI,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,IAC7C,YAAY,GAAG,WAAW,CAAC,MAAM,GAAK,CAAC,EAAG;cAE5C,MAAM,CAAC,UAAU,CAAE,OAAQ,CAAC;YAC7B;UACD;;UAEA;UACA,IAAK,SAAS,EAAG;YAChB,OAAO,GAAG,aAAa;YACvB,gBAAgB,GAAG,aAAa;UACjC;UAEA,OAAO,SAAS;QACjB,CAAC;MAEF,OAAO,KAAK,GACX,YAAY,CAAE,YAAa,CAAC,GAC5B,YAAY;IACd;IAEA,OAAO,GAAG,MAAM,CAAC,OAAO,GAAG,UAAU,QAAQ,EAAE,KAAK,CAAC,yBAA0B;MAC9E,IAAI,CAAC;QACJ,WAAW,GAAG,EAAE;QAChB,eAAe,GAAG,EAAE;QACpB,MAAM,GAAG,aAAa,CAAE,QAAQ,GAAG,GAAG,CAAE;MAEzC,IAAK,CAAC,MAAM,EAAG;QACd;QACA,IAAK,CAAC,KAAK,EAAG;UACb,KAAK,GAAG,QAAQ,CAAE,QAAS,CAAC;QAC7B;QACA,CAAC,GAAG,KAAK,CAAC,MAAM;QAChB,OAAQ,CAAC,EAAE,EAAG;UACb,MAAM,GAAG,iBAAiB,CAAE,KAAK,CAAC,CAAC,CAAE,CAAC;UACtC,IAAK,MAAM,CAAE,OAAO,CAAE,EAAG;YACxB,WAAW,CAAC,IAAI,CAAE,MAAO,CAAC;UAC3B,CAAC,MAAM;YACN,eAAe,CAAC,IAAI,CAAE,MAAO,CAAC;UAC/B;QACD;;QAEA;QACA,MAAM,GAAG,aAAa,CAAE,QAAQ,EAAE,wBAAwB,CAAE,eAAe,EAAE,WAAY,CAAE,CAAC;;QAE5F;QACA,MAAM,CAAC,QAAQ,GAAG,QAAQ;MAC3B;MACA,OAAO,MAAM;IACd,CAAC;;IAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,UAAU,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAG;MACrE,IAAI,CAAC;QAAE,MAAM;QAAE,KAAK;QAAE,IAAI;QAAE,IAAI;QAC/B,QAAQ,GAAG,OAAO,QAAQ,KAAK,UAAU,IAAI,QAAQ;QACrD,KAAK,GAAG,CAAC,IAAI,IAAI,QAAQ,CAAG,QAAQ,GAAG,QAAQ,CAAC,QAAQ,IAAI,QAAU,CAAC;MAExE,OAAO,GAAG,OAAO,IAAI,EAAE;;MAEvB;MACA;MACA,IAAK,KAAK,CAAC,MAAM,KAAK,CAAC,EAAG;QAEzB;QACA,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAE,CAAE,CAAC;QACvC,IAAK,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,KAAK,IAAI,IACzD,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,QAAQ,KAAK,CAAC,IAAI,cAAc,IAC3D,IAAI,CAAC,QAAQ,CAAE,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAE,EAAG;UAEnC,OAAO,GAAG,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE,OAAQ,CAAC,IAAI,EAAE,EAAG,CAAC,CAAC;UACjG,IAAK,CAAC,OAAO,EAAG;YACf,OAAO,OAAO;;YAEf;UACA,CAAC,MAAM,IAAK,QAAQ,EAAG;YACtB,OAAO,GAAG,OAAO,CAAC,UAAU;UAC7B;UAEA,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,MAAO,CAAC;QACzD;;QAEA;QACA,CAAC,GAAG,SAAS,CAAC,cAAc,CAAC,CAAC,IAAI,CAAE,QAAS,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM;QAClE,OAAQ,CAAC,EAAE,EAAG;UACb,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC;;UAEjB;UACA,IAAK,IAAI,CAAC,QAAQ,CAAG,IAAI,GAAG,KAAK,CAAC,IAAI,CAAG,EAAG;YAC3C;UACD;UACA,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAE,IAAI,CAAE,EAAI;YACjC;YACA,IAAM,IAAI,GAAG,IAAI,CAChB,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAE,SAAS,EAAE,SAAU,CAAC,EAChD,QAAQ,CAAC,IAAI,CAAE,MAAM,CAAC,CAAC,CAAC,CAAC,IAAK,CAAC,IAAI,WAAW,CAAE,OAAO,CAAC,UAAW,CAAC,IAAI,OACzE,CAAC,EAAI;cAEJ;cACA,MAAM,CAAC,MAAM,CAAE,CAAC,EAAE,CAAE,CAAC;cACrB,QAAQ,GAAG,IAAI,CAAC,MAAM,IAAI,UAAU,CAAE,MAAO,CAAC;cAC9C,IAAK,CAAC,QAAQ,EAAG;gBAChB,IAAI,CAAC,KAAK,CAAE,OAAO,EAAE,IAAK,CAAC;gBAC3B,OAAO,OAAO;cACf;cAEA;YACD;UACD;QACD;MACD;;MAEA;MACA;MACA,CAAE,QAAQ,IAAI,OAAO,CAAE,QAAQ,EAAE,KAAM,CAAC,EACvC,IAAI,EACJ,OAAO,EACP,CAAC,cAAc,EACf,OAAO,EACP,CAAC,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAE,QAAS,CAAC,IAAI,WAAW,CAAE,OAAO,CAAC,UAAW,CAAC,IAAI,OAC/E,CAAC;MACD,OAAO,OAAO;IACf,CAAC;;IAED;;IAEA;IACA,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAE,SAAU,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,OAAO;;IAE7E;IACA;IACA,OAAO,CAAC,gBAAgB,GAAG,CAAC,CAAC,YAAY;;IAEzC;IACA,WAAW,CAAC,CAAC;;IAEb;IACA;IACA,OAAO,CAAC,YAAY,GAAG,MAAM,CAAC,UAAU,IAAI,EAAG;MAC9C;MACA,OAAO,IAAI,CAAC,uBAAuB,CAAE,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAE,CAAC,GAAG,CAAC;IACzE,CAAC,CAAC;;IAEF;IACA;IACA;IACA,IAAK,CAAC,MAAM,CAAC,UAAU,GAAG,EAAG;MAC5B,GAAG,CAAC,SAAS,GAAG,kBAAkB;MAClC,OAAO,GAAG,CAAC,UAAU,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,GAAG;IACnD,CAAC,CAAC,EAAG;MACJ,SAAS,CAAE,wBAAwB,EAAE,UAAU,IAAI,EAAE,IAAI,EAAE,KAAK,EAAG;QAClE,IAAK,CAAC,KAAK,EAAG;UACb,OAAO,IAAI,CAAC,YAAY,CAAE,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,KAAK,MAAM,GAAG,CAAC,GAAG,CAAE,CAAC;QACxE;MACD,CAAC,CAAC;IACH;;IAEA;IACA;IACA,IAAK,CAAC,OAAO,CAAC,UAAU,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,EAAG;MACnD,GAAG,CAAC,SAAS,GAAG,UAAU;MAC1B,GAAG,CAAC,UAAU,CAAC,YAAY,CAAE,OAAO,EAAE,EAAG,CAAC;MAC1C,OAAO,GAAG,CAAC,UAAU,CAAC,YAAY,CAAE,OAAQ,CAAC,KAAK,EAAE;IACrD,CAAC,CAAC,EAAG;MACJ,SAAS,CAAE,OAAO,EAAE,UAAU,IAAI,EAAE,IAAI,EAAE,KAAK,EAAG;QACjD,IAAK,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,OAAO,EAAG;UACxD,OAAO,IAAI,CAAC,YAAY;QACzB;MACD,CAAC,CAAC;IACH;;IAEA;IACA;IACA,IAAK,CAAC,MAAM,CAAC,UAAU,GAAG,EAAG;MAC5B,OAAO,GAAG,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,IAAI;IAC5C,CAAC,CAAC,EAAG;MACJ,SAAS,CAAE,QAAQ,EAAE,UAAU,IAAI,EAAE,IAAI,EAAE,KAAK,EAAG;QAClD,IAAI,GAAG;QACP,IAAK,CAAC,KAAK,EAAG;UACb,OAAO,IAAI,CAAE,IAAI,CAAE,KAAK,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,GAC/C,CAAC,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAE,IAAK,CAAC,KAAK,GAAG,CAAC,SAAS,GACtD,GAAG,CAAC,KAAK,GACV,IAAI;QACN;MACD,CAAC,CAAC;IACH;IAEA,OAAO,MAAM;EAEb,CAAC,CAAG,MAAO,CAAC;EAIZ,MAAM,CAAC,IAAI,GAAG,MAAM;EACpB,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,SAAS;EAC9B,MAAM,CAAC,IAAI,CAAE,GAAG,CAAE,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO;EACxC,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,UAAU;EACrD,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,OAAO;EAC5B,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,KAAK;EAC9B,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ;EAIjC,IAAI,GAAG,GAAG,SAAA,IAAU,IAAI,EAAE,IAAG,EAAE,KAAK,EAAG;IACtC,IAAI,OAAO,GAAG,EAAE;MACf,QAAQ,GAAG,KAAK,KAAK,SAAS;IAE/B,OAAQ,CAAE,IAAI,GAAG,IAAI,CAAE,IAAG,CAAE,KAAM,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAG;MACvD,IAAK,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAG;QAC1B,IAAK,QAAQ,IAAI,MAAM,CAAE,IAAK,CAAC,CAAC,EAAE,CAAE,KAAM,CAAC,EAAG;UAC7C;QACD;QACA,OAAO,CAAC,IAAI,CAAE,IAAK,CAAC;MACrB;IACD;IACA,OAAO,OAAO;EACf,CAAC;EAGD,IAAI,SAAQ,GAAG,SAAX,QAAQ,CAAa,CAAC,EAAE,IAAI,EAAG;IAClC,IAAI,OAAO,GAAG,EAAE;IAEhB,OAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,WAAW,EAAG;MAC9B,IAAK,CAAC,CAAC,QAAQ,KAAK,CAAC,IAAI,CAAC,KAAK,IAAI,EAAG;QACrC,OAAO,CAAC,IAAI,CAAE,CAAE,CAAC;MAClB;IACD;IAEA,OAAO,OAAO;EACf,CAAC;EAGD,IAAI,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY;EAElD,IAAI,UAAU,GAAK,+BAAiC;EAIpD,IAAI,SAAS,GAAG,gBAAgB;;EAEhC;EACA,SAAS,MAAM,CAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAG;IAC3C,IAAK,MAAM,CAAC,UAAU,CAAE,SAAU,CAAC,EAAG;MACrC,OAAO,MAAM,CAAC,IAAI,CAAE,QAAQ,EAAE,UAAU,IAAI,EAAE,CAAC,EAAG;QACjD;QACA,OAAO,CAAC,CAAC,SAAS,CAAC,IAAI,CAAE,IAAI,EAAE,CAAC,EAAE,IAAK,CAAC,KAAK,GAAG;MACjD,CAAE,CAAC;IAEJ;IAEA,IAAK,SAAS,CAAC,QAAQ,EAAG;MACzB,OAAO,MAAM,CAAC,IAAI,CAAE,QAAQ,EAAE,UAAU,IAAI,EAAG;QAC9C,OAAS,IAAI,KAAK,SAAS,KAAO,GAAG;MACtC,CAAE,CAAC;IAEJ;IAEA,IAAK,OAAO,SAAS,KAAK,QAAQ,EAAG;MACpC,IAAK,SAAS,CAAC,IAAI,CAAE,SAAU,CAAC,EAAG;QAClC,OAAO,MAAM,CAAC,MAAM,CAAE,SAAS,EAAE,QAAQ,EAAE,GAAI,CAAC;MACjD;MAEA,SAAS,GAAG,MAAM,CAAC,MAAM,CAAE,SAAS,EAAE,QAAS,CAAC;IACjD;IAEA,OAAO,MAAM,CAAC,IAAI,CAAE,QAAQ,EAAE,UAAU,IAAI,EAAG;MAC9C,OAAS,MAAM,CAAC,OAAO,CAAE,IAAI,EAAE,SAAU,CAAC,GAAG,CAAC,CAAC,KAAO,GAAG;IAC1D,CAAE,CAAC;EACJ;EAEA,MAAM,CAAC,MAAM,GAAG,UAAU,IAAI,EAAE,KAAK,EAAE,GAAG,EAAG;IAC5C,IAAI,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE;IAErB,IAAK,GAAG,EAAG;MACV,IAAI,GAAG,OAAO,GAAG,IAAI,GAAG,GAAG;IAC5B;IAEA,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,GAC/C,MAAM,CAAC,IAAI,CAAC,eAAe,CAAE,IAAI,EAAE,IAAK,CAAC,GAAG,CAAE,IAAI,CAAE,GAAG,EAAE,GACzD,MAAM,CAAC,IAAI,CAAC,OAAO,CAAE,IAAI,EAAE,MAAM,CAAC,IAAI,CAAE,KAAK,EAAE,UAAU,IAAI,EAAG;MAC/D,OAAO,IAAI,CAAC,QAAQ,KAAK,CAAC;IAC3B,CAAE,CAAE,CAAC;EACP,CAAC;EAED,MAAM,CAAC,EAAE,CAAC,MAAM,CAAE;IACjB,IAAI,EAAE,SAAA,KAAU,QAAQ,EAAG;MAC1B,IAAI,CAAC;QACJ,GAAG,GAAG,EAAE;QACR,IAAI,GAAG,IAAI;QACX,GAAG,GAAG,IAAI,CAAC,MAAM;MAElB,IAAK,OAAO,QAAQ,KAAK,QAAQ,EAAG;QACnC,OAAO,IAAI,CAAC,SAAS,CAAE,MAAM,CAAE,QAAS,CAAC,CAAC,MAAM,CAAE,YAAW;UAC5D,KAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAG;YAC3B,IAAK,MAAM,CAAC,QAAQ,CAAE,IAAI,CAAE,CAAC,CAAE,EAAE,IAAK,CAAC,EAAG;cACzC,OAAO,IAAI;YACZ;UACD;QACD,CAAE,CAAE,CAAC;MACN;MAEA,KAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAG;QAC3B,MAAM,CAAC,IAAI,CAAE,QAAQ,EAAE,IAAI,CAAE,CAAC,CAAE,EAAE,GAAI,CAAC;MACxC;;MAEA;MACA,GAAG,GAAG,IAAI,CAAC,SAAS,CAAE,GAAG,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,CAAE,GAAI,CAAC,GAAG,GAAI,CAAC;MAC5D,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,QAAQ,GAAG,QAAQ;MACxE,OAAO,GAAG;IACX,CAAC;IACD,MAAM,EAAE,SAAA,OAAU,QAAQ,EAAG;MAC5B,OAAO,IAAI,CAAC,SAAS,CAAE,MAAM,CAAE,IAAI,EAAE,QAAQ,IAAI,EAAE,EAAE,KAAM,CAAE,CAAC;IAC/D,CAAC;IACD,GAAG,EAAE,SAAA,IAAU,QAAQ,EAAG;MACzB,OAAO,IAAI,CAAC,SAAS,CAAE,MAAM,CAAE,IAAI,EAAE,QAAQ,IAAI,EAAE,EAAE,IAAK,CAAE,CAAC;IAC9D,CAAC;IACD,EAAE,EAAE,SAAA,GAAU,QAAQ,EAAG;MACxB,OAAO,CAAC,CAAC,MAAM,CACd,IAAI;MAEJ;MACA;MACA,OAAO,QAAQ,KAAK,QAAQ,IAAI,aAAa,CAAC,IAAI,CAAE,QAAS,CAAC,GAC7D,MAAM,CAAE,QAAS,CAAC,GAClB,QAAQ,IAAI,EAAE,EACf,KACD,CAAC,CAAC,MAAM;IACT;EACD,CAAE,CAAC;;EAGH;;EAGA;EACA,IAAI,UAAU;IAEb;IACA;IACA;IACA,UAAU,GAAG,qCAAqC;IAElD,IAAI,GAAG,MAAM,CAAC,EAAE,CAAC,IAAI,GAAG,UAAU,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAG;MAC3D,IAAI,KAAK,EAAE,IAAI;;MAEf;MACA,IAAK,CAAC,QAAQ,EAAG;QAChB,OAAO,IAAI;MACZ;;MAEA;MACA;MACA,IAAI,GAAG,IAAI,IAAI,UAAU;;MAEzB;MACA,IAAK,OAAO,QAAQ,KAAK,QAAQ,EAAG;QACnC,IAAK,QAAQ,CAAC,MAAM,CAAE,CAAE,CAAC,KAAK,GAAG,IAChC,QAAQ,CAAC,MAAM,CAAE,QAAQ,CAAC,MAAM,GAAG,CAAE,CAAC,KAAK,GAAG,IAC9C,QAAQ,CAAC,MAAM,IAAI,CAAC,EAAG;UAEvB;UACA,KAAK,GAAG,CAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAE;QAEjC,CAAC,MAAM;UACN,KAAK,GAAG,UAAU,CAAC,IAAI,CAAE,QAAS,CAAC;QACpC;;QAEA;QACA,IAAK,KAAK,KAAM,KAAK,CAAE,CAAC,CAAE,IAAI,CAAC,OAAO,CAAE,EAAG;UAE1C;UACA,IAAK,KAAK,CAAE,CAAC,CAAE,EAAG;YACjB,OAAO,GAAG,OAAO,YAAY,MAAM,GAAG,OAAO,CAAE,CAAC,CAAE,GAAG,OAAO;;YAE5D;YACA;YACA,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,MAAM,CAAC,SAAS,CACnC,KAAK,CAAE,CAAC,CAAE,EACV,OAAO,IAAI,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,aAAa,IAAI,OAAO,GAAG,QAAQ,EACzE,IACD,CAAE,CAAC;;YAEH;YACA,IAAK,UAAU,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC,CAAG,CAAC,IAAI,MAAM,CAAC,aAAa,CAAE,OAAQ,CAAC,EAAG;cACvE,KAAM,KAAK,IAAI,OAAO,EAAG;gBAExB;gBACA,IAAK,MAAM,CAAC,UAAU,CAAE,IAAI,CAAE,KAAK,CAAG,CAAC,EAAG;kBACzC,IAAI,CAAE,KAAK,CAAE,CAAE,OAAO,CAAE,KAAK,CAAG,CAAC;;kBAElC;gBACA,CAAC,MAAM;kBACN,IAAI,CAAC,IAAI,CAAE,KAAK,EAAE,OAAO,CAAE,KAAK,CAAG,CAAC;gBACrC;cACD;YACD;YAEA,OAAO,IAAI;;YAEZ;UACA,CAAC,MAAM;YACN,IAAI,GAAG,QAAQ,CAAC,cAAc,CAAE,KAAK,CAAE,CAAC,CAAG,CAAC;;YAE5C;YACA;YACA,IAAK,IAAI,IAAI,IAAI,CAAC,UAAU,EAAG;cAE9B;cACA;cACA,IAAK,IAAI,CAAC,EAAE,KAAK,KAAK,CAAE,CAAC,CAAE,EAAG;gBAC7B,OAAO,UAAU,CAAC,IAAI,CAAE,QAAS,CAAC;cACnC;;cAEA;cACA,IAAI,CAAC,MAAM,GAAG,CAAC;cACf,IAAI,CAAE,CAAC,CAAE,GAAG,IAAI;YACjB;YAEA,IAAI,CAAC,OAAO,GAAG,QAAQ;YACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ;YACxB,OAAO,IAAI;UACZ;;UAED;QACA,CAAC,MAAM,IAAK,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,EAAG;UACxC,OAAO,CAAE,OAAO,IAAI,IAAI,EAAG,IAAI,CAAE,QAAS,CAAC;;UAE5C;UACA;QACA,CAAC,MAAM;UACN,OAAO,IAAI,CAAC,WAAW,CAAE,OAAQ,CAAC,CAAC,IAAI,CAAE,QAAS,CAAC;QACpD;;QAED;MACA,CAAC,MAAM,IAAK,QAAQ,CAAC,QAAQ,EAAG;QAC/B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAE,CAAC,CAAE,GAAG,QAAQ;QACnC,IAAI,CAAC,MAAM,GAAG,CAAC;QACf,OAAO,IAAI;;QAEZ;QACA;MACA,CAAC,MAAM,IAAK,MAAM,CAAC,UAAU,CAAE,QAAS,CAAC,EAAG;QAC3C,OAAO,OAAO,IAAI,CAAC,KAAK,KAAK,WAAW,GACvC,IAAI,CAAC,KAAK,CAAE,QAAS,CAAC;QAEtB;QACA,QAAQ,CAAE,MAAO,CAAC;MACpB;MAEA,IAAK,QAAQ,CAAC,QAAQ,KAAK,SAAS,EAAG;QACtC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ;QACjC,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO;MAChC;MAEA,OAAO,MAAM,CAAC,SAAS,CAAE,QAAQ,EAAE,IAAK,CAAC;IAC1C,CAAC;;EAEF;EACA,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,EAAE;;EAE1B;EACA,UAAU,GAAG,MAAM,CAAE,QAAS,CAAC;EAG/B,IAAI,YAAY,GAAG,gCAAgC;IAElD;IACA,gBAAgB,GAAG;MAClB,QAAQ,EAAE,IAAI;MACd,QAAQ,EAAE,IAAI;MACd,IAAI,EAAE,IAAI;MACV,IAAI,EAAE;IACP,CAAC;EAEF,MAAM,CAAC,EAAE,CAAC,MAAM,CAAE;IACjB,GAAG,EAAE,SAAA,IAAU,MAAM,EAAG;MACvB,IAAI,CAAC;QACJ,OAAO,GAAG,MAAM,CAAE,MAAM,EAAE,IAAK,CAAC;QAChC,GAAG,GAAG,OAAO,CAAC,MAAM;MAErB,OAAO,IAAI,CAAC,MAAM,CAAE,YAAW;QAC9B,KAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAG;UAC3B,IAAK,MAAM,CAAC,QAAQ,CAAE,IAAI,EAAE,OAAO,CAAE,CAAC,CAAG,CAAC,EAAG;YAC5C,OAAO,IAAI;UACZ;QACD;MACD,CAAE,CAAC;IACJ,CAAC;IAED,OAAO,EAAE,SAAA,QAAU,SAAS,EAAE,OAAO,EAAG;MACvC,IAAI,GAAG;QACN,CAAC,GAAG,CAAC;QACL,CAAC,GAAG,IAAI,CAAC,MAAM;QACf,OAAO,GAAG,EAAE;QACZ,GAAG,GAAG,aAAa,CAAC,IAAI,CAAE,SAAU,CAAC,IAAI,OAAO,SAAS,KAAK,QAAQ,GACrE,MAAM,CAAE,SAAS,EAAE,OAAO,IAAI,IAAI,CAAC,OAAQ,CAAC,GAC5C,CAAC;MAEH,OAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAG;QACpB,KAAM,GAAG,GAAG,IAAI,CAAE,CAAC,CAAE,EAAE,GAAG,IAAI,GAAG,KAAK,OAAO,EAAE,GAAG,GAAG,GAAG,CAAC,UAAU,EAAG;UAErE;UACA,IAAK,GAAG,CAAC,QAAQ,GAAG,EAAE,KAAM,GAAG,GAC9B,GAAG,CAAC,KAAK,CAAE,GAAI,CAAC,GAAG,CAAC,CAAC;UAErB;UACA,GAAG,CAAC,QAAQ,KAAK,CAAC,IACjB,MAAM,CAAC,IAAI,CAAC,eAAe,CAAE,GAAG,EAAE,SAAU,CAAC,CAAE,EAAG;YAEnD,OAAO,CAAC,IAAI,CAAE,GAAI,CAAC;YACnB;UACD;QACD;MACD;MAEA,OAAO,IAAI,CAAC,SAAS,CAAE,OAAO,CAAC,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC,UAAU,CAAE,OAAQ,CAAC,GAAG,OAAQ,CAAC;IACrF,CAAC;IAED;IACA;IACA,KAAK,EAAE,SAAA,MAAU,IAAI,EAAG;MAEvB;MACA,IAAK,CAAC,IAAI,EAAG;QACZ,OAAS,IAAI,CAAE,CAAC,CAAE,IAAI,IAAI,CAAE,CAAC,CAAE,CAAC,UAAU,GAAK,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;MAClF;;MAEA;MACA,IAAK,OAAO,IAAI,KAAK,QAAQ,EAAG;QAC/B,OAAO,MAAM,CAAC,OAAO,CAAE,IAAI,CAAE,CAAC,CAAE,EAAE,MAAM,CAAE,IAAK,CAAE,CAAC;MACnD;;MAEA;MACA,OAAO,MAAM,CAAC,OAAO;MAEpB;MACA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAE,CAAC,CAAE,GAAG,IAAI,EAAE,IAAK,CAAC;IACxC,CAAC;IAED,GAAG,EAAE,SAAA,IAAU,QAAQ,EAAE,OAAO,EAAG;MAClC,OAAO,IAAI,CAAC,SAAS,CACpB,MAAM,CAAC,UAAU,CAChB,MAAM,CAAC,KAAK,CAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAE,QAAQ,EAAE,OAAQ,CAAE,CACvD,CACD,CAAC;IACF,CAAC;IAED,OAAO,EAAE,SAAA,QAAU,QAAQ,EAAG;MAC7B,OAAO,IAAI,CAAC,GAAG,CAAE,QAAQ,IAAI,IAAI,GAChC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAE,QAAS,CACpD,CAAC;IACF;EACD,CAAE,CAAC;EAEH,SAAS,OAAO,CAAE,GAAG,EAAE,GAAG,EAAG;IAC5B,GAAG;MACF,GAAG,GAAG,GAAG,CAAE,GAAG,CAAE;IACjB,CAAC,QAAS,GAAG,IAAI,GAAG,CAAC,QAAQ,KAAK,CAAC;IAEnC,OAAO,GAAG;EACX;EAEA,MAAM,CAAC,IAAI,CAAE;IACZ,MAAM,EAAE,SAAA,OAAU,IAAI,EAAG;MACxB,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU;MAC5B,OAAO,MAAM,IAAI,MAAM,CAAC,QAAQ,KAAK,EAAE,GAAG,MAAM,GAAG,IAAI;IACxD,CAAC;IACD,OAAO,EAAE,SAAA,QAAU,IAAI,EAAG;MACzB,OAAO,GAAG,CAAE,IAAI,EAAE,YAAa,CAAC;IACjC,CAAC;IACD,YAAY,EAAE,SAAA,aAAU,IAAI,EAAE,CAAC,EAAE,KAAK,EAAG;MACxC,OAAO,GAAG,CAAE,IAAI,EAAE,YAAY,EAAE,KAAM,CAAC;IACxC,CAAC;IACD,IAAI,EAAE,SAAA,KAAU,IAAI,EAAG;MACtB,OAAO,OAAO,CAAE,IAAI,EAAE,aAAc,CAAC;IACtC,CAAC;IACD,IAAI,EAAE,SAAA,KAAU,IAAI,EAAG;MACtB,OAAO,OAAO,CAAE,IAAI,EAAE,iBAAkB,CAAC;IAC1C,CAAC;IACD,OAAO,EAAE,SAAA,QAAU,IAAI,EAAG;MACzB,OAAO,GAAG,CAAE,IAAI,EAAE,aAAc,CAAC;IAClC,CAAC;IACD,OAAO,EAAE,SAAA,QAAU,IAAI,EAAG;MACzB,OAAO,GAAG,CAAE,IAAI,EAAE,iBAAkB,CAAC;IACtC,CAAC;IACD,SAAS,EAAE,SAAA,UAAU,IAAI,EAAE,CAAC,EAAE,KAAK,EAAG;MACrC,OAAO,GAAG,CAAE,IAAI,EAAE,aAAa,EAAE,KAAM,CAAC;IACzC,CAAC;IACD,SAAS,EAAE,SAAA,UAAU,IAAI,EAAE,CAAC,EAAE,KAAK,EAAG;MACrC,OAAO,GAAG,CAAE,IAAI,EAAE,iBAAiB,EAAE,KAAM,CAAC;IAC7C,CAAC;IACD,QAAQ,EAAE,SAAA,SAAU,IAAI,EAAG;MAC1B,OAAO,SAAQ,CAAE,CAAE,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC,EAAG,UAAU,EAAE,IAAK,CAAC;IAC9D,CAAC;IACD,QAAQ,EAAE,SAAA,SAAU,IAAI,EAAG;MAC1B,OAAO,SAAQ,CAAE,IAAI,CAAC,UAAW,CAAC;IACnC,CAAC;IACD,QAAQ,EAAE,SAAA,SAAU,IAAI,EAAG;MAC1B,OAAO,MAAM,CAAC,QAAQ,CAAE,IAAI,EAAE,QAAS,CAAC,GACvC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,GACnD,MAAM,CAAC,KAAK,CAAE,EAAE,EAAE,IAAI,CAAC,UAAW,CAAC;IACrC;EACD,CAAC,EAAE,UAAU,IAAI,EAAE,EAAE,EAAG;IACvB,MAAM,CAAC,EAAE,CAAE,IAAI,CAAE,GAAG,UAAU,KAAK,EAAE,QAAQ,EAAG;MAC/C,IAAI,GAAG,GAAG,MAAM,CAAC,GAAG,CAAE,IAAI,EAAE,EAAE,EAAE,KAAM,CAAC;MAEvC,IAAK,IAAI,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC,KAAK,OAAO,EAAG;QACnC,QAAQ,GAAG,KAAK;MACjB;MAEA,IAAK,QAAQ,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAG;QAC/C,GAAG,GAAG,MAAM,CAAC,MAAM,CAAE,QAAQ,EAAE,GAAI,CAAC;MACrC;MAEA,IAAK,IAAI,CAAC,MAAM,GAAG,CAAC,EAAG;QAEtB;QACA,IAAK,CAAC,gBAAgB,CAAE,IAAI,CAAE,EAAG;UAChC,GAAG,GAAG,MAAM,CAAC,UAAU,CAAE,GAAI,CAAC;QAC/B;;QAEA;QACA,IAAK,YAAY,CAAC,IAAI,CAAE,IAAK,CAAC,EAAG;UAChC,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;QACpB;MACD;MAEA,OAAO,IAAI,CAAC,SAAS,CAAE,GAAI,CAAC;IAC7B,CAAC;EACF,CAAE,CAAC;EACH,IAAI,SAAS,GAAK,MAAQ;;EAI1B;EACA,SAAS,aAAa,CAAE,OAAO,EAAG;IACjC,IAAI,MAAM,GAAG,CAAC,CAAC;IACf,MAAM,CAAC,IAAI,CAAE,OAAO,CAAC,KAAK,CAAE,SAAU,CAAC,IAAI,EAAE,EAAE,UAAU,CAAC,EAAE,IAAI,EAAG;MAClE,MAAM,CAAE,IAAI,CAAE,GAAG,IAAI;IACtB,CAAE,CAAC;IACH,OAAO,MAAM;EACd;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,MAAM,CAAC,SAAS,GAAG,UAAU,OAAO,EAAG;IAEtC;IACA;IACA,OAAO,GAAG,OAAO,OAAO,KAAK,QAAQ,GACpC,aAAa,CAAE,OAAQ,CAAC,GACxB,MAAM,CAAC,MAAM,CAAE,CAAC,CAAC,EAAE,OAAQ,CAAC;IAE7B;MAAI;MACH,MAAM;MAEN;MACA,MAAM;MAEN;MACA,MAAK;MAEL;MACA,OAAM;MAEN;MACA,IAAI,GAAG,EAAE;MAET;MACA,KAAK,GAAG,EAAE;MAEV;MACA,WAAW,GAAG,CAAC,CAAC;MAEhB;MACA,IAAI,GAAG,SAAP,IAAI,CAAA,EAAc;QAEjB;QACA,OAAM,GAAG,OAAO,CAAC,IAAI;;QAErB;QACA;QACA,MAAK,GAAG,MAAM,GAAG,IAAI;QACrB,OAAQ,KAAK,CAAC,MAAM,EAAE,WAAW,GAAG,CAAC,CAAC,EAAG;UACxC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;UACtB,OAAQ,EAAE,WAAW,GAAG,IAAI,CAAC,MAAM,EAAG;YAErC;YACA,IAAK,IAAI,CAAE,WAAW,CAAE,CAAC,KAAK,CAAE,MAAM,CAAE,CAAC,CAAE,EAAE,MAAM,CAAE,CAAC,CAAG,CAAC,KAAK,KAAK,IACnE,OAAO,CAAC,WAAW,EAAG;cAEtB;cACA,WAAW,GAAG,IAAI,CAAC,MAAM;cACzB,MAAM,GAAG,KAAK;YACf;UACD;QACD;;QAEA;QACA,IAAK,CAAC,OAAO,CAAC,MAAM,EAAG;UACtB,MAAM,GAAG,KAAK;QACf;QAEA,MAAM,GAAG,KAAK;;QAEd;QACA,IAAK,OAAM,EAAG;UAEb;UACA,IAAK,MAAM,EAAG;YACb,IAAI,GAAG,EAAE;;YAEV;UACA,CAAC,MAAM;YACN,IAAI,GAAG,EAAE;UACV;QACD;MACD,CAAC;MAED;MACA,IAAI,GAAG;QAEN;QACA,GAAG,EAAE,SAAA,IAAA,EAAW;UACf,IAAK,IAAI,EAAG;YAEX;YACA,IAAK,MAAM,IAAI,CAAC,MAAM,EAAG;cACxB,WAAW,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC;cAC7B,KAAK,CAAC,IAAI,CAAE,MAAO,CAAC;YACrB;YAEA,CAAE,SAAS,GAAG,CAAE,IAAI,EAAG;cACtB,MAAM,CAAC,IAAI,CAAE,IAAI,EAAE,UAAU,CAAC,EAAE,GAAG,EAAG;gBACrC,IAAK,MAAM,CAAC,UAAU,CAAE,GAAI,CAAC,EAAG;kBAC/B,IAAK,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,GAAI,CAAC,EAAG;oBAC1C,IAAI,CAAC,IAAI,CAAE,GAAI,CAAC;kBACjB;gBACD,CAAC,MAAM,IAAK,GAAG,IAAI,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,CAAE,GAAI,CAAC,KAAK,QAAQ,EAAG;kBAElE;kBACA,GAAG,CAAE,GAAI,CAAC;gBACX;cACD,CAAE,CAAC;YACJ,CAAC,EAAI,SAAU,CAAC;YAEhB,IAAK,MAAM,IAAI,CAAC,MAAM,EAAG;cACxB,IAAI,CAAC,CAAC;YACP;UACD;UACA,OAAO,IAAI;QACZ,CAAC;QAED;QACA,MAAM,EAAE,SAAA,OAAA,EAAW;UAClB,MAAM,CAAC,IAAI,CAAE,SAAS,EAAE,UAAU,CAAC,EAAE,GAAG,EAAG;YAC1C,IAAI,KAAK;YACT,OAAQ,CAAE,KAAK,GAAG,MAAM,CAAC,OAAO,CAAE,GAAG,EAAE,IAAI,EAAE,KAAM,CAAC,IAAK,CAAC,CAAC,EAAG;cAC7D,IAAI,CAAC,MAAM,CAAE,KAAK,EAAE,CAAE,CAAC;;cAEvB;cACA,IAAK,KAAK,IAAI,WAAW,EAAG;gBAC3B,WAAW,EAAE;cACd;YACD;UACD,CAAE,CAAC;UACH,OAAO,IAAI;QACZ,CAAC;QAED;QACA;QACA,GAAG,EAAE,SAAA,IAAU,EAAE,EAAG;UACnB,OAAO,EAAE,GACR,MAAM,CAAC,OAAO,CAAE,EAAE,EAAE,IAAK,CAAC,GAAG,CAAC,CAAC,GAC/B,IAAI,CAAC,MAAM,GAAG,CAAC;QACjB,CAAC;QAED;QACA,KAAK,EAAE,SAAA,MAAA,EAAW;UACjB,IAAK,IAAI,EAAG;YACX,IAAI,GAAG,EAAE;UACV;UACA,OAAO,IAAI;QACZ,CAAC;QAED;QACA;QACA;QACA,OAAO,EAAE,SAAA,QAAA,EAAW;UACnB,OAAM,GAAG,KAAK,GAAG,EAAE;UACnB,IAAI,GAAG,MAAM,GAAG,EAAE;UAClB,OAAO,IAAI;QACZ,CAAC;QACD,QAAQ,EAAE,SAAA,SAAA,EAAW;UACpB,OAAO,CAAC,IAAI;QACb,CAAC;QAED;QACA;QACA;QACA,IAAI,EAAE,SAAA,KAAA,EAAW;UAChB,OAAM,GAAG,IAAI;UACb,IAAK,CAAC,MAAM,EAAG;YACd,IAAI,CAAC,OAAO,CAAC,CAAC;UACf;UACA,OAAO,IAAI;QACZ,CAAC;QACD,MAAM,EAAE,SAAA,OAAA,EAAW;UAClB,OAAO,CAAC,CAAC,OAAM;QAChB,CAAC;QAED;QACA,QAAQ,EAAE,SAAA,SAAU,OAAO,EAAE,IAAI,EAAG;UACnC,IAAK,CAAC,OAAM,EAAG;YACd,IAAI,GAAG,IAAI,IAAI,EAAE;YACjB,IAAI,GAAG,CAAE,OAAO,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAE;YACpD,KAAK,CAAC,IAAI,CAAE,IAAK,CAAC;YAClB,IAAK,CAAC,MAAM,EAAG;cACd,IAAI,CAAC,CAAC;YACP;UACD;UACA,OAAO,IAAI;QACZ,CAAC;QAED;QACA,IAAI,EAAE,SAAA,KAAA,EAAW;UAChB,IAAI,CAAC,QAAQ,CAAE,IAAI,EAAE,SAAU,CAAC;UAChC,OAAO,IAAI;QACZ,CAAC;QAED;QACA,KAAK,EAAE,SAAA,MAAA,EAAW;UACjB,OAAO,CAAC,CAAC,MAAK;QACf;MACD,CAAC;IAEF,OAAO,IAAI;EACZ,CAAC;EAGD,MAAM,CAAC,MAAM,CAAE;IAEd,QAAQ,EAAE,SAAA,SAAU,IAAI,EAAG;MAC1B,IAAI,MAAM,GAAG;QAEX;QACA,CAAE,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,SAAS,CAAE,aAAc,CAAC,EAAE,UAAU,CAAE,EACpE,CAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,SAAS,CAAE,aAAc,CAAC,EAAE,UAAU,CAAE,EACnE,CAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,CAAC,SAAS,CAAE,QAAS,CAAC,CAAE,CACtD;QACD,MAAK,GAAG,SAAS;QACjB,QAAO,GAAG;UACT,KAAK,EAAE,SAAA,MAAA,EAAW;YACjB,OAAO,MAAK;UACb,CAAC;UACD,MAAM,EAAE,SAAA,OAAA,EAAW;YAClB,QAAQ,CAAC,IAAI,CAAE,SAAU,CAAC,CAAC,IAAI,CAAE,SAAU,CAAC;YAC5C,OAAO,IAAI;UACZ,CAAC;UACD,IAAI,EAAE,SAAA,KAAA,CAAU;UAAA,EAAmC;YAClD,IAAI,GAAG,GAAG,SAAS;YACnB,OAAO,MAAM,CAAC,QAAQ,CAAE,UAAU,QAAQ,EAAG;cAC5C,MAAM,CAAC,IAAI,CAAE,MAAM,EAAE,UAAU,CAAC,EAAE,KAAK,EAAG;gBACzC,IAAI,EAAE,GAAG,MAAM,CAAC,UAAU,CAAE,GAAG,CAAE,CAAC,CAAG,CAAC,IAAI,GAAG,CAAE,CAAC,CAAE;;gBAElD;gBACA,QAAQ,CAAE,KAAK,CAAE,CAAC,CAAE,CAAE,CAAE,YAAW;kBAClC,IAAI,QAAQ,GAAG,EAAE,IAAI,EAAE,CAAC,KAAK,CAAE,IAAI,EAAE,SAAU,CAAC;kBAChD,IAAK,QAAQ,IAAI,MAAM,CAAC,UAAU,CAAE,QAAQ,CAAC,OAAQ,CAAC,EAAG;oBACxD,QAAQ,CAAC,OAAO,CAAC,CAAC,CAChB,QAAQ,CAAE,QAAQ,CAAC,MAAO,CAAC,CAC3B,IAAI,CAAE,QAAQ,CAAC,OAAQ,CAAC,CACxB,IAAI,CAAE,QAAQ,CAAC,MAAO,CAAC;kBAC1B,CAAC,MAAM;oBACN,QAAQ,CAAE,KAAK,CAAE,CAAC,CAAE,GAAG,MAAM,CAAE,CAC9B,IAAI,KAAK,QAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,IAAI,EAC5C,EAAE,GAAG,CAAE,QAAQ,CAAE,GAAG,SACrB,CAAC;kBACF;gBACD,CAAE,CAAC;cACJ,CAAE,CAAC;cACH,GAAG,GAAG,IAAI;YACX,CAAE,CAAC,CAAC,OAAO,CAAC,CAAC;UACd,CAAC;UAED;UACA;UACA,OAAO,EAAE,SAAA,QAAU,GAAG,EAAG;YACxB,OAAO,GAAG,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAE,GAAG,EAAE,QAAQ,CAAC,GAAG,QAAO;UAC7D;QACD,CAAC;QACD,QAAQ,GAAG,CAAC,CAAC;;MAEd;MACA,QAAO,CAAC,IAAI,GAAG,QAAO,CAAC,IAAI;;MAE3B;MACA,MAAM,CAAC,IAAI,CAAE,MAAM,EAAE,UAAU,CAAC,EAAE,KAAK,EAAG;QACzC,IAAI,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE;UACpB,WAAW,GAAG,KAAK,CAAE,CAAC,CAAE;;QAEzB;QACA,QAAO,CAAE,KAAK,CAAE,CAAC,CAAE,CAAE,GAAG,IAAI,CAAC,GAAG;;QAEhC;QACA,IAAK,WAAW,EAAG;UAClB,IAAI,CAAC,GAAG,CAAE,YAAW;YAEpB;YACA,MAAK,GAAG,WAAW;;YAEpB;UACA,CAAC,EAAE,MAAM,CAAE,CAAC,GAAG,CAAC,CAAE,CAAE,CAAC,CAAE,CAAC,OAAO,EAAE,MAAM,CAAE,CAAC,CAAE,CAAE,CAAC,CAAE,CAAC,IAAK,CAAC;QACzD;;QAEA;QACA,QAAQ,CAAE,KAAK,CAAE,CAAC,CAAE,CAAE,GAAG,YAAW;UACnC,QAAQ,CAAE,KAAK,CAAE,CAAC,CAAE,GAAG,MAAM,CAAE,CAAE,IAAI,KAAK,QAAQ,GAAG,QAAO,GAAG,IAAI,EAAE,SAAU,CAAC;UAChF,OAAO,IAAI;QACZ,CAAC;QACD,QAAQ,CAAE,KAAK,CAAE,CAAC,CAAE,GAAG,MAAM,CAAE,GAAG,IAAI,CAAC,QAAQ;MAChD,CAAE,CAAC;;MAEH;MACA,QAAO,CAAC,OAAO,CAAE,QAAS,CAAC;;MAE3B;MACA,IAAK,IAAI,EAAG;QACX,IAAI,CAAC,IAAI,CAAE,QAAQ,EAAE,QAAS,CAAC;MAChC;;MAEA;MACA,OAAO,QAAQ;IAChB,CAAC;IAED;IACA,IAAI,EAAE,SAAA,KAAU,WAAW,CAAC,2BAA4B;MACvD,IAAI,CAAC,GAAG,CAAC;QACR,aAAa,GAAG,MAAK,CAAC,IAAI,CAAE,SAAU,CAAC;QACvC,MAAM,GAAG,aAAa,CAAC,MAAM;QAE7B;QACA,SAAS,GAAG,MAAM,KAAK,CAAC,IACrB,WAAW,IAAI,MAAM,CAAC,UAAU,CAAE,WAAW,CAAC,OAAQ,CAAG,GAAG,MAAM,GAAG,CAAC;QAEzE;QACA;QACA,QAAQ,GAAG,SAAS,KAAK,CAAC,GAAG,WAAW,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;QAE5D;QACA,UAAU,GAAG,SAAb,UAAU,CAAa,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAG;UAC5C,OAAO,UAAU,KAAK,EAAG;YACxB,QAAQ,CAAE,CAAC,CAAE,GAAG,IAAI;YACpB,MAAM,CAAE,CAAC,CAAE,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,GAAG,MAAK,CAAC,IAAI,CAAE,SAAU,CAAC,GAAG,KAAK;YACpE,IAAK,MAAM,KAAK,cAAc,EAAG;cAChC,QAAQ,CAAC,UAAU,CAAE,QAAQ,EAAE,MAAO,CAAC;YAExC,CAAC,MAAM,IAAK,CAAG,GAAE,SAAW,EAAG;cAC9B,QAAQ,CAAC,WAAW,CAAE,QAAQ,EAAE,MAAO,CAAC;YACzC;UACD,CAAC;QACF,CAAC;QAED,cAAc;QAAE,gBAAgB;QAAE,eAAe;;MAElD;MACA,IAAK,MAAM,GAAG,CAAC,EAAG;QACjB,cAAc,GAAG,IAAI,KAAK,CAAE,MAAO,CAAC;QACpC,gBAAgB,GAAG,IAAI,KAAK,CAAE,MAAO,CAAC;QACtC,eAAe,GAAG,IAAI,KAAK,CAAE,MAAO,CAAC;QACrC,OAAQ,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAG;UACzB,IAAK,aAAa,CAAE,CAAC,CAAE,IAAI,MAAM,CAAC,UAAU,CAAE,aAAa,CAAE,CAAC,CAAE,CAAC,OAAQ,CAAC,EAAG;YAC5E,aAAa,CAAE,CAAC,CAAE,CAAC,OAAO,CAAC,CAAC,CAC1B,QAAQ,CAAE,UAAU,CAAE,CAAC,EAAE,gBAAgB,EAAE,cAAe,CAAE,CAAC,CAC7D,IAAI,CAAE,UAAU,CAAE,CAAC,EAAE,eAAe,EAAE,aAAc,CAAE,CAAC,CACvD,IAAI,CAAE,QAAQ,CAAC,MAAO,CAAC;UAC1B,CAAC,MAAM;YACN,EAAE,SAAS;UACZ;QACD;MACD;;MAEA;MACA,IAAK,CAAC,SAAS,EAAG;QACjB,QAAQ,CAAC,WAAW,CAAE,eAAe,EAAE,aAAc,CAAC;MACvD;MAEA,OAAO,QAAQ,CAAC,OAAO,CAAC,CAAC;IAC1B;EACD,CAAE,CAAC;;EAGH;EACA,IAAI,SAAS;EAEb,MAAM,CAAC,EAAE,CAAC,KAAK,GAAG,UAAU,EAAE,EAAG;IAEhC;IACA,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAE,EAAG,CAAC;IAEjC,OAAO,IAAI;EACZ,CAAC;EAED,MAAM,CAAC,MAAM,CAAE;IAEd;IACA,OAAO,EAAE,KAAK;IAEd;IACA;IACA,SAAS,EAAE,CAAC;IAEZ;IACA,SAAS,EAAE,SAAA,UAAU,IAAI,EAAG;MAC3B,IAAK,IAAI,EAAG;QACX,MAAM,CAAC,SAAS,EAAE;MACnB,CAAC,MAAM;QACN,MAAM,CAAC,KAAK,CAAE,IAAK,CAAC;MACrB;IACD,CAAC;IAED;IACA,KAAK,EAAE,SAAA,MAAU,IAAI,EAAG;MAEvB;MACA,IAAK,IAAI,KAAK,IAAI,GAAG,EAAE,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,OAAO,EAAG;QAC1D;MACD;;MAEA;MACA,MAAM,CAAC,OAAO,GAAG,IAAI;;MAErB;MACA,IAAK,IAAI,KAAK,IAAI,IAAI,EAAE,MAAM,CAAC,SAAS,GAAG,CAAC,EAAG;QAC9C;MACD;;MAEA;MACA,SAAS,CAAC,WAAW,CAAE,QAAQ,EAAE,CAAE,MAAM,CAAG,CAAC;;MAE7C;MACA,IAAK,MAAM,CAAC,EAAE,CAAC,cAAc,EAAG;QAC/B,MAAM,CAAE,QAAS,CAAC,CAAC,cAAc,CAAE,OAAQ,CAAC;QAC5C,MAAM,CAAE,QAAS,CAAC,CAAC,GAAG,CAAE,OAAQ,CAAC;MAClC;IACD;EACD,CAAE,CAAC;;EAEH;AACA;AACA;EACA,SAAS,MAAM,CAAA,EAAG;IACjB,IAAK,QAAQ,CAAC,gBAAgB,EAAG;MAChC,QAAQ,CAAC,mBAAmB,CAAE,kBAAkB,EAAE,SAAU,CAAC;MAC7D,MAAM,CAAC,mBAAmB,CAAE,MAAM,EAAE,SAAU,CAAC;IAEhD,CAAC,MAAM;MACN,QAAQ,CAAC,WAAW,CAAE,oBAAoB,EAAE,SAAU,CAAC;MACvD,MAAM,CAAC,WAAW,CAAE,QAAQ,EAAE,SAAU,CAAC;IAC1C;EACD;;EAEA;AACA;AACA;EACA,SAAS,SAAS,CAAA,EAAG;IAEpB;IACA,IAAK,QAAQ,CAAC,gBAAgB,IAC7B,MAAM,CAAC,KAAK,CAAC,IAAI,KAAK,MAAM,IAC5B,QAAQ,CAAC,UAAU,KAAK,UAAU,EAAG;MAErC,MAAM,CAAC,CAAC;MACR,MAAM,CAAC,KAAK,CAAC,CAAC;IACf;EACD;EAEA,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG,UAAU,GAAG,EAAG;IACtC,IAAK,CAAC,SAAS,EAAG;MAEjB,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;;MAE7B;MACA;MACA;MACA;MACA,IAAK,QAAQ,CAAC,UAAU,KAAK,UAAU,IACpC,QAAQ,CAAC,UAAU,KAAK,SAAS,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,QAAU,EAAG;QAE9E;QACA,MAAM,CAAC,UAAU,CAAE,MAAM,CAAC,KAAM,CAAC;;QAElC;MACA,CAAC,MAAM,IAAK,QAAQ,CAAC,gBAAgB,EAAG;QAEvC;QACA,QAAQ,CAAC,gBAAgB,CAAE,kBAAkB,EAAE,SAAU,CAAC;;QAE1D;QACA,MAAM,CAAC,gBAAgB,CAAE,MAAM,EAAE,SAAU,CAAC;;QAE7C;MACA,CAAC,MAAM;QAEN;QACA,QAAQ,CAAC,WAAW,CAAE,oBAAoB,EAAE,SAAU,CAAC;;QAEvD;QACA,MAAM,CAAC,WAAW,CAAE,QAAQ,EAAE,SAAU,CAAC;;QAEzC;QACA;QACA,IAAI,GAAG,GAAG,KAAK;QAEf,IAAI;UACH,GAAG,GAAG,MAAM,CAAC,YAAY,IAAI,IAAI,IAAI,QAAQ,CAAC,eAAe;QAC9D,CAAC,CAAC,OAAQ,CAAC,EAAG,CAAC;QAEf,IAAK,GAAG,IAAI,GAAG,CAAC,QAAQ,EAAG;UAC1B,CAAE,SAAS,aAAa,CAAA,EAAG;YAC1B,IAAK,CAAC,MAAM,CAAC,OAAO,EAAG;cAEtB,IAAI;gBAEH;gBACA;gBACA,GAAG,CAAC,QAAQ,CAAE,MAAO,CAAC;cACvB,CAAC,CAAC,OAAQ,CAAC,EAAG;gBACb,OAAO,MAAM,CAAC,UAAU,CAAE,aAAa,EAAE,EAAG,CAAC;cAC9C;;cAEA;cACA,MAAM,CAAC,CAAC;;cAER;cACA,MAAM,CAAC,KAAK,CAAC,CAAC;YACf;UACD,CAAC,EAAG,CAAC;QACN;MACD;IACD;IACA,OAAO,SAAS,CAAC,OAAO,CAAE,GAAI,CAAC;EAChC,CAAC;;EAED;EACA,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;;EAKtB;EACA;EACA,IAAI,CAAC;EACL,KAAM,CAAC,IAAI,MAAM,CAAE,OAAQ,CAAC,EAAG;IAC9B;EACD;EACA,OAAO,CAAC,QAAQ,GAAG,CAAC,KAAK,GAAG;;EAE5B;EACA;EACA,OAAO,CAAC,sBAAsB,GAAG,KAAK;;EAEtC;EACA,MAAM,CAAE,YAAW;IAElB;IACA,IAAI,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,SAAS;IAE7B,IAAI,GAAG,QAAQ,CAAC,oBAAoB,CAAE,MAAO,CAAC,CAAE,CAAC,CAAE;IACnD,IAAK,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAG;MAE3B;MACA;IACD;;IAEA;IACA,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAE,KAAM,CAAC;IACrC,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAE,KAAM,CAAC;IAC3C,SAAS,CAAC,KAAK,CAAC,OAAO,GAAG,gEAAgE;IAC1F,IAAI,CAAC,WAAW,CAAE,SAAU,CAAC,CAAC,WAAW,CAAE,GAAI,CAAC;IAEhD,IAAK,OAAO,GAAG,CAAC,KAAK,CAAC,IAAI,KAAK,WAAW,EAAG;MAE5C;MACA;MACA;MACA;MACA,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,+DAA+D;MAEnF,OAAO,CAAC,sBAAsB,GAAG,GAAG,GAAG,GAAG,CAAC,WAAW,KAAK,CAAC;MAC5D,IAAK,GAAG,EAAG;QAEV;QACA;QACA;QACA,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC;MACpB;IACD;IAEA,IAAI,CAAC,WAAW,CAAE,SAAU,CAAC;EAC9B,CAAE,CAAC;EAGH,CAAE,YAAW;IACZ,IAAI,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAE,KAAM,CAAC;;IAEzC;IACA,OAAO,CAAC,aAAa,GAAG,IAAI;IAC5B,IAAI;MACH,OAAO,GAAG,CAAC,IAAI;IAChB,CAAC,CAAC,OAAQ,CAAC,EAAG;MACb,OAAO,CAAC,aAAa,GAAG,KAAK;IAC9B;;IAEA;IACA,GAAG,GAAG,IAAI;EACX,CAAC,EAAG,CAAC;EACL,IAAI,UAAU,GAAG,SAAb,UAAU,CAAa,IAAI,EAAG;IACjC,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAE,CAAE,IAAI,CAAC,QAAQ,GAAG,GAAG,EAAG,WAAW,CAAC,CAAC,CAAE;MAClE,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC;;IAE/B;IACA,OAAO,QAAQ,KAAK,CAAC,IAAI,QAAQ,KAAK,CAAC,GACtC,KAAK;IAEL;IACA,CAAC,MAAM,IAAI,MAAM,KAAK,IAAI,IAAI,IAAI,CAAC,YAAY,CAAE,SAAU,CAAC,KAAK,MAAM;EACzE,CAAC;EAKD,IAAI,MAAM,GAAG,+BAA+B;IAC3C,UAAU,GAAG,UAAU;EAExB,SAAS,QAAQ,CAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAG;IAEpC;IACA;IACA,IAAK,IAAI,KAAK,SAAS,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAG;MAEhD,IAAI,IAAI,GAAG,OAAO,GAAG,GAAG,CAAC,OAAO,CAAE,UAAU,EAAE,KAAM,CAAC,CAAC,WAAW,CAAC,CAAC;MAEnE,IAAI,GAAG,IAAI,CAAC,YAAY,CAAE,IAAK,CAAC;MAEhC,IAAK,OAAO,IAAI,KAAK,QAAQ,EAAG;QAC/B,IAAI;UACH,IAAI,GAAG,IAAI,KAAK,MAAM,GAAG,IAAI,GAC5B,IAAI,KAAK,OAAO,GAAG,KAAK,GACxB,IAAI,KAAK,MAAM,GAAG,IAAI;UAEtB;UACA,CAAC,IAAI,GAAG,EAAE,KAAK,IAAI,GAAG,CAAC,IAAI,GAC3B,MAAM,CAAC,IAAI,CAAE,IAAK,CAAC,GAAG,MAAM,CAAC,SAAS,CAAE,IAAK,CAAC,GAC9C,IAAI;QACN,CAAC,CAAC,OAAQ,CAAC,EAAG,CAAC;;QAEf;QACA,MAAM,CAAC,IAAI,CAAE,IAAI,EAAE,GAAG,EAAE,IAAK,CAAC;MAE/B,CAAC,MAAM;QACN,IAAI,GAAG,SAAS;MACjB;IACD;IAEA,OAAO,IAAI;EACZ;;EAEA;EACA,SAAS,iBAAiB,CAAE,GAAG,EAAG;IACjC,IAAI,IAAI;IACR,KAAM,IAAI,IAAI,GAAG,EAAG;MAEnB;MACA,IAAK,IAAI,KAAK,MAAM,IAAI,MAAM,CAAC,aAAa,CAAE,GAAG,CAAE,IAAI,CAAG,CAAC,EAAG;QAC7D;MACD;MACA,IAAK,IAAI,KAAK,QAAQ,EAAG;QACxB,OAAO,KAAK;MACb;IACD;IAEA,OAAO,IAAI;EACZ;EAEA,SAAS,YAAY,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,yBAA0B;IACtE,IAAK,CAAC,UAAU,CAAE,IAAK,CAAC,EAAG;MAC1B;IACD;IAEA,IAAI,GAAG;MAAE,SAAS;MACjB,WAAW,GAAG,MAAM,CAAC,OAAO;MAE5B;MACA;MACA,MAAM,GAAG,IAAI,CAAC,QAAQ;MAEtB;MACA;MACA,KAAK,GAAG,MAAM,GAAG,MAAM,CAAC,KAAK,GAAG,IAAI;MAEpC;MACA;MACA,EAAE,GAAG,MAAM,GAAG,IAAI,CAAE,WAAW,CAAE,GAAG,IAAI,CAAE,WAAW,CAAE,IAAI,WAAW;;IAEvE;IACA;IACA,IAAK,CAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAE,EAAE,CAAE,IAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAE,EAAE,CAAE,CAAC,IAAM,KAC1D,IAAI,KAAK,SAAS,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAG;MACjD;IACD;IAEA,IAAK,CAAC,EAAE,EAAG;MAEV;MACA;MACA,IAAK,MAAM,EAAG;QACb,EAAE,GAAG,IAAI,CAAE,WAAW,CAAE,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC,IAAI,EAAE;MAC7D,CAAC,MAAM;QACN,EAAE,GAAG,WAAW;MACjB;IACD;IAEA,IAAK,CAAC,KAAK,CAAE,EAAE,CAAE,EAAG;MAEnB;MACA;MACA,KAAK,CAAE,EAAE,CAAE,GAAG,MAAM,GAAG,CAAC,CAAC,GAAG;QAAE,MAAM,EAAE,MAAM,CAAC;MAAK,CAAC;IACpD;;IAEA;IACA;IACA,IAAK,OAAA,CAAO,IAAI,MAAK,QAAQ,IAAI,OAAO,IAAI,KAAK,UAAU,EAAG;MAC7D,IAAK,GAAG,EAAG;QACV,KAAK,CAAE,EAAE,CAAE,GAAG,MAAM,CAAC,MAAM,CAAE,KAAK,CAAE,EAAE,CAAE,EAAE,IAAK,CAAC;MACjD,CAAC,MAAM;QACN,KAAK,CAAE,EAAE,CAAE,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAE,KAAK,CAAE,EAAE,CAAE,CAAC,IAAI,EAAE,IAAK,CAAC;MAC3D;IACD;IAEA,SAAS,GAAG,KAAK,CAAE,EAAE,CAAE;;IAEvB;IACA;IACA;IACA,IAAK,CAAC,GAAG,EAAG;MACX,IAAK,CAAC,SAAS,CAAC,IAAI,EAAG;QACtB,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC;MACpB;MAEA,SAAS,GAAG,SAAS,CAAC,IAAI;IAC3B;IAEA,IAAK,IAAI,KAAK,SAAS,EAAG;MACzB,SAAS,CAAE,MAAM,CAAC,SAAS,CAAE,IAAK,CAAC,CAAE,GAAG,IAAI;IAC7C;;IAEA;IACA;IACA,IAAK,OAAO,IAAI,KAAK,QAAQ,EAAG;MAE/B;MACA,GAAG,GAAG,SAAS,CAAE,IAAI,CAAE;;MAEvB;MACA,IAAK,GAAG,IAAI,IAAI,EAAG;QAElB;QACA,GAAG,GAAG,SAAS,CAAE,MAAM,CAAC,SAAS,CAAE,IAAK,CAAC,CAAE;MAC5C;IACD,CAAC,MAAM;MACN,GAAG,GAAG,SAAS;IAChB;IAEA,OAAO,GAAG;EACX;EAEA,SAAS,kBAAkB,CAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAG;IAC9C,IAAK,CAAC,UAAU,CAAE,IAAK,CAAC,EAAG;MAC1B;IACD;IAEA,IAAI,SAAS;MAAE,CAAC;MACf,MAAM,GAAG,IAAI,CAAC,QAAQ;MAEtB;MACA,KAAK,GAAG,MAAM,GAAG,MAAM,CAAC,KAAK,GAAG,IAAI;MACpC,EAAE,GAAG,MAAM,GAAG,IAAI,CAAE,MAAM,CAAC,OAAO,CAAE,GAAG,MAAM,CAAC,OAAO;;IAEtD;IACA;IACA,IAAK,CAAC,KAAK,CAAE,EAAE,CAAE,EAAG;MACnB;IACD;IAEA,IAAK,IAAI,EAAG;MAEX,SAAS,GAAG,GAAG,GAAG,KAAK,CAAE,EAAE,CAAE,GAAG,KAAK,CAAE,EAAE,CAAE,CAAC,IAAI;MAEhD,IAAK,SAAS,EAAG;QAEhB;QACA,IAAK,CAAC,MAAM,CAAC,OAAO,CAAE,IAAK,CAAC,EAAG;UAE9B;UACA,IAAK,IAAI,IAAI,SAAS,EAAG;YACxB,IAAI,GAAG,CAAE,IAAI,CAAE;UAChB,CAAC,MAAM;YAEN;YACA,IAAI,GAAG,MAAM,CAAC,SAAS,CAAE,IAAK,CAAC;YAC/B,IAAK,IAAI,IAAI,SAAS,EAAG;cACxB,IAAI,GAAG,CAAE,IAAI,CAAE;YAChB,CAAC,MAAM;cACN,IAAI,GAAG,IAAI,CAAC,KAAK,CAAE,GAAI,CAAC;YACzB;UACD;QACD,CAAC,MAAM;UAEN;UACA;UACA;UACA;UACA;UACA;UACA,IAAI,GAAG,IAAI,CAAC,MAAM,CAAE,MAAM,CAAC,GAAG,CAAE,IAAI,EAAE,MAAM,CAAC,SAAU,CAAE,CAAC;QAC3D;QAEA,CAAC,GAAG,IAAI,CAAC,MAAM;QACf,OAAQ,CAAC,EAAE,EAAG;UACb,OAAO,SAAS,CAAE,IAAI,CAAE,CAAC,CAAE,CAAE;QAC9B;;QAEA;QACA;QACA,IAAK,GAAG,GAAG,CAAC,iBAAiB,CAAE,SAAU,CAAC,GAAG,CAAC,MAAM,CAAC,aAAa,CAAE,SAAU,CAAC,EAAG;UACjF;QACD;MACD;IACD;;IAEA;IACA,IAAK,CAAC,GAAG,EAAG;MACX,OAAO,KAAK,CAAE,EAAE,CAAE,CAAC,IAAI;;MAEvB;MACA;MACA,IAAK,CAAC,iBAAiB,CAAE,KAAK,CAAE,EAAE,CAAG,CAAC,EAAG;QACxC;MACD;IACD;;IAEA;IACA,IAAK,MAAM,EAAG;MACb,MAAM,CAAC,SAAS,CAAE,CAAE,IAAI,CAAE,EAAE,IAAK,CAAC;;MAEnC;MACA;IACA,CAAC,MAAM,IAAK,OAAO,CAAC,aAAa,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,EAAG;MAC5D;MACA,OAAO,KAAK,CAAE,EAAE,CAAE;;MAEnB;IACA,CAAC,MAAM;MACN,KAAK,CAAE,EAAE,CAAE,GAAG,SAAS;IACxB;EACD;EAEA,MAAM,CAAC,MAAM,CAAE;IACd,KAAK,EAAE,CAAC,CAAC;IAET;IACA;IACA,MAAM,EAAE;MACP,SAAS,EAAE,IAAI;MACf,QAAQ,EAAE,IAAI;MAEd;MACA,SAAS,EAAE;IACZ,CAAC;IAED,OAAO,EAAE,SAAA,QAAU,IAAI,EAAG;MACzB,IAAI,GAAG,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAE,IAAI,CAAE,MAAM,CAAC,OAAO,CAAE,CAAE,GAAG,IAAI,CAAE,MAAM,CAAC,OAAO,CAAE;MACtF,OAAO,CAAC,CAAC,IAAI,IAAI,CAAC,iBAAiB,CAAE,IAAK,CAAC;IAC5C,CAAC;IAED,IAAI,EAAE,SAAA,KAAU,IAAI,EAAE,IAAI,EAAE,KAAI,EAAG;MAClC,OAAO,YAAY,CAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC;IACxC,CAAC;IAED,UAAU,EAAE,SAAA,WAAU,IAAI,EAAE,IAAI,EAAG;MAClC,OAAO,kBAAkB,CAAE,IAAI,EAAE,IAAK,CAAC;IACxC,CAAC;IAED;IACA,KAAK,EAAE,SAAA,MAAU,IAAI,EAAE,IAAI,EAAE,IAAI,EAAG;MACnC,OAAO,YAAY,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAK,CAAC;IAC9C,CAAC;IAED,WAAW,EAAE,SAAA,YAAU,IAAI,EAAE,IAAI,EAAG;MACnC,OAAO,kBAAkB,CAAE,IAAI,EAAE,IAAI,EAAE,IAAK,CAAC;IAC9C;EACD,CAAE,CAAC;EAEH,MAAM,CAAC,EAAE,CAAC,MAAM,CAAE;IACjB,IAAI,EAAE,SAAA,KAAU,GAAG,EAAE,KAAK,EAAG;MAC5B,IAAI,CAAC;QAAE,IAAI;QAAE,IAAI;QAChB,IAAI,GAAG,IAAI,CAAE,CAAC,CAAE;QAChB,KAAK,GAAG,IAAI,IAAI,IAAI,CAAC,UAAU;;MAEhC;MACA;;MAEA;MACA,IAAK,GAAG,KAAK,SAAS,EAAG;QACxB,IAAK,IAAI,CAAC,MAAM,EAAG;UAClB,IAAI,GAAG,MAAM,CAAC,IAAI,CAAE,IAAK,CAAC;UAE1B,IAAK,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,aAAc,CAAC,EAAG;YAClE,CAAC,GAAG,KAAK,CAAC,MAAM;YAChB,OAAQ,CAAC,EAAE,EAAG;cAEb;cACA;cACA,IAAK,KAAK,CAAE,CAAC,CAAE,EAAG;gBACjB,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC,IAAI;gBACtB,IAAK,IAAI,CAAC,OAAO,CAAE,OAAQ,CAAC,KAAK,CAAC,EAAG;kBACpC,IAAI,GAAG,MAAM,CAAC,SAAS,CAAE,IAAI,CAAC,KAAK,CAAE,CAAE,CAAE,CAAC;kBAC1C,QAAQ,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE,IAAI,CAAG,CAAC;gBACrC;cACD;YACD;YACA,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,aAAa,EAAE,IAAK,CAAC;UAC1C;QACD;QAEA,OAAO,IAAI;MACZ;;MAEA;MACA,IAAK,OAAA,CAAO,GAAG,MAAK,QAAQ,EAAG;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAE,YAAW;UAC5B,MAAM,CAAC,IAAI,CAAE,IAAI,EAAE,GAAI,CAAC;QACzB,CAAE,CAAC;MACJ;MAEA,OAAO,SAAS,CAAC,MAAM,GAAG,CAAC;MAE1B;MACA,IAAI,CAAC,IAAI,CAAE,YAAW;QACrB,MAAM,CAAC,IAAI,CAAE,IAAI,EAAE,GAAG,EAAE,KAAM,CAAC;MAChC,CAAE,CAAC;MAEH;MACA;MACA,IAAI,GAAG,QAAQ,CAAE,IAAI,EAAE,GAAG,EAAE,MAAM,CAAC,IAAI,CAAE,IAAI,EAAE,GAAI,CAAE,CAAC,GAAG,SAAS;IACpE,CAAC;IAED,UAAU,EAAE,SAAA,WAAU,GAAG,EAAG;MAC3B,OAAO,IAAI,CAAC,IAAI,CAAE,YAAW;QAC5B,MAAM,CAAC,UAAU,CAAE,IAAI,EAAE,GAAI,CAAC;MAC/B,CAAE,CAAC;IACJ;EACD,CAAE,CAAC;EAGH,MAAM,CAAC,MAAM,CAAE;IACd,KAAK,EAAE,SAAA,MAAU,IAAI,EAAE,IAAI,EAAE,IAAI,EAAG;MACnC,IAAI,KAAK;MAET,IAAK,IAAI,EAAG;QACX,IAAI,GAAG,CAAE,IAAI,IAAI,IAAI,IAAK,OAAO;QACjC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,IAAK,CAAC;;QAElC;QACA,IAAK,IAAI,EAAG;UACX,IAAK,CAAC,KAAK,IAAI,MAAM,CAAC,OAAO,CAAE,IAAK,CAAC,EAAG;YACvC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,SAAS,CAAE,IAAK,CAAE,CAAC;UAC7D,CAAC,MAAM;YACN,KAAK,CAAC,IAAI,CAAE,IAAK,CAAC;UACnB;QACD;QACA,OAAO,KAAK,IAAI,EAAE;MACnB;IACD,CAAC;IAED,OAAO,EAAE,SAAA,QAAU,IAAI,EAAE,IAAI,EAAG;MAC/B,IAAI,GAAG,IAAI,IAAI,IAAI;MAEnB,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,IAAK,CAAC;QACrC,WAAW,GAAG,KAAK,CAAC,MAAM;QAC1B,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;QAClB,KAAK,GAAG,MAAM,CAAC,WAAW,CAAE,IAAI,EAAE,IAAK,CAAC;QACxC,IAAI,GAAG,SAAP,IAAI,CAAA,EAAc;UACjB,MAAM,CAAC,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;QAC7B,CAAC;;MAEF;MACA,IAAK,EAAE,KAAK,YAAY,EAAG;QAC1B,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;QAClB,WAAW,EAAE;MACd;MAEA,IAAK,EAAE,EAAG;QAET;QACA;QACA,IAAK,IAAI,KAAK,IAAI,EAAG;UACpB,KAAK,CAAC,OAAO,CAAE,YAAa,CAAC;QAC9B;;QAEA;QACA,OAAO,KAAK,CAAC,IAAI;QACjB,EAAE,CAAC,IAAI,CAAE,IAAI,EAAE,IAAI,EAAE,KAAM,CAAC;MAC7B;MAEA,IAAK,CAAC,WAAW,IAAI,KAAK,EAAG;QAC5B,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;MACnB;IACD,CAAC;IAED;IACA;IACA,WAAW,EAAE,SAAA,YAAU,IAAI,EAAE,IAAI,EAAG;MACnC,IAAI,GAAG,GAAG,IAAI,GAAG,YAAY;MAC7B,OAAO,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,GAAI,CAAC,IAAI,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,GAAG,EAAE;QAC5D,KAAK,EAAE,MAAM,CAAC,SAAS,CAAE,aAAc,CAAC,CAAC,GAAG,CAAE,YAAW;UACxD,MAAM,CAAC,WAAW,CAAE,IAAI,EAAE,IAAI,GAAG,OAAQ,CAAC;UAC1C,MAAM,CAAC,WAAW,CAAE,IAAI,EAAE,GAAI,CAAC;QAChC,CAAE;MACH,CAAE,CAAC;IACJ;EACD,CAAE,CAAC;EAEH,MAAM,CAAC,EAAE,CAAC,MAAM,CAAE;IACjB,KAAK,EAAE,SAAA,MAAU,IAAI,EAAE,IAAI,EAAG;MAC7B,IAAI,MAAM,GAAG,CAAC;MAEd,IAAK,OAAO,IAAI,KAAK,QAAQ,EAAG;QAC/B,IAAI,GAAG,IAAI;QACX,IAAI,GAAG,IAAI;QACX,MAAM,EAAE;MACT;MAEA,IAAK,SAAS,CAAC,MAAM,GAAG,MAAM,EAAG;QAChC,OAAO,MAAM,CAAC,KAAK,CAAE,IAAI,CAAE,CAAC,CAAE,EAAE,IAAK,CAAC;MACvC;MAEA,OAAO,IAAI,KAAK,SAAS,GACxB,IAAI,GACJ,IAAI,CAAC,IAAI,CAAE,YAAW;QACrB,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,IAAI,EAAE,IAAK,CAAC;;QAE5C;QACA,MAAM,CAAC,WAAW,CAAE,IAAI,EAAE,IAAK,CAAC;QAEhC,IAAK,IAAI,KAAK,IAAI,IAAI,KAAK,CAAE,CAAC,CAAE,KAAK,YAAY,EAAG;UACnD,MAAM,CAAC,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;QAC7B;MACD,CAAE,CAAC;IACL,CAAC;IACD,OAAO,EAAE,SAAA,QAAU,IAAI,EAAG;MACzB,OAAO,IAAI,CAAC,IAAI,CAAE,YAAW;QAC5B,MAAM,CAAC,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;MAC7B,CAAE,CAAC;IACJ,CAAC;IACD,UAAU,EAAE,SAAA,WAAU,IAAI,EAAG;MAC5B,OAAO,IAAI,CAAC,KAAK,CAAE,IAAI,IAAI,IAAI,EAAE,EAAG,CAAC;IACtC,CAAC;IAED;IACA;IACA,OAAO,EAAE,SAAA,QAAU,IAAI,EAAE,GAAG,EAAG;MAC9B,IAAI,GAAG;QACN,KAAK,GAAG,CAAC;QACT,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;QACzB,QAAQ,GAAG,IAAI;QACf,CAAC,GAAG,IAAI,CAAC,MAAM;QACf,OAAO,GAAG,SAAV,OAAO,CAAA,EAAc;UACpB,IAAK,CAAG,GAAE,KAAO,EAAG;YACnB,KAAK,CAAC,WAAW,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAG,CAAC;UAC5C;QACD,CAAC;MAEF,IAAK,OAAO,IAAI,KAAK,QAAQ,EAAG;QAC/B,GAAG,GAAG,IAAI;QACV,IAAI,GAAG,SAAS;MACjB;MACA,IAAI,GAAG,IAAI,IAAI,IAAI;MAEnB,OAAQ,CAAC,EAAE,EAAG;QACb,GAAG,GAAG,MAAM,CAAC,KAAK,CAAE,QAAQ,CAAE,CAAC,CAAE,EAAE,IAAI,GAAG,YAAa,CAAC;QACxD,IAAK,GAAG,IAAI,GAAG,CAAC,KAAK,EAAG;UACvB,KAAK,EAAE;UACP,GAAG,CAAC,KAAK,CAAC,GAAG,CAAE,OAAQ,CAAC;QACzB;MACD;MACA,OAAO,CAAC,CAAC;MACT,OAAO,KAAK,CAAC,OAAO,CAAE,GAAI,CAAC;IAC5B;EACD,CAAE,CAAC;EAGH,CAAE,YAAW;IACZ,IAAI,mBAAmB;IAEvB,OAAO,CAAC,gBAAgB,GAAG,YAAW;MACrC,IAAK,mBAAmB,IAAI,IAAI,EAAG;QAClC,OAAO,mBAAmB;MAC3B;;MAEA;MACA,mBAAmB,GAAG,KAAK;;MAE3B;MACA,IAAI,GAAG,EAAE,IAAI,EAAE,SAAS;MAExB,IAAI,GAAG,QAAQ,CAAC,oBAAoB,CAAE,MAAO,CAAC,CAAE,CAAC,CAAE;MACnD,IAAK,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAG;QAE3B;QACA;MACD;;MAEA;MACA,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAE,KAAM,CAAC;MACrC,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAE,KAAM,CAAC;MAC3C,SAAS,CAAC,KAAK,CAAC,OAAO,GAAG,gEAAgE;MAC1F,IAAI,CAAC,WAAW,CAAE,SAAU,CAAC,CAAC,WAAW,CAAE,GAAI,CAAC;;MAEhD;MACA;MACA,IAAK,OAAO,GAAG,CAAC,KAAK,CAAC,IAAI,KAAK,WAAW,EAAG;QAE5C;QACA,GAAG,CAAC,KAAK,CAAC,OAAO;QAEhB;QACA;QACA,6DAA6D,GAC7D,yDAAyD,GACzD,8BAA8B;QAC/B,GAAG,CAAC,WAAW,CAAE,QAAQ,CAAC,aAAa,CAAE,KAAM,CAAE,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK;QACtE,mBAAmB,GAAG,GAAG,CAAC,WAAW,KAAK,CAAC;MAC5C;MAEA,IAAI,CAAC,WAAW,CAAE,SAAU,CAAC;MAE7B,OAAO,mBAAmB;IAC3B,CAAC;EAEF,CAAC,EAAG,CAAC;EACL,IAAI,IAAI,GAAK,qCAAqC,CAAG,MAAM;EAE3D,IAAI,OAAO,GAAG,IAAI,MAAM,CAAE,gBAAgB,GAAG,IAAI,GAAG,aAAa,EAAE,GAAI,CAAC;EAGxE,IAAI,SAAS,GAAG,CAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAE;EAEpD,IAAI,QAAQ,GAAG,SAAX,QAAQ,CAAa,IAAI,EAAE,EAAE,EAAG;IAElC;IACA;IACA,IAAI,GAAG,EAAE,IAAI,IAAI;IACjB,OAAO,MAAM,CAAC,GAAG,CAAE,IAAI,EAAE,SAAU,CAAC,KAAK,MAAM,IAC9C,CAAC,MAAM,CAAC,QAAQ,CAAE,IAAI,CAAC,aAAa,EAAE,IAAK,CAAC;EAC9C,CAAC;EAIF,SAAS,SAAS,CAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAG;IACnD,IAAI,QAAQ;MACX,KAAK,GAAG,CAAC;MACT,aAAa,GAAG,EAAE;MAClB,YAAY,GAAG,KAAK,GACnB,YAAW;QAAE,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC;MAAE,CAAC,GAClC,YAAW;QAAE,OAAO,MAAM,CAAC,GAAG,CAAE,IAAI,EAAE,IAAI,EAAE,EAAG,CAAC;MAAE,CAAC;MACpD,OAAO,GAAG,YAAY,CAAC,CAAC;MACxB,IAAI,GAAG,UAAU,IAAI,UAAU,CAAE,CAAC,CAAE,KAAM,MAAM,CAAC,SAAS,CAAE,IAAI,CAAE,GAAG,EAAE,GAAG,IAAI,CAAE;MAEhF;MACA,aAAa,GAAG,CAAE,MAAM,CAAC,SAAS,CAAE,IAAI,CAAE,IAAI,IAAI,KAAK,IAAI,IAAI,CAAC,OAAO,KACtE,OAAO,CAAC,IAAI,CAAE,MAAM,CAAC,GAAG,CAAE,IAAI,EAAE,IAAK,CAAE,CAAC;IAE1C,IAAK,aAAa,IAAI,aAAa,CAAE,CAAC,CAAE,KAAK,IAAI,EAAG;MAEnD;MACA,IAAI,GAAG,IAAI,IAAI,aAAa,CAAE,CAAC,CAAE;;MAEjC;MACA,UAAU,GAAG,UAAU,IAAI,EAAE;;MAE7B;MACA,aAAa,GAAG,CAAC,OAAO,IAAI,CAAC;MAE7B,GAAG;QAEF;QACA;QACA,KAAK,GAAG,KAAK,IAAI,IAAI;;QAErB;QACA,aAAa,GAAG,aAAa,GAAG,KAAK;QACrC,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,IAAI,EAAE,aAAa,GAAG,IAAK,CAAC;;QAEjD;QACA;MACA,CAAC,QACA,KAAK,MAAO,KAAK,GAAG,YAAY,CAAC,CAAC,GAAG,OAAO,CAAE,IAAI,KAAK,KAAK,CAAC,IAAI,EAAE,aAAa;IAElF;IAEA,IAAK,UAAU,EAAG;MACjB,aAAa,GAAG,CAAC,aAAa,IAAI,CAAC,OAAO,IAAI,CAAC;;MAE/C;MACA,QAAQ,GAAG,UAAU,CAAE,CAAC,CAAE,GACzB,aAAa,GAAG,CAAE,UAAU,CAAE,CAAC,CAAE,GAAG,CAAC,IAAK,UAAU,CAAE,CAAC,CAAE,GACzD,CAAC,UAAU,CAAE,CAAC,CAAE;MACjB,IAAK,KAAK,EAAG;QACZ,KAAK,CAAC,IAAI,GAAG,IAAI;QACjB,KAAK,CAAC,KAAK,GAAG,aAAa;QAC3B,KAAK,CAAC,GAAG,GAAG,QAAQ;MACrB;IACD;IACA,OAAO,QAAQ;EAChB;;EAGA;EACA;EACA,IAAI,MAAM,GAAG,SAAT,MAAM,CAAa,KAAK,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,EAAG;IACxE,IAAI,CAAC,GAAG,CAAC;MACR,MAAM,GAAG,KAAK,CAAC,MAAM;MACrB,IAAI,GAAG,GAAG,IAAI,IAAI;;IAEnB;IACA,IAAK,MAAM,CAAC,IAAI,CAAE,GAAI,CAAC,KAAK,QAAQ,EAAG;MACtC,SAAS,GAAG,IAAI;MAChB,KAAM,CAAC,IAAI,GAAG,EAAG;QAChB,MAAM,CAAE,KAAK,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,CAAE,CAAC,CAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAI,CAAC;MACtD;;MAED;IACA,CAAC,MAAM,IAAK,KAAK,KAAK,SAAS,EAAG;MACjC,SAAS,GAAG,IAAI;MAEhB,IAAK,CAAC,MAAM,CAAC,UAAU,CAAE,KAAM,CAAC,EAAG;QAClC,GAAG,GAAG,IAAI;MACX;MAEA,IAAK,IAAI,EAAG;QAEX;QACA,IAAK,GAAG,EAAG;UACV,EAAE,CAAC,IAAI,CAAE,KAAK,EAAE,KAAM,CAAC;UACvB,EAAE,GAAG,IAAI;;UAEV;QACA,CAAC,MAAM;UACN,IAAI,GAAG,EAAE;UACT,EAAE,GAAG,SAAA,GAAU,IAAI,EAAE,GAAG,EAAE,KAAK,EAAG;YACjC,OAAO,IAAI,CAAC,IAAI,CAAE,MAAM,CAAE,IAAK,CAAC,EAAE,KAAM,CAAC;UAC1C,CAAC;QACF;MACD;MAEA,IAAK,EAAE,EAAG;QACT,OAAQ,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAG;UACzB,EAAE,CACD,KAAK,CAAE,CAAC,CAAE,EACV,GAAG,EACH,GAAG,GAAG,KAAK,GAAG,KAAK,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC,CAAE,EAAE,CAAC,EAAE,EAAE,CAAE,KAAK,CAAE,CAAC,CAAE,EAAE,GAAI,CAAE,CAChE,CAAC;QACF;MACD;IACD;IAEA,OAAO,SAAS,GACf,KAAK;IAEL;IACA,IAAI,GACH,EAAE,CAAC,IAAI,CAAE,KAAM,CAAC,GAChB,MAAM,GAAG,EAAE,CAAE,KAAK,CAAE,CAAC,CAAE,EAAE,GAAI,CAAC,GAAG,QAAQ;EAC5C,CAAC;EACD,IAAI,cAAc,GAAK,uBAAyB;EAEhD,IAAI,QAAQ,GAAK,YAAc;EAE/B,IAAI,WAAW,GAAK,2BAA6B;EAEjD,IAAI,kBAAkB,GAAK,MAAQ;EAEnC,IAAI,SAAS,GAAG,oDAAoD,GAClE,6DAA6D,GAC7D,4EAA4E;EAI9E,SAAS,kBAAkB,CAAE,QAAQ,EAAG;IACvC,IAAI,IAAI,GAAG,SAAS,CAAC,KAAK,CAAE,GAAI,CAAC;MAChC,QAAQ,GAAG,QAAQ,CAAC,sBAAsB,CAAC,CAAC;IAE7C,IAAK,QAAQ,CAAC,aAAa,EAAG;MAC7B,OAAQ,IAAI,CAAC,MAAM,EAAG;QACrB,QAAQ,CAAC,aAAa,CACrB,IAAI,CAAC,GAAG,CAAC,CACV,CAAC;MACF;IACD;IACA,OAAO,QAAQ;EAChB;EAGA,CAAE,YAAW;IACZ,IAAI,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAE,KAAM,CAAC;MACxC,QAAQ,GAAG,QAAQ,CAAC,sBAAsB,CAAC,CAAC;MAC5C,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAE,OAAQ,CAAC;;IAE1C;IACA,GAAG,CAAC,SAAS,GAAG,oEAAoE;;IAEpF;IACA,OAAO,CAAC,iBAAiB,GAAG,GAAG,CAAC,UAAU,CAAC,QAAQ,KAAK,CAAC;;IAEzD;IACA;IACA,OAAO,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,oBAAoB,CAAE,OAAQ,CAAC,CAAC,MAAM;;IAE3D;IACA;IACA,OAAO,CAAC,aAAa,GAAG,CAAC,CAAC,GAAG,CAAC,oBAAoB,CAAE,MAAO,CAAC,CAAC,MAAM;;IAEnE;IACA;IACA,OAAO,CAAC,UAAU,GACjB,QAAQ,CAAC,aAAa,CAAE,KAAM,CAAC,CAAC,SAAS,CAAE,IAAK,CAAC,CAAC,SAAS,KAAK,eAAe;;IAEhF;IACA;IACA,KAAK,CAAC,IAAI,GAAG,UAAU;IACvB,KAAK,CAAC,OAAO,GAAG,IAAI;IACpB,QAAQ,CAAC,WAAW,CAAE,KAAM,CAAC;IAC7B,OAAO,CAAC,aAAa,GAAG,KAAK,CAAC,OAAO;;IAErC;IACA;IACA,GAAG,CAAC,SAAS,GAAG,wBAAwB;IACxC,OAAO,CAAC,cAAc,GAAG,CAAC,CAAC,GAAG,CAAC,SAAS,CAAE,IAAK,CAAC,CAAC,SAAS,CAAC,YAAY;;IAEvE;IACA,QAAQ,CAAC,WAAW,CAAE,GAAI,CAAC;;IAE3B;IACA;IACA,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAE,OAAQ,CAAC;IACzC,KAAK,CAAC,YAAY,CAAE,MAAM,EAAE,OAAQ,CAAC;IACrC,KAAK,CAAC,YAAY,CAAE,SAAS,EAAE,SAAU,CAAC;IAC1C,KAAK,CAAC,YAAY,CAAE,MAAM,EAAE,GAAI,CAAC;IAEjC,GAAG,CAAC,WAAW,CAAE,KAAM,CAAC;;IAExB;IACA;IACA,OAAO,CAAC,UAAU,GAAG,GAAG,CAAC,SAAS,CAAE,IAAK,CAAC,CAAC,SAAS,CAAE,IAAK,CAAC,CAAC,SAAS,CAAC,OAAO;;IAE9E;IACA;IACA,OAAO,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,gBAAgB;;IAE7C;IACA;IACA;IACA,GAAG,CAAE,MAAM,CAAC,OAAO,CAAE,GAAG,CAAC;IACzB,OAAO,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,YAAY,CAAE,MAAM,CAAC,OAAQ,CAAC;EACzD,CAAC,EAAG,CAAC;;EAGL;EACA,IAAI,OAAO,GAAG;IACb,MAAM,EAAE,CAAE,CAAC,EAAE,8BAA8B,EAAE,WAAW,CAAE;IAC1D,MAAM,EAAE,CAAE,CAAC,EAAE,YAAY,EAAE,aAAa,CAAE;IAC1C,IAAI,EAAE,CAAE,CAAC,EAAE,OAAO,EAAE,QAAQ,CAAE;IAE9B;IACA,KAAK,EAAE,CAAE,CAAC,EAAE,UAAU,EAAE,WAAW,CAAE;IACrC,KAAK,EAAE,CAAE,CAAC,EAAE,SAAS,EAAE,UAAU,CAAE;IACnC,EAAE,EAAE,CAAE,CAAC,EAAE,gBAAgB,EAAE,kBAAkB,CAAE;IAC/C,GAAG,EAAE,CAAE,CAAC,EAAE,kCAAkC,EAAE,qBAAqB,CAAE;IACrE,EAAE,EAAE,CAAE,CAAC,EAAE,oBAAoB,EAAE,uBAAuB,CAAE;IAExD;IACA;IACA,QAAQ,EAAE,OAAO,CAAC,aAAa,GAAG,CAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAE,GAAG,CAAE,CAAC,EAAE,QAAQ,EAAE,QAAQ;EAC1E,CAAC;;EAED;EACA,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,MAAM;EAEjC,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC,KAAK;EAClF,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE;EAGvB,SAAS,MAAM,CAAE,OAAO,EAAE,GAAG,EAAG;IAC/B,IAAI,KAAK;MAAE,IAAI;MACd,CAAC,GAAG,CAAC;MACL,KAAK,GAAG,OAAO,OAAO,CAAC,oBAAoB,KAAK,WAAW,GAC1D,OAAO,CAAC,oBAAoB,CAAE,GAAG,IAAI,GAAI,CAAC,GAC1C,OAAO,OAAO,CAAC,gBAAgB,KAAK,WAAW,GAC9C,OAAO,CAAC,gBAAgB,CAAE,GAAG,IAAI,GAAI,CAAC,GACtC,SAAS;IAEZ,IAAK,CAAC,KAAK,EAAG;MACb,KAAM,KAAK,GAAG,EAAE,EAAE,KAAK,GAAG,OAAO,CAAC,UAAU,IAAI,OAAO,EACtD,CAAE,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE,KAAM,IAAI,EAC7B,CAAC,EAAE,EACF;QACD,IAAK,CAAC,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAE,IAAI,EAAE,GAAI,CAAC,EAAG;UAC3C,KAAK,CAAC,IAAI,CAAE,IAAK,CAAC;QACnB,CAAC,MAAM;UACN,MAAM,CAAC,KAAK,CAAE,KAAK,EAAE,MAAM,CAAE,IAAI,EAAE,GAAI,CAAE,CAAC;QAC3C;MACD;IACD;IAEA,OAAO,GAAG,KAAK,SAAS,IAAI,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAE,OAAO,EAAE,GAAI,CAAC,GACjE,MAAM,CAAC,KAAK,CAAE,CAAE,OAAO,CAAE,EAAE,KAAM,CAAC,GAClC,KAAK;EACP;;EAGA;EACA,SAAS,aAAa,CAAE,KAAK,EAAE,WAAW,EAAG;IAC5C,IAAI,IAAI;MACP,CAAC,GAAG,CAAC;IACN,OAAQ,CAAE,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE,KAAM,IAAI,EAAE,CAAC,EAAE,EAAG;MAC5C,MAAM,CAAC,KAAK,CACX,IAAI,EACJ,YAAY,EACZ,CAAC,WAAW,IAAI,MAAM,CAAC,KAAK,CAAE,WAAW,CAAE,CAAC,CAAE,EAAE,YAAa,CAC9D,CAAC;IACF;EACD;EAGA,IAAI,KAAK,GAAG,WAAW;IACtB,MAAM,GAAG,SAAS;EAEnB,SAAS,iBAAiB,CAAE,IAAI,EAAG;IAClC,IAAK,cAAc,CAAC,IAAI,CAAE,IAAI,CAAC,IAAK,CAAC,EAAG;MACvC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO;IACnC;EACD;EAEA,SAAS,aAAa,CAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAG;IACrE,IAAI,CAAC;MAAE,IAAI;MAAE,QAAQ;MACpB,GAAG;MAAE,GAAG;MAAE,KAAK;MAAE,IAAI;MACrB,CAAC,GAAG,KAAK,CAAC,MAAM;MAEhB;MACA,IAAI,GAAG,kBAAkB,CAAE,OAAQ,CAAC;MAEpC,KAAK,GAAG,EAAE;MACV,CAAC,GAAG,CAAC;IAEN,OAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAG;MACpB,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE;MAEjB,IAAK,IAAI,IAAI,IAAI,KAAK,CAAC,EAAG;QAEzB;QACA,IAAK,MAAM,CAAC,IAAI,CAAE,IAAK,CAAC,KAAK,QAAQ,EAAG;UACvC,MAAM,CAAC,KAAK,CAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAE,IAAI,CAAE,GAAG,IAAK,CAAC;;UAEvD;QACA,CAAC,MAAM,IAAK,CAAC,KAAK,CAAC,IAAI,CAAE,IAAK,CAAC,EAAG;UACjC,KAAK,CAAC,IAAI,CAAE,OAAO,CAAC,cAAc,CAAE,IAAK,CAAE,CAAC;;UAE7C;QACA,CAAC,MAAM;UACN,GAAG,GAAG,GAAG,IAAI,IAAI,CAAC,WAAW,CAAE,OAAO,CAAC,aAAa,CAAE,KAAM,CAAE,CAAC;;UAE/D;UACA,GAAG,GAAG,CAAE,QAAQ,CAAC,IAAI,CAAE,IAAK,CAAC,IAAI,CAAE,EAAE,EAAE,EAAE,CAAE,EAAI,CAAC,CAAE,CAAC,WAAW,CAAC,CAAC;UAChE,IAAI,GAAG,OAAO,CAAE,GAAG,CAAE,IAAI,OAAO,CAAC,QAAQ;UAEzC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAE,CAAC,CAAE,GAAG,MAAM,CAAC,aAAa,CAAE,IAAK,CAAC,GAAG,IAAI,CAAE,CAAC,CAAE;;UAEpE;UACA,CAAC,GAAG,IAAI,CAAE,CAAC,CAAE;UACb,OAAQ,CAAC,EAAE,EAAG;YACb,GAAG,GAAG,GAAG,CAAC,SAAS;UACpB;;UAEA;UACA,IAAK,CAAC,OAAO,CAAC,iBAAiB,IAAI,kBAAkB,CAAC,IAAI,CAAE,IAAK,CAAC,EAAG;YACpE,KAAK,CAAC,IAAI,CAAE,OAAO,CAAC,cAAc,CAAE,kBAAkB,CAAC,IAAI,CAAE,IAAK,CAAC,CAAE,CAAC,CAAG,CAAE,CAAC;UAC7E;;UAEA;UACA,IAAK,CAAC,OAAO,CAAC,KAAK,EAAG;YAErB;YACA,IAAI,GAAG,GAAG,KAAK,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,IAAK,CAAC,GAC7C,GAAG,CAAC,UAAU;YAEd;YACA,IAAI,CAAE,CAAC,CAAE,KAAK,SAAS,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,IAAK,CAAC,GAC9C,GAAG,GACH,CAAC;YAEH,CAAC,GAAG,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM;YAClC,OAAQ,CAAC,EAAE,EAAG;cACb,IAAK,MAAM,CAAC,QAAQ,CAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAE,CAAC,CAAE,EAAI,OAAQ,CAAC,IAChE,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,EAAG;gBAE3B,IAAI,CAAC,WAAW,CAAE,KAAM,CAAC;cAC1B;YACD;UACD;UAEA,MAAM,CAAC,KAAK,CAAE,KAAK,EAAE,GAAG,CAAC,UAAW,CAAC;;UAErC;UACA,GAAG,CAAC,WAAW,GAAG,EAAE;;UAEpB;UACA,OAAQ,GAAG,CAAC,UAAU,EAAG;YACxB,GAAG,CAAC,WAAW,CAAE,GAAG,CAAC,UAAW,CAAC;UAClC;;UAEA;UACA,GAAG,GAAG,IAAI,CAAC,SAAS;QACrB;MACD;IACD;;IAEA;IACA,IAAK,GAAG,EAAG;MACV,IAAI,CAAC,WAAW,CAAE,GAAI,CAAC;IACxB;;IAEA;IACA;IACA,IAAK,CAAC,OAAO,CAAC,aAAa,EAAG;MAC7B,MAAM,CAAC,IAAI,CAAE,MAAM,CAAE,KAAK,EAAE,OAAQ,CAAC,EAAE,iBAAkB,CAAC;IAC3D;IAEA,CAAC,GAAG,CAAC;IACL,OAAU,IAAI,GAAG,KAAK,CAAE,CAAC,EAAE,CAAE,EAAK;MAEjC;MACA,IAAK,SAAS,IAAI,MAAM,CAAC,OAAO,CAAE,IAAI,EAAE,SAAU,CAAC,GAAG,CAAC,CAAC,EAAG;QAC1D,IAAK,OAAO,EAAG;UACd,OAAO,CAAC,IAAI,CAAE,IAAK,CAAC;QACrB;QAEA;MACD;MAEA,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAE,IAAI,CAAC,aAAa,EAAE,IAAK,CAAC;;MAEtD;MACA,GAAG,GAAG,MAAM,CAAE,IAAI,CAAC,WAAW,CAAE,IAAK,CAAC,EAAE,QAAS,CAAC;;MAElD;MACA,IAAK,QAAQ,EAAG;QACf,aAAa,CAAE,GAAI,CAAC;MACrB;;MAEA;MACA,IAAK,OAAO,EAAG;QACd,CAAC,GAAG,CAAC;QACL,OAAU,IAAI,GAAG,GAAG,CAAE,CAAC,EAAE,CAAE,EAAK;UAC/B,IAAK,WAAW,CAAC,IAAI,CAAE,IAAI,CAAC,IAAI,IAAI,EAAG,CAAC,EAAG;YAC1C,OAAO,CAAC,IAAI,CAAE,IAAK,CAAC;UACrB;QACD;MACD;IACD;IAEA,GAAG,GAAG,IAAI;IAEV,OAAO,IAAI;EACZ;EAGA,CAAE,YAAW;IACZ,IAAI,CAAC;MAAE,SAAS;MACf,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAE,KAAM,CAAC;;IAEtC;IACA,KAAM,CAAC,IAAI;MAAE,MAAM,EAAE,IAAI;MAAE,MAAM,EAAE,IAAI;MAAE,OAAO,EAAE;IAAK,CAAC,EAAG;MAC1D,SAAS,GAAG,IAAI,GAAG,CAAC;MAEpB,IAAK,EAAG,OAAO,CAAE,CAAC,CAAE,GAAG,SAAS,IAAI,MAAM,CAAE,EAAG;QAE9C;QACA,GAAG,CAAC,YAAY,CAAE,SAAS,EAAE,GAAI,CAAC;QAClC,OAAO,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC,UAAU,CAAE,SAAS,CAAE,CAAC,OAAO,KAAK,KAAK;MAC7D;IACD;;IAEA;IACA,GAAG,GAAG,IAAI;EACX,CAAC,EAAG,CAAC;EAGL,IAAI,UAAU,GAAG,8BAA8B;IAC9C,SAAS,GAAG,MAAM;IAClB,WAAW,GAAG,gDAAgD;IAC9D,WAAW,GAAG,iCAAiC;IAC/C,cAAc,GAAG,qBAAqB;EAEvC,SAAS,UAAU,CAAA,EAAG;IACrB,OAAO,IAAI;EACZ;EAEA,SAAS,WAAW,CAAA,EAAG;IACtB,OAAO,KAAK;EACb;;EAEA;EACA;EACA,SAAS,iBAAiB,CAAA,EAAG;IAC5B,IAAI;MACH,OAAO,QAAQ,CAAC,aAAa;IAC9B,CAAC,CAAC,OAAQ,GAAG,EAAG,CAAE;EACnB;EAEA,SAAS,GAAE,CAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAG;IACnD,IAAI,MAAM,EAAE,IAAI;;IAEhB;IACA,IAAK,OAAA,CAAO,KAAK,MAAK,QAAQ,EAAG;MAEhC;MACA,IAAK,OAAO,QAAQ,KAAK,QAAQ,EAAG;QAEnC;QACA,IAAI,GAAG,IAAI,IAAI,QAAQ;QACvB,QAAQ,GAAG,SAAS;MACrB;MACA,KAAM,IAAI,IAAI,KAAK,EAAG;QACrB,GAAE,CAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,CAAE,IAAI,CAAE,EAAE,GAAI,CAAC;MACrD;MACA,OAAO,IAAI;IACZ;IAEA,IAAK,IAAI,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,EAAG;MAEjC;MACA,EAAE,GAAG,QAAQ;MACb,IAAI,GAAG,QAAQ,GAAG,SAAS;IAC5B,CAAC,MAAM,IAAK,EAAE,IAAI,IAAI,EAAG;MACxB,IAAK,OAAO,QAAQ,KAAK,QAAQ,EAAG;QAEnC;QACA,EAAE,GAAG,IAAI;QACT,IAAI,GAAG,SAAS;MACjB,CAAC,MAAM;QAEN;QACA,EAAE,GAAG,IAAI;QACT,IAAI,GAAG,QAAQ;QACf,QAAQ,GAAG,SAAS;MACrB;IACD;IACA,IAAK,EAAE,KAAK,KAAK,EAAG;MACnB,EAAE,GAAG,WAAW;IACjB,CAAC,MAAM,IAAK,CAAC,EAAE,EAAG;MACjB,OAAO,IAAI;IACZ;IAEA,IAAK,GAAG,KAAK,CAAC,EAAG;MAChB,MAAM,GAAG,EAAE;MACX,EAAE,GAAG,SAAA,GAAU,KAAK,EAAG;QAEtB;QACA,MAAM,CAAC,CAAC,CAAC,GAAG,CAAE,KAAM,CAAC;QACrB,OAAO,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,SAAU,CAAC;MACvC,CAAC;;MAED;MACA,EAAE,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,KAAM,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,EAAE,CAAE;IACzD;IACA,OAAO,IAAI,CAAC,IAAI,CAAE,YAAW;MAC5B,MAAM,CAAC,KAAK,CAAC,GAAG,CAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,QAAS,CAAC;IACpD,CAAE,CAAC;EACJ;;EAEA;AACA;AACA;AACA;EACA,MAAM,CAAC,KAAK,GAAG;IAEd,MAAM,EAAE,CAAC,CAAC;IAEV,GAAG,EAAE,SAAA,IAAU,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAG;MACrD,IAAI,GAAG;QAAE,MAAM;QAAE,CAAC;QAAE,WAAW;QAC9B,OAAO;QAAE,WAAW;QAAE,SAAS;QAC/B,QAAQ;QAAE,IAAI;QAAE,UAAU;QAAE,QAAQ;QACpC,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAE,IAAK,CAAC;;MAEhC;MACA,IAAK,CAAC,QAAQ,EAAG;QAChB;MACD;;MAEA;MACA,IAAK,OAAO,CAAC,OAAO,EAAG;QACtB,WAAW,GAAG,OAAO;QACrB,OAAO,GAAG,WAAW,CAAC,OAAO;QAC7B,QAAQ,GAAG,WAAW,CAAC,QAAQ;MAChC;;MAEA;MACA,IAAK,CAAC,OAAO,CAAC,IAAI,EAAG;QACpB,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,EAAE;MAC7B;;MAEA;MACA,IAAK,EAAG,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAE,EAAG;QACpC,MAAM,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;MAC9B;MACA,IAAK,EAAG,WAAW,GAAG,QAAQ,CAAC,MAAM,CAAE,EAAG;QACzC,WAAW,GAAG,QAAQ,CAAC,MAAM,GAAG,UAAU,CAAC,EAAG;UAE7C;UACA;UACA,OAAO,OAAO,MAAM,KAAK,WAAW,KACjC,CAAC,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,SAAS,KAAK,CAAC,CAAC,IAAI,CAAE,GAC3C,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAE,WAAW,CAAC,IAAI,EAAE,SAAU,CAAC,GAC1D,SAAS;QACX,CAAC;;QAED;QACA;QACA,WAAW,CAAC,IAAI,GAAG,IAAI;MACxB;;MAEA;MACA,KAAK,GAAG,CAAE,KAAK,IAAI,EAAE,EAAG,KAAK,CAAE,SAAU,CAAC,IAAI,CAAE,EAAE,CAAE;MACpD,CAAC,GAAG,KAAK,CAAC,MAAM;MAChB,OAAQ,CAAC,EAAE,EAAG;QACb,GAAG,GAAG,cAAc,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC,CAAG,CAAC,IAAI,EAAE;QAC7C,IAAI,GAAG,QAAQ,GAAG,GAAG,CAAE,CAAC,CAAE;QAC1B,UAAU,GAAG,CAAE,GAAG,CAAE,CAAC,CAAE,IAAI,EAAE,EAAG,KAAK,CAAE,GAAI,CAAC,CAAC,IAAI,CAAC,CAAC;;QAEnD;QACA,IAAK,CAAC,IAAI,EAAG;UACZ;QACD;;QAEA;QACA,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAE,IAAI,CAAE,IAAI,CAAC,CAAC;;QAE5C;QACA,IAAI,GAAG,CAAE,QAAQ,GAAG,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,QAAQ,KAAM,IAAI;;QAErE;QACA,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAE,IAAI,CAAE,IAAI,CAAC,CAAC;;QAE5C;QACA,SAAS,GAAG,MAAM,CAAC,MAAM,CAAE;UAC1B,IAAI,EAAE,IAAI;UACV,QAAQ,EAAE,QAAQ;UAClB,IAAI,EAAE,IAAI;UACV,OAAO,EAAE,OAAO;UAChB,IAAI,EAAE,OAAO,CAAC,IAAI;UAClB,QAAQ,EAAE,QAAQ;UAClB,YAAY,EAAE,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAE,QAAS,CAAC;UACzE,SAAS,EAAE,UAAU,CAAC,IAAI,CAAE,GAAI;QACjC,CAAC,EAAE,WAAY,CAAC;;QAEhB;QACA,IAAK,EAAG,QAAQ,GAAG,MAAM,CAAE,IAAI,CAAE,CAAE,EAAG;UACrC,QAAQ,GAAG,MAAM,CAAE,IAAI,CAAE,GAAG,EAAE;UAC9B,QAAQ,CAAC,aAAa,GAAG,CAAC;;UAE1B;UACA,IAAK,CAAC,OAAO,CAAC,KAAK,IAClB,OAAO,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,WAAY,CAAC,KAAK,KAAK,EAAG;YAEtE;YACA,IAAK,IAAI,CAAC,gBAAgB,EAAG;cAC5B,IAAI,CAAC,gBAAgB,CAAE,IAAI,EAAE,WAAW,EAAE,KAAM,CAAC;YAElD,CAAC,MAAM,IAAK,IAAI,CAAC,WAAW,EAAG;cAC9B,IAAI,CAAC,WAAW,CAAE,IAAI,GAAG,IAAI,EAAE,WAAY,CAAC;YAC7C;UACD;QACD;QAEA,IAAK,OAAO,CAAC,GAAG,EAAG;UAClB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAE,IAAI,EAAE,SAAU,CAAC;UAEnC,IAAK,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,EAAG;YAC9B,SAAS,CAAC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI;UACtC;QACD;;QAEA;QACA,IAAK,QAAQ,EAAG;UACf,QAAQ,CAAC,MAAM,CAAE,QAAQ,CAAC,aAAa,EAAE,EAAE,CAAC,EAAE,SAAU,CAAC;QAC1D,CAAC,MAAM;UACN,QAAQ,CAAC,IAAI,CAAE,SAAU,CAAC;QAC3B;;QAEA;QACA,MAAM,CAAC,KAAK,CAAC,MAAM,CAAE,IAAI,CAAE,GAAG,IAAI;MACnC;;MAEA;MACA,IAAI,GAAG,IAAI;IACZ,CAAC;IAED;IACA,MAAM,EAAE,SAAA,OAAU,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAG;MAC/D,IAAI,CAAC;QAAE,SAAS;QAAE,GAAG;QACpB,SAAS;QAAE,CAAC;QAAE,MAAM;QACpB,OAAO;QAAE,QAAQ;QAAE,IAAI;QACvB,UAAU;QAAE,QAAQ;QACpB,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAE,IAAK,CAAC,IAAI,MAAM,CAAC,KAAK,CAAE,IAAK,CAAC;MAE1D,IAAK,CAAC,QAAQ,IAAI,EAAG,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAE,EAAG;QACjD;MACD;;MAEA;MACA,KAAK,GAAG,CAAE,KAAK,IAAI,EAAE,EAAG,KAAK,CAAE,SAAU,CAAC,IAAI,CAAE,EAAE,CAAE;MACpD,CAAC,GAAG,KAAK,CAAC,MAAM;MAChB,OAAQ,CAAC,EAAE,EAAG;QACb,GAAG,GAAG,cAAc,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC,CAAG,CAAC,IAAI,EAAE;QAC7C,IAAI,GAAG,QAAQ,GAAG,GAAG,CAAE,CAAC,CAAE;QAC1B,UAAU,GAAG,CAAE,GAAG,CAAE,CAAC,CAAE,IAAI,EAAE,EAAG,KAAK,CAAE,GAAI,CAAC,CAAC,IAAI,CAAC,CAAC;;QAEnD;QACA,IAAK,CAAC,IAAI,EAAG;UACZ,KAAM,IAAI,IAAI,MAAM,EAAG;YACtB,MAAM,CAAC,KAAK,CAAC,MAAM,CAAE,IAAI,EAAE,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAK,CAAC;UACxE;UACA;QACD;QAEA,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAE,IAAI,CAAE,IAAI,CAAC,CAAC;QAC5C,IAAI,GAAG,CAAE,QAAQ,GAAG,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,QAAQ,KAAM,IAAI;QACrE,QAAQ,GAAG,MAAM,CAAE,IAAI,CAAE,IAAI,EAAE;QAC/B,GAAG,GAAG,GAAG,CAAE,CAAC,CAAE,IACb,IAAI,MAAM,CAAE,SAAS,GAAG,UAAU,CAAC,IAAI,CAAE,eAAgB,CAAC,GAAG,SAAU,CAAC;;QAEzE;QACA,SAAS,GAAG,CAAC,GAAG,QAAQ,CAAC,MAAM;QAC/B,OAAQ,CAAC,EAAE,EAAG;UACb,SAAS,GAAG,QAAQ,CAAE,CAAC,CAAE;UAEzB,IAAK,CAAE,WAAW,IAAI,QAAQ,KAAK,SAAS,CAAC,QAAQ,MAClD,CAAC,OAAO,IAAI,OAAO,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI,CAAE,KAC7C,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,CAAE,SAAS,CAAC,SAAU,CAAC,CAAE,KACzC,CAAC,QAAQ,IAAI,QAAQ,KAAK,SAAS,CAAC,QAAQ,IAC7C,QAAQ,KAAK,IAAI,IAAI,SAAS,CAAC,QAAQ,CAAE,EAAG;YAC7C,QAAQ,CAAC,MAAM,CAAE,CAAC,EAAE,CAAE,CAAC;YAEvB,IAAK,SAAS,CAAC,QAAQ,EAAG;cACzB,QAAQ,CAAC,aAAa,EAAE;YACzB;YACA,IAAK,OAAO,CAAC,MAAM,EAAG;cACrB,OAAO,CAAC,MAAM,CAAC,IAAI,CAAE,IAAI,EAAE,SAAU,CAAC;YACvC;UACD;QACD;;QAEA;QACA;QACA,IAAK,SAAS,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAG;UACpC,IAAK,CAAC,OAAO,CAAC,QAAQ,IACrB,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,CAAC,MAAO,CAAC,KAAK,KAAK,EAAG;YAEvE,MAAM,CAAC,WAAW,CAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,MAAO,CAAC;UAClD;UAEA,OAAO,MAAM,CAAE,IAAI,CAAE;QACtB;MACD;;MAEA;MACA,IAAK,MAAM,CAAC,aAAa,CAAE,MAAO,CAAC,EAAG;QACrC,OAAO,QAAQ,CAAC,MAAM;;QAEtB;QACA;QACA,MAAM,CAAC,WAAW,CAAE,IAAI,EAAE,QAAS,CAAC;MACrC;IACD,CAAC;IAED,OAAO,EAAE,SAAA,QAAU,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,YAAY,EAAG;MACpD,IAAI,MAAM;QAAE,MAAM;QAAE,GAAG;QACtB,UAAU;QAAE,OAAO;QAAE,GAAG;QAAE,CAAC;QAC3B,SAAS,GAAG,CAAE,IAAI,IAAI,QAAQ,CAAE;QAChC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAE,KAAK,EAAE,MAAO,CAAC,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK;QACxD,UAAU,GAAG,MAAM,CAAC,IAAI,CAAE,KAAK,EAAE,WAAY,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAE,GAAI,CAAC,GAAG,EAAE;MAEnF,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,QAAQ;;MAEnC;MACA,IAAK,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAG;QACjD;MACD;;MAEA;MACA,IAAK,WAAW,CAAC,IAAI,CAAE,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,SAAU,CAAC,EAAG;QACxD;MACD;MAEA,IAAK,IAAI,CAAC,OAAO,CAAE,GAAI,CAAC,GAAG,CAAC,CAAC,EAAG;QAE/B;QACA,UAAU,GAAG,IAAI,CAAC,KAAK,CAAE,GAAI,CAAC;QAC9B,IAAI,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;QACzB,UAAU,CAAC,IAAI,CAAC,CAAC;MAClB;MACA,MAAM,GAAG,IAAI,CAAC,OAAO,CAAE,GAAI,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG,IAAI;;MAE/C;MACA,KAAK,GAAG,KAAK,CAAE,MAAM,CAAC,OAAO,CAAE,GAC9B,KAAK,GACL,IAAI,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,OAAA,CAAO,KAAK,MAAK,QAAQ,IAAI,KAAM,CAAC;;MAE7D;MACA,KAAK,CAAC,SAAS,GAAG,YAAY,GAAG,CAAC,GAAG,CAAC;MACtC,KAAK,CAAC,SAAS,GAAG,UAAU,CAAC,IAAI,CAAE,GAAI,CAAC;MACxC,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC,SAAS,GACjC,IAAI,MAAM,CAAE,SAAS,GAAG,UAAU,CAAC,IAAI,CAAE,eAAgB,CAAC,GAAG,SAAU,CAAC,GACxE,IAAI;;MAEL;MACA,KAAK,CAAC,MAAM,GAAG,SAAS;MACxB,IAAK,CAAC,KAAK,CAAC,MAAM,EAAG;QACpB,KAAK,CAAC,MAAM,GAAG,IAAI;MACpB;;MAEA;MACA,IAAI,GAAG,IAAI,IAAI,IAAI,GAClB,CAAE,KAAK,CAAE,GACT,MAAM,CAAC,SAAS,CAAE,IAAI,EAAE,CAAE,KAAK,CAAG,CAAC;;MAEpC;MACA,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAE,IAAI,CAAE,IAAI,CAAC,CAAC;MAC5C,IAAK,CAAC,YAAY,IAAI,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,KAAK,CAAE,IAAI,EAAE,IAAK,CAAC,KAAK,KAAK,EAAG;QACxF;MACD;;MAEA;MACA;MACA,IAAK,CAAC,YAAY,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAE,IAAK,CAAC,EAAG;QAErE,UAAU,GAAG,OAAO,CAAC,YAAY,IAAI,IAAI;QACzC,IAAK,CAAC,WAAW,CAAC,IAAI,CAAE,UAAU,GAAG,IAAK,CAAC,EAAG;UAC7C,GAAG,GAAG,GAAG,CAAC,UAAU;QACrB;QACA,OAAQ,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,UAAU,EAAG;UACnC,SAAS,CAAC,IAAI,CAAE,GAAI,CAAC;UACrB,GAAG,GAAG,GAAG;QACV;;QAEA;QACA,IAAK,GAAG,MAAO,IAAI,CAAC,aAAa,IAAI,QAAQ,CAAE,EAAG;UACjD,SAAS,CAAC,IAAI,CAAE,GAAG,CAAC,WAAW,IAAI,GAAG,CAAC,YAAY,IAAI,MAAO,CAAC;QAChE;MACD;;MAEA;MACA,CAAC,GAAG,CAAC;MACL,OAAQ,CAAE,GAAG,GAAG,SAAS,CAAE,CAAC,EAAE,CAAE,KAAM,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC,EAAG;QAErE,KAAK,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,GACjB,UAAU,GACV,OAAO,CAAC,QAAQ,IAAI,IAAI;;QAEzB;QACA,MAAM,GAAG,CAAE,MAAM,CAAC,KAAK,CAAE,GAAG,EAAE,QAAS,CAAC,IAAI,CAAC,CAAC,EAAI,KAAK,CAAC,IAAI,CAAE,IAC7D,MAAM,CAAC,KAAK,CAAE,GAAG,EAAE,QAAS,CAAC;QAE9B,IAAK,MAAM,EAAG;UACb,MAAM,CAAC,KAAK,CAAE,GAAG,EAAE,IAAK,CAAC;QAC1B;;QAEA;QACA,MAAM,GAAG,MAAM,IAAI,GAAG,CAAE,MAAM,CAAE;QAChC,IAAK,MAAM,IAAI,MAAM,CAAC,KAAK,IAAI,UAAU,CAAE,GAAI,CAAC,EAAG;UAClD,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAE,GAAG,EAAE,IAAK,CAAC;UACxC,IAAK,KAAK,CAAC,MAAM,KAAK,KAAK,EAAG;YAC7B,KAAK,CAAC,cAAc,CAAC,CAAC;UACvB;QACD;MACD;MACA,KAAK,CAAC,IAAI,GAAG,IAAI;;MAEjB;MACA,IAAK,CAAC,YAAY,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,EAAG;QAEnD,IACC,CAAE,CAAC,OAAO,CAAC,QAAQ,IAClB,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAE,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,IAAK,CAAC,KAAK,KAAK,KACrD,UAAU,CAAE,IAAK,CAAC,EACtB;UAED;UACA;UACA;UACA,IAAK,MAAM,IAAI,IAAI,CAAE,IAAI,CAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAE,IAAK,CAAC,EAAG;YAEzD;YACA,GAAG,GAAG,IAAI,CAAE,MAAM,CAAE;YAEpB,IAAK,GAAG,EAAG;cACV,IAAI,CAAE,MAAM,CAAE,GAAG,IAAI;YACtB;;YAEA;YACA,MAAM,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI;YAC7B,IAAI;cACH,IAAI,CAAE,IAAI,CAAE,CAAC,CAAC;YACf,CAAC,CAAC,OAAQ,CAAC,EAAG;;cAEb;cACA;YAAA;YAED,MAAM,CAAC,KAAK,CAAC,SAAS,GAAG,SAAS;YAElC,IAAK,GAAG,EAAG;cACV,IAAI,CAAE,MAAM,CAAE,GAAG,GAAG;YACrB;UACD;QACD;MACD;MAEA,OAAO,KAAK,CAAC,MAAM;IACpB,CAAC;IAED,QAAQ,EAAE,SAAA,SAAU,KAAK,EAAG;MAE3B;MACA,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAE,KAAM,CAAC;MAEjC,IAAI,CAAC;QAAE,CAAC;QAAE,GAAG;QAAE,OAAO;QAAE,SAAS;QAChC,YAAY,GAAG,EAAE;QACjB,IAAI,GAAG,MAAK,CAAC,IAAI,CAAE,SAAU,CAAC;QAC9B,QAAQ,GAAG,CAAE,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,QAAS,CAAC,IAAI,CAAC,CAAC,EAAI,KAAK,CAAC,IAAI,CAAE,IAAI,EAAE;QACvE,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAE,KAAK,CAAC,IAAI,CAAE,IAAI,CAAC,CAAC;;MAEnD;MACA,IAAI,CAAE,CAAC,CAAE,GAAG,KAAK;MACjB,KAAK,CAAC,cAAc,GAAG,IAAI;;MAE3B;MACA,IAAK,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,WAAW,CAAC,IAAI,CAAE,IAAI,EAAE,KAAM,CAAC,KAAK,KAAK,EAAG;QAC/E;MACD;;MAEA;MACA,YAAY,GAAG,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAE,IAAI,EAAE,KAAK,EAAE,QAAS,CAAC;;MAElE;MACA,CAAC,GAAG,CAAC;MACL,OAAQ,CAAE,OAAO,GAAG,YAAY,CAAE,CAAC,EAAE,CAAE,KAAM,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC,EAAG;QAC5E,KAAK,CAAC,aAAa,GAAG,OAAO,CAAC,IAAI;QAElC,CAAC,GAAG,CAAC;QACL,OAAQ,CAAE,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAE,CAAC,EAAE,CAAE,KAC5C,CAAC,KAAK,CAAC,6BAA6B,CAAC,CAAC,EAAG;UAEzC;UACA;UACA,IAAK,CAAC,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,UAAU,CAAC,IAAI,CAAE,SAAS,CAAC,SAAU,CAAC,EAAG;YAExE,KAAK,CAAC,SAAS,GAAG,SAAS;YAC3B,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI;YAE3B,GAAG,GAAG,CAAE,CAAE,MAAM,CAAC,KAAK,CAAC,OAAO,CAAE,SAAS,CAAC,QAAQ,CAAE,IAAI,CAAC,CAAC,EAAG,MAAM,IAClE,SAAS,CAAC,OAAO,EAAG,KAAK,CAAE,OAAO,CAAC,IAAI,EAAE,IAAK,CAAC;YAEhD,IAAK,GAAG,KAAK,SAAS,EAAG;cACxB,IAAK,CAAE,KAAK,CAAC,MAAM,GAAG,GAAG,MAAO,KAAK,EAAG;gBACvC,KAAK,CAAC,cAAc,CAAC,CAAC;gBACtB,KAAK,CAAC,eAAe,CAAC,CAAC;cACxB;YACD;UACD;QACD;MACD;;MAEA;MACA,IAAK,OAAO,CAAC,YAAY,EAAG;QAC3B,OAAO,CAAC,YAAY,CAAC,IAAI,CAAE,IAAI,EAAE,KAAM,CAAC;MACzC;MAEA,OAAO,KAAK,CAAC,MAAM;IACpB,CAAC;IAED,QAAQ,EAAE,SAAA,SAAU,KAAK,EAAE,SAAQ,EAAG;MACrC,IAAI,CAAC;QAAE,OAAO;QAAE,GAAG;QAAE,SAAS;QAC7B,YAAY,GAAG,EAAE;QACjB,aAAa,GAAG,SAAQ,CAAC,aAAa;QACtC,GAAG,GAAG,KAAK,CAAC,MAAM;;MAEnB;MACA;MACA;MACA;MACA;MACA;MACA,IAAK,aAAa,IAAI,GAAG,CAAC,QAAQ,KAC/B,KAAK,CAAC,IAAI,KAAK,OAAO,IAAI,KAAK,CAAE,KAAK,CAAC,MAAO,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,CAAE,EAAG;QAE1E;QACA,OAAQ,GAAG,IAAI,IAAI,EAAE,GAAG,GAAG,GAAG,CAAC,UAAU,IAAI,IAAI,EAAG;UACnD;;UAEA;UACA;UACA,IAAK,GAAG,CAAC,QAAQ,KAAK,CAAC,KAAM,GAAG,CAAC,QAAQ,KAAK,IAAI,IAAI,KAAK,CAAC,IAAI,KAAK,OAAO,CAAE,EAAG;YAChF,OAAO,GAAG,EAAE;YACZ,KAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,CAAC,EAAE,EAAG;cACrC,SAAS,GAAG,SAAQ,CAAE,CAAC,CAAE;;cAEzB;cACA,GAAG,GAAG,SAAS,CAAC,QAAQ,GAAG,GAAG;cAE9B,IAAK,OAAO,CAAE,GAAG,CAAE,KAAK,SAAS,EAAG;gBACnC,OAAO,CAAE,GAAG,CAAE,GAAG,SAAS,CAAC,YAAY,GACtC,MAAM,CAAE,GAAG,EAAE,IAAK,CAAC,CAAC,KAAK,CAAE,GAAI,CAAC,GAAG,CAAC,CAAC,GACrC,MAAM,CAAC,IAAI,CAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,CAAE,GAAG,CAAG,CAAC,CAAC,MAAM;cAChD;cACA,IAAK,OAAO,CAAE,GAAG,CAAE,EAAG;gBACrB,OAAO,CAAC,IAAI,CAAE,SAAU,CAAC;cAC1B;YACD;YACA,IAAK,OAAO,CAAC,MAAM,EAAG;cACrB,YAAY,CAAC,IAAI,CAAE;gBAAE,IAAI,EAAE,GAAG;gBAAE,QAAQ,EAAE;cAAQ,CAAE,CAAC;YACtD;UACD;QACD;MACD;;MAEA;MACA,IAAK,aAAa,GAAG,SAAQ,CAAC,MAAM,EAAG;QACtC,YAAY,CAAC,IAAI,CAAE;UAAE,IAAI,EAAE,IAAI;UAAE,QAAQ,EAAE,SAAQ,CAAC,KAAK,CAAE,aAAc;QAAE,CAAE,CAAC;MAC/E;MAEA,OAAO,YAAY;IACpB,CAAC;IAED,GAAG,EAAE,SAAA,IAAU,KAAK,EAAG;MACtB,IAAK,KAAK,CAAE,MAAM,CAAC,OAAO,CAAE,EAAG;QAC9B,OAAO,KAAK;MACb;;MAEA;MACA,IAAI,CAAC;QAAE,IAAI;QAAE,IAAI;QAChB,IAAI,GAAG,KAAK,CAAC,IAAI;QACjB,aAAa,GAAG,KAAK;QACrB,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAE,IAAI,CAAE;MAEhC,IAAK,CAAC,OAAO,EAAG;QACf,IAAI,CAAC,QAAQ,CAAE,IAAI,CAAE,GAAG,OAAO,GAC9B,WAAW,CAAC,IAAI,CAAE,IAAK,CAAC,GAAG,IAAI,CAAC,UAAU,GAC1C,SAAS,CAAC,IAAI,CAAE,IAAK,CAAC,GAAG,IAAI,CAAC,QAAQ,GACtC,CAAC,CAAC;MACJ;MACA,IAAI,GAAG,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,OAAO,CAAC,KAAM,CAAC,GAAG,IAAI,CAAC,KAAK;MAEtE,KAAK,GAAG,IAAI,MAAM,CAAC,KAAK,CAAE,aAAc,CAAC;MAEzC,CAAC,GAAG,IAAI,CAAC,MAAM;MACf,OAAQ,CAAC,EAAE,EAAG;QACb,IAAI,GAAG,IAAI,CAAE,CAAC,CAAE;QAChB,KAAK,CAAE,IAAI,CAAE,GAAG,aAAa,CAAE,IAAI,CAAE;MACtC;;MAEA;MACA;MACA,IAAK,CAAC,KAAK,CAAC,MAAM,EAAG;QACpB,KAAK,CAAC,MAAM,GAAG,aAAa,CAAC,UAAU,IAAI,QAAQ;MACpD;;MAEA;MACA;MACA,IAAK,KAAK,CAAC,MAAM,CAAC,QAAQ,KAAK,CAAC,EAAG;QAClC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,UAAU;MACvC;;MAEA;MACA;MACA,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC,OAAO;MAE/B,OAAO,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAE,KAAK,EAAE,aAAc,CAAC,GAAG,KAAK;IACvE,CAAC;IAED;IACA,KAAK,EAAE,CAAE,oEAAoE,GAC5E,4DAA4D,EAAG,KAAK,CAAE,GAAI,CAAC;IAE5E,QAAQ,EAAE,CAAC,CAAC;IAEZ,QAAQ,EAAE;MACT,KAAK,EAAE,2BAA2B,CAAC,KAAK,CAAE,GAAI,CAAC;MAC/C,MAAM,EAAE,SAAA,OAAU,KAAK,EAAE,QAAQ,EAAG;QAEnC;QACA,IAAK,KAAK,CAAC,KAAK,IAAI,IAAI,EAAG;UAC1B,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,QAAQ,IAAI,IAAI,GAAG,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC,OAAO;QAC/E;QAEA,OAAO,KAAK;MACb;IACD,CAAC;IAED,UAAU,EAAE;MACX,KAAK,EAAE,CAAE,6DAA6D,GACrE,uCAAuC,EAAG,KAAK,CAAE,GAAI,CAAC;MACvD,MAAM,EAAE,SAAA,OAAU,KAAK,EAAE,QAAQ,EAAG;QACnC,IAAI,IAAI;UAAE,QAAQ;UAAE,GAAG;UACtB,MAAM,GAAG,QAAQ,CAAC,MAAM;UACxB,WAAW,GAAG,QAAQ,CAAC,WAAW;;QAEnC;QACA,IAAK,KAAK,CAAC,KAAK,IAAI,IAAI,IAAI,QAAQ,CAAC,OAAO,IAAI,IAAI,EAAG;UACtD,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,aAAa,IAAI,QAAQ;UACjD,GAAG,GAAG,QAAQ,CAAC,eAAe;UAC9B,IAAI,GAAG,QAAQ,CAAC,IAAI;UAEpB,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,OAAO,IAC3B,GAAG,IAAI,GAAG,CAAC,UAAU,IAAI,IAAI,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,CAAE,IACvD,GAAG,IAAI,GAAG,CAAC,UAAU,IAAI,IAAI,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,CAAE;UAC1D,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,OAAO,IAC3B,GAAG,IAAI,GAAG,CAAC,SAAS,IAAK,IAAI,IAAI,IAAI,CAAC,SAAS,IAAK,CAAC,CAAE,IACvD,GAAG,IAAI,GAAG,CAAC,SAAS,IAAK,IAAI,IAAI,IAAI,CAAC,SAAS,IAAK,CAAC,CAAE;QAC3D;;QAEA;QACA,IAAK,CAAC,KAAK,CAAC,aAAa,IAAI,WAAW,EAAG;UAC1C,KAAK,CAAC,aAAa,GAAG,WAAW,KAAK,KAAK,CAAC,MAAM,GACjD,QAAQ,CAAC,SAAS,GAClB,WAAW;QACb;;QAEA;QACA;QACA,IAAK,CAAC,KAAK,CAAC,KAAK,IAAI,MAAM,KAAK,SAAS,EAAG;UAC3C,KAAK,CAAC,KAAK,GAAK,MAAM,GAAG,CAAC,GAAG,CAAC,GAAK,MAAM,GAAG,CAAC,GAAG,CAAC,GAAK,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAO;QAC/E;QAEA,OAAO,KAAK;MACb;IACD,CAAC;IAED,OAAO,EAAE;MACR,IAAI,EAAE;QAEL;QACA,QAAQ,EAAE;MACX,CAAC;MACD,KAAK,EAAE;QAEN;QACA,OAAO,EAAE,SAAA,QAAA,EAAW;UACnB,IAAK,IAAI,KAAK,iBAAiB,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,EAAG;YACjD,IAAI;cACH,IAAI,CAAC,KAAK,CAAC,CAAC;cACZ,OAAO,KAAK;YACb,CAAC,CAAC,OAAQ,CAAC,EAAG;;cAEb;cACA;cACA;YAAA;UAEF;QACD,CAAC;QACD,YAAY,EAAE;MACf,CAAC;MACD,IAAI,EAAE;QACL,OAAO,EAAE,SAAA,QAAA,EAAW;UACnB,IAAK,IAAI,KAAK,iBAAiB,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,EAAG;YAChD,IAAI,CAAC,IAAI,CAAC,CAAC;YACX,OAAO,KAAK;UACb;QACD,CAAC;QACD,YAAY,EAAE;MACf,CAAC;MACD,KAAK,EAAE;QAEN;QACA,OAAO,EAAE,SAAA,QAAA,EAAW;UACnB,IAAK,MAAM,CAAC,QAAQ,CAAE,IAAI,EAAE,OAAQ,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,UAAU,IAAI,IAAI,CAAC,KAAK,EAAG;YACjF,IAAI,CAAC,KAAK,CAAC,CAAC;YACZ,OAAO,KAAK;UACb;QACD,CAAC;QAED;QACA,QAAQ,EAAE,SAAA,SAAU,KAAK,EAAG;UAC3B,OAAO,MAAM,CAAC,QAAQ,CAAE,KAAK,CAAC,MAAM,EAAE,GAAI,CAAC;QAC5C;MACD,CAAC;MAED,YAAY,EAAE;QACb,YAAY,EAAE,SAAA,aAAU,KAAK,EAAG;UAE/B;UACA;UACA,IAAK,KAAK,CAAC,MAAM,KAAK,SAAS,IAAI,KAAK,CAAC,aAAa,EAAG;YACxD,KAAK,CAAC,aAAa,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM;UAC/C;QACD;MACD;IACD,CAAC;IAED;IACA,QAAQ,EAAE,SAAA,SAAU,IAAI,EAAE,IAAI,EAAE,KAAK,EAAG;MACvC,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CACpB,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,EAClB,KAAK,EACL;QACC,IAAI,EAAE,IAAI;QACV,WAAW,EAAE;;QAEb;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACD,CACD,CAAC;;MAED,MAAM,CAAC,KAAK,CAAC,OAAO,CAAE,CAAC,EAAE,IAAI,EAAE,IAAK,CAAC;MAErC,IAAK,CAAC,CAAC,kBAAkB,CAAC,CAAC,EAAG;QAC7B,KAAK,CAAC,cAAc,CAAC,CAAC;MACvB;IACD;EACD,CAAC;EAED,MAAM,CAAC,WAAW,GAAG,QAAQ,CAAC,mBAAmB,GAChD,UAAU,IAAI,EAAE,IAAI,EAAE,MAAM,EAAG;IAE9B;IACA,IAAK,IAAI,CAAC,mBAAmB,EAAG;MAC/B,IAAI,CAAC,mBAAmB,CAAE,IAAI,EAAE,MAAO,CAAC;IACzC;EACD,CAAC,GACD,UAAU,IAAI,EAAE,IAAI,EAAE,MAAM,EAAG;IAC9B,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI;IAEtB,IAAK,IAAI,CAAC,WAAW,EAAG;MAEvB;MACA;MACA;MACA,IAAK,OAAO,IAAI,CAAE,IAAI,CAAE,KAAK,WAAW,EAAG;QAC1C,IAAI,CAAE,IAAI,CAAE,GAAG,IAAI;MACpB;MAEA,IAAI,CAAC,WAAW,CAAE,IAAI,EAAE,MAAO,CAAC;IACjC;EACD,CAAC;EAEF,MAAM,CAAC,KAAK,GAAG,UAAU,GAAG,EAAE,KAAK,EAAG;IAErC;IACA,IAAK,EAAG,IAAI,YAAY,MAAM,CAAC,KAAK,CAAE,EAAG;MACxC,OAAO,IAAI,MAAM,CAAC,KAAK,CAAE,GAAG,EAAE,KAAM,CAAC;IACtC;;IAEA;IACA,IAAK,GAAG,IAAI,GAAG,CAAC,IAAI,EAAG;MACtB,IAAI,CAAC,aAAa,GAAG,GAAG;MACxB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI;;MAEpB;MACA;MACA,IAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC,gBAAgB,IAC5C,GAAG,CAAC,gBAAgB,KAAK,SAAS;MAElC;MACA,GAAG,CAAC,WAAW,KAAK,KAAK,GAC1B,UAAU,GACV,WAAW;;MAEb;IACA,CAAC,MAAM;MACN,IAAI,CAAC,IAAI,GAAG,GAAG;IAChB;;IAEA;IACA,IAAK,KAAK,EAAG;MACZ,MAAM,CAAC,MAAM,CAAE,IAAI,EAAE,KAAM,CAAC;IAC7B;;IAEA;IACA,IAAI,CAAC,SAAS,GAAG,GAAG,IAAI,GAAG,CAAC,SAAS,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC;;IAErD;IACA,IAAI,CAAE,MAAM,CAAC,OAAO,CAAE,GAAG,IAAI;EAC9B,CAAC;;EAED;EACA;EACA,MAAM,CAAC,KAAK,CAAC,SAAS,GAAG;IACxB,WAAW,EAAE,MAAM,CAAC,KAAK;IACzB,kBAAkB,EAAE,WAAW;IAC/B,oBAAoB,EAAE,WAAW;IACjC,6BAA6B,EAAE,WAAW;IAE1C,cAAc,EAAE,SAAA,eAAA,EAAW;MAC1B,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa;MAE1B,IAAI,CAAC,kBAAkB,GAAG,UAAU;MACpC,IAAK,CAAC,CAAC,EAAG;QACT;MACD;;MAEA;MACA,IAAK,CAAC,CAAC,cAAc,EAAG;QACvB,CAAC,CAAC,cAAc,CAAC,CAAC;;QAEnB;QACA;MACA,CAAC,MAAM;QACN,CAAC,CAAC,WAAW,GAAG,KAAK;MACtB;IACD,CAAC;IACD,eAAe,EAAE,SAAA,gBAAA,EAAW;MAC3B,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa;MAE1B,IAAI,CAAC,oBAAoB,GAAG,UAAU;MAEtC,IAAK,CAAC,CAAC,IAAI,IAAI,CAAC,WAAW,EAAG;QAC7B;MACD;;MAEA;MACA,IAAK,CAAC,CAAC,eAAe,EAAG;QACxB,CAAC,CAAC,eAAe,CAAC,CAAC;MACpB;;MAEA;MACA;MACA,CAAC,CAAC,YAAY,GAAG,IAAI;IACtB,CAAC;IACD,wBAAwB,EAAE,SAAA,yBAAA,EAAW;MACpC,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa;MAE1B,IAAI,CAAC,6BAA6B,GAAG,UAAU;MAE/C,IAAK,CAAC,IAAI,CAAC,CAAC,wBAAwB,EAAG;QACtC,CAAC,CAAC,wBAAwB,CAAC,CAAC;MAC7B;MAEA,IAAI,CAAC,eAAe,CAAC,CAAC;IACvB;EACD,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,CAAC,IAAI,CAAE;IACZ,UAAU,EAAE,WAAW;IACvB,UAAU,EAAE,UAAU;IACtB,YAAY,EAAE,aAAa;IAC3B,YAAY,EAAE;EACf,CAAC,EAAE,UAAU,IAAI,EAAE,GAAG,EAAG;IACxB,MAAM,CAAC,KAAK,CAAC,OAAO,CAAE,IAAI,CAAE,GAAG;MAC9B,YAAY,EAAE,GAAG;MACjB,QAAQ,EAAE,GAAG;MAEb,MAAM,EAAE,SAAA,OAAU,KAAK,EAAG;QACzB,IAAI,GAAG;UACN,MAAM,GAAG,IAAI;UACb,OAAO,GAAG,KAAK,CAAC,aAAa;UAC7B,SAAS,GAAG,KAAK,CAAC,SAAS;;QAE5B;QACA;QACA,IAAK,CAAC,OAAO,IAAM,OAAO,KAAK,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAE,MAAM,EAAE,OAAQ,CAAG,EAAG;UAChF,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC,QAAQ;UAC/B,GAAG,GAAG,SAAS,CAAC,OAAO,CAAC,KAAK,CAAE,IAAI,EAAE,SAAU,CAAC;UAChD,KAAK,CAAC,IAAI,GAAG,GAAG;QACjB;QACA,OAAO,GAAG;MACX;IACD,CAAC;EACF,CAAE,CAAC;;EAEH;EACA,IAAK,CAAC,OAAO,CAAC,MAAM,EAAG;IAEtB,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,GAAG;MAC7B,KAAK,EAAE,SAAA,MAAA,EAAW;QAEjB;QACA,IAAK,MAAM,CAAC,QAAQ,CAAE,IAAI,EAAE,MAAO,CAAC,EAAG;UACtC,OAAO,KAAK;QACb;;QAEA;QACA,MAAM,CAAC,KAAK,CAAC,GAAG,CAAE,IAAI,EAAE,gCAAgC,EAAE,UAAU,CAAC,EAAG;UAEvE;UACA,IAAI,IAAI,GAAG,CAAC,CAAC,MAAM;YAClB,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAE,IAAI,EAAE,OAAQ,CAAC,IAAI,MAAM,CAAC,QAAQ,CAAE,IAAI,EAAE,QAAS,CAAC;YAE3E;YACA;YACA;YACA;YACA,MAAM,CAAC,IAAI,CAAE,IAAI,EAAE,MAAO,CAAC,GAC3B,SAAS;UAEX,IAAK,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,QAAS,CAAC,EAAG;YAC9C,MAAM,CAAC,KAAK,CAAC,GAAG,CAAE,IAAI,EAAE,gBAAgB,EAAE,UAAU,KAAK,EAAG;cAC3D,KAAK,CAAC,aAAa,GAAG,IAAI;YAC3B,CAAE,CAAC;YACH,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,QAAQ,EAAE,IAAK,CAAC;UACrC;QACD,CAAE,CAAC;;QAEH;MACD,CAAC;;MAED,YAAY,EAAE,SAAA,aAAU,KAAK,EAAG;QAE/B;QACA,IAAK,KAAK,CAAC,aAAa,EAAG;UAC1B,OAAO,KAAK,CAAC,aAAa;UAC1B,IAAK,IAAI,CAAC,UAAU,IAAI,CAAC,KAAK,CAAC,SAAS,EAAG;YAC1C,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAE,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,KAAM,CAAC;UAC1D;QACD;MACD,CAAC;MAED,QAAQ,EAAE,SAAA,SAAA,EAAW;QAEpB;QACA,IAAK,MAAM,CAAC,QAAQ,CAAE,IAAI,EAAE,MAAO,CAAC,EAAG;UACtC,OAAO,KAAK;QACb;;QAEA;QACA,MAAM,CAAC,KAAK,CAAC,MAAM,CAAE,IAAI,EAAE,UAAW,CAAC;MACxC;IACD,CAAC;EACF;;EAEA;EACA,IAAK,CAAC,OAAO,CAAC,MAAM,EAAG;IAEtB,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,GAAG;MAE7B,KAAK,EAAE,SAAA,MAAA,EAAW;QAEjB,IAAK,UAAU,CAAC,IAAI,CAAE,IAAI,CAAC,QAAS,CAAC,EAAG;UAEvC;UACA;UACA;UACA,IAAK,IAAI,CAAC,IAAI,KAAK,UAAU,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAG;YACxD,MAAM,CAAC,KAAK,CAAC,GAAG,CAAE,IAAI,EAAE,wBAAwB,EAAE,UAAU,KAAK,EAAG;cACnE,IAAK,KAAK,CAAC,aAAa,CAAC,YAAY,KAAK,SAAS,EAAG;gBACrD,IAAI,CAAC,YAAY,GAAG,IAAI;cACzB;YACD,CAAE,CAAC;YACH,MAAM,CAAC,KAAK,CAAC,GAAG,CAAE,IAAI,EAAE,eAAe,EAAE,UAAU,KAAK,EAAG;cAC1D,IAAK,IAAI,CAAC,YAAY,IAAI,CAAC,KAAK,CAAC,SAAS,EAAG;gBAC5C,IAAI,CAAC,YAAY,GAAG,KAAK;cAC1B;;cAEA;cACA,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAE,QAAQ,EAAE,IAAI,EAAE,KAAM,CAAC;YAC/C,CAAE,CAAC;UACJ;UACA,OAAO,KAAK;QACb;;QAEA;QACA,MAAM,CAAC,KAAK,CAAC,GAAG,CAAE,IAAI,EAAE,wBAAwB,EAAE,UAAU,CAAC,EAAG;UAC/D,IAAI,IAAI,GAAG,CAAC,CAAC,MAAM;UAEnB,IAAK,UAAU,CAAC,IAAI,CAAE,IAAI,CAAC,QAAS,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,QAAS,CAAC,EAAG;YAC1E,MAAM,CAAC,KAAK,CAAC,GAAG,CAAE,IAAI,EAAE,gBAAgB,EAAE,UAAU,KAAK,EAAG;cAC3D,IAAK,IAAI,CAAC,UAAU,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,CAAC,KAAK,CAAC,SAAS,EAAG;gBAChE,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAE,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,KAAM,CAAC;cAC1D;YACD,CAAE,CAAC;YACH,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,QAAQ,EAAE,IAAK,CAAC;UACrC;QACD,CAAE,CAAC;MACJ,CAAC;MAED,MAAM,EAAE,SAAA,OAAU,KAAK,EAAG;QACzB,IAAI,IAAI,GAAG,KAAK,CAAC,MAAM;;QAEvB;QACA,IAAK,IAAI,KAAK,IAAI,IAAI,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,SAAS,IACvD,IAAI,CAAC,IAAI,KAAK,OAAO,IAAI,IAAI,CAAC,IAAI,KAAK,UAAY,EAAG;UAExD,OAAO,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAE,IAAI,EAAE,SAAU,CAAC;QACxD;MACD,CAAC;MAED,QAAQ,EAAE,SAAA,SAAA,EAAW;QACpB,MAAM,CAAC,KAAK,CAAC,MAAM,CAAE,IAAI,EAAE,UAAW,CAAC;QAEvC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAE,IAAI,CAAC,QAAS,CAAC;MACzC;IACD,CAAC;EACF;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAK,CAAC,OAAO,CAAC,OAAO,EAAG;IACvB,MAAM,CAAC,IAAI,CAAE;MAAE,KAAK,EAAE,SAAS;MAAE,IAAI,EAAE;IAAW,CAAC,EAAE,UAAU,IAAI,EAAE,GAAG,EAAG;MAE1E;MACA,IAAI,OAAO,GAAG,SAAV,OAAO,CAAa,KAAK,EAAG;QAC/B,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAE,GAAG,EAAE,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,CAAE,KAAM,CAAE,CAAC;MACtE,CAAC;MAED,MAAM,CAAC,KAAK,CAAC,OAAO,CAAE,GAAG,CAAE,GAAG;QAC7B,KAAK,EAAE,SAAA,MAAA,EAAW;UACjB,IAAI,GAAG,GAAG,IAAI,CAAC,aAAa,IAAI,IAAI;YACnC,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAE,GAAG,EAAE,GAAI,CAAC;UAEpC,IAAK,CAAC,QAAQ,EAAG;YAChB,GAAG,CAAC,gBAAgB,CAAE,IAAI,EAAE,OAAO,EAAE,IAAK,CAAC;UAC5C;UACA,MAAM,CAAC,KAAK,CAAE,GAAG,EAAE,GAAG,EAAE,CAAE,QAAQ,IAAI,CAAC,IAAK,CAAE,CAAC;QAChD,CAAC;QACD,QAAQ,EAAE,SAAA,SAAA,EAAW;UACpB,IAAI,GAAG,GAAG,IAAI,CAAC,aAAa,IAAI,IAAI;YACnC,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAE,GAAG,EAAE,GAAI,CAAC,GAAG,CAAC;UAExC,IAAK,CAAC,QAAQ,EAAG;YAChB,GAAG,CAAC,mBAAmB,CAAE,IAAI,EAAE,OAAO,EAAE,IAAK,CAAC;YAC9C,MAAM,CAAC,WAAW,CAAE,GAAG,EAAE,GAAI,CAAC;UAC/B,CAAC,MAAM;YACN,MAAM,CAAC,KAAK,CAAE,GAAG,EAAE,GAAG,EAAE,QAAS,CAAC;UACnC;QACD;MACD,CAAC;IACF,CAAE,CAAC;EACJ;EAEA,MAAM,CAAC,EAAE,CAAC,MAAM,CAAE;IAEjB,EAAE,EAAE,SAAA,GAAU,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,EAAG;MACzC,OAAO,GAAE,CAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAG,CAAC;IAC7C,CAAC;IACD,GAAG,EAAE,SAAA,IAAU,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,EAAG;MAC1C,OAAO,GAAE,CAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,EAAE,CAAE,CAAC;IAChD,CAAC;IACD,GAAG,EAAE,SAAA,IAAU,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAG;MACpC,IAAI,SAAS,EAAE,IAAI;MACnB,IAAK,KAAK,IAAI,KAAK,CAAC,cAAc,IAAI,KAAK,CAAC,SAAS,EAAG;QAEvD;QACA,SAAS,GAAG,KAAK,CAAC,SAAS;QAC3B,MAAM,CAAE,KAAK,CAAC,cAAe,CAAC,CAAC,GAAG,CACjC,SAAS,CAAC,SAAS,GAClB,SAAS,CAAC,QAAQ,GAAG,GAAG,GAAG,SAAS,CAAC,SAAS,GAC9C,SAAS,CAAC,QAAQ,EACnB,SAAS,CAAC,QAAQ,EAClB,SAAS,CAAC,OACX,CAAC;QACD,OAAO,IAAI;MACZ;MACA,IAAK,OAAA,CAAO,KAAK,MAAK,QAAQ,EAAG;QAEhC;QACA,KAAM,IAAI,IAAI,KAAK,EAAG;UACrB,IAAI,CAAC,GAAG,CAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAE,IAAI,CAAG,CAAC;QAC1C;QACA,OAAO,IAAI;MACZ;MACA,IAAK,QAAQ,KAAK,KAAK,IAAI,OAAO,QAAQ,KAAK,UAAU,EAAG;QAE3D;QACA,EAAE,GAAG,QAAQ;QACb,QAAQ,GAAG,SAAS;MACrB;MACA,IAAK,EAAE,KAAK,KAAK,EAAG;QACnB,EAAE,GAAG,WAAW;MACjB;MACA,OAAO,IAAI,CAAC,IAAI,CAAE,YAAW;QAC5B,MAAM,CAAC,KAAK,CAAC,MAAM,CAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,QAAS,CAAC;MACjD,CAAE,CAAC;IACJ,CAAC;IAED,OAAO,EAAE,SAAA,QAAU,IAAI,EAAE,IAAI,EAAG;MAC/B,OAAO,IAAI,CAAC,IAAI,CAAE,YAAW;QAC5B,MAAM,CAAC,KAAK,CAAC,OAAO,CAAE,IAAI,EAAE,IAAI,EAAE,IAAK,CAAC;MACzC,CAAE,CAAC;IACJ,CAAC;IACD,cAAc,EAAE,SAAA,eAAU,IAAI,EAAE,IAAI,EAAG;MACtC,IAAI,IAAI,GAAG,IAAI,CAAE,CAAC,CAAE;MACpB,IAAK,IAAI,EAAG;QACX,OAAO,MAAM,CAAC,KAAK,CAAC,OAAO,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAK,CAAC;MACtD;IACD;EACD,CAAE,CAAC;EAGH,IAAI,aAAa,GAAG,4BAA4B;IAC/C,YAAY,GAAG,IAAI,MAAM,CAAE,MAAM,GAAG,SAAS,GAAG,UAAU,EAAE,GAAI,CAAC;IACjE,SAAS,GAAG,0EAA0E;IAEtF;IACA;IACA;IACA,YAAY,GAAG,uBAAuB;IAEtC;IACA,QAAQ,GAAG,mCAAmC;IAC9C,iBAAiB,GAAG,aAAa;IACjC,YAAY,GAAG,0CAA0C;IACzD,YAAY,GAAG,kBAAkB,CAAE,QAAS,CAAC;IAC7C,WAAW,GAAG,YAAY,CAAC,WAAW,CAAE,QAAQ,CAAC,aAAa,CAAE,KAAM,CAAE,CAAC;;EAE1E;EACA;EACA,SAAS,kBAAkB,CAAE,IAAI,EAAE,OAAO,EAAG;IAC5C,OAAO,MAAM,CAAC,QAAQ,CAAE,IAAI,EAAE,OAAQ,CAAC,IACtC,MAAM,CAAC,QAAQ,CAAE,OAAO,CAAC,QAAQ,KAAK,EAAE,GAAG,OAAO,GAAG,OAAO,CAAC,UAAU,EAAE,IAAK,CAAC,GAE/E,IAAI,CAAC,oBAAoB,CAAE,OAAQ,CAAC,CAAE,CAAC,CAAE,IACxC,IAAI,CAAC,WAAW,CAAE,IAAI,CAAC,aAAa,CAAC,aAAa,CAAE,OAAQ,CAAE,CAAC,GAChE,IAAI;EACN;;EAEA;EACA,SAAS,aAAa,CAAE,IAAI,EAAG;IAC9B,IAAI,CAAC,IAAI,GAAG,CAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAE,IAAI,EAAE,MAAO,CAAC,KAAK,IAAI,IAAK,GAAG,GAAG,IAAI,CAAC,IAAI;IAC3E,OAAO,IAAI;EACZ;EACA,SAAS,aAAa,CAAE,IAAI,EAAG;IAC9B,IAAI,KAAK,GAAG,iBAAiB,CAAC,IAAI,CAAE,IAAI,CAAC,IAAK,CAAC;IAC/C,IAAK,KAAK,EAAG;MACZ,IAAI,CAAC,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE;IACvB,CAAC,MAAM;MACN,IAAI,CAAC,eAAe,CAAE,MAAO,CAAC;IAC/B;IACA,OAAO,IAAI;EACZ;EAEA,SAAS,cAAc,CAAE,GAAG,EAAE,IAAI,EAAG;IACpC,IAAK,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAE,GAAI,CAAC,EAAG;MACpD;IACD;IAEA,IAAI,IAAI;MAAE,CAAC;MAAE,CAAC;MACb,OAAO,GAAG,MAAM,CAAC,KAAK,CAAE,GAAI,CAAC;MAC7B,OAAO,GAAG,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,OAAQ,CAAC;MACvC,MAAM,GAAG,OAAO,CAAC,MAAM;IAExB,IAAK,MAAM,EAAG;MACb,OAAO,OAAO,CAAC,MAAM;MACrB,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;MAEnB,KAAM,IAAI,IAAI,MAAM,EAAG;QACtB,KAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAE,IAAI,CAAE,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAG;UACpD,MAAM,CAAC,KAAK,CAAC,GAAG,CAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAE,IAAI,CAAE,CAAE,CAAC,CAAG,CAAC;QACpD;MACD;IACD;;IAEA;IACA,IAAK,OAAO,CAAC,IAAI,EAAG;MACnB,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAE,CAAC,CAAC,EAAE,OAAO,CAAC,IAAK,CAAC;IACjD;EACD;EAEA,SAAS,kBAAkB,CAAE,GAAG,EAAE,IAAI,EAAG;IACxC,IAAI,QAAQ,EAAE,CAAC,EAAE,IAAI;;IAErB;IACA,IAAK,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAG;MAC1B;IACD;IAEA,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;;IAEtC;IACA,IAAK,CAAC,OAAO,CAAC,YAAY,IAAI,IAAI,CAAE,MAAM,CAAC,OAAO,CAAE,EAAG;MACtD,IAAI,GAAG,MAAM,CAAC,KAAK,CAAE,IAAK,CAAC;MAE3B,KAAM,CAAC,IAAI,IAAI,CAAC,MAAM,EAAG;QACxB,MAAM,CAAC,WAAW,CAAE,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,MAAO,CAAC;MAC3C;;MAEA;MACA,IAAI,CAAC,eAAe,CAAE,MAAM,CAAC,OAAQ,CAAC;IACvC;;IAEA;IACA,IAAK,QAAQ,KAAK,QAAQ,IAAI,IAAI,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,EAAG;MACtD,aAAa,CAAE,IAAK,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI;MACrC,aAAa,CAAE,IAAK,CAAC;;MAEtB;MACA;IACA,CAAC,MAAM,IAAK,QAAQ,KAAK,QAAQ,EAAG;MACnC,IAAK,IAAI,CAAC,UAAU,EAAG;QACtB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS;MAC/B;;MAEA;MACA;MACA;MACA;MACA,IAAK,OAAO,CAAC,UAAU,IAAM,GAAG,CAAC,SAAS,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,IAAI,CAAC,SAAU,CAAG,EAAG;QAChF,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS;MAC/B;IAED,CAAC,MAAM,IAAK,QAAQ,KAAK,OAAO,IAAI,cAAc,CAAC,IAAI,CAAE,GAAG,CAAC,IAAK,CAAC,EAAG;MAErE;MACA;MACA;;MAEA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO;;MAEhD;MACA;MACA,IAAK,IAAI,CAAC,KAAK,KAAK,GAAG,CAAC,KAAK,EAAG;QAC/B,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK;MACvB;;MAED;MACA;IACA,CAAC,MAAM,IAAK,QAAQ,KAAK,QAAQ,EAAG;MACnC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,eAAe;;MAE3D;MACA;IACA,CAAC,MAAM,IAAK,QAAQ,KAAK,OAAO,IAAI,QAAQ,KAAK,UAAU,EAAG;MAC7D,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,YAAY;IACrC;EACD;EAEA,SAAS,QAAQ,CAAE,UAAU,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAG;IAExD;IACA,IAAI,GAAG,MAAM,CAAC,KAAK,CAAE,EAAE,EAAE,IAAK,CAAC;IAE/B,IAAI,KAAK;MAAE,IAAI;MAAE,UAAU;MAC1B,OAAO;MAAE,GAAG;MAAE,QAAQ;MACtB,CAAC,GAAG,CAAC;MACL,CAAC,GAAG,UAAU,CAAC,MAAM;MACrB,QAAQ,GAAG,CAAC,GAAG,CAAC;MAChB,KAAK,GAAG,IAAI,CAAE,CAAC,CAAE;MACjB,UAAU,GAAG,MAAM,CAAC,UAAU,CAAE,KAAM,CAAC;;IAExC;IACA,IAAK,UAAU,IACX,CAAC,GAAG,CAAC,IAAI,OAAO,KAAK,KAAK,QAAQ,IACnC,CAAC,OAAO,CAAC,UAAU,IAAI,QAAQ,CAAC,IAAI,CAAE,KAAM,CAAG,EAAG;MACpD,OAAO,UAAU,CAAC,IAAI,CAAE,UAAU,KAAK,EAAG;QACzC,IAAI,IAAI,GAAG,UAAU,CAAC,EAAE,CAAE,KAAM,CAAC;QACjC,IAAK,UAAU,EAAG;UACjB,IAAI,CAAE,CAAC,CAAE,GAAG,KAAK,CAAC,IAAI,CAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAE,CAAC;QACnD;QACA,QAAQ,CAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAQ,CAAC;MAC1C,CAAE,CAAC;IACJ;IAEA,IAAK,CAAC,EAAG;MACR,QAAQ,GAAG,aAAa,CAAE,IAAI,EAAE,UAAU,CAAE,CAAC,CAAE,CAAC,aAAa,EAAE,KAAK,EAAE,UAAU,EAAE,OAAQ,CAAC;MAC3F,KAAK,GAAG,QAAQ,CAAC,UAAU;MAE3B,IAAK,QAAQ,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAG;QACvC,QAAQ,GAAG,KAAK;MACjB;;MAEA;MACA,IAAK,KAAK,IAAI,OAAO,EAAG;QACvB,OAAO,GAAG,MAAM,CAAC,GAAG,CAAE,MAAM,CAAE,QAAQ,EAAE,QAAS,CAAC,EAAE,aAAc,CAAC;QACnE,UAAU,GAAG,OAAO,CAAC,MAAM;;QAE3B;QACA;QACA;QACA,OAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAG;UACpB,IAAI,GAAG,QAAQ;UAEf,IAAK,CAAC,KAAK,QAAQ,EAAG;YACrB,IAAI,GAAG,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,IAAI,EAAE,IAAK,CAAC;;YAEvC;YACA,IAAK,UAAU,EAAG;cAEjB;cACA;cACA,MAAM,CAAC,KAAK,CAAE,OAAO,EAAE,MAAM,CAAE,IAAI,EAAE,QAAS,CAAE,CAAC;YAClD;UACD;UAEA,QAAQ,CAAC,IAAI,CAAE,UAAU,CAAE,CAAC,CAAE,EAAE,IAAI,EAAE,CAAE,CAAC;QAC1C;QAEA,IAAK,UAAU,EAAG;UACjB,GAAG,GAAG,OAAO,CAAE,OAAO,CAAC,MAAM,GAAG,CAAC,CAAE,CAAC,aAAa;;UAEjD;UACA,MAAM,CAAC,GAAG,CAAE,OAAO,EAAE,aAAc,CAAC;;UAEpC;UACA,KAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAG;YAClC,IAAI,GAAG,OAAO,CAAE,CAAC,CAAE;YACnB,IAAK,WAAW,CAAC,IAAI,CAAE,IAAI,CAAC,IAAI,IAAI,EAAG,CAAC,IACvC,CAAC,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,YAAa,CAAC,IACnC,MAAM,CAAC,QAAQ,CAAE,GAAG,EAAE,IAAK,CAAC,EAAG;cAE/B,IAAK,IAAI,CAAC,GAAG,EAAG;gBAEf;gBACA,IAAK,MAAM,CAAC,QAAQ,EAAG;kBACtB,MAAM,CAAC,QAAQ,CAAE,IAAI,CAAC,GAAI,CAAC;gBAC5B;cACD,CAAC,MAAM;gBACN,MAAM,CAAC,UAAU,CAChB,CAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,SAAS,IAAI,EAAE,EACrD,OAAO,CAAE,YAAY,EAAE,EAAG,CAC7B,CAAC;cACF;YACD;UACD;QACD;;QAEA;QACA,QAAQ,GAAG,KAAK,GAAG,IAAI;MACxB;IACD;IAEA,OAAO,UAAU;EAClB;EAEA,SAAS,OAAM,CAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAG;IAC3C,IAAI,IAAI;MACP,KAAK,GAAG,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAE,QAAQ,EAAE,IAAK,CAAC,GAAG,IAAI;MACzD,CAAC,GAAG,CAAC;IAEN,OAAQ,CAAE,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE,KAAM,IAAI,EAAE,CAAC,EAAE,EAAG;MAE5C,IAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAG;QACvC,MAAM,CAAC,SAAS,CAAE,MAAM,CAAE,IAAK,CAAE,CAAC;MACnC;MAEA,IAAK,IAAI,CAAC,UAAU,EAAG;QACtB,IAAK,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAE,IAAI,CAAC,aAAa,EAAE,IAAK,CAAC,EAAG;UAC9D,aAAa,CAAE,MAAM,CAAE,IAAI,EAAE,QAAS,CAAE,CAAC;QAC1C;QACA,IAAI,CAAC,UAAU,CAAC,WAAW,CAAE,IAAK,CAAC;MACpC;IACD;IAEA,OAAO,IAAI;EACZ;EAEA,MAAM,CAAC,MAAM,CAAE;IACd,aAAa,EAAE,SAAA,cAAU,IAAI,EAAG;MAC/B,OAAO,IAAI,CAAC,OAAO,CAAE,SAAS,EAAE,WAAY,CAAC;IAC9C,CAAC;IAED,KAAK,EAAE,SAAA,MAAU,IAAI,EAAE,aAAa,EAAE,iBAAiB,EAAG;MACzD,IAAI,YAAY;QAAE,IAAI;QAAE,KAAK;QAAE,CAAC;QAAE,WAAW;QAC5C,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAE,IAAI,CAAC,aAAa,EAAE,IAAK,CAAC;MAErD,IAAK,OAAO,CAAC,UAAU,IAAI,MAAM,CAAC,QAAQ,CAAE,IAAK,CAAC,IACjD,CAAC,YAAY,CAAC,IAAI,CAAE,GAAG,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAI,CAAC,EAAG;QAElD,KAAK,GAAG,IAAI,CAAC,SAAS,CAAE,IAAK,CAAC;;QAE/B;MACA,CAAC,MAAM;QACN,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS;QACtC,WAAW,CAAC,WAAW,CAAE,KAAK,GAAG,WAAW,CAAC,UAAW,CAAC;MAC1D;MAEA,IAAK,CAAE,CAAC,OAAO,CAAC,YAAY,IAAI,CAAC,OAAO,CAAC,cAAc,MACnD,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,KAAK,EAAE,CAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAE,IAAK,CAAC,EAAG;QAE/E;QACA,YAAY,GAAG,MAAM,CAAE,KAAM,CAAC;QAC9B,WAAW,GAAG,MAAM,CAAE,IAAK,CAAC;;QAE5B;QACA,KAAM,CAAC,GAAG,CAAC,EAAE,CAAE,IAAI,GAAG,WAAW,CAAE,CAAC,CAAE,KAAM,IAAI,EAAE,EAAE,CAAC,EAAG;UAEvD;UACA,IAAK,YAAY,CAAE,CAAC,CAAE,EAAG;YACxB,kBAAkB,CAAE,IAAI,EAAE,YAAY,CAAE,CAAC,CAAG,CAAC;UAC9C;QACD;MACD;;MAEA;MACA,IAAK,aAAa,EAAG;QACpB,IAAK,iBAAiB,EAAG;UACxB,WAAW,GAAG,WAAW,IAAI,MAAM,CAAE,IAAK,CAAC;UAC3C,YAAY,GAAG,YAAY,IAAI,MAAM,CAAE,KAAM,CAAC;UAE9C,KAAM,CAAC,GAAG,CAAC,EAAE,CAAE,IAAI,GAAG,WAAW,CAAE,CAAC,CAAE,KAAM,IAAI,EAAE,CAAC,EAAE,EAAG;YACvD,cAAc,CAAE,IAAI,EAAE,YAAY,CAAE,CAAC,CAAG,CAAC;UAC1C;QACD,CAAC,MAAM;UACN,cAAc,CAAE,IAAI,EAAE,KAAM,CAAC;QAC9B;MACD;;MAEA;MACA,YAAY,GAAG,MAAM,CAAE,KAAK,EAAE,QAAS,CAAC;MACxC,IAAK,YAAY,CAAC,MAAM,GAAG,CAAC,EAAG;QAC9B,aAAa,CAAE,YAAY,EAAE,CAAC,MAAM,IAAI,MAAM,CAAE,IAAI,EAAE,QAAS,CAAE,CAAC;MACnE;MAEA,YAAY,GAAG,WAAW,GAAG,IAAI,GAAG,IAAI;;MAExC;MACA,OAAO,KAAK;IACb,CAAC;IAED,SAAS,EAAE,SAAA,UAAU,KAAK,EAAE,cAAe,eAAe,EAAG;MAC5D,IAAI,IAAI;QAAE,IAAI;QAAE,EAAE;QAAE,IAAI;QACvB,CAAC,GAAG,CAAC;QACL,WAAW,GAAG,MAAM,CAAC,OAAO;QAC5B,KAAK,GAAG,MAAM,CAAC,KAAK;QACpB,UAAU,GAAG,OAAO,CAAC,UAAU;QAC/B,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO;MAE/B,OAAQ,CAAE,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE,KAAM,IAAI,EAAE,CAAC,EAAE,EAAG;QAC5C,IAAK,eAAe,IAAI,UAAU,CAAE,IAAK,CAAC,EAAG;UAE5C,EAAE,GAAG,IAAI,CAAE,WAAW,CAAE;UACxB,IAAI,GAAG,EAAE,IAAI,KAAK,CAAE,EAAE,CAAE;UAExB,IAAK,IAAI,EAAG;YACX,IAAK,IAAI,CAAC,MAAM,EAAG;cAClB,KAAM,IAAI,IAAI,IAAI,CAAC,MAAM,EAAG;gBAC3B,IAAK,OAAO,CAAE,IAAI,CAAE,EAAG;kBACtB,MAAM,CAAC,KAAK,CAAC,MAAM,CAAE,IAAI,EAAE,IAAK,CAAC;;kBAElC;gBACA,CAAC,MAAM;kBACN,MAAM,CAAC,WAAW,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,MAAO,CAAC;gBAC9C;cACD;YACD;;YAEA;YACA,IAAK,KAAK,CAAE,EAAE,CAAE,EAAG;cAElB,OAAO,KAAK,CAAE,EAAE,CAAE;;cAElB;cACA;cACA;cACA;cACA,IAAK,CAAC,UAAU,IAAI,OAAO,IAAI,CAAC,eAAe,KAAK,WAAW,EAAG;gBACjE,IAAI,CAAC,eAAe,CAAE,WAAY,CAAC;;gBAEpC;gBACA;gBACA;cACA,CAAC,MAAM;gBACN,IAAI,CAAE,WAAW,CAAE,GAAG,SAAS;cAChC;cAEA,UAAU,CAAC,IAAI,CAAE,EAAG,CAAC;YACtB;UACD;QACD;MACD;IACD;EACD,CAAE,CAAC;EAEH,MAAM,CAAC,EAAE,CAAC,MAAM,CAAE;IAEjB;IACA,QAAQ,EAAE,QAAQ;IAElB,MAAM,EAAE,SAAA,OAAU,QAAQ,EAAG;MAC5B,OAAO,OAAM,CAAE,IAAI,EAAE,QAAQ,EAAE,IAAK,CAAC;IACtC,CAAC;IAED,MAAM,EAAE,SAAA,OAAU,QAAQ,EAAG;MAC5B,OAAO,OAAM,CAAE,IAAI,EAAE,QAAS,CAAC;IAChC,CAAC;IAED,IAAI,EAAE,SAAA,KAAU,KAAK,EAAG;MACvB,OAAO,MAAM,CAAE,IAAI,EAAE,UAAU,KAAK,EAAG;QACtC,OAAO,KAAK,KAAK,SAAS,GACzB,MAAM,CAAC,IAAI,CAAE,IAAK,CAAC,GACnB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAClB,CAAE,IAAI,CAAE,CAAC,CAAE,IAAI,IAAI,CAAE,CAAC,CAAE,CAAC,aAAa,IAAI,QAAQ,EAAG,cAAc,CAAE,KAAM,CAC5E,CAAC;MACH,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,CAAC,MAAO,CAAC;IACnC,CAAC;IAED,MAAM,EAAE,SAAA,OAAA,EAAW;MAClB,OAAO,QAAQ,CAAE,IAAI,EAAE,SAAS,EAAE,UAAU,IAAI,EAAG;QAClD,IAAK,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,KAAK,EAAE,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAG;UACzE,IAAI,MAAM,GAAG,kBAAkB,CAAE,IAAI,EAAE,IAAK,CAAC;UAC7C,MAAM,CAAC,WAAW,CAAE,IAAK,CAAC;QAC3B;MACD,CAAE,CAAC;IACJ,CAAC;IAED,OAAO,EAAE,SAAA,QAAA,EAAW;MACnB,OAAO,QAAQ,CAAE,IAAI,EAAE,SAAS,EAAE,UAAU,IAAI,EAAG;QAClD,IAAK,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,KAAK,EAAE,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAG;UACzE,IAAI,MAAM,GAAG,kBAAkB,CAAE,IAAI,EAAE,IAAK,CAAC;UAC7C,MAAM,CAAC,YAAY,CAAE,IAAI,EAAE,MAAM,CAAC,UAAW,CAAC;QAC/C;MACD,CAAE,CAAC;IACJ,CAAC;IAED,MAAM,EAAE,SAAA,OAAA,EAAW;MAClB,OAAO,QAAQ,CAAE,IAAI,EAAE,SAAS,EAAE,UAAU,IAAI,EAAG;QAClD,IAAK,IAAI,CAAC,UAAU,EAAG;UACtB,IAAI,CAAC,UAAU,CAAC,YAAY,CAAE,IAAI,EAAE,IAAK,CAAC;QAC3C;MACD,CAAE,CAAC;IACJ,CAAC;IAED,KAAK,EAAE,SAAA,MAAA,EAAW;MACjB,OAAO,QAAQ,CAAE,IAAI,EAAE,SAAS,EAAE,UAAU,IAAI,EAAG;QAClD,IAAK,IAAI,CAAC,UAAU,EAAG;UACtB,IAAI,CAAC,UAAU,CAAC,YAAY,CAAE,IAAI,EAAE,IAAI,CAAC,WAAY,CAAC;QACvD;MACD,CAAE,CAAC;IACJ,CAAC;IAED,KAAK,EAAE,SAAA,MAAA,EAAW;MACjB,IAAI,IAAI;QACP,CAAC,GAAG,CAAC;MAEN,OAAQ,CAAE,IAAI,GAAG,IAAI,CAAE,CAAC,CAAE,KAAM,IAAI,EAAE,CAAC,EAAE,EAAG;QAE3C;QACA,IAAK,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAG;UAC1B,MAAM,CAAC,SAAS,CAAE,MAAM,CAAE,IAAI,EAAE,KAAM,CAAE,CAAC;QAC1C;;QAEA;QACA,OAAQ,IAAI,CAAC,UAAU,EAAG;UACzB,IAAI,CAAC,WAAW,CAAE,IAAI,CAAC,UAAW,CAAC;QACpC;;QAEA;QACA;QACA,IAAK,IAAI,CAAC,OAAO,IAAI,MAAM,CAAC,QAAQ,CAAE,IAAI,EAAE,QAAS,CAAC,EAAG;UACxD,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC;QACxB;MACD;MAEA,OAAO,IAAI;IACZ,CAAC;IAED,KAAK,EAAE,SAAA,MAAU,aAAa,EAAE,iBAAiB,EAAG;MACnD,aAAa,GAAG,aAAa,IAAI,IAAI,GAAG,KAAK,GAAG,aAAa;MAC7D,iBAAiB,GAAG,iBAAiB,IAAI,IAAI,GAAG,aAAa,GAAG,iBAAiB;MAEjF,OAAO,IAAI,CAAC,GAAG,CAAE,YAAW;QAC3B,OAAO,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,aAAa,EAAE,iBAAkB,CAAC;MAC9D,CAAE,CAAC;IACJ,CAAC;IAED,IAAI,EAAE,SAAA,KAAU,KAAK,EAAG;MACvB,OAAO,MAAM,CAAE,IAAI,EAAE,UAAU,KAAK,EAAG;QACtC,IAAI,IAAI,GAAG,IAAI,CAAE,CAAC,CAAE,IAAI,CAAC,CAAC;UACzB,CAAC,GAAG,CAAC;UACL,CAAC,GAAG,IAAI,CAAC,MAAM;QAEhB,IAAK,KAAK,KAAK,SAAS,EAAG;UAC1B,OAAO,IAAI,CAAC,QAAQ,KAAK,CAAC,GACzB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAE,aAAa,EAAE,EAAG,CAAC,GAC3C,SAAS;QACX;;QAEA;QACA,IAAK,OAAO,KAAK,KAAK,QAAQ,IAAI,CAAC,YAAY,CAAC,IAAI,CAAE,KAAM,CAAC,KAC1D,OAAO,CAAC,aAAa,IAAI,CAAC,YAAY,CAAC,IAAI,CAAE,KAAM,CAAC,CAAG,KACvD,OAAO,CAAC,iBAAiB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAE,KAAM,CAAC,CAAE,IAClE,CAAC,OAAO,CAAE,CAAE,QAAQ,CAAC,IAAI,CAAE,KAAM,CAAC,IAAI,CAAE,EAAE,EAAE,EAAE,CAAE,EAAI,CAAC,CAAE,CAAC,WAAW,CAAC,CAAC,CAAE,EAAG;UAE1E,KAAK,GAAG,MAAM,CAAC,aAAa,CAAE,KAAM,CAAC;UAErC,IAAI;YACH,OAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAG;cAEpB;cACA,IAAI,GAAG,IAAI,CAAE,CAAC,CAAE,IAAI,CAAC,CAAC;cACtB,IAAK,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAG;gBAC1B,MAAM,CAAC,SAAS,CAAE,MAAM,CAAE,IAAI,EAAE,KAAM,CAAE,CAAC;gBACzC,IAAI,CAAC,SAAS,GAAG,KAAK;cACvB;YACD;YAEA,IAAI,GAAG,CAAC;;YAET;UACA,CAAC,CAAC,OAAQ,CAAC,EAAG,CAAC;QAChB;QAEA,IAAK,IAAI,EAAG;UACX,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAE,KAAM,CAAC;QAC7B;MACD,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,CAAC,MAAO,CAAC;IACnC,CAAC;IAED,WAAW,EAAE,SAAA,YAAA,EAAW;MACvB,IAAI,OAAO,GAAG,EAAE;;MAEhB;MACA,OAAO,QAAQ,CAAE,IAAI,EAAE,SAAS,EAAE,UAAU,IAAI,EAAG;QAClD,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU;QAE5B,IAAK,MAAM,CAAC,OAAO,CAAE,IAAI,EAAE,OAAQ,CAAC,GAAG,CAAC,EAAG;UAC1C,MAAM,CAAC,SAAS,CAAE,MAAM,CAAE,IAAK,CAAE,CAAC;UAClC,IAAK,MAAM,EAAG;YACb,MAAM,CAAC,YAAY,CAAE,IAAI,EAAE,IAAK,CAAC;UAClC;QACD;;QAED;MACA,CAAC,EAAE,OAAQ,CAAC;IACb;EACD,CAAE,CAAC;EAEH,MAAM,CAAC,IAAI,CAAE;IACZ,QAAQ,EAAE,QAAQ;IAClB,SAAS,EAAE,SAAS;IACpB,YAAY,EAAE,QAAQ;IACtB,WAAW,EAAE,OAAO;IACpB,UAAU,EAAE;EACb,CAAC,EAAE,UAAU,IAAI,EAAE,QAAQ,EAAG;IAC7B,MAAM,CAAC,EAAE,CAAE,IAAI,CAAE,GAAG,UAAU,QAAQ,EAAG;MACxC,IAAI,KAAK;QACR,CAAC,GAAG,CAAC;QACL,GAAG,GAAG,EAAE;QACR,MAAM,GAAG,MAAM,CAAE,QAAS,CAAC;QAC3B,IAAI,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC;MAEzB,OAAQ,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE,EAAG;QACxB,KAAK,GAAG,CAAC,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,KAAK,CAAE,IAAK,CAAC;QAC9C,MAAM,CAAE,MAAM,CAAE,CAAC,CAAG,CAAC,CAAE,QAAQ,CAAE,CAAE,KAAM,CAAC;;QAE1C;QACA,IAAI,CAAC,KAAK,CAAE,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAE,CAAC;MAC/B;MAEA,OAAO,IAAI,CAAC,SAAS,CAAE,GAAI,CAAC;IAC7B,CAAC;EACF,CAAE,CAAC;EAGH,IAAI,MAAM;IACT,WAAW,GAAG;MAEb;MACA;MACA,IAAI,EAAE,OAAO;MACb,IAAI,EAAE;IACP,CAAC;;EAEF;AACA;AACA;AACA;AACA;;EAEA;EACA,SAAS,aAAa,CAAE,IAAI,EAAE,GAAG,EAAG;IACnC,IAAI,IAAI,GAAG,MAAM,CAAE,GAAG,CAAC,aAAa,CAAE,IAAK,CAAE,CAAC,CAAC,QAAQ,CAAE,GAAG,CAAC,IAAK,CAAC;MAElE,OAAO,GAAG,MAAM,CAAC,GAAG,CAAE,IAAI,CAAE,CAAC,CAAE,EAAE,SAAU,CAAC;;IAE7C;IACA;IACA,IAAI,CAAC,MAAM,CAAC,CAAC;IAEb,OAAO,OAAO;EACf;;EAEA;AACA;AACA;AACA;EACA,SAAS,cAAc,CAAE,QAAQ,EAAG;IACnC,IAAI,GAAG,GAAG,QAAQ;MACjB,OAAO,GAAG,WAAW,CAAE,QAAQ,CAAE;IAElC,IAAK,CAAC,OAAO,EAAG;MACf,OAAO,GAAG,aAAa,CAAE,QAAQ,EAAE,GAAI,CAAC;;MAExC;MACA,IAAK,OAAO,KAAK,MAAM,IAAI,CAAC,OAAO,EAAG;QAErC;QACA,MAAM,GAAG,CAAE,MAAM,IAAI,MAAM,CAAE,gDAAiD,CAAC,EAC7E,QAAQ,CAAE,GAAG,CAAC,eAAgB,CAAC;;QAEjC;QACA,GAAG,GAAG,CAAE,MAAM,CAAE,CAAC,CAAE,CAAC,aAAa,IAAI,MAAM,CAAE,CAAC,CAAE,CAAC,eAAe,EAAG,QAAQ;;QAE3E;QACA,GAAG,CAAC,KAAK,CAAC,CAAC;QACX,GAAG,CAAC,KAAK,CAAC,CAAC;QAEX,OAAO,GAAG,aAAa,CAAE,QAAQ,EAAE,GAAI,CAAC;QACxC,MAAM,CAAC,MAAM,CAAC,CAAC;MAChB;;MAEA;MACA,WAAW,CAAE,QAAQ,CAAE,GAAG,OAAO;IAClC;IAEA,OAAO,OAAO;EACf;EACA,IAAI,OAAO,GAAK,SAAW;EAE3B,IAAI,SAAS,GAAG,IAAI,MAAM,CAAE,IAAI,GAAG,IAAI,GAAG,iBAAiB,EAAE,GAAI,CAAC;EAElE,IAAI,IAAI,GAAG,SAAP,IAAI,CAAa,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAG;IACpD,IAAI,GAAG;MAAE,IAAI;MACZ,GAAG,GAAG,CAAC,CAAC;;IAET;IACA,KAAM,IAAI,IAAI,OAAO,EAAG;MACvB,GAAG,CAAE,IAAI,CAAE,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAE;MAChC,IAAI,CAAC,KAAK,CAAE,IAAI,CAAE,GAAG,OAAO,CAAE,IAAI,CAAE;IACrC;IAEA,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAE,IAAI,EAAE,IAAI,IAAI,EAAG,CAAC;;IAExC;IACA,KAAM,IAAI,IAAI,OAAO,EAAG;MACvB,IAAI,CAAC,KAAK,CAAE,IAAI,CAAE,GAAG,GAAG,CAAE,IAAI,CAAE;IACjC;IAEA,OAAO,GAAG;EACX,CAAC;EAGD,IAAI,eAAe,GAAG,QAAQ,CAAC,eAAe;EAI9C,CAAE,YAAW;IACZ,IAAI,gBAAgB;MAAE,mBAAmB;MAAE,oBAAoB;MAC9D,wBAAwB;MAAE,sBAAsB;MAAE,qBAAqB;MACvE,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAE,KAAM,CAAC;MAC3C,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAE,KAAM,CAAC;;IAEtC;IACA,IAAK,CAAC,GAAG,CAAC,KAAK,EAAG;MACjB;IACD;IAEA,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,uBAAuB;;IAE3C;IACA;IACA,OAAO,CAAC,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,KAAK,KAAK;;IAE7C;IACA;IACA,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ;IAEvC,GAAG,CAAC,KAAK,CAAC,cAAc,GAAG,aAAa;IACxC,GAAG,CAAC,SAAS,CAAE,IAAK,CAAC,CAAC,KAAK,CAAC,cAAc,GAAG,EAAE;IAC/C,OAAO,CAAC,eAAe,GAAG,GAAG,CAAC,KAAK,CAAC,cAAc,KAAK,aAAa;IAEpE,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAE,KAAM,CAAC;IAC3C,SAAS,CAAC,KAAK,CAAC,OAAO,GAAG,iDAAiD,GAC1E,4CAA4C;IAC7C,GAAG,CAAC,SAAS,GAAG,EAAE;IAClB,SAAS,CAAC,WAAW,CAAE,GAAI,CAAC;;IAE5B;IACA;IACA,OAAO,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,SAAS,KAAK,EAAE,IAAI,GAAG,CAAC,KAAK,CAAC,YAAY,KAAK,EAAE,IAC9E,GAAG,CAAC,KAAK,CAAC,eAAe,KAAK,EAAE;IAEjC,MAAM,CAAC,MAAM,CAAE,OAAO,EAAE;MACvB,qBAAqB,EAAE,SAAA,sBAAA,EAAW;QACjC,IAAK,gBAAgB,IAAI,IAAI,EAAG;UAC/B,iBAAiB,CAAC,CAAC;QACpB;QACA,OAAO,wBAAwB;MAChC,CAAC;MAED,iBAAiB,EAAE,SAAA,kBAAA,EAAW;QAE7B;QACA;QACA,IAAK,gBAAgB,IAAI,IAAI,EAAG;UAC/B,iBAAiB,CAAC,CAAC;QACpB;QACA,OAAO,oBAAoB;MAC5B,CAAC;MAED,gBAAgB,EAAE,SAAA,iBAAA,EAAW;QAE5B;QACA,IAAK,gBAAgB,IAAI,IAAI,EAAG;UAC/B,iBAAiB,CAAC,CAAC;QACpB;QACA,OAAO,mBAAmB;MAC3B,CAAC;MAED,aAAa,EAAE,SAAA,cAAA,EAAW;QACzB,IAAK,gBAAgB,IAAI,IAAI,EAAG;UAC/B,iBAAiB,CAAC,CAAC;QACpB;QACA,OAAO,gBAAgB;MACxB,CAAC;MAED,mBAAmB,EAAE,SAAA,oBAAA,EAAW;QAE/B;QACA,IAAK,gBAAgB,IAAI,IAAI,EAAG;UAC/B,iBAAiB,CAAC,CAAC;QACpB;QACA,OAAO,sBAAsB;MAC9B,CAAC;MAED,kBAAkB,EAAE,SAAA,mBAAA,EAAW;QAE9B;QACA,IAAK,gBAAgB,IAAI,IAAI,EAAG;UAC/B,iBAAiB,CAAC,CAAC;QACpB;QACA,OAAO,qBAAqB;MAC7B;IACD,CAAE,CAAC;IAEH,SAAS,iBAAiB,CAAA,EAAG;MAC5B,IAAI,QAAQ;QAAE,QAAQ;QACrB,eAAe,GAAG,QAAQ,CAAC,eAAe;;MAE3C;MACA,eAAe,CAAC,WAAW,CAAE,SAAU,CAAC;MAExC,GAAG,CAAC,KAAK,CAAC,OAAO;MAEhB;MACA;MACA,sDAAsD,GACtD,kCAAkC,GAClC,qCAAqC,GACrC,kBAAkB;;MAEnB;MACA;MACA,gBAAgB,GAAG,oBAAoB,GAAG,qBAAqB,GAAG,KAAK;MACvE,mBAAmB,GAAG,sBAAsB,GAAG,IAAI;;MAEnD;MACA,IAAK,MAAM,CAAC,gBAAgB,EAAG;QAC9B,QAAQ,GAAG,MAAM,CAAC,gBAAgB,CAAE,GAAI,CAAC;QACzC,gBAAgB,GAAG,CAAE,QAAQ,IAAI,CAAC,CAAC,EAAG,GAAG,KAAK,IAAI;QAClD,qBAAqB,GAAG,CAAE,QAAQ,IAAI,CAAC,CAAC,EAAG,UAAU,KAAK,KAAK;QAC/D,oBAAoB,GAAG,CAAE,QAAQ,IAAI;UAAE,KAAK,EAAE;QAAM,CAAC,EAAG,KAAK,KAAK,KAAK;;QAEvE;QACA;QACA,GAAG,CAAC,KAAK,CAAC,WAAW,GAAG,KAAK;QAC7B,mBAAmB,GAAG,CAAE,QAAQ,IAAI;UAAE,WAAW,EAAE;QAAM,CAAC,EAAG,WAAW,KAAK,KAAK;;QAElF;QACA;QACA;QACA;QACA,QAAQ,GAAG,GAAG,CAAC,WAAW,CAAE,QAAQ,CAAC,aAAa,CAAE,KAAM,CAAE,CAAC;;QAE7D;QACA,QAAQ,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO;QAEzC;QACA;QACA,6DAA6D,GAC7D,kEAAkE;QACnE,QAAQ,CAAC,KAAK,CAAC,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG;QACvD,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK;QAEvB,sBAAsB,GACrB,CAAC,UAAU,CAAE,CAAE,MAAM,CAAC,gBAAgB,CAAE,QAAS,CAAC,IAAI,CAAC,CAAC,EAAG,WAAY,CAAC;QAEzE,GAAG,CAAC,WAAW,CAAE,QAAS,CAAC;MAC5B;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM;MAC1B,wBAAwB,GAAG,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC;MAC5D,IAAK,wBAAwB,EAAG;QAC/B,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE;QACtB,GAAG,CAAC,SAAS,GAAG,6CAA6C;QAC7D,GAAG,CAAC,UAAU,CAAE,CAAC,CAAE,CAAC,KAAK,CAAC,cAAc,GAAG,UAAU;QACrD,QAAQ,GAAG,GAAG,CAAC,oBAAoB,CAAE,IAAK,CAAC;QAC3C,QAAQ,CAAE,CAAC,CAAE,CAAC,KAAK,CAAC,OAAO,GAAG,0CAA0C;QACxE,wBAAwB,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAC,YAAY,KAAK,CAAC;QAC3D,IAAK,wBAAwB,EAAG;UAC/B,QAAQ,CAAE,CAAC,CAAE,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE;UAChC,QAAQ,CAAE,CAAC,CAAE,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM;UACpC,wBAAwB,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAC,YAAY,KAAK,CAAC;QAC5D;MACD;;MAEA;MACA,eAAe,CAAC,WAAW,CAAE,SAAU,CAAC;IACzC;EAED,CAAC,EAAG,CAAC;EAGL,IAAI,SAAS;IAAE,MAAM;IACpB,SAAS,GAAG,2BAA2B;EAExC,IAAK,MAAM,CAAC,gBAAgB,EAAG;IAC9B,SAAS,GAAG,SAAA,UAAU,IAAI,EAAG;MAE5B;MACA;MACA;MACA,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW;MAEzC,IAAK,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAG;QAC5B,IAAI,GAAG,MAAM;MACd;MAEA,OAAO,IAAI,CAAC,gBAAgB,CAAE,IAAK,CAAC;IACrC,CAAC;IAED,MAAM,GAAG,SAAA,OAAU,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAG;MACzC,IAAI,KAAK;QAAE,QAAQ;QAAE,QAAQ;QAAE,GAAG;QACjC,KAAK,GAAG,IAAI,CAAC,KAAK;MAEnB,QAAQ,GAAG,QAAQ,IAAI,SAAS,CAAE,IAAK,CAAC;;MAExC;MACA,GAAG,GAAG,QAAQ,GAAG,QAAQ,CAAC,gBAAgB,CAAE,IAAK,CAAC,IAAI,QAAQ,CAAE,IAAI,CAAE,GAAG,SAAS;;MAElF;MACA;MACA;MACA,IAAK,CAAE,GAAG,KAAK,EAAE,IAAI,GAAG,KAAK,SAAS,KAAM,CAAC,MAAM,CAAC,QAAQ,CAAE,IAAI,CAAC,aAAa,EAAE,IAAK,CAAC,EAAG;QAC1F,GAAG,GAAG,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,IAAK,CAAC;MACjC;MAEA,IAAK,QAAQ,EAAG;QAEf;QACA;QACA;QACA;QACA;QACA;QACA;QACA,IAAK,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,IAAI,SAAS,CAAC,IAAI,CAAE,GAAI,CAAC,IAAI,OAAO,CAAC,IAAI,CAAE,IAAK,CAAC,EAAG;UAEnF;UACA,KAAK,GAAG,KAAK,CAAC,KAAK;UACnB,QAAQ,GAAG,KAAK,CAAC,QAAQ;UACzB,QAAQ,GAAG,KAAK,CAAC,QAAQ;;UAEzB;UACA,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,GAAG,GAAG;UACnD,GAAG,GAAG,QAAQ,CAAC,KAAK;;UAEpB;UACA,KAAK,CAAC,KAAK,GAAG,KAAK;UACnB,KAAK,CAAC,QAAQ,GAAG,QAAQ;UACzB,KAAK,CAAC,QAAQ,GAAG,QAAQ;QAC1B;MACD;;MAEA;MACA;MACA,OAAO,GAAG,KAAK,SAAS,GACvB,GAAG,GACH,GAAG,GAAG,EAAE;IACV,CAAC;EACF,CAAC,MAAM,IAAK,eAAe,CAAC,YAAY,EAAG;IAC1C,SAAS,GAAG,SAAA,UAAU,IAAI,EAAG;MAC5B,OAAO,IAAI,CAAC,YAAY;IACzB,CAAC;IAED,MAAM,GAAG,SAAA,OAAU,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAG;MACzC,IAAI,IAAI;QAAE,EAAE;QAAE,MAAM;QAAE,GAAG;QACxB,KAAK,GAAG,IAAI,CAAC,KAAK;MAEnB,QAAQ,GAAG,QAAQ,IAAI,SAAS,CAAE,IAAK,CAAC;MACxC,GAAG,GAAG,QAAQ,GAAG,QAAQ,CAAE,IAAI,CAAE,GAAG,SAAS;;MAE7C;MACA;MACA,IAAK,GAAG,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,CAAE,IAAI,CAAE,EAAG;QAC5C,GAAG,GAAG,KAAK,CAAE,IAAI,CAAE;MACpB;;MAEA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA,IAAK,SAAS,CAAC,IAAI,CAAE,GAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAE,IAAK,CAAC,EAAG;QAEvD;QACA,IAAI,GAAG,KAAK,CAAC,IAAI;QACjB,EAAE,GAAG,IAAI,CAAC,YAAY;QACtB,MAAM,GAAG,EAAE,IAAI,EAAE,CAAC,IAAI;;QAEtB;QACA,IAAK,MAAM,EAAG;UACb,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI;QACjC;QACA,KAAK,CAAC,IAAI,GAAG,IAAI,KAAK,UAAU,GAAG,KAAK,GAAG,GAAG;QAC9C,GAAG,GAAG,KAAK,CAAC,SAAS,GAAG,IAAI;;QAE5B;QACA,KAAK,CAAC,IAAI,GAAG,IAAI;QACjB,IAAK,MAAM,EAAG;UACb,EAAE,CAAC,IAAI,GAAG,MAAM;QACjB;MACD;;MAEA;MACA;MACA,OAAO,GAAG,KAAK,SAAS,GACvB,GAAG,GACH,GAAG,GAAG,EAAE,IAAI,MAAM;IACpB,CAAC;EACF;EAKA,SAAS,YAAY,CAAE,WAAW,EAAE,MAAM,EAAG;IAE5C;IACA,OAAO;MACN,GAAG,EAAE,SAAA,IAAA,EAAW;QACf,IAAK,WAAW,CAAC,CAAC,EAAG;UAEpB;UACA;UACA,OAAO,IAAI,CAAC,GAAG;UACf;QACD;;QAEA;QACA,OAAO,CAAE,IAAI,CAAC,GAAG,GAAG,MAAM,EAAG,KAAK,CAAE,IAAI,EAAE,SAAU,CAAC;MACtD;IACD,CAAC;EACF;EAGA,IAEE,MAAM,GAAG,iBAAiB;IAC3B,QAAQ,GAAG,wBAAwB;IAEnC;IACA;IACA;IACA;IACA,YAAY,GAAG,2BAA2B;IAC1C,SAAS,GAAG,IAAI,MAAM,CAAE,IAAI,GAAG,IAAI,GAAG,QAAQ,EAAE,GAAI,CAAC;IAErD,OAAO,GAAG;MAAE,QAAQ,EAAE,UAAU;MAAE,UAAU,EAAE,QAAQ;MAAE,OAAO,EAAE;IAAQ,CAAC;IAC1E,kBAAkB,GAAG;MACpB,aAAa,EAAE,GAAG;MAClB,UAAU,EAAE;IACb,CAAC;IAED,WAAW,GAAG,CAAE,QAAQ,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,CAAE;IAC5C,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAE,KAAM,CAAC,CAAC,KAAK;;EAGnD;EACA,SAAS,cAAc,CAAE,IAAI,EAAG;IAE/B;IACA,IAAK,IAAI,IAAI,UAAU,EAAG;MACzB,OAAO,IAAI;IACZ;;IAEA;IACA,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAE,CAAE,CAAC,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAE,CAAE,CAAC;MAC7D,CAAC,GAAG,WAAW,CAAC,MAAM;IAEvB,OAAQ,CAAC,EAAE,EAAG;MACb,IAAI,GAAG,WAAW,CAAE,CAAC,CAAE,GAAG,OAAO;MACjC,IAAK,IAAI,IAAI,UAAU,EAAG;QACzB,OAAO,IAAI;MACZ;IACD;EACD;EAEA,SAAS,QAAQ,CAAE,QAAQ,EAAE,IAAI,EAAG;IACnC,IAAI,OAAO;MAAE,IAAI;MAAE,MAAM;MACxB,MAAM,GAAG,EAAE;MACX,KAAK,GAAG,CAAC;MACT,MAAM,GAAG,QAAQ,CAAC,MAAM;IAEzB,OAAQ,KAAK,GAAG,MAAM,EAAE,KAAK,EAAE,EAAG;MACjC,IAAI,GAAG,QAAQ,CAAE,KAAK,CAAE;MACxB,IAAK,CAAC,IAAI,CAAC,KAAK,EAAG;QAClB;MACD;MAEA,MAAM,CAAE,KAAK,CAAE,GAAG,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,YAAa,CAAC;MACpD,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO;MAC5B,IAAK,IAAI,EAAG;QAEX;QACA;QACA,IAAK,CAAC,MAAM,CAAE,KAAK,CAAE,IAAI,OAAO,KAAK,MAAM,EAAG;UAC7C,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE;QACxB;;QAEA;QACA;QACA;QACA,IAAK,IAAI,CAAC,KAAK,CAAC,OAAO,KAAK,EAAE,IAAI,QAAQ,CAAE,IAAK,CAAC,EAAG;UACpD,MAAM,CAAE,KAAK,CAAE,GACd,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,YAAY,EAAE,cAAc,CAAE,IAAI,CAAC,QAAS,CAAE,CAAC;QACrE;MACD,CAAC,MAAM;QACN,MAAM,GAAG,QAAQ,CAAE,IAAK,CAAC;QAEzB,IAAK,OAAO,IAAI,OAAO,KAAK,MAAM,IAAI,CAAC,MAAM,EAAG;UAC/C,MAAM,CAAC,KAAK,CACX,IAAI,EACJ,YAAY,EACZ,MAAM,GAAG,OAAO,GAAG,MAAM,CAAC,GAAG,CAAE,IAAI,EAAE,SAAU,CAChD,CAAC;QACF;MACD;IACD;;IAEA;IACA;IACA,KAAM,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,MAAM,EAAE,KAAK,EAAE,EAAG;MAC1C,IAAI,GAAG,QAAQ,CAAE,KAAK,CAAE;MACxB,IAAK,CAAC,IAAI,CAAC,KAAK,EAAG;QAClB;MACD;MACA,IAAK,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,KAAK,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,KAAK,EAAE,EAAG;QAC1E,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,GAAG,MAAM,CAAE,KAAK,CAAE,IAAI,EAAE,GAAG,MAAM;MAC3D;IACD;IAEA,OAAO,QAAQ;EAChB;EAEA,SAAS,iBAAiB,CAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAG;IACnD,IAAI,OAAO,GAAG,SAAS,CAAC,IAAI,CAAE,KAAM,CAAC;IACrC,OAAO,OAAO;IAEb;IACA,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,OAAO,CAAE,CAAC,CAAE,IAAK,QAAQ,IAAI,CAAC,CAAG,CAAC,IAAK,OAAO,CAAE,CAAC,CAAE,IAAI,IAAI,CAAE,GAC1E,KAAK;EACP;EAEA,SAAS,oBAAoB,CAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAG;IACvE,IAAI,CAAC,GAAG,KAAK,MAAO,WAAW,GAAG,QAAQ,GAAG,SAAS,CAAE;MAEvD;MACA,CAAC;MAED;MACA,IAAI,KAAK,OAAO,GAAG,CAAC,GAAG,CAAC;MAExB,GAAG,GAAG,CAAC;IAER,OAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAG;MAEvB;MACA,IAAK,KAAK,KAAK,QAAQ,EAAG;QACzB,GAAG,IAAI,MAAM,CAAC,GAAG,CAAE,IAAI,EAAE,KAAK,GAAG,SAAS,CAAE,CAAC,CAAE,EAAE,IAAI,EAAE,MAAO,CAAC;MAChE;MAEA,IAAK,WAAW,EAAG;QAElB;QACA,IAAK,KAAK,KAAK,SAAS,EAAG;UAC1B,GAAG,IAAI,MAAM,CAAC,GAAG,CAAE,IAAI,EAAE,SAAS,GAAG,SAAS,CAAE,CAAC,CAAE,EAAE,IAAI,EAAE,MAAO,CAAC;QACpE;;QAEA;QACA,IAAK,KAAK,KAAK,QAAQ,EAAG;UACzB,GAAG,IAAI,MAAM,CAAC,GAAG,CAAE,IAAI,EAAE,QAAQ,GAAG,SAAS,CAAE,CAAC,CAAE,GAAG,OAAO,EAAE,IAAI,EAAE,MAAO,CAAC;QAC7E;MACD,CAAC,MAAM;QAEN;QACA,GAAG,IAAI,MAAM,CAAC,GAAG,CAAE,IAAI,EAAE,SAAS,GAAG,SAAS,CAAE,CAAC,CAAE,EAAE,IAAI,EAAE,MAAO,CAAC;;QAEnE;QACA,IAAK,KAAK,KAAK,SAAS,EAAG;UAC1B,GAAG,IAAI,MAAM,CAAC,GAAG,CAAE,IAAI,EAAE,QAAQ,GAAG,SAAS,CAAE,CAAC,CAAE,GAAG,OAAO,EAAE,IAAI,EAAE,MAAO,CAAC;QAC7E;MACD;IACD;IAEA,OAAO,GAAG;EACX;EAEA,SAAS,gBAAgB,CAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAG;IAE9C;IACA,IAAI,gBAAgB,GAAG,IAAI;MAC1B,GAAG,GAAG,IAAI,KAAK,OAAO,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY;MAC7D,MAAM,GAAG,SAAS,CAAE,IAAK,CAAC;MAC1B,WAAW,GAAG,OAAO,CAAC,SAAS,IAC9B,MAAM,CAAC,GAAG,CAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,MAAO,CAAC,KAAK,YAAY;;IAEjE;IACA;IACA;IACA,IAAK,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,EAAG;MAE9B;MACA,GAAG,GAAG,MAAM,CAAE,IAAI,EAAE,IAAI,EAAE,MAAO,CAAC;MAClC,IAAK,GAAG,GAAG,CAAC,IAAI,GAAG,IAAI,IAAI,EAAG;QAC7B,GAAG,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAE;MACzB;;MAEA;MACA,IAAK,SAAS,CAAC,IAAI,CAAE,GAAI,CAAC,EAAG;QAC5B,OAAO,GAAG;MACX;;MAEA;MACA;MACA,gBAAgB,GAAG,WAAW,KAC3B,OAAO,CAAC,iBAAiB,CAAC,CAAC,IAAI,GAAG,KAAK,IAAI,CAAC,KAAK,CAAE,IAAI,CAAE,CAAE;;MAE9D;MACA,GAAG,GAAG,UAAU,CAAE,GAAI,CAAC,IAAI,CAAC;IAC7B;;IAEA;IACA,OAAS,GAAG,GACX,oBAAoB,CACnB,IAAI,EACJ,IAAI,EACJ,KAAK,KAAM,WAAW,GAAG,QAAQ,GAAG,SAAS,CAAE,EAC/C,gBAAgB,EAChB,MACD,CAAC,GACE,IAAI;EACT;EAEA,MAAM,CAAC,MAAM,CAAE;IAEd;IACA;IACA,QAAQ,EAAE;MACT,OAAO,EAAE;QACR,GAAG,EAAE,SAAA,IAAU,IAAI,EAAE,QAAQ,EAAG;UAC/B,IAAK,QAAQ,EAAG;YAEf;YACA,IAAI,GAAG,GAAG,MAAM,CAAE,IAAI,EAAE,SAAU,CAAC;YACnC,OAAO,GAAG,KAAK,EAAE,GAAG,GAAG,GAAG,GAAG;UAC9B;QACD;MACD;IACD,CAAC;IAED;IACA,SAAS,EAAE;MACV,yBAAyB,EAAE,IAAI;MAC/B,aAAa,EAAE,IAAI;MACnB,aAAa,EAAE,IAAI;MACnB,UAAU,EAAE,IAAI;MAChB,YAAY,EAAE,IAAI;MAClB,YAAY,EAAE,IAAI;MAClB,YAAY,EAAE,IAAI;MAClB,SAAS,EAAE,IAAI;MACf,OAAO,EAAE,IAAI;MACb,SAAS,EAAE,IAAI;MACf,QAAQ,EAAE,IAAI;MACd,QAAQ,EAAE,IAAI;MACd,MAAM,EAAE;IACT,CAAC;IAED;IACA;IACA,QAAQ,EAAE;MAET;MACA,OAAO,EAAE,OAAO,CAAC,QAAQ,GAAG,UAAU,GAAG;IAC1C,CAAC;IAED;IACA,KAAK,EAAE,SAAA,MAAU,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAG;MAE3C;MACA,IAAK,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAG;QACzE;MACD;;MAEA;MACA,IAAI,GAAG;QAAE,IAAI;QAAE,KAAK;QACnB,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAE,IAAK,CAAC;QACnC,KAAK,GAAG,IAAI,CAAC,KAAK;MAEnB,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAE,QAAQ,CAAE,KAC/B,MAAM,CAAC,QAAQ,CAAE,QAAQ,CAAE,GAAG,cAAc,CAAE,QAAS,CAAC,IAAI,QAAQ,CAAE;;MAEzE;MACA;MACA,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAE,IAAI,CAAE,IAAI,MAAM,CAAC,QAAQ,CAAE,QAAQ,CAAE;;MAE9D;MACA,IAAK,KAAK,KAAK,SAAS,EAAG;QAC1B,IAAI,GAAA,OAAA,CAAU,KAAK;;QAEnB;QACA,IAAK,IAAI,KAAK,QAAQ,KAAM,GAAG,GAAG,OAAO,CAAC,IAAI,CAAE,KAAM,CAAC,CAAE,IAAI,GAAG,CAAE,CAAC,CAAE,EAAG;UACvE,KAAK,GAAG,SAAS,CAAE,IAAI,EAAE,IAAI,EAAE,GAAI,CAAC;;UAEpC;UACA,IAAI,GAAG,QAAQ;QAChB;;QAEA;QACA,IAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,EAAG;UACvC;QACD;;QAEA;QACA,IAAK,IAAI,KAAK,QAAQ,EAAG;UACxB,KAAK,IAAI,GAAG,IAAI,GAAG,CAAE,CAAC,CAAE,KAAM,MAAM,CAAC,SAAS,CAAE,QAAQ,CAAE,GAAG,EAAE,GAAG,IAAI,CAAE;QACzE;;QAEA;QACA;QACA;QACA,IAAK,CAAC,OAAO,CAAC,eAAe,IAAI,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,OAAO,CAAE,YAAa,CAAC,KAAK,CAAC,EAAG;UACrF,KAAK,CAAE,IAAI,CAAE,GAAG,SAAS;QAC1B;;QAEA;QACA,IAAK,CAAC,KAAK,IAAI,EAAG,KAAK,IAAI,KAAK,CAAE,IACjC,CAAE,KAAK,GAAG,KAAK,CAAC,GAAG,CAAE,IAAI,EAAE,KAAK,EAAE,KAAM,CAAC,MAAO,SAAS,EAAG;UAE5D;UACA;UACA,IAAI;YACH,KAAK,CAAE,IAAI,CAAE,GAAG,KAAK;UACtB,CAAC,CAAC,OAAQ,CAAC,EAAG,CAAC;QAChB;MAED,CAAC,MAAM;QAEN;QACA,IAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAC3B,CAAE,GAAG,GAAG,KAAK,CAAC,GAAG,CAAE,IAAI,EAAE,KAAK,EAAE,KAAM,CAAC,MAAO,SAAS,EAAG;UAE1D,OAAO,GAAG;QACX;;QAEA;QACA,OAAO,KAAK,CAAE,IAAI,CAAE;MACrB;IACD,CAAC;IAED,GAAG,EAAE,SAAA,IAAU,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAG;MAC1C,IAAI,GAAG;QAAE,GAAG;QAAE,KAAK;QAClB,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAE,IAAK,CAAC;;MAEpC;MACA,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAE,QAAQ,CAAE,KAC/B,MAAM,CAAC,QAAQ,CAAE,QAAQ,CAAE,GAAG,cAAc,CAAE,QAAS,CAAC,IAAI,QAAQ,CAAE;;MAEzE;MACA;MACA,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAE,IAAI,CAAE,IAAI,MAAM,CAAC,QAAQ,CAAE,QAAQ,CAAE;;MAE9D;MACA,IAAK,KAAK,IAAI,KAAK,IAAI,KAAK,EAAG;QAC9B,GAAG,GAAG,KAAK,CAAC,GAAG,CAAE,IAAI,EAAE,IAAI,EAAE,KAAM,CAAC;MACrC;;MAEA;MACA,IAAK,GAAG,KAAK,SAAS,EAAG;QACxB,GAAG,GAAG,MAAM,CAAE,IAAI,EAAE,IAAI,EAAE,MAAO,CAAC;MACnC;;MAEA;MACA,IAAK,GAAG,KAAK,QAAQ,IAAI,IAAI,IAAI,kBAAkB,EAAG;QACrD,GAAG,GAAG,kBAAkB,CAAE,IAAI,CAAE;MACjC;;MAEA;MACA,IAAK,KAAK,KAAK,EAAE,IAAI,KAAK,EAAG;QAC5B,GAAG,GAAG,UAAU,CAAE,GAAI,CAAC;QACvB,OAAO,KAAK,KAAK,IAAI,IAAI,QAAQ,CAAE,GAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG;MAC1D;MACA,OAAO,GAAG;IACX;EACD,CAAE,CAAC;EAEH,MAAM,CAAC,IAAI,CAAE,CAAE,QAAQ,EAAE,OAAO,CAAE,EAAE,UAAU,CAAC,EAAE,IAAI,EAAG;IACvD,MAAM,CAAC,QAAQ,CAAE,IAAI,CAAE,GAAG;MACzB,GAAG,EAAE,SAAA,IAAU,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAG;QACtC,IAAK,QAAQ,EAAG;UAEf;UACA;UACA,OAAO,YAAY,CAAC,IAAI,CAAE,MAAM,CAAC,GAAG,CAAE,IAAI,EAAE,SAAU,CAAE,CAAC,IACxD,IAAI,CAAC,WAAW,KAAK,CAAC,GACrB,IAAI,CAAE,IAAI,EAAE,OAAO,EAAE,YAAW;YAC/B,OAAO,gBAAgB,CAAE,IAAI,EAAE,IAAI,EAAE,KAAM,CAAC;UAC7C,CAAE,CAAC,GACH,gBAAgB,CAAE,IAAI,EAAE,IAAI,EAAE,KAAM,CAAC;QACxC;MACD,CAAC;MAED,GAAG,EAAE,SAAA,IAAU,IAAI,EAAE,KAAK,EAAE,KAAK,EAAG;QACnC,IAAI,MAAM,GAAG,KAAK,IAAI,SAAS,CAAE,IAAK,CAAC;QACvC,OAAO,iBAAiB,CAAE,IAAI,EAAE,KAAK,EAAE,KAAK,GAC3C,oBAAoB,CACnB,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,OAAO,CAAC,SAAS,IAChB,MAAM,CAAC,GAAG,CAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,MAAO,CAAC,KAAK,YAAY,EAChE,MACD,CAAC,GAAG,CACL,CAAC;MACF;IACD,CAAC;EACF,CAAE,CAAC;EAEH,IAAK,CAAC,OAAO,CAAC,OAAO,EAAG;IACvB,MAAM,CAAC,QAAQ,CAAC,OAAO,GAAG;MACzB,GAAG,EAAE,SAAA,IAAU,IAAI,EAAE,QAAQ,EAAG;QAE/B;QACA,OAAO,QAAQ,CAAC,IAAI,CAAE,CAAE,QAAQ,IAAI,IAAI,CAAC,YAAY,GACpD,IAAI,CAAC,YAAY,CAAC,MAAM,GACxB,IAAI,CAAC,KAAK,CAAC,MAAM,KAAM,EAAG,CAAC,GACxB,IAAI,GAAG,UAAU,CAAE,MAAM,CAAC,EAAG,CAAC,GAAK,EAAE,GACvC,QAAQ,GAAG,GAAG,GAAG,EAAE;MACtB,CAAC;MAED,GAAG,EAAE,SAAA,IAAU,IAAI,EAAE,KAAK,EAAG;QAC5B,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK;UACrB,YAAY,GAAG,IAAI,CAAC,YAAY;UAChC,OAAO,GAAG,MAAM,CAAC,SAAS,CAAE,KAAM,CAAC,GAAG,gBAAgB,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE;UAC/E,MAAM,GAAG,YAAY,IAAI,YAAY,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,IAAI,EAAE;;QAEnE;QACA;QACA,KAAK,CAAC,IAAI,GAAG,CAAC;;QAEd;QACA;QACA;QACA,IAAK,CAAE,KAAK,IAAI,CAAC,IAAI,KAAK,KAAK,EAAE,KAC/B,MAAM,CAAC,IAAI,CAAE,MAAM,CAAC,OAAO,CAAE,MAAM,EAAE,EAAG,CAAE,CAAC,KAAK,EAAE,IAClD,KAAK,CAAC,eAAe,EAAG;UAEzB;UACA;UACA;UACA,KAAK,CAAC,eAAe,CAAE,QAAS,CAAC;;UAEjC;UACA;UACA,IAAK,KAAK,KAAK,EAAE,IAAI,YAAY,IAAI,CAAC,YAAY,CAAC,MAAM,EAAG;YAC3D;UACD;QACD;;QAEA;QACA,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAE,MAAO,CAAC,GACnC,MAAM,CAAC,OAAO,CAAE,MAAM,EAAE,OAAQ,CAAC,GACjC,MAAM,GAAG,GAAG,GAAG,OAAO;MACxB;IACD,CAAC;EACF;EAEA,MAAM,CAAC,QAAQ,CAAC,WAAW,GAAG,YAAY,CAAE,OAAO,CAAC,mBAAmB,EACtE,UAAU,IAAI,EAAE,QAAQ,EAAG;IAC1B,IAAK,QAAQ,EAAG;MACf,OAAO,IAAI,CAAE,IAAI,EAAE;QAAE,SAAS,EAAE;MAAe,CAAC,EAC/C,MAAM,EAAE,CAAE,IAAI,EAAE,aAAa,CAAG,CAAC;IACnC;EACD,CACD,CAAC;EAED,MAAM,CAAC,QAAQ,CAAC,UAAU,GAAG,YAAY,CAAE,OAAO,CAAC,kBAAkB,EACpE,UAAU,IAAI,EAAE,QAAQ,EAAG;IAC1B,IAAK,QAAQ,EAAG;MACf,OAAO,CACN,UAAU,CAAE,MAAM,CAAE,IAAI,EAAE,YAAa,CAAE,CAAC;MAE1C;MACA;MACA;MACA;MACE,MAAM,CAAC,QAAQ,CAAE,IAAI,CAAC,aAAa,EAAE,IAAK,CAAC,GAC5C,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,IAAI,GAChC,IAAI,CAAE,IAAI,EAAE;QAAE,UAAU,EAAE;MAAE,CAAC,EAAE,YAAW;QACzC,OAAO,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,IAAI;MACzC,CAAE,CAAC,GACJ,CAAC,CACD,IACE,IAAI;IACT;EACD,CACD,CAAC;;EAED;EACA,MAAM,CAAC,IAAI,CAAE;IACZ,MAAM,EAAE,EAAE;IACV,OAAO,EAAE,EAAE;IACX,MAAM,EAAE;EACT,CAAC,EAAE,UAAU,MAAM,EAAE,MAAM,EAAG;IAC7B,MAAM,CAAC,QAAQ,CAAE,MAAM,GAAG,MAAM,CAAE,GAAG;MACpC,MAAM,EAAE,SAAA,OAAU,KAAK,EAAG;QACzB,IAAI,CAAC,GAAG,CAAC;UACR,QAAQ,GAAG,CAAC,CAAC;UAEb;UACA,KAAK,GAAG,OAAO,KAAK,KAAK,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAE,GAAI,CAAC,GAAG,CAAE,KAAK,CAAE;QAEnE,OAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAG;UACpB,QAAQ,CAAE,MAAM,GAAG,SAAS,CAAE,CAAC,CAAE,GAAG,MAAM,CAAE,GAC3C,KAAK,CAAE,CAAC,CAAE,IAAI,KAAK,CAAE,CAAC,GAAG,CAAC,CAAE,IAAI,KAAK,CAAE,CAAC,CAAE;QAC5C;QAEA,OAAO,QAAQ;MAChB;IACD,CAAC;IAED,IAAK,CAAC,OAAO,CAAC,IAAI,CAAE,MAAO,CAAC,EAAG;MAC9B,MAAM,CAAC,QAAQ,CAAE,MAAM,GAAG,MAAM,CAAE,CAAC,GAAG,GAAG,iBAAiB;IAC3D;EACD,CAAE,CAAC;EAEH,MAAM,CAAC,EAAE,CAAC,MAAM,CAAE;IACjB,GAAG,EAAE,SAAA,IAAU,IAAI,EAAE,KAAK,EAAG;MAC5B,OAAO,MAAM,CAAE,IAAI,EAAE,UAAU,IAAI,EAAE,IAAI,EAAE,KAAK,EAAG;QAClD,IAAI,MAAM;UAAE,GAAG;UACd,GAAG,GAAG,CAAC,CAAC;UACR,CAAC,GAAG,CAAC;QAEN,IAAK,MAAM,CAAC,OAAO,CAAE,IAAK,CAAC,EAAG;UAC7B,MAAM,GAAG,SAAS,CAAE,IAAK,CAAC;UAC1B,GAAG,GAAG,IAAI,CAAC,MAAM;UAEjB,OAAQ,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAG;YACtB,GAAG,CAAE,IAAI,CAAE,CAAC,CAAE,CAAE,GAAG,MAAM,CAAC,GAAG,CAAE,IAAI,EAAE,IAAI,CAAE,CAAC,CAAE,EAAE,KAAK,EAAE,MAAO,CAAC;UAChE;UAEA,OAAO,GAAG;QACX;QAEA,OAAO,KAAK,KAAK,SAAS,GACzB,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,IAAI,EAAE,KAAM,CAAC,GACjC,MAAM,CAAC,GAAG,CAAE,IAAI,EAAE,IAAK,CAAC;MAC1B,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,CAAC,MAAM,GAAG,CAAE,CAAC;IACvC,CAAC;IACD,IAAI,EAAE,SAAA,KAAA,EAAW;MAChB,OAAO,QAAQ,CAAE,IAAI,EAAE,IAAK,CAAC;IAC9B,CAAC;IACD,IAAI,EAAE,SAAA,KAAA,EAAW;MAChB,OAAO,QAAQ,CAAE,IAAK,CAAC;IACxB,CAAC;IACD,MAAM,EAAE,SAAA,OAAU,KAAK,EAAG;MACzB,IAAK,OAAO,KAAK,KAAK,SAAS,EAAG;QACjC,OAAO,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;MACzC;MAEA,OAAO,IAAI,CAAC,IAAI,CAAE,YAAW;QAC5B,IAAK,QAAQ,CAAE,IAAK,CAAC,EAAG;UACvB,MAAM,CAAE,IAAK,CAAC,CAAC,IAAI,CAAC,CAAC;QACtB,CAAC,MAAM;UACN,MAAM,CAAE,IAAK,CAAC,CAAC,IAAI,CAAC,CAAC;QACtB;MACD,CAAE,CAAC;IACJ;EACD,CAAE,CAAC;EAGH,SAAS,KAAK,CAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAG;IAClD,OAAO,IAAI,KAAK,CAAC,SAAS,CAAC,IAAI,CAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,MAAO,CAAC;EACpE;EACA,MAAM,CAAC,KAAK,GAAG,KAAK;EAEpB,KAAK,CAAC,SAAS,GAAG;IACjB,WAAW,EAAE,KAAK;IAClB,IAAI,EAAE,SAAA,KAAU,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAG;MACxD,IAAI,CAAC,IAAI,GAAG,IAAI;MAChB,IAAI,CAAC,IAAI,GAAG,IAAI;MAChB,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,QAAQ;MAC9C,IAAI,CAAC,OAAO,GAAG,OAAO;MACtB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;MAClC,IAAI,CAAC,GAAG,GAAG,GAAG;MACd,IAAI,CAAC,IAAI,GAAG,IAAI,KAAM,MAAM,CAAC,SAAS,CAAE,IAAI,CAAE,GAAG,EAAE,GAAG,IAAI,CAAE;IAC7D,CAAC;IACD,GAAG,EAAE,SAAA,IAAA,EAAW;MACf,IAAI,KAAK,GAAG,KAAK,CAAC,SAAS,CAAE,IAAI,CAAC,IAAI,CAAE;MAExC,OAAO,KAAK,IAAI,KAAK,CAAC,GAAG,GACxB,KAAK,CAAC,GAAG,CAAE,IAAK,CAAC,GACjB,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAE,IAAK,CAAC;IACtC,CAAC;IACD,GAAG,EAAE,SAAA,IAAU,OAAO,EAAG;MACxB,IAAI,KAAK;QACR,KAAK,GAAG,KAAK,CAAC,SAAS,CAAE,IAAI,CAAC,IAAI,CAAE;MAErC,IAAK,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAG;QAC5B,IAAI,CAAC,GAAG,GAAG,KAAK,GAAG,MAAM,CAAC,MAAM,CAAE,IAAI,CAAC,MAAM,CAAE,CAC9C,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,QAC9D,CAAC;MACF,CAAC,MAAM;QACN,IAAI,CAAC,GAAG,GAAG,KAAK,GAAG,OAAO;MAC3B;MACA,IAAI,CAAC,GAAG,GAAG,CAAE,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,IAAK,KAAK,GAAG,IAAI,CAAC,KAAK;MAEzD,IAAK,IAAI,CAAC,OAAO,CAAC,IAAI,EAAG;QACxB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,IAAK,CAAC;MACpD;MAEA,IAAK,KAAK,IAAI,KAAK,CAAC,GAAG,EAAG;QACzB,KAAK,CAAC,GAAG,CAAE,IAAK,CAAC;MAClB,CAAC,MAAM;QACN,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAE,IAAK,CAAC;MACrC;MACA,OAAO,IAAI;IACZ;EACD,CAAC;EAED,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS;EAEhD,KAAK,CAAC,SAAS,GAAG;IACjB,QAAQ,EAAE;MACT,GAAG,EAAE,SAAA,IAAU,KAAK,EAAG;QACtB,IAAI,MAAM;;QAEV;QACA;QACA,IAAK,KAAK,CAAC,IAAI,CAAC,QAAQ,KAAK,CAAC,IAC7B,KAAK,CAAC,IAAI,CAAE,KAAK,CAAC,IAAI,CAAE,IAAI,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAE,KAAK,CAAC,IAAI,CAAE,IAAI,IAAI,EAAG;UAC7E,OAAO,KAAK,CAAC,IAAI,CAAE,KAAK,CAAC,IAAI,CAAE;QAChC;;QAEA;QACA;QACA;QACA;QACA,MAAM,GAAG,MAAM,CAAC,GAAG,CAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,EAAG,CAAC;;QAEjD;QACA,OAAO,CAAC,MAAM,IAAI,MAAM,KAAK,MAAM,GAAG,CAAC,GAAG,MAAM;MACjD,CAAC;MACD,GAAG,EAAE,SAAA,IAAU,KAAK,EAAG;QAEtB;QACA;QACA,IAAK,MAAM,CAAC,EAAE,CAAC,IAAI,CAAE,KAAK,CAAC,IAAI,CAAE,EAAG;UACnC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAE,KAAK,CAAC,IAAI,CAAE,CAAE,KAAM,CAAC;QACtC,CAAC,MAAM,IAAK,KAAK,CAAC,IAAI,CAAC,QAAQ,KAAK,CAAC,KAClC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAE,MAAM,CAAC,QAAQ,CAAE,KAAK,CAAC,IAAI,CAAE,CAAE,IAAI,IAAI,IAC1D,MAAM,CAAC,QAAQ,CAAE,KAAK,CAAC,IAAI,CAAE,CAAE,EAAG;UACnC,MAAM,CAAC,KAAK,CAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,IAAK,CAAC;QAC/D,CAAC,MAAM;UACN,KAAK,CAAC,IAAI,CAAE,KAAK,CAAC,IAAI,CAAE,GAAG,KAAK,CAAC,GAAG;QACrC;MACD;IACD;EACD,CAAC;;EAED;EACA;;EAEA,KAAK,CAAC,SAAS,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,UAAU,GAAG;IACxD,GAAG,EAAE,SAAA,IAAU,KAAK,EAAG;MACtB,IAAK,KAAK,CAAC,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,EAAG;QACnD,KAAK,CAAC,IAAI,CAAE,KAAK,CAAC,IAAI,CAAE,GAAG,KAAK,CAAC,GAAG;MACrC;IACD;EACD,CAAC;EAED,MAAM,CAAC,MAAM,GAAG;IACf,MAAM,EAAE,SAAA,OAAU,CAAC,EAAG;MACrB,OAAO,CAAC;IACT,CAAC;IACD,KAAK,EAAE,SAAA,MAAU,CAAC,EAAG;MACpB,OAAO,GAAG,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,IAAI,CAAC,EAAG,CAAC,GAAG,CAAC;IACzC,CAAC;IACD,QAAQ,EAAE;EACX,CAAC;EAED,MAAM,CAAC,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI;;EAEhC;EACA,MAAM,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,CAAC;EAKnB,IACC,KAAK;IAAE,OAAO;IACd,QAAQ,GAAG,wBAAwB;IACnC,IAAI,GAAG,aAAa;;EAErB;EACA,SAAS,WAAW,CAAA,EAAG;IACtB,MAAM,CAAC,UAAU,CAAE,YAAW;MAC7B,KAAK,GAAG,SAAS;IAClB,CAAE,CAAC;IACH,OAAS,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;EAC9B;;EAEA;EACA,SAAS,KAAK,CAAE,IAAI,EAAE,YAAY,EAAG;IACpC,IAAI,KAAK;MACR,KAAK,GAAG;QAAE,MAAM,EAAE;MAAK,CAAC;MACxB,CAAC,GAAG,CAAC;;IAEN;IACA;IACA,YAAY,GAAG,YAAY,GAAG,CAAC,GAAG,CAAC;IACnC,OAAQ,CAAC,GAAG,CAAC,EAAG,CAAC,IAAI,CAAC,GAAG,YAAY,EAAG;MACvC,KAAK,GAAG,SAAS,CAAE,CAAC,CAAE;MACtB,KAAK,CAAE,QAAQ,GAAG,KAAK,CAAE,GAAG,KAAK,CAAE,SAAS,GAAG,KAAK,CAAE,GAAG,IAAI;IAC9D;IAEA,IAAK,YAAY,EAAG;MACnB,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,KAAK,GAAG,IAAI;IACnC;IAEA,OAAO,KAAK;EACb;EAEA,SAAS,WAAW,CAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAG;IAC9C,IAAI,KAAK;MACR,UAAU,GAAG,CAAE,SAAS,CAAC,QAAQ,CAAE,IAAI,CAAE,IAAI,EAAE,EAAG,MAAM,CAAE,SAAS,CAAC,QAAQ,CAAE,GAAG,CAAG,CAAC;MACrF,KAAK,GAAG,CAAC;MACT,MAAM,GAAG,UAAU,CAAC,MAAM;IAC3B,OAAQ,KAAK,GAAG,MAAM,EAAE,KAAK,EAAE,EAAG;MACjC,IAAO,KAAK,GAAG,UAAU,CAAE,KAAK,CAAE,CAAC,IAAI,CAAE,SAAS,EAAE,IAAI,EAAE,KAAM,CAAC,EAAK;QAErE;QACA,OAAO,KAAK;MACb;IACD;EACD;EAEA,SAAS,gBAAgB,CAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAG;IAC9C;IACA,IAAI,IAAI;MAAE,KAAK;MAAE,MAAM;MAAE,KAAK;MAAE,KAAK;MAAE,OAAO;MAAE,OAAO;MAAE,YAAY;MACpE,IAAI,GAAG,IAAI;MACX,IAAI,GAAG,CAAC,CAAC;MACT,KAAK,GAAG,IAAI,CAAC,KAAK;MAClB,MAAM,GAAG,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAE,IAAK,CAAC;MAC1C,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,QAAS,CAAC;;IAE1C;IACA,IAAK,CAAC,IAAI,CAAC,KAAK,EAAG;MAClB,KAAK,GAAG,MAAM,CAAC,WAAW,CAAE,IAAI,EAAE,IAAK,CAAC;MACxC,IAAK,KAAK,CAAC,QAAQ,IAAI,IAAI,EAAG;QAC7B,KAAK,CAAC,QAAQ,GAAG,CAAC;QAClB,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI;QAC1B,KAAK,CAAC,KAAK,CAAC,IAAI,GAAG,YAAW;UAC7B,IAAK,CAAC,KAAK,CAAC,QAAQ,EAAG;YACtB,OAAO,CAAC,CAAC;UACV;QACD,CAAC;MACF;MACA,KAAK,CAAC,QAAQ,EAAE;MAEhB,IAAI,CAAC,MAAM,CAAE,YAAW;QAEvB;QACA;QACA,IAAI,CAAC,MAAM,CAAE,YAAW;UACvB,KAAK,CAAC,QAAQ,EAAE;UAChB,IAAK,CAAC,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,IAAK,CAAC,CAAC,MAAM,EAAG;YACzC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;UACnB;QACD,CAAE,CAAC;MACJ,CAAE,CAAC;IACJ;;IAEA;IACA,IAAK,IAAI,CAAC,QAAQ,KAAK,CAAC,KAAM,QAAQ,IAAI,KAAK,IAAI,OAAO,IAAI,KAAK,CAAE,EAAG;MAEvE;MACA;MACA;MACA;MACA,IAAI,CAAC,QAAQ,GAAG,CAAE,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,SAAS,CAAE;;MAEpE;MACA;MACA,OAAO,GAAG,MAAM,CAAC,GAAG,CAAE,IAAI,EAAE,SAAU,CAAC;;MAEvC;MACA,YAAY,GAAG,OAAO,KAAK,MAAM,GAChC,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,YAAa,CAAC,IAAI,cAAc,CAAE,IAAI,CAAC,QAAS,CAAC,GAAG,OAAO;MAEhF,IAAK,YAAY,KAAK,QAAQ,IAAI,MAAM,CAAC,GAAG,CAAE,IAAI,EAAE,OAAQ,CAAC,KAAK,MAAM,EAAG;QAE1E;QACA;QACA,IAAK,CAAC,OAAO,CAAC,sBAAsB,IAAI,cAAc,CAAE,IAAI,CAAC,QAAS,CAAC,KAAK,QAAQ,EAAG;UACtF,KAAK,CAAC,OAAO,GAAG,cAAc;QAC/B,CAAC,MAAM;UACN,KAAK,CAAC,IAAI,GAAG,CAAC;QACf;MACD;IACD;IAEA,IAAK,IAAI,CAAC,QAAQ,EAAG;MACpB,KAAK,CAAC,QAAQ,GAAG,QAAQ;MACzB,IAAK,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,EAAG;QAClC,IAAI,CAAC,MAAM,CAAE,YAAW;UACvB,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAE,CAAC,CAAE;UACnC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAE,CAAC,CAAE;UACpC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAE,CAAC,CAAE;QACrC,CAAE,CAAC;MACJ;IACD;;IAEA;IACA,KAAM,IAAI,IAAI,KAAK,EAAG;MACrB,KAAK,GAAG,KAAK,CAAE,IAAI,CAAE;MACrB,IAAK,QAAQ,CAAC,IAAI,CAAE,KAAM,CAAC,EAAG;QAC7B,OAAO,KAAK,CAAE,IAAI,CAAE;QACpB,MAAM,GAAG,MAAM,IAAI,KAAK,KAAK,QAAQ;QACrC,IAAK,KAAK,MAAO,MAAM,GAAG,MAAM,GAAG,MAAM,CAAE,EAAG;UAE7C;UACA;UACA,IAAK,KAAK,KAAK,MAAM,IAAI,QAAQ,IAAI,QAAQ,CAAE,IAAI,CAAE,KAAK,SAAS,EAAG;YACrE,MAAM,GAAG,IAAI;UACd,CAAC,MAAM;YACN;UACD;QACD;QACA,IAAI,CAAE,IAAI,CAAE,GAAG,QAAQ,IAAI,QAAQ,CAAE,IAAI,CAAE,IAAI,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,IAAK,CAAC;;QAE1E;MACA,CAAC,MAAM;QACN,OAAO,GAAG,SAAS;MACpB;IACD;IAEA,IAAK,CAAC,MAAM,CAAC,aAAa,CAAE,IAAK,CAAC,EAAG;MACpC,IAAK,QAAQ,EAAG;QACf,IAAK,QAAQ,IAAI,QAAQ,EAAG;UAC3B,MAAM,GAAG,QAAQ,CAAC,MAAM;QACzB;MACD,CAAC,MAAM;QACN,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAE,CAAC;MAC9C;;MAEA;MACA,IAAK,MAAM,EAAG;QACb,QAAQ,CAAC,MAAM,GAAG,CAAC,MAAM;MAC1B;MACA,IAAK,MAAM,EAAG;QACb,MAAM,CAAE,IAAK,CAAC,CAAC,IAAI,CAAC,CAAC;MACtB,CAAC,MAAM;QACN,IAAI,CAAC,IAAI,CAAE,YAAW;UACrB,MAAM,CAAE,IAAK,CAAC,CAAC,IAAI,CAAC,CAAC;QACtB,CAAE,CAAC;MACJ;MACA,IAAI,CAAC,IAAI,CAAE,YAAW;QACrB,IAAI,IAAI;QACR,MAAM,CAAC,WAAW,CAAE,IAAI,EAAE,QAAS,CAAC;QACpC,KAAM,IAAI,IAAI,IAAI,EAAG;UACpB,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE,IAAI,CAAG,CAAC;QACzC;MACD,CAAE,CAAC;MACH,KAAM,IAAI,IAAI,IAAI,EAAG;QACpB,KAAK,GAAG,WAAW,CAAE,MAAM,GAAG,QAAQ,CAAE,IAAI,CAAE,GAAG,CAAC,EAAE,IAAI,EAAE,IAAK,CAAC;QAEhE,IAAK,EAAG,IAAI,IAAI,QAAQ,CAAE,EAAG;UAC5B,QAAQ,CAAE,IAAI,CAAE,GAAG,KAAK,CAAC,KAAK;UAC9B,IAAK,MAAM,EAAG;YACb,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK;YACvB,KAAK,CAAC,KAAK,GAAG,IAAI,KAAK,OAAO,IAAI,IAAI,KAAK,QAAQ,GAAG,CAAC,GAAG,CAAC;UAC5D;QACD;MACD;;MAED;IACA,CAAC,MAAM,IAAK,CAAE,OAAO,KAAK,MAAM,GAAG,cAAc,CAAE,IAAI,CAAC,QAAS,CAAC,GAAG,OAAO,MAAO,QAAQ,EAAG;MAC7F,KAAK,CAAC,OAAO,GAAG,OAAO;IACxB;EACD;EAEA,SAAS,UAAU,CAAE,KAAK,EAAE,aAAa,EAAG;IAC3C,IAAI,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK;;IAErC;IACA,KAAM,KAAK,IAAI,KAAK,EAAG;MACtB,IAAI,GAAG,MAAM,CAAC,SAAS,CAAE,KAAM,CAAC;MAChC,MAAM,GAAG,aAAa,CAAE,IAAI,CAAE;MAC9B,KAAK,GAAG,KAAK,CAAE,KAAK,CAAE;MACtB,IAAK,MAAM,CAAC,OAAO,CAAE,KAAM,CAAC,EAAG;QAC9B,MAAM,GAAG,KAAK,CAAE,CAAC,CAAE;QACnB,KAAK,GAAG,KAAK,CAAE,KAAK,CAAE,GAAG,KAAK,CAAE,CAAC,CAAE;MACpC;MAEA,IAAK,KAAK,KAAK,IAAI,EAAG;QACrB,KAAK,CAAE,IAAI,CAAE,GAAG,KAAK;QACrB,OAAO,KAAK,CAAE,KAAK,CAAE;MACtB;MAEA,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAE,IAAI,CAAE;MAC/B,IAAK,KAAK,IAAI,QAAQ,IAAI,KAAK,EAAG;QACjC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAE,KAAM,CAAC;QAC7B,OAAO,KAAK,CAAE,IAAI,CAAE;;QAEpB;QACA;QACA,KAAM,KAAK,IAAI,KAAK,EAAG;UACtB,IAAK,EAAG,KAAK,IAAI,KAAK,CAAE,EAAG;YAC1B,KAAK,CAAE,KAAK,CAAE,GAAG,KAAK,CAAE,KAAK,CAAE;YAC/B,aAAa,CAAE,KAAK,CAAE,GAAG,MAAM;UAChC;QACD;MACD,CAAC,MAAM;QACN,aAAa,CAAE,IAAI,CAAE,GAAG,MAAM;MAC/B;IACD;EACD;EAEA,SAAS,SAAS,CAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAG;IAC/C,IAAI,MAAM;MACT,OAAO;MACP,KAAK,GAAG,CAAC;MACT,MAAM,GAAG,SAAS,CAAC,UAAU,CAAC,MAAM;MACpC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAE,YAAW;QAE/C;QACA,OAAO,IAAI,CAAC,IAAI;MACjB,CAAE,CAAC;MACH,IAAI,GAAG,SAAP,IAAI,CAAA,EAAc;QACjB,IAAK,OAAO,EAAG;UACd,OAAO,KAAK;QACb;QACA,IAAI,WAAW,GAAG,KAAK,IAAI,WAAW,CAAC,CAAC;UACvC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,SAAS,CAAC,SAAS,GAAG,SAAS,CAAC,QAAQ,GAAG,WAAY,CAAC;UAEjF;UACA;UACA,IAAI,GAAG,SAAS,GAAG,SAAS,CAAC,QAAQ,IAAI,CAAC;UAC1C,OAAO,GAAG,CAAC,GAAG,IAAI;UAClB,KAAK,GAAG,CAAC;UACT,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC,MAAM;QAEjC,OAAQ,KAAK,GAAG,MAAM,EAAG,KAAK,EAAE,EAAG;UAClC,SAAS,CAAC,MAAM,CAAE,KAAK,CAAE,CAAC,GAAG,CAAE,OAAQ,CAAC;QACzC;QAEA,QAAQ,CAAC,UAAU,CAAE,IAAI,EAAE,CAAE,SAAS,EAAE,OAAO,EAAE,SAAS,CAAG,CAAC;QAE9D,IAAK,OAAO,GAAG,CAAC,IAAI,MAAM,EAAG;UAC5B,OAAO,SAAS;QACjB,CAAC,MAAM;UACN,QAAQ,CAAC,WAAW,CAAE,IAAI,EAAE,CAAE,SAAS,CAAG,CAAC;UAC3C,OAAO,KAAK;QACb;MACD,CAAC;MACD,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAE;QAC7B,IAAI,EAAE,IAAI;QACV,KAAK,EAAE,MAAM,CAAC,MAAM,CAAE,CAAC,CAAC,EAAE,UAAW,CAAC;QACtC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAE,IAAI,EAAE;UAC1B,aAAa,EAAE,CAAC,CAAC;UACjB,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC;QACvB,CAAC,EAAE,OAAQ,CAAC;QACZ,kBAAkB,EAAE,UAAU;QAC9B,eAAe,EAAE,OAAO;QACxB,SAAS,EAAE,KAAK,IAAI,WAAW,CAAC,CAAC;QACjC,QAAQ,EAAE,OAAO,CAAC,QAAQ;QAC1B,MAAM,EAAE,EAAE;QACV,WAAW,EAAE,SAAA,YAAU,IAAI,EAAE,GAAG,EAAG;UAClC,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EACvD,SAAS,CAAC,IAAI,CAAC,aAAa,CAAE,IAAI,CAAE,IAAI,SAAS,CAAC,IAAI,CAAC,MAAO,CAAC;UACjE,SAAS,CAAC,MAAM,CAAC,IAAI,CAAE,KAAM,CAAC;UAC9B,OAAO,KAAK;QACb,CAAC;QACD,IAAI,EAAE,SAAA,KAAU,OAAO,EAAG;UACzB,IAAI,KAAK,GAAG,CAAC;YAEZ;YACA;YACA,MAAM,GAAG,OAAO,GAAG,SAAS,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC;UAC/C,IAAK,OAAO,EAAG;YACd,OAAO,IAAI;UACZ;UACA,OAAO,GAAG,IAAI;UACd,OAAQ,KAAK,GAAG,MAAM,EAAG,KAAK,EAAE,EAAG;YAClC,SAAS,CAAC,MAAM,CAAE,KAAK,CAAE,CAAC,GAAG,CAAE,CAAE,CAAC;UACnC;;UAEA;UACA;UACA,IAAK,OAAO,EAAG;YACd,QAAQ,CAAC,UAAU,CAAE,IAAI,EAAE,CAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAG,CAAC;YAChD,QAAQ,CAAC,WAAW,CAAE,IAAI,EAAE,CAAE,SAAS,EAAE,OAAO,CAAG,CAAC;UACrD,CAAC,MAAM;YACN,QAAQ,CAAC,UAAU,CAAE,IAAI,EAAE,CAAE,SAAS,EAAE,OAAO,CAAG,CAAC;UACpD;UACA,OAAO,IAAI;QACZ;MACD,CAAE,CAAC;MACH,KAAK,GAAG,SAAS,CAAC,KAAK;IAExB,UAAU,CAAE,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,aAAc,CAAC;IAEjD,OAAQ,KAAK,GAAG,MAAM,EAAG,KAAK,EAAE,EAAG;MAClC,MAAM,GAAG,SAAS,CAAC,UAAU,CAAE,KAAK,CAAE,CAAC,IAAI,CAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,CAAC,IAAK,CAAC;MACrF,IAAK,MAAM,EAAG;QACb,IAAK,MAAM,CAAC,UAAU,CAAE,MAAM,CAAC,IAAK,CAAC,EAAG;UACvC,MAAM,CAAC,WAAW,CAAE,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,KAAM,CAAC,CAAC,IAAI,GAC9D,MAAM,CAAC,KAAK,CAAE,MAAM,CAAC,IAAI,EAAE,MAAO,CAAC;QACrC;QACA,OAAO,MAAM;MACd;IACD;IAEA,MAAM,CAAC,GAAG,CAAE,KAAK,EAAE,WAAW,EAAE,SAAU,CAAC;IAE3C,IAAK,MAAM,CAAC,UAAU,CAAE,SAAS,CAAC,IAAI,CAAC,KAAM,CAAC,EAAG;MAChD,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,EAAE,SAAU,CAAC;IAC7C;IAEA,MAAM,CAAC,EAAE,CAAC,KAAK,CACd,MAAM,CAAC,MAAM,CAAE,IAAI,EAAE;MACpB,IAAI,EAAE,IAAI;MACV,IAAI,EAAE,SAAS;MACf,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC;IACvB,CAAE,CACH,CAAC;;IAED;IACA,OAAO,SAAS,CAAC,QAAQ,CAAE,SAAS,CAAC,IAAI,CAAC,QAAS,CAAC,CAClD,IAAI,CAAE,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,QAAS,CAAC,CACpD,IAAI,CAAE,SAAS,CAAC,IAAI,CAAC,IAAK,CAAC,CAC3B,MAAM,CAAE,SAAS,CAAC,IAAI,CAAC,MAAO,CAAC;EAClC;EAEA,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAE,SAAS,EAAE;IAE5C,QAAQ,EAAE;MACT,GAAG,EAAE,CAAE,UAAU,IAAI,EAAE,KAAK,EAAG;QAC9B,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAE,IAAI,EAAE,KAAM,CAAC;QAC3C,SAAS,CAAE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,CAAE,KAAM,CAAC,EAAE,KAAM,CAAC;QAC3D,OAAO,KAAK;MACb,CAAC;IACF,CAAC;IAED,OAAO,EAAE,SAAA,QAAU,KAAK,EAAE,QAAQ,EAAG;MACpC,IAAK,MAAM,CAAC,UAAU,CAAE,KAAM,CAAC,EAAG;QACjC,QAAQ,GAAG,KAAK;QAChB,KAAK,GAAG,CAAE,GAAG,CAAE;MAChB,CAAC,MAAM;QACN,KAAK,GAAG,KAAK,CAAC,KAAK,CAAE,SAAU,CAAC;MACjC;MAEA,IAAI,IAAI;QACP,KAAK,GAAG,CAAC;QACT,MAAM,GAAG,KAAK,CAAC,MAAM;MAEtB,OAAQ,KAAK,GAAG,MAAM,EAAG,KAAK,EAAE,EAAG;QAClC,IAAI,GAAG,KAAK,CAAE,KAAK,CAAE;QACrB,SAAS,CAAC,QAAQ,CAAE,IAAI,CAAE,GAAG,SAAS,CAAC,QAAQ,CAAE,IAAI,CAAE,IAAI,EAAE;QAC7D,SAAS,CAAC,QAAQ,CAAE,IAAI,CAAE,CAAC,OAAO,CAAE,QAAS,CAAC;MAC/C;IACD,CAAC;IAED,UAAU,EAAE,CAAE,gBAAgB,CAAE;IAEhC,SAAS,EAAE,SAAA,UAAU,QAAQ,EAAE,OAAO,EAAG;MACxC,IAAK,OAAO,EAAG;QACd,SAAS,CAAC,UAAU,CAAC,OAAO,CAAE,QAAS,CAAC;MACzC,CAAC,MAAM;QACN,SAAS,CAAC,UAAU,CAAC,IAAI,CAAE,QAAS,CAAC;MACtC;IACD;EACD,CAAE,CAAC;EAEH,MAAM,CAAC,KAAK,GAAG,UAAU,KAAK,EAAE,MAAM,EAAE,EAAE,EAAG;IAC5C,IAAI,GAAG,GAAG,KAAK,IAAI,OAAA,CAAO,KAAK,MAAK,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAE,CAAC,CAAC,EAAE,KAAM,CAAC,GAAG;MAC3E,QAAQ,EAAE,EAAE,IAAI,CAAC,EAAE,IAAI,MAAM,IAC5B,MAAM,CAAC,UAAU,CAAE,KAAM,CAAC,IAAI,KAAK;MACpC,QAAQ,EAAE,KAAK;MACf,MAAM,EAAE,EAAE,IAAI,MAAM,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,UAAU,CAAE,MAAO,CAAC,IAAI;IACnE,CAAC;IAED,GAAG,CAAC,QAAQ,GAAG,MAAM,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,OAAO,GAAG,CAAC,QAAQ,KAAK,QAAQ,GAAG,GAAG,CAAC,QAAQ,GACjF,GAAG,CAAC,QAAQ,IAAI,MAAM,CAAC,EAAE,CAAC,MAAM,GAC/B,MAAM,CAAC,EAAE,CAAC,MAAM,CAAE,GAAG,CAAC,QAAQ,CAAE,GAAG,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ;;IAE9D;IACA,IAAK,GAAG,CAAC,KAAK,IAAI,IAAI,IAAI,GAAG,CAAC,KAAK,KAAK,IAAI,EAAG;MAC9C,GAAG,CAAC,KAAK,GAAG,IAAI;IACjB;;IAEA;IACA,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,QAAQ;IAEtB,GAAG,CAAC,QAAQ,GAAG,YAAW;MACzB,IAAK,MAAM,CAAC,UAAU,CAAE,GAAG,CAAC,GAAI,CAAC,EAAG;QACnC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAE,IAAK,CAAC;MACrB;MAEA,IAAK,GAAG,CAAC,KAAK,EAAG;QAChB,MAAM,CAAC,OAAO,CAAE,IAAI,EAAE,GAAG,CAAC,KAAM,CAAC;MAClC;IACD,CAAC;IAED,OAAO,GAAG;EACX,CAAC;EAED,MAAM,CAAC,EAAE,CAAC,MAAM,CAAE;IACjB,MAAM,EAAE,SAAA,OAAU,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAG;MAE/C;MACA,OAAO,IAAI,CAAC,MAAM,CAAE,QAAS,CAAC,CAAC,GAAG,CAAE,SAAS,EAAE,CAAE,CAAC,CAAC,IAAI,CAAC;;MAEvD;MAAA,CACC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAE;QAAE,OAAO,EAAE;MAAG,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,QAAS,CAAC;IAC5D,CAAC;IACD,OAAO,EAAE,SAAA,QAAU,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAG;MAClD,IAAI,KAAK,GAAG,MAAM,CAAC,aAAa,CAAE,IAAK,CAAC;QACvC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAE,KAAK,EAAE,MAAM,EAAE,QAAS,CAAC;QAChD,WAAW,GAAG,SAAd,WAAW,CAAA,EAAc;UAExB;UACA,IAAI,IAAI,GAAG,SAAS,CAAE,IAAI,EAAE,MAAM,CAAC,MAAM,CAAE,CAAC,CAAC,EAAE,IAAK,CAAC,EAAE,MAAO,CAAC;;UAE/D;UACA,IAAK,KAAK,IAAI,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,QAAS,CAAC,EAAG;YAC9C,IAAI,CAAC,IAAI,CAAE,IAAK,CAAC;UAClB;QACD,CAAC;MACD,WAAW,CAAC,MAAM,GAAG,WAAW;MAEjC,OAAO,KAAK,IAAI,MAAM,CAAC,KAAK,KAAK,KAAK,GACrC,IAAI,CAAC,IAAI,CAAE,WAAY,CAAC,GACxB,IAAI,CAAC,KAAK,CAAE,MAAM,CAAC,KAAK,EAAE,WAAY,CAAC;IACzC,CAAC;IACD,IAAI,EAAE,SAAA,KAAU,IAAI,EAAE,UAAU,EAAE,OAAO,EAAG;MAC3C,IAAI,SAAS,GAAG,SAAZ,SAAS,CAAa,KAAK,EAAG;QACjC,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI;QACrB,OAAO,KAAK,CAAC,IAAI;QACjB,IAAI,CAAE,OAAQ,CAAC;MAChB,CAAC;MAED,IAAK,OAAO,IAAI,KAAK,QAAQ,EAAG;QAC/B,OAAO,GAAG,UAAU;QACpB,UAAU,GAAG,IAAI;QACjB,IAAI,GAAG,SAAS;MACjB;MACA,IAAK,UAAU,IAAI,IAAI,KAAK,KAAK,EAAG;QACnC,IAAI,CAAC,KAAK,CAAE,IAAI,IAAI,IAAI,EAAE,EAAG,CAAC;MAC/B;MAEA,OAAO,IAAI,CAAC,IAAI,CAAE,YAAW;QAC5B,IAAI,OAAO,GAAG,IAAI;UACjB,KAAK,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,YAAY;UAC3C,MAAM,GAAG,MAAM,CAAC,MAAM;UACtB,IAAI,GAAG,MAAM,CAAC,KAAK,CAAE,IAAK,CAAC;QAE5B,IAAK,KAAK,EAAG;UACZ,IAAK,IAAI,CAAE,KAAK,CAAE,IAAI,IAAI,CAAE,KAAK,CAAE,CAAC,IAAI,EAAG;YAC1C,SAAS,CAAE,IAAI,CAAE,KAAK,CAAG,CAAC;UAC3B;QACD,CAAC,MAAM;UACN,KAAM,KAAK,IAAI,IAAI,EAAG;YACrB,IAAK,IAAI,CAAE,KAAK,CAAE,IAAI,IAAI,CAAE,KAAK,CAAE,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAE,KAAM,CAAC,EAAG;cAChE,SAAS,CAAE,IAAI,CAAE,KAAK,CAAG,CAAC;YAC3B;UACD;QACD;QAEA,KAAM,KAAK,GAAG,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,GAAI;UACvC,IAAK,MAAM,CAAE,KAAK,CAAE,CAAC,IAAI,KAAK,IAAI,KAC/B,IAAI,IAAI,IAAI,IAAI,MAAM,CAAE,KAAK,CAAE,CAAC,KAAK,KAAK,IAAI,CAAE,EAAG;YAErD,MAAM,CAAE,KAAK,CAAE,CAAC,IAAI,CAAC,IAAI,CAAE,OAAQ,CAAC;YACpC,OAAO,GAAG,KAAK;YACf,MAAM,CAAC,MAAM,CAAE,KAAK,EAAE,CAAE,CAAC;UAC1B;QACD;;QAEA;QACA;QACA;QACA,IAAK,OAAO,IAAI,CAAC,OAAO,EAAG;UAC1B,MAAM,CAAC,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;QAC7B;MACD,CAAE,CAAC;IACJ,CAAC;IACD,MAAM,EAAE,SAAA,OAAU,IAAI,EAAG;MACxB,IAAK,IAAI,KAAK,KAAK,EAAG;QACrB,IAAI,GAAG,IAAI,IAAI,IAAI;MACpB;MACA,OAAO,IAAI,CAAC,IAAI,CAAE,YAAW;QAC5B,IAAI,KAAK;UACR,IAAI,GAAG,MAAM,CAAC,KAAK,CAAE,IAAK,CAAC;UAC3B,KAAK,GAAG,IAAI,CAAE,IAAI,GAAG,OAAO,CAAE;UAC9B,KAAK,GAAG,IAAI,CAAE,IAAI,GAAG,YAAY,CAAE;UACnC,MAAM,GAAG,MAAM,CAAC,MAAM;UACtB,MAAM,GAAG,KAAK,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC;;QAElC;QACA,IAAI,CAAC,MAAM,GAAG,IAAI;;QAElB;QACA,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,IAAI,EAAE,EAAG,CAAC;QAE9B,IAAK,KAAK,IAAI,KAAK,CAAC,IAAI,EAAG;UAC1B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAE,IAAI,EAAE,IAAK,CAAC;QAC9B;;QAEA;QACA,KAAM,KAAK,GAAG,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,GAAI;UACvC,IAAK,MAAM,CAAE,KAAK,CAAE,CAAC,IAAI,KAAK,IAAI,IAAI,MAAM,CAAE,KAAK,CAAE,CAAC,KAAK,KAAK,IAAI,EAAG;YACtE,MAAM,CAAE,KAAK,CAAE,CAAC,IAAI,CAAC,IAAI,CAAE,IAAK,CAAC;YACjC,MAAM,CAAC,MAAM,CAAE,KAAK,EAAE,CAAE,CAAC;UAC1B;QACD;;QAEA;QACA,KAAM,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,MAAM,EAAE,KAAK,EAAE,EAAG;UAC1C,IAAK,KAAK,CAAE,KAAK,CAAE,IAAI,KAAK,CAAE,KAAK,CAAE,CAAC,MAAM,EAAG;YAC9C,KAAK,CAAE,KAAK,CAAE,CAAC,MAAM,CAAC,IAAI,CAAE,IAAK,CAAC;UACnC;QACD;;QAEA;QACA,OAAO,IAAI,CAAC,MAAM;MACnB,CAAE,CAAC;IACJ;EACD,CAAE,CAAC;EAEH,MAAM,CAAC,IAAI,CAAE,CAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAE,EAAE,UAAU,CAAC,EAAE,IAAI,EAAG;IAC9D,IAAI,KAAK,GAAG,MAAM,CAAC,EAAE,CAAE,IAAI,CAAE;IAC7B,MAAM,CAAC,EAAE,CAAE,IAAI,CAAE,GAAG,UAAU,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAG;MACvD,OAAO,KAAK,IAAI,IAAI,IAAI,OAAO,KAAK,KAAK,SAAS,GACjD,KAAK,CAAC,KAAK,CAAE,IAAI,EAAE,SAAU,CAAC,GAC9B,IAAI,CAAC,OAAO,CAAE,KAAK,CAAE,IAAI,EAAE,IAAK,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,QAAS,CAAC;IAC9D,CAAC;EACF,CAAE,CAAC;;EAEH;EACA,MAAM,CAAC,IAAI,CAAE;IACZ,SAAS,EAAE,KAAK,CAAE,MAAO,CAAC;IAC1B,OAAO,EAAE,KAAK,CAAE,MAAO,CAAC;IACxB,WAAW,EAAE,KAAK,CAAE,QAAS,CAAC;IAC9B,MAAM,EAAE;MAAE,OAAO,EAAE;IAAO,CAAC;IAC3B,OAAO,EAAE;MAAE,OAAO,EAAE;IAAO,CAAC;IAC5B,UAAU,EAAE;MAAE,OAAO,EAAE;IAAS;EACjC,CAAC,EAAE,UAAU,IAAI,EAAE,KAAK,EAAG;IAC1B,MAAM,CAAC,EAAE,CAAE,IAAI,CAAE,GAAG,UAAU,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAG;MACvD,OAAO,IAAI,CAAC,OAAO,CAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,QAAS,CAAC;IACtD,CAAC;EACF,CAAE,CAAC;EAEH,MAAM,CAAC,MAAM,GAAG,EAAE;EAClB,MAAM,CAAC,EAAE,CAAC,IAAI,GAAG,YAAW;IAC3B,IAAI,KAAK;MACR,MAAM,GAAG,MAAM,CAAC,MAAM;MACtB,CAAC,GAAG,CAAC;IAEN,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;IAEpB,OAAQ,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAG;MAChC,KAAK,GAAG,MAAM,CAAE,CAAC,CAAE;;MAEnB;MACA,IAAK,CAAC,KAAK,CAAC,CAAC,IAAI,MAAM,CAAE,CAAC,CAAE,KAAK,KAAK,EAAG;QACxC,MAAM,CAAC,MAAM,CAAE,CAAC,EAAE,EAAE,CAAE,CAAC;MACxB;IACD;IAEA,IAAK,CAAC,MAAM,CAAC,MAAM,EAAG;MACrB,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB;IACA,KAAK,GAAG,SAAS;EAClB,CAAC;EAED,MAAM,CAAC,EAAE,CAAC,KAAK,GAAG,UAAU,KAAK,EAAG;IACnC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAE,KAAM,CAAC;IAC3B,IAAK,KAAK,CAAC,CAAC,EAAG;MACd,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;IAClB,CAAC,MAAM;MACN,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACpB;EACD,CAAC;EAED,MAAM,CAAC,EAAE,CAAC,QAAQ,GAAG,EAAE;EAEvB,MAAM,CAAC,EAAE,CAAC,KAAK,GAAG,YAAW;IAC5B,IAAK,CAAC,OAAO,EAAG;MACf,OAAO,GAAG,MAAM,CAAC,WAAW,CAAE,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,CAAC,QAAS,CAAC;IACnE;EACD,CAAC;EAED,MAAM,CAAC,EAAE,CAAC,IAAI,GAAG,YAAW;IAC3B,MAAM,CAAC,aAAa,CAAE,OAAQ,CAAC;IAC/B,OAAO,GAAG,IAAI;EACf,CAAC;EAED,MAAM,CAAC,EAAE,CAAC,MAAM,GAAG;IAClB,IAAI,EAAE,GAAG;IACT,IAAI,EAAE,GAAG;IAET;IACA,QAAQ,EAAE;EACX,CAAC;;EAGD;EACA;EACA,MAAM,CAAC,EAAE,CAAC,KAAK,GAAG,UAAU,IAAI,EAAE,IAAI,EAAG;IACxC,IAAI,GAAG,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC,MAAM,CAAE,IAAI,CAAE,IAAI,IAAI,GAAG,IAAI;IAC1D,IAAI,GAAG,IAAI,IAAI,IAAI;IAEnB,OAAO,IAAI,CAAC,KAAK,CAAE,IAAI,EAAE,UAAU,IAAI,EAAE,KAAK,EAAG;MAChD,IAAI,OAAO,GAAG,MAAM,CAAC,UAAU,CAAE,IAAI,EAAE,IAAK,CAAC;MAC7C,KAAK,CAAC,IAAI,GAAG,YAAW;QACvB,MAAM,CAAC,YAAY,CAAE,OAAQ,CAAC;MAC/B,CAAC;IACF,CAAE,CAAC;EACJ,CAAC;EAGD,CAAE,YAAW;IACZ,IAAI,CAAC;MACJ,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAE,OAAQ,CAAC;MACzC,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAE,KAAM,CAAC;MACrC,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAE,QAAS,CAAC;MAC3C,GAAG,GAAG,MAAM,CAAC,WAAW,CAAE,QAAQ,CAAC,aAAa,CAAE,QAAS,CAAE,CAAC;;IAE/D;IACA,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAE,KAAM,CAAC;IACrC,GAAG,CAAC,YAAY,CAAE,WAAW,EAAE,GAAI,CAAC;IACpC,GAAG,CAAC,SAAS,GAAG,oEAAoE;IACpF,CAAC,GAAG,GAAG,CAAC,oBAAoB,CAAE,GAAI,CAAC,CAAE,CAAC,CAAE;;IAExC;IACA;IACA,KAAK,CAAC,YAAY,CAAE,MAAM,EAAE,UAAW,CAAC;IACxC,GAAG,CAAC,WAAW,CAAE,KAAM,CAAC;IAExB,CAAC,GAAG,GAAG,CAAC,oBAAoB,CAAE,GAAI,CAAC,CAAE,CAAC,CAAE;;IAExC;IACA,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,SAAS;;IAE3B;IACA;IACA,OAAO,CAAC,eAAe,GAAG,GAAG,CAAC,SAAS,KAAK,GAAG;;IAE/C;IACA;IACA,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAE,CAAC,CAAC,YAAY,CAAE,OAAQ,CAAE,CAAC;;IAEvD;IACA;IACA,OAAO,CAAC,cAAc,GAAG,CAAC,CAAC,YAAY,CAAE,MAAO,CAAC,KAAK,IAAI;;IAE1D;IACA,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK;;IAE/B;IACA;IACA,OAAO,CAAC,WAAW,GAAG,GAAG,CAAC,QAAQ;;IAElC;IACA,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAE,MAAO,CAAC,CAAC,OAAO;;IAE5D;IACA;IACA,MAAM,CAAC,QAAQ,GAAG,IAAI;IACtB,OAAO,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC,QAAQ;;IAEnC;IACA;IACA,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAE,OAAQ,CAAC;IACzC,KAAK,CAAC,YAAY,CAAE,OAAO,EAAE,EAAG,CAAC;IACjC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC,YAAY,CAAE,OAAQ,CAAC,KAAK,EAAE;;IAEpD;IACA,KAAK,CAAC,KAAK,GAAG,GAAG;IACjB,KAAK,CAAC,YAAY,CAAE,MAAM,EAAE,OAAQ,CAAC;IACrC,OAAO,CAAC,UAAU,GAAG,KAAK,CAAC,KAAK,KAAK,GAAG;EACzC,CAAC,EAAG,CAAC;EAGL,IAAI,OAAO,GAAG,KAAK;IAClB,OAAO,GAAG,kBAAkB;EAE7B,MAAM,CAAC,EAAE,CAAC,MAAM,CAAE;IACjB,GAAG,EAAE,SAAA,IAAU,KAAK,EAAG;MACtB,IAAI,KAAK;QAAE,GAAG;QAAE,UAAU;QACzB,IAAI,GAAG,IAAI,CAAE,CAAC,CAAE;MAEjB,IAAK,CAAC,SAAS,CAAC,MAAM,EAAG;QACxB,IAAK,IAAI,EAAG;UACX,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAE,IAAI,CAAC,IAAI,CAAE,IACnC,MAAM,CAAC,QAAQ,CAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAE;UAE/C,IACC,KAAK,IACL,KAAK,IAAI,KAAK,IACd,CAAE,GAAG,GAAG,KAAK,CAAC,GAAG,CAAE,IAAI,EAAE,OAAQ,CAAC,MAAO,SAAS,EACjD;YACD,OAAO,GAAG;UACX;UAEA,GAAG,GAAG,IAAI,CAAC,KAAK;UAEhB,OAAO,OAAO,GAAG,KAAK,QAAQ;UAE7B;UACA,GAAG,CAAC,OAAO,CAAE,OAAO,EAAE,EAAG,CAAC;UAE1B;UACA,GAAG,IAAI,IAAI,GAAG,EAAE,GAAG,GAAG;QACxB;QAEA;MACD;MAEA,UAAU,GAAG,MAAM,CAAC,UAAU,CAAE,KAAM,CAAC;MAEvC,OAAO,IAAI,CAAC,IAAI,CAAE,UAAU,CAAC,EAAG;QAC/B,IAAI,GAAG;QAEP,IAAK,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAG;UAC1B;QACD;QAEA,IAAK,UAAU,EAAG;UACjB,GAAG,GAAG,KAAK,CAAC,IAAI,CAAE,IAAI,EAAE,CAAC,EAAE,MAAM,CAAE,IAAK,CAAC,CAAC,GAAG,CAAC,CAAE,CAAC;QAClD,CAAC,MAAM;UACN,GAAG,GAAG,KAAK;QACZ;;QAEA;QACA,IAAK,GAAG,IAAI,IAAI,EAAG;UAClB,GAAG,GAAG,EAAE;QACT,CAAC,MAAM,IAAK,OAAO,GAAG,KAAK,QAAQ,EAAG;UACrC,GAAG,IAAI,EAAE;QACV,CAAC,MAAM,IAAK,MAAM,CAAC,OAAO,CAAE,GAAI,CAAC,EAAG;UACnC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAE,GAAG,EAAE,UAAU,KAAK,EAAG;YACxC,OAAO,KAAK,IAAI,IAAI,GAAG,EAAE,GAAG,KAAK,GAAG,EAAE;UACvC,CAAE,CAAC;QACJ;QAEA,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAE,IAAI,CAAC,IAAI,CAAE,IAAI,MAAM,CAAC,QAAQ,CAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAE;;QAEtF;QACA,IAAK,CAAC,KAAK,IAAI,EAAG,KAAK,IAAI,KAAK,CAAE,IAAI,KAAK,CAAC,GAAG,CAAE,IAAI,EAAE,GAAG,EAAE,OAAQ,CAAC,KAAK,SAAS,EAAG;UACrF,IAAI,CAAC,KAAK,GAAG,GAAG;QACjB;MACD,CAAE,CAAC;IACJ;EACD,CAAE,CAAC;EAEH,MAAM,CAAC,MAAM,CAAE;IACd,QAAQ,EAAE;MACT,MAAM,EAAE;QACP,GAAG,EAAE,SAAA,IAAU,IAAI,EAAG;UACrB,IAAI,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAE,IAAI,EAAE,OAAQ,CAAC;UAC3C,OAAO,GAAG,IAAI,IAAI,GACjB,GAAG;UAEH;UACA;UACA;UACA;UACA,MAAM,CAAC,IAAI,CAAE,MAAM,CAAC,IAAI,CAAE,IAAK,CAAE,CAAC,CAAC,OAAO,CAAE,OAAO,EAAE,GAAI,CAAC;QAC5D;MACD,CAAC;MACD,MAAM,EAAE;QACP,GAAG,EAAE,SAAA,IAAU,IAAI,EAAG;UACrB,IAAI,KAAK;YAAE,MAAM;YAChB,OAAO,GAAG,IAAI,CAAC,OAAO;YACtB,KAAK,GAAG,IAAI,CAAC,aAAa;YAC1B,GAAG,GAAG,IAAI,CAAC,IAAI,KAAK,YAAY,IAAI,KAAK,GAAG,CAAC;YAC7C,MAAM,GAAG,GAAG,GAAG,IAAI,GAAG,EAAE;YACxB,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,CAAC,GAAG,OAAO,CAAC,MAAM;YACtC,CAAC,GAAG,KAAK,GAAG,CAAC,GACZ,GAAG,GACH,GAAG,GAAG,KAAK,GAAG,CAAC;;UAEjB;UACA,OAAQ,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAG;YACtB,MAAM,GAAG,OAAO,CAAE,CAAC,CAAE;;YAErB;YACA,IAAK,CAAE,MAAM,CAAC,QAAQ,IAAI,CAAC,KAAK,KAAK;YAEnC;YACE,OAAO,CAAC,WAAW,GACpB,CAAC,MAAM,CAAC,QAAQ,GAChB,MAAM,CAAC,YAAY,CAAE,UAAW,CAAC,KAAK,IAAI,CAAE,KAC3C,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,IAC5B,CAAC,MAAM,CAAC,QAAQ,CAAE,MAAM,CAAC,UAAU,EAAE,UAAW,CAAC,CAAE,EAAG;cAExD;cACA,KAAK,GAAG,MAAM,CAAE,MAAO,CAAC,CAAC,GAAG,CAAC,CAAC;;cAE9B;cACA,IAAK,GAAG,EAAG;gBACV,OAAO,KAAK;cACb;;cAEA;cACA,MAAM,CAAC,IAAI,CAAE,KAAM,CAAC;YACrB;UACD;UAEA,OAAO,MAAM;QACd,CAAC;QAED,GAAG,EAAE,SAAA,IAAU,IAAI,EAAE,KAAK,EAAG;UAC5B,IAAI,SAAS;YAAE,MAAM;YACpB,OAAO,GAAG,IAAI,CAAC,OAAO;YACtB,MAAM,GAAG,MAAM,CAAC,SAAS,CAAE,KAAM,CAAC;YAClC,CAAC,GAAG,OAAO,CAAC,MAAM;UAEnB,OAAQ,CAAC,EAAE,EAAG;YACb,MAAM,GAAG,OAAO,CAAE,CAAC,CAAE;YAErB,IAAK,MAAM,CAAC,OAAO,CAAE,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAE,MAAO,CAAC,EAAE,MAAO,CAAC,GAAG,CAAC,CAAC,EAAG;cAE1E;cACA;cACA;cACA;cACA,IAAI;gBACH,MAAM,CAAC,QAAQ,GAAG,SAAS,GAAG,IAAI;cAEnC,CAAC,CAAC,OAAQ,CAAC,EAAG;gBAEb;gBACA,MAAM,CAAC,YAAY;cACpB;YAED,CAAC,MAAM;cACN,MAAM,CAAC,QAAQ,GAAG,KAAK;YACxB;UACD;;UAEA;UACA,IAAK,CAAC,SAAS,EAAG;YACjB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;UACxB;UAEA,OAAO,OAAO;QACf;MACD;IACD;EACD,CAAE,CAAC;;EAEH;EACA,MAAM,CAAC,IAAI,CAAE,CAAE,OAAO,EAAE,UAAU,CAAE,EAAE,YAAW;IAChD,MAAM,CAAC,QAAQ,CAAE,IAAI,CAAE,GAAG;MACzB,GAAG,EAAE,SAAA,IAAU,IAAI,EAAE,KAAK,EAAG;QAC5B,IAAK,MAAM,CAAC,OAAO,CAAE,KAAM,CAAC,EAAG;UAC9B,OAAS,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAE,MAAM,CAAE,IAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,KAAM,CAAC,GAAG,CAAC,CAAC;QAC3E;MACD;IACD,CAAC;IACD,IAAK,CAAC,OAAO,CAAC,OAAO,EAAG;MACvB,MAAM,CAAC,QAAQ,CAAE,IAAI,CAAE,CAAC,GAAG,GAAG,UAAU,IAAI,EAAG;QAC9C,OAAO,IAAI,CAAC,YAAY,CAAE,OAAQ,CAAC,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,KAAK;MACjE,CAAC;IACF;EACD,CAAE,CAAC;EAKH,IAAI,QAAQ;IAAE,QAAQ;IACrB,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU;IACnC,WAAW,GAAG,yBAAyB;IACvC,eAAe,GAAG,OAAO,CAAC,eAAe;IACzC,WAAW,GAAG,OAAO,CAAC,KAAK;EAE5B,MAAM,CAAC,EAAE,CAAC,MAAM,CAAE;IACjB,IAAI,EAAE,SAAA,KAAU,IAAI,EAAE,KAAK,EAAG;MAC7B,OAAO,MAAM,CAAE,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,CAAC,MAAM,GAAG,CAAE,CAAC;IACtE,CAAC;IAED,UAAU,EAAE,SAAA,WAAU,IAAI,EAAG;MAC5B,OAAO,IAAI,CAAC,IAAI,CAAE,YAAW;QAC5B,MAAM,CAAC,UAAU,CAAE,IAAI,EAAE,IAAK,CAAC;MAChC,CAAE,CAAC;IACJ;EACD,CAAE,CAAC;EAEH,MAAM,CAAC,MAAM,CAAE;IACd,IAAI,EAAE,SAAA,KAAU,IAAI,EAAE,IAAI,EAAE,KAAK,EAAG;MACnC,IAAI,GAAG;QAAE,KAAK;QACb,KAAK,GAAG,IAAI,CAAC,QAAQ;;MAEtB;MACA,IAAK,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,EAAG;QAChD;MACD;;MAEA;MACA,IAAK,OAAO,IAAI,CAAC,YAAY,KAAK,WAAW,EAAG;QAC/C,OAAO,MAAM,CAAC,IAAI,CAAE,IAAI,EAAE,IAAI,EAAE,KAAM,CAAC;MACxC;;MAEA;MACA;MACA,IAAK,KAAK,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAE,IAAK,CAAC,EAAG;QAC9C,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;QACzB,KAAK,GAAG,MAAM,CAAC,SAAS,CAAE,IAAI,CAAE,KAC7B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAE,IAAK,CAAC,GAAG,QAAQ,GAAG,QAAQ,CAAE;MAC/D;MAEA,IAAK,KAAK,KAAK,SAAS,EAAG;QAC1B,IAAK,KAAK,KAAK,IAAI,EAAG;UACrB,MAAM,CAAC,UAAU,CAAE,IAAI,EAAE,IAAK,CAAC;UAC/B;QACD;QAEA,IAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAC3B,CAAE,GAAG,GAAG,KAAK,CAAC,GAAG,CAAE,IAAI,EAAE,KAAK,EAAE,IAAK,CAAC,MAAO,SAAS,EAAG;UACzD,OAAO,GAAG;QACX;QAEA,IAAI,CAAC,YAAY,CAAE,IAAI,EAAE,KAAK,GAAG,EAAG,CAAC;QACrC,OAAO,KAAK;MACb;MAEA,IAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,CAAE,GAAG,GAAG,KAAK,CAAC,GAAG,CAAE,IAAI,EAAE,IAAK,CAAC,MAAO,IAAI,EAAG;QAC5E,OAAO,GAAG;MACX;MAEA,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAE,IAAI,EAAE,IAAK,CAAC;;MAEpC;MACA,OAAO,GAAG,IAAI,IAAI,GAAG,SAAS,GAAG,GAAG;IACrC,CAAC;IAED,SAAS,EAAE;MACV,IAAI,EAAE;QACL,GAAG,EAAE,SAAA,IAAU,IAAI,EAAE,KAAK,EAAG;UAC5B,IAAK,CAAC,OAAO,CAAC,UAAU,IAAI,KAAK,KAAK,OAAO,IAC5C,MAAM,CAAC,QAAQ,CAAE,IAAI,EAAE,OAAQ,CAAC,EAAG;YAEnC;YACA;YACA,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK;YACpB,IAAI,CAAC,YAAY,CAAE,MAAM,EAAE,KAAM,CAAC;YAClC,IAAK,GAAG,EAAG;cACV,IAAI,CAAC,KAAK,GAAG,GAAG;YACjB;YACA,OAAO,KAAK;UACb;QACD;MACD;IACD,CAAC;IAED,UAAU,EAAE,SAAA,WAAU,IAAI,EAAE,KAAK,EAAG;MACnC,IAAI,IAAI;QAAE,QAAQ;QACjB,CAAC,GAAG,CAAC;QACL,SAAS,GAAG,KAAK,IAAI,KAAK,CAAC,KAAK,CAAE,SAAU,CAAC;MAE9C,IAAK,SAAS,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAG;QACvC,OAAU,IAAI,GAAG,SAAS,CAAE,CAAC,EAAE,CAAE,EAAK;UACrC,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAE,IAAI,CAAE,IAAI,IAAI;;UAEzC;UACA,IAAK,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAE,IAAK,CAAC,EAAG;YAE1C;YACA,IAAK,WAAW,IAAI,eAAe,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,IAAK,CAAC,EAAG;cAClE,IAAI,CAAE,QAAQ,CAAE,GAAG,KAAK;;cAEzB;cACA;YACA,CAAC,MAAM;cACN,IAAI,CAAE,MAAM,CAAC,SAAS,CAAE,UAAU,GAAG,IAAK,CAAC,CAAE,GAC5C,IAAI,CAAE,QAAQ,CAAE,GAAG,KAAK;YAC1B;;YAED;UACA,CAAC,MAAM;YACN,MAAM,CAAC,IAAI,CAAE,IAAI,EAAE,IAAI,EAAE,EAAG,CAAC;UAC9B;UAEA,IAAI,CAAC,eAAe,CAAE,eAAe,GAAG,IAAI,GAAG,QAAS,CAAC;QAC1D;MACD;IACD;EACD,CAAE,CAAC;;EAEH;EACA,QAAQ,GAAG;IACV,GAAG,EAAE,SAAA,IAAU,IAAI,EAAE,KAAK,EAAE,IAAI,EAAG;MAClC,IAAK,KAAK,KAAK,KAAK,EAAG;QAEtB;QACA,MAAM,CAAC,UAAU,CAAE,IAAI,EAAE,IAAK,CAAC;MAChC,CAAC,MAAM,IAAK,WAAW,IAAI,eAAe,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,IAAK,CAAC,EAAG;QAEzE;QACA,IAAI,CAAC,YAAY,CAAE,CAAC,eAAe,IAAI,MAAM,CAAC,OAAO,CAAE,IAAI,CAAE,IAAI,IAAI,EAAE,IAAK,CAAC;MAE9E,CAAC,MAAM;QAEN;QACA;QACA,IAAI,CAAE,MAAM,CAAC,SAAS,CAAE,UAAU,GAAG,IAAK,CAAC,CAAE,GAAG,IAAI,CAAE,IAAI,CAAE,GAAG,IAAI;MACpE;MACA,OAAO,IAAI;IACZ;EACD,CAAC;EAED,MAAM,CAAC,IAAI,CAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAE,MAAO,CAAC,EAAE,UAAU,CAAC,EAAE,IAAI,EAAG;IAC/E,IAAI,MAAM,GAAG,UAAU,CAAE,IAAI,CAAE,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI;IAEnD,IAAK,WAAW,IAAI,eAAe,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,IAAK,CAAC,EAAG;MAClE,UAAU,CAAE,IAAI,CAAE,GAAG,UAAU,IAAI,EAAE,IAAI,EAAE,KAAK,EAAG;QAClD,IAAI,GAAG,EAAE,MAAM;QACf,IAAK,CAAC,KAAK,EAAG;UAEb;UACA,MAAM,GAAG,UAAU,CAAE,IAAI,CAAE;UAC3B,UAAU,CAAE,IAAI,CAAE,GAAG,GAAG;UACxB,GAAG,GAAG,MAAM,CAAE,IAAI,EAAE,IAAI,EAAE,KAAM,CAAC,IAAI,IAAI,GACxC,IAAI,CAAC,WAAW,CAAC,CAAC,GAClB,IAAI;UACL,UAAU,CAAE,IAAI,CAAE,GAAG,MAAM;QAC5B;QACA,OAAO,GAAG;MACX,CAAC;IACF,CAAC,MAAM;MACN,UAAU,CAAE,IAAI,CAAE,GAAG,UAAU,IAAI,EAAE,IAAI,EAAE,KAAK,EAAG;QAClD,IAAK,CAAC,KAAK,EAAG;UACb,OAAO,IAAI,CAAE,MAAM,CAAC,SAAS,CAAE,UAAU,GAAG,IAAK,CAAC,CAAE,GACnD,IAAI,CAAC,WAAW,CAAC,CAAC,GAClB,IAAI;QACN;MACD,CAAC;IACF;EACD,CAAE,CAAC;;EAEH;EACA,IAAK,CAAC,WAAW,IAAI,CAAC,eAAe,EAAG;IACvC,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG;MACxB,GAAG,EAAE,SAAA,IAAU,IAAI,EAAE,KAAK,EAAE,IAAI,EAAG;QAClC,IAAK,MAAM,CAAC,QAAQ,CAAE,IAAI,EAAE,OAAQ,CAAC,EAAG;UAEvC;UACA,IAAI,CAAC,YAAY,GAAG,KAAK;QAC1B,CAAC,MAAM;UAEN;UACA,OAAO,QAAQ,IAAI,QAAQ,CAAC,GAAG,CAAE,IAAI,EAAE,KAAK,EAAE,IAAK,CAAC;QACrD;MACD;IACD,CAAC;EACF;;EAEA;EACA,IAAK,CAAC,eAAe,EAAG;IAEvB;IACA;IACA,QAAQ,GAAG;MACV,GAAG,EAAE,SAAA,IAAU,IAAI,EAAE,KAAK,EAAE,IAAI,EAAG;QAElC;QACA,IAAI,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAE,IAAK,CAAC;QACvC,IAAK,CAAC,GAAG,EAAG;UACX,IAAI,CAAC,gBAAgB,CAClB,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAE,IAAK,CAClD,CAAC;QACF;QAEA,GAAG,CAAC,KAAK,GAAG,KAAK,IAAI,EAAE;;QAEvB;QACA,IAAK,IAAI,KAAK,OAAO,IAAI,KAAK,KAAK,IAAI,CAAC,YAAY,CAAE,IAAK,CAAC,EAAG;UAC9D,OAAO,KAAK;QACb;MACD;IACD,CAAC;;IAED;IACA,UAAU,CAAC,EAAE,GAAG,UAAU,CAAC,IAAI,GAAG,UAAU,CAAC,MAAM,GAClD,UAAU,IAAI,EAAE,IAAI,EAAE,KAAK,EAAG;MAC7B,IAAI,GAAG;MACP,IAAK,CAAC,KAAK,EAAG;QACb,OAAO,CAAE,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAE,IAAK,CAAC,KAAM,GAAG,CAAC,KAAK,KAAK,EAAE,GACjE,GAAG,CAAC,KAAK,GACT,IAAI;MACN;IACD,CAAC;;IAEF;IACA,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG;MACxB,GAAG,EAAE,SAAA,IAAU,IAAI,EAAE,IAAI,EAAG;QAC3B,IAAI,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAE,IAAK,CAAC;QACvC,IAAK,GAAG,IAAI,GAAG,CAAC,SAAS,EAAG;UAC3B,OAAO,GAAG,CAAC,KAAK;QACjB;MACD,CAAC;MACD,GAAG,EAAE,QAAQ,CAAC;IACf,CAAC;;IAED;IACA;IACA,MAAM,CAAC,SAAS,CAAC,eAAe,GAAG;MAClC,GAAG,EAAE,SAAA,IAAU,IAAI,EAAE,KAAK,EAAE,IAAI,EAAG;QAClC,QAAQ,CAAC,GAAG,CAAE,IAAI,EAAE,KAAK,KAAK,EAAE,GAAG,KAAK,GAAG,KAAK,EAAE,IAAK,CAAC;MACzD;IACD,CAAC;;IAED;IACA;IACA,MAAM,CAAC,IAAI,CAAE,CAAE,OAAO,EAAE,QAAQ,CAAE,EAAE,UAAU,CAAC,EAAE,IAAI,EAAG;MACvD,MAAM,CAAC,SAAS,CAAE,IAAI,CAAE,GAAG;QAC1B,GAAG,EAAE,SAAA,IAAU,IAAI,EAAE,KAAK,EAAG;UAC5B,IAAK,KAAK,KAAK,EAAE,EAAG;YACnB,IAAI,CAAC,YAAY,CAAE,IAAI,EAAE,MAAO,CAAC;YACjC,OAAO,KAAK;UACb;QACD;MACD,CAAC;IACF,CAAE,CAAC;EACJ;EAEA,IAAK,CAAC,OAAO,CAAC,KAAK,EAAG;IACrB,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG;MACxB,GAAG,EAAE,SAAA,IAAU,IAAI,EAAG;QAErB;QACA;QACA;QACA,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,SAAS;MACvC,CAAC;MACD,GAAG,EAAE,SAAA,IAAU,IAAI,EAAE,KAAK,EAAG;QAC5B,OAAS,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,GAAG,EAAE;MACzC;IACD,CAAC;EACF;EAKA,IAAI,UAAU,GAAG,4CAA4C;IAC5D,UAAU,GAAG,eAAe;EAE7B,MAAM,CAAC,EAAE,CAAC,MAAM,CAAE;IACjB,IAAI,EAAE,SAAA,KAAU,IAAI,EAAE,KAAK,EAAG;MAC7B,OAAO,MAAM,CAAE,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,CAAC,MAAM,GAAG,CAAE,CAAC;IACtE,CAAC;IAED,UAAU,EAAE,SAAA,WAAU,IAAI,EAAG;MAC5B,IAAI,GAAG,MAAM,CAAC,OAAO,CAAE,IAAI,CAAE,IAAI,IAAI;MACrC,OAAO,IAAI,CAAC,IAAI,CAAE,YAAW;QAE5B;QACA,IAAI;UACH,IAAI,CAAE,IAAI,CAAE,GAAG,SAAS;UACxB,OAAO,IAAI,CAAE,IAAI,CAAE;QACpB,CAAC,CAAC,OAAQ,CAAC,EAAG,CAAC;MAChB,CAAE,CAAC;IACJ;EACD,CAAE,CAAC;EAEH,MAAM,CAAC,MAAM,CAAE;IACd,IAAI,EAAE,SAAA,KAAU,IAAI,EAAE,IAAI,EAAE,KAAK,EAAG;MACnC,IAAI,GAAG;QAAE,KAAK;QACb,KAAK,GAAG,IAAI,CAAC,QAAQ;;MAEtB;MACA,IAAK,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,EAAG;QAChD;MACD;MAEA,IAAK,KAAK,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAE,IAAK,CAAC,EAAG;QAE9C;QACA,IAAI,GAAG,MAAM,CAAC,OAAO,CAAE,IAAI,CAAE,IAAI,IAAI;QACrC,KAAK,GAAG,MAAM,CAAC,SAAS,CAAE,IAAI,CAAE;MACjC;MAEA,IAAK,KAAK,KAAK,SAAS,EAAG;QAC1B,IAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAC3B,CAAE,GAAG,GAAG,KAAK,CAAC,GAAG,CAAE,IAAI,EAAE,KAAK,EAAE,IAAK,CAAC,MAAO,SAAS,EAAG;UACzD,OAAO,GAAG;QACX;QAEA,OAAS,IAAI,CAAE,IAAI,CAAE,GAAG,KAAK;MAC9B;MAEA,IAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,CAAE,GAAG,GAAG,KAAK,CAAC,GAAG,CAAE,IAAI,EAAE,IAAK,CAAC,MAAO,IAAI,EAAG;QAC5E,OAAO,GAAG;MACX;MAEA,OAAO,IAAI,CAAE,IAAI,CAAE;IACpB,CAAC;IAED,SAAS,EAAE;MACV,QAAQ,EAAE;QACT,GAAG,EAAE,SAAA,IAAU,IAAI,EAAG;UAErB;UACA;UACA;UACA;UACA,IAAI,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAE,IAAI,EAAE,UAAW,CAAC;UAEnD,OAAO,QAAQ,GACd,QAAQ,CAAE,QAAQ,EAAE,EAAG,CAAC,GACxB,UAAU,CAAC,IAAI,CAAE,IAAI,CAAC,QAAS,CAAC,IAC/B,UAAU,CAAC,IAAI,CAAE,IAAI,CAAC,QAAS,CAAC,IAAI,IAAI,CAAC,IAAI,GAC5C,CAAC,GACD,CAAC,CAAC;QACN;MACD;IACD,CAAC;IAED,OAAO,EAAE;MACR,KAAK,EAAE,SAAS;MAChB,OAAO,EAAE;IACV;EACD,CAAE,CAAC;;EAEH;EACA;EACA,IAAK,CAAC,OAAO,CAAC,cAAc,EAAG;IAE9B;IACA,MAAM,CAAC,IAAI,CAAE,CAAE,MAAM,EAAE,KAAK,CAAE,EAAE,UAAU,CAAC,EAAE,IAAI,EAAG;MACnD,MAAM,CAAC,SAAS,CAAE,IAAI,CAAE,GAAG;QAC1B,GAAG,EAAE,SAAA,IAAU,IAAI,EAAG;UACrB,OAAO,IAAI,CAAC,YAAY,CAAE,IAAI,EAAE,CAAE,CAAC;QACpC;MACD,CAAC;IACF,CAAE,CAAC;EACJ;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA,IAAK,CAAC,OAAO,CAAC,WAAW,EAAG;IAC3B,MAAM,CAAC,SAAS,CAAC,QAAQ,GAAG;MAC3B,GAAG,EAAE,SAAA,IAAU,IAAI,EAAG;QACrB,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU;QAE5B,IAAK,MAAM,EAAG;UACb,MAAM,CAAC,aAAa;;UAEpB;UACA,IAAK,MAAM,CAAC,UAAU,EAAG;YACxB,MAAM,CAAC,UAAU,CAAC,aAAa;UAChC;QACD;QACA,OAAO,IAAI;MACZ,CAAC;MACD,GAAG,EAAE,SAAA,IAAU,IAAI,EAAG;QACrB,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU;QAC5B,IAAK,MAAM,EAAG;UACb,MAAM,CAAC,aAAa;UAEpB,IAAK,MAAM,CAAC,UAAU,EAAG;YACxB,MAAM,CAAC,UAAU,CAAC,aAAa;UAChC;QACD;MACD;IACD,CAAC;EACF;EAEA,MAAM,CAAC,IAAI,CAAE,CACZ,UAAU,EACV,UAAU,EACV,WAAW,EACX,aAAa,EACb,aAAa,EACb,SAAS,EACT,SAAS,EACT,QAAQ,EACR,aAAa,EACb,iBAAiB,CACjB,EAAE,YAAW;IACb,MAAM,CAAC,OAAO,CAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAE,GAAG,IAAI;EAC5C,CAAE,CAAC;;EAEH;EACA,IAAK,CAAC,OAAO,CAAC,OAAO,EAAG;IACvB,MAAM,CAAC,OAAO,CAAC,OAAO,GAAG,UAAU;EACpC;EAKA,IAAI,MAAM,GAAG,aAAa;EAE1B,SAAS,QAAQ,CAAE,IAAI,EAAG;IACzB,OAAO,MAAM,CAAC,IAAI,CAAE,IAAI,EAAE,OAAQ,CAAC,IAAI,EAAE;EAC1C;EAEA,MAAM,CAAC,EAAE,CAAC,MAAM,CAAE;IACjB,QAAQ,EAAE,SAAA,SAAU,KAAK,EAAG;MAC3B,IAAI,OAAO;QAAE,IAAI;QAAE,GAAG;QAAE,QAAQ;QAAE,KAAK;QAAE,CAAC;QAAE,UAAU;QACrD,CAAC,GAAG,CAAC;MAEN,IAAK,MAAM,CAAC,UAAU,CAAE,KAAM,CAAC,EAAG;QACjC,OAAO,IAAI,CAAC,IAAI,CAAE,UAAU,CAAC,EAAG;UAC/B,MAAM,CAAE,IAAK,CAAC,CAAC,QAAQ,CAAE,KAAK,CAAC,IAAI,CAAE,IAAI,EAAE,CAAC,EAAE,QAAQ,CAAE,IAAK,CAAE,CAAE,CAAC;QACnE,CAAE,CAAC;MACJ;MAEA,IAAK,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,EAAG;QACzC,OAAO,GAAG,KAAK,CAAC,KAAK,CAAE,SAAU,CAAC,IAAI,EAAE;QAExC,OAAU,IAAI,GAAG,IAAI,CAAE,CAAC,EAAE,CAAE,EAAK;UAChC,QAAQ,GAAG,QAAQ,CAAE,IAAK,CAAC;UAC3B,GAAG,GAAG,IAAI,CAAC,QAAQ,KAAK,CAAC,IACxB,CAAE,GAAG,GAAG,QAAQ,GAAG,GAAG,EAAG,OAAO,CAAE,MAAM,EAAE,GAAI,CAAC;UAEhD,IAAK,GAAG,EAAG;YACV,CAAC,GAAG,CAAC;YACL,OAAU,KAAK,GAAG,OAAO,CAAE,CAAC,EAAE,CAAE,EAAK;cACpC,IAAK,GAAG,CAAC,OAAO,CAAE,GAAG,GAAG,KAAK,GAAG,GAAI,CAAC,GAAG,CAAC,EAAG;gBAC3C,GAAG,IAAI,KAAK,GAAG,GAAG;cACnB;YACD;;YAEA;YACA,UAAU,GAAG,MAAM,CAAC,IAAI,CAAE,GAAI,CAAC;YAC/B,IAAK,QAAQ,KAAK,UAAU,EAAG;cAC9B,MAAM,CAAC,IAAI,CAAE,IAAI,EAAE,OAAO,EAAE,UAAW,CAAC;YACzC;UACD;QACD;MACD;MAEA,OAAO,IAAI;IACZ,CAAC;IAED,WAAW,EAAE,SAAA,YAAU,KAAK,EAAG;MAC9B,IAAI,OAAO;QAAE,IAAI;QAAE,GAAG;QAAE,QAAQ;QAAE,KAAK;QAAE,CAAC;QAAE,UAAU;QACrD,CAAC,GAAG,CAAC;MAEN,IAAK,MAAM,CAAC,UAAU,CAAE,KAAM,CAAC,EAAG;QACjC,OAAO,IAAI,CAAC,IAAI,CAAE,UAAU,CAAC,EAAG;UAC/B,MAAM,CAAE,IAAK,CAAC,CAAC,WAAW,CAAE,KAAK,CAAC,IAAI,CAAE,IAAI,EAAE,CAAC,EAAE,QAAQ,CAAE,IAAK,CAAE,CAAE,CAAC;QACtE,CAAE,CAAC;MACJ;MAEA,IAAK,CAAC,SAAS,CAAC,MAAM,EAAG;QACxB,OAAO,IAAI,CAAC,IAAI,CAAE,OAAO,EAAE,EAAG,CAAC;MAChC;MAEA,IAAK,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,EAAG;QACzC,OAAO,GAAG,KAAK,CAAC,KAAK,CAAE,SAAU,CAAC,IAAI,EAAE;QAExC,OAAU,IAAI,GAAG,IAAI,CAAE,CAAC,EAAE,CAAE,EAAK;UAChC,QAAQ,GAAG,QAAQ,CAAE,IAAK,CAAC;;UAE3B;UACA,GAAG,GAAG,IAAI,CAAC,QAAQ,KAAK,CAAC,IACxB,CAAE,GAAG,GAAG,QAAQ,GAAG,GAAG,EAAG,OAAO,CAAE,MAAM,EAAE,GAAI,CAAC;UAEhD,IAAK,GAAG,EAAG;YACV,CAAC,GAAG,CAAC;YACL,OAAU,KAAK,GAAG,OAAO,CAAE,CAAC,EAAE,CAAE,EAAK;cAEpC;cACA,OAAQ,GAAG,CAAC,OAAO,CAAE,GAAG,GAAG,KAAK,GAAG,GAAI,CAAC,GAAG,CAAC,CAAC,EAAG;gBAC/C,GAAG,GAAG,GAAG,CAAC,OAAO,CAAE,GAAG,GAAG,KAAK,GAAG,GAAG,EAAE,GAAI,CAAC;cAC5C;YACD;;YAEA;YACA,UAAU,GAAG,MAAM,CAAC,IAAI,CAAE,GAAI,CAAC;YAC/B,IAAK,QAAQ,KAAK,UAAU,EAAG;cAC9B,MAAM,CAAC,IAAI,CAAE,IAAI,EAAE,OAAO,EAAE,UAAW,CAAC;YACzC;UACD;QACD;MACD;MAEA,OAAO,IAAI;IACZ,CAAC;IAED,WAAW,EAAE,SAAA,YAAU,KAAK,EAAE,QAAQ,EAAG;MACxC,IAAI,IAAI,GAAA,OAAA,CAAU,KAAK;MAEvB,IAAK,OAAO,QAAQ,KAAK,SAAS,IAAI,IAAI,KAAK,QAAQ,EAAG;QACzD,OAAO,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAE,KAAM,CAAC,GAAG,IAAI,CAAC,WAAW,CAAE,KAAM,CAAC;MACrE;MAEA,IAAK,MAAM,CAAC,UAAU,CAAE,KAAM,CAAC,EAAG;QACjC,OAAO,IAAI,CAAC,IAAI,CAAE,UAAU,CAAC,EAAG;UAC/B,MAAM,CAAE,IAAK,CAAC,CAAC,WAAW,CACzB,KAAK,CAAC,IAAI,CAAE,IAAI,EAAE,CAAC,EAAE,QAAQ,CAAE,IAAK,CAAC,EAAE,QAAS,CAAC,EACjD,QACD,CAAC;QACF,CAAE,CAAC;MACJ;MAEA,OAAO,IAAI,CAAC,IAAI,CAAE,YAAW;QAC5B,IAAI,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU;QAElC,IAAK,IAAI,KAAK,QAAQ,EAAG;UAExB;UACA,CAAC,GAAG,CAAC;UACL,IAAI,GAAG,MAAM,CAAE,IAAK,CAAC;UACrB,UAAU,GAAG,KAAK,CAAC,KAAK,CAAE,SAAU,CAAC,IAAI,EAAE;UAE3C,OAAU,SAAS,GAAG,UAAU,CAAE,CAAC,EAAE,CAAE,EAAK;YAE3C;YACA,IAAK,IAAI,CAAC,QAAQ,CAAE,SAAU,CAAC,EAAG;cACjC,IAAI,CAAC,WAAW,CAAE,SAAU,CAAC;YAC9B,CAAC,MAAM;cACN,IAAI,CAAC,QAAQ,CAAE,SAAU,CAAC;YAC3B;UACD;;UAED;QACA,CAAC,MAAM,IAAK,KAAK,KAAK,SAAS,IAAI,IAAI,KAAK,SAAS,EAAG;UACvD,SAAS,GAAG,QAAQ,CAAE,IAAK,CAAC;UAC5B,IAAK,SAAS,EAAG;YAEhB;YACA,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,eAAe,EAAE,SAAU,CAAC;UACjD;;UAEA;UACA;UACA;UACA;UACA,MAAM,CAAC,IAAI,CAAE,IAAI,EAAE,OAAO,EACzB,SAAS,IAAI,KAAK,KAAK,KAAK,GAC5B,EAAE,GACF,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,eAAgB,CAAC,IAAI,EAC1C,CAAC;QACF;MACD,CAAE,CAAC;IACJ,CAAC;IAED,QAAQ,EAAE,SAAA,SAAU,QAAQ,EAAG;MAC9B,IAAI,SAAS;QAAE,IAAI;QAClB,CAAC,GAAG,CAAC;MAEN,SAAS,GAAG,GAAG,GAAG,QAAQ,GAAG,GAAG;MAChC,OAAU,IAAI,GAAG,IAAI,CAAE,CAAC,EAAE,CAAE,EAAK;QAChC,IAAK,IAAI,CAAC,QAAQ,KAAK,CAAC,IACvB,CAAE,GAAG,GAAG,QAAQ,CAAE,IAAK,CAAC,GAAG,GAAG,EAAG,OAAO,CAAE,MAAM,EAAE,GAAI,CAAC,CACrD,OAAO,CAAE,SAAU,CAAC,GAAG,CAAC,CAAC,EAC1B;UACD,OAAO,IAAI;QACZ;MACD;MAEA,OAAO,KAAK;IACb;EACD,CAAE,CAAC;;EAKH;;EAGA,MAAM,CAAC,IAAI,CAAE,CAAE,uEAAuE,GACrF,uEAAuE,GACvE,+DAA+D,EAAG,KAAK,CAAE,GAAI,CAAC,EAC9E,UAAU,CAAC,EAAE,IAAI,EAAG;IAEpB;IACA,MAAM,CAAC,EAAE,CAAE,IAAI,CAAE,GAAG,UAAU,IAAI,EAAE,EAAE,EAAG;MACxC,OAAO,SAAS,CAAC,MAAM,GAAG,CAAC,GAC1B,IAAI,CAAC,EAAE,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAG,CAAC,GAC/B,IAAI,CAAC,OAAO,CAAE,IAAK,CAAC;IACtB,CAAC;EACF,CAAE,CAAC;EAEH,MAAM,CAAC,EAAE,CAAC,MAAM,CAAE;IACjB,KAAK,EAAE,SAAA,MAAU,MAAM,EAAE,KAAK,EAAG;MAChC,OAAO,IAAI,CAAC,UAAU,CAAE,MAAO,CAAC,CAAC,UAAU,CAAE,KAAK,IAAI,MAAO,CAAC;IAC/D;EACD,CAAE,CAAC;EAGH,IAAI,QAAQ,GAAG,MAAM,CAAC,QAAQ;EAE9B,IAAI,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;EAExB,IAAI,MAAM,GAAK,IAAM;EAIrB,IAAI,YAAY,GAAG,kIAAkI;EAErJ,MAAM,CAAC,SAAS,GAAG,UAAU,IAAI,EAAG;IAEnC;IACA,IAAK,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,EAAG;MAEvC;MACA;MACA,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAE,IAAI,GAAG,EAAG,CAAC;IACtC;IAEA,IAAI,eAAe;MAClB,KAAK,GAAG,IAAI;MACZ,GAAG,GAAG,MAAM,CAAC,IAAI,CAAE,IAAI,GAAG,EAAG,CAAC;;IAE/B;IACA;IACA,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,GAAG,CAAC,OAAO,CAAE,YAAY,EAAE,UAAU,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAG;MAE5F;MACA,IAAK,eAAe,IAAI,KAAK,EAAG;QAC/B,KAAK,GAAG,CAAC;MACV;;MAEA;MACA,IAAK,KAAK,KAAK,CAAC,EAAG;QAClB,OAAO,KAAK;MACb;;MAEA;MACA,eAAe,GAAG,IAAI,IAAI,KAAK;;MAE/B;MACA;MACA;MACA;MACA,KAAK,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI;;MAEvB;MACA,OAAO,EAAE;IACV,CAAE,CAAE,CAAC,GACF,QAAQ,CAAE,SAAS,GAAG,GAAI,CAAC,CAAG,CAAC,GACjC,MAAM,CAAC,KAAK,CAAE,gBAAgB,GAAG,IAAK,CAAC;EACzC,CAAC;;EAGD;EACA,MAAM,CAAC,QAAQ,GAAG,UAAU,IAAI,EAAG;IAClC,IAAI,GAAG,EAAE,GAAG;IACZ,IAAK,CAAC,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAG;MACxC,OAAO,IAAI;IACZ;IACA,IAAI;MACH,IAAK,MAAM,CAAC,SAAS,EAAG;QAAE;QACzB,GAAG,GAAG,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC;QAC5B,GAAG,GAAG,GAAG,CAAC,eAAe,CAAE,IAAI,EAAE,UAAW,CAAC;MAC9C,CAAC,MAAM;QAAE;QACR,GAAG,GAAG,IAAI,MAAM,CAAC,aAAa,CAAE,kBAAmB,CAAC;QACpD,GAAG,CAAC,KAAK,GAAG,OAAO;QACnB,GAAG,CAAC,OAAO,CAAE,IAAK,CAAC;MACpB;IACD,CAAC,CAAC,OAAQ,CAAC,EAAG;MACb,GAAG,GAAG,SAAS;IAChB;IACA,IAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,eAAe,IAAI,GAAG,CAAC,oBAAoB,CAAE,aAAc,CAAC,CAAC,MAAM,EAAG;MACvF,MAAM,CAAC,KAAK,CAAE,eAAe,GAAG,IAAK,CAAC;IACvC;IACA,OAAO,GAAG;EACX,CAAC;EAGD,IACC,KAAK,GAAG,MAAM;IACd,GAAG,GAAG,eAAe;IAErB;IACA,QAAQ,GAAG,+BAA+B;IAE1C;IACA,cAAc,GAAG,2DAA2D;IAC5E,UAAU,GAAG,gBAAgB;IAC7B,SAAS,GAAG,OAAO;IACnB,IAAI,GAAG,2DAA2D;IAElE;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACC,UAAU,GAAG,CAAC,CAAC;IAEf;AACD;AACA;AACA;AACA;IACC,UAAU,GAAG,CAAC,CAAC;IAEf;IACA,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAE,GAAI,CAAC;IAE7B;IACA,YAAY,GAAG,QAAQ,CAAC,IAAI;IAE5B;IACA,YAAY,GAAG,IAAI,CAAC,IAAI,CAAE,YAAY,CAAC,WAAW,CAAC,CAAE,CAAC,IAAI,EAAE;;EAE7D;EACA,SAAS,2BAA2B,CAAE,SAAS,EAAG;IAEjD;IACA,OAAO,UAAU,kBAAkB,EAAE,IAAI,EAAG;MAE3C,IAAK,OAAO,kBAAkB,KAAK,QAAQ,EAAG;QAC7C,IAAI,GAAG,kBAAkB;QACzB,kBAAkB,GAAG,GAAG;MACzB;MAEA,IAAI,QAAQ;QACX,CAAC,GAAG,CAAC;QACL,SAAS,GAAG,kBAAkB,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAE,SAAU,CAAC,IAAI,EAAE;MAEtE,IAAK,MAAM,CAAC,UAAU,CAAE,IAAK,CAAC,EAAG;QAEhC;QACA,OAAU,QAAQ,GAAG,SAAS,CAAE,CAAC,EAAE,CAAE,EAAK;UAEzC;UACA,IAAK,QAAQ,CAAC,MAAM,CAAE,CAAE,CAAC,KAAK,GAAG,EAAG;YACnC,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAE,CAAE,CAAC,IAAI,GAAG;YACrC,CAAE,SAAS,CAAE,QAAQ,CAAE,GAAG,SAAS,CAAE,QAAQ,CAAE,IAAI,EAAE,EAAG,OAAO,CAAE,IAAK,CAAC;;YAExE;UACA,CAAC,MAAM;YACN,CAAE,SAAS,CAAE,QAAQ,CAAE,GAAG,SAAS,CAAE,QAAQ,CAAE,IAAI,EAAE,EAAG,IAAI,CAAE,IAAK,CAAC;UACrE;QACD;MACD;IACD,CAAC;EACF;;EAEA;EACA,SAAS,6BAA6B,CAAE,SAAS,EAAE,OAAO,EAAE,eAAe,EAAE,KAAK,EAAG;IAEpF,IAAI,SAAS,GAAG,CAAC,CAAC;MACjB,gBAAgB,GAAK,SAAS,KAAK,UAAY;IAEhD,SAAS,OAAO,CAAE,QAAQ,EAAG;MAC5B,IAAI,QAAQ;MACZ,SAAS,CAAE,QAAQ,CAAE,GAAG,IAAI;MAC5B,MAAM,CAAC,IAAI,CAAE,SAAS,CAAE,QAAQ,CAAE,IAAI,EAAE,EAAE,UAAU,CAAC,EAAE,kBAAkB,EAAG;QAC3E,IAAI,mBAAmB,GAAG,kBAAkB,CAAE,OAAO,EAAE,eAAe,EAAE,KAAM,CAAC;QAC/E,IAAK,OAAO,mBAAmB,KAAK,QAAQ,IAC3C,CAAC,gBAAgB,IAAI,CAAC,SAAS,CAAE,mBAAmB,CAAE,EAAG;UAEzD,OAAO,CAAC,SAAS,CAAC,OAAO,CAAE,mBAAoB,CAAC;UAChD,OAAO,CAAE,mBAAoB,CAAC;UAC9B,OAAO,KAAK;QACb,CAAC,MAAM,IAAK,gBAAgB,EAAG;UAC9B,OAAO,EAAG,QAAQ,GAAG,mBAAmB,CAAE;QAC3C;MACD,CAAE,CAAC;MACH,OAAO,QAAQ;IAChB;IAEA,OAAO,OAAO,CAAE,OAAO,CAAC,SAAS,CAAE,CAAC,CAAG,CAAC,IAAI,CAAC,SAAS,CAAE,GAAG,CAAE,IAAI,OAAO,CAAE,GAAI,CAAC;EAChF;;EAEA;EACA;EACA;EACA,SAAS,UAAU,CAAE,MAAM,EAAE,GAAG,EAAG;IAClC,IAAI,IAAI;MAAE,GAAG;MACZ,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC,WAAW,IAAI,CAAC,CAAC;IAEpD,KAAM,GAAG,IAAI,GAAG,EAAG;MAClB,IAAK,GAAG,CAAE,GAAG,CAAE,KAAK,SAAS,EAAG;QAC/B,CAAE,WAAW,CAAE,GAAG,CAAE,GAAG,MAAM,GAAK,IAAI,KAAM,IAAI,GAAG,CAAC,CAAC,CAAI,EAAI,GAAG,CAAE,GAAG,GAAG,CAAE,GAAG,CAAE;MAChF;IACD;IACA,IAAK,IAAI,EAAG;MACX,MAAM,CAAC,MAAM,CAAE,IAAI,EAAE,MAAM,EAAE,IAAK,CAAC;IACpC;IAEA,OAAO,MAAM;EACd;;EAEA;AACA;AACA;AACA;EACA,SAAS,mBAAmB,CAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAG;IACnD,IAAI,aAAa;MAAE,EAAE;MAAE,aAAa;MAAE,IAAI;MACzC,QAAQ,GAAG,CAAC,CAAC,QAAQ;MACrB,SAAS,GAAG,CAAC,CAAC,SAAS;;IAExB;IACA,OAAQ,SAAS,CAAE,CAAC,CAAE,KAAK,GAAG,EAAG;MAChC,SAAS,CAAC,KAAK,CAAC,CAAC;MACjB,IAAK,EAAE,KAAK,SAAS,EAAG;QACvB,EAAE,GAAG,CAAC,CAAC,QAAQ,IAAI,KAAK,CAAC,iBAAiB,CAAE,cAAe,CAAC;MAC7D;IACD;;IAEA;IACA,IAAK,EAAE,EAAG;MACT,KAAM,IAAI,IAAI,QAAQ,EAAG;QACxB,IAAK,QAAQ,CAAE,IAAI,CAAE,IAAI,QAAQ,CAAE,IAAI,CAAE,CAAC,IAAI,CAAE,EAAG,CAAC,EAAG;UACtD,SAAS,CAAC,OAAO,CAAE,IAAK,CAAC;UACzB;QACD;MACD;IACD;;IAEA;IACA,IAAK,SAAS,CAAE,CAAC,CAAE,IAAI,SAAS,EAAG;MAClC,aAAa,GAAG,SAAS,CAAE,CAAC,CAAE;IAC/B,CAAC,MAAM;MAEN;MACA,KAAM,IAAI,IAAI,SAAS,EAAG;QACzB,IAAK,CAAC,SAAS,CAAE,CAAC,CAAE,IAAI,CAAC,CAAC,UAAU,CAAE,IAAI,GAAG,GAAG,GAAG,SAAS,CAAE,CAAC,CAAE,CAAE,EAAG;UACrE,aAAa,GAAG,IAAI;UACpB;QACD;QACA,IAAK,CAAC,aAAa,EAAG;UACrB,aAAa,GAAG,IAAI;QACrB;MACD;;MAEA;MACA,aAAa,GAAG,aAAa,IAAI,aAAa;IAC/C;;IAEA;IACA;IACA;IACA,IAAK,aAAa,EAAG;MACpB,IAAK,aAAa,KAAK,SAAS,CAAE,CAAC,CAAE,EAAG;QACvC,SAAS,CAAC,OAAO,CAAE,aAAc,CAAC;MACnC;MACA,OAAO,SAAS,CAAE,aAAa,CAAE;IAClC;EACD;;EAEA;AACA;AACA;EACA,SAAS,WAAW,CAAE,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAG;IACrD,IAAI,KAAK;MAAE,OAAO;MAAE,IAAI;MAAE,GAAG;MAAE,IAAI;MAClC,UAAU,GAAG,CAAC,CAAC;MAEf;MACA,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;;IAEhC;IACA,IAAK,SAAS,CAAE,CAAC,CAAE,EAAG;MACrB,KAAM,IAAI,IAAI,CAAC,CAAC,UAAU,EAAG;QAC5B,UAAU,CAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAE,GAAG,CAAC,CAAC,UAAU,CAAE,IAAI,CAAE;MACxD;IACD;IAEA,OAAO,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;;IAE3B;IACA,OAAQ,OAAO,EAAG;MAEjB,IAAK,CAAC,CAAC,cAAc,CAAE,OAAO,CAAE,EAAG;QAClC,KAAK,CAAE,CAAC,CAAC,cAAc,CAAE,OAAO,CAAE,CAAE,GAAG,QAAQ;MAChD;;MAEA;MACA,IAAK,CAAC,IAAI,IAAI,SAAS,IAAI,CAAC,CAAC,UAAU,EAAG;QACzC,QAAQ,GAAG,CAAC,CAAC,UAAU,CAAE,QAAQ,EAAE,CAAC,CAAC,QAAS,CAAC;MAChD;MAEA,IAAI,GAAG,OAAO;MACd,OAAO,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;MAE3B,IAAK,OAAO,EAAG;QAEd;QACA,IAAK,OAAO,KAAK,GAAG,EAAG;UAEtB,OAAO,GAAG,IAAI;;UAEf;QACA,CAAC,MAAM,IAAK,IAAI,KAAK,GAAG,IAAI,IAAI,KAAK,OAAO,EAAG;UAE9C;UACA,IAAI,GAAG,UAAU,CAAE,IAAI,GAAG,GAAG,GAAG,OAAO,CAAE,IAAI,UAAU,CAAE,IAAI,GAAG,OAAO,CAAE;;UAEzE;UACA,IAAK,CAAC,IAAI,EAAG;YACZ,KAAM,KAAK,IAAI,UAAU,EAAG;cAE3B;cACA,GAAG,GAAG,KAAK,CAAC,KAAK,CAAE,GAAI,CAAC;cACxB,IAAK,GAAG,CAAE,CAAC,CAAE,KAAK,OAAO,EAAG;gBAE3B;gBACA,IAAI,GAAG,UAAU,CAAE,IAAI,GAAG,GAAG,GAAG,GAAG,CAAE,CAAC,CAAE,CAAE,IACzC,UAAU,CAAE,IAAI,GAAG,GAAG,CAAE,CAAC,CAAE,CAAE;gBAC9B,IAAK,IAAI,EAAG;kBAEX;kBACA,IAAK,IAAI,KAAK,IAAI,EAAG;oBACpB,IAAI,GAAG,UAAU,CAAE,KAAK,CAAE;;oBAE3B;kBACA,CAAC,MAAM,IAAK,UAAU,CAAE,KAAK,CAAE,KAAK,IAAI,EAAG;oBAC1C,OAAO,GAAG,GAAG,CAAE,CAAC,CAAE;oBAClB,SAAS,CAAC,OAAO,CAAE,GAAG,CAAE,CAAC,CAAG,CAAC;kBAC9B;kBACA;gBACD;cACD;YACD;UACD;;UAEA;UACA,IAAK,IAAI,KAAK,IAAI,EAAG;YAEpB;YACA,IAAK,IAAI,IAAI,CAAC,CAAE,QAAQ,CAAE,EAAG;cAAE;cAC9B,QAAQ,GAAG,IAAI,CAAE,QAAS,CAAC;YAC5B,CAAC,MAAM;cACN,IAAI;gBACH,QAAQ,GAAG,IAAI,CAAE,QAAS,CAAC;cAC5B,CAAC,CAAC,OAAQ,CAAC,EAAG;gBACb,OAAO;kBACN,KAAK,EAAE,aAAa;kBACpB,KAAK,EAAE,IAAI,GAAG,CAAC,GAAG,qBAAqB,GAAG,IAAI,GAAG,MAAM,GAAG;gBAC3D,CAAC;cACF;YACD;UACD;QACD;MACD;IACD;IAEA,OAAO;MAAE,KAAK,EAAE,SAAS;MAAE,IAAI,EAAE;IAAS,CAAC;EAC5C;EAEA,MAAM,CAAC,MAAM,CAAE;IAEd;IACA,MAAM,EAAE,CAAC;IAET;IACA,YAAY,EAAE,CAAC,CAAC;IAChB,IAAI,EAAE,CAAC,CAAC;IAER,YAAY,EAAE;MACb,GAAG,EAAE,YAAY;MACjB,IAAI,EAAE,KAAK;MACX,OAAO,EAAE,cAAc,CAAC,IAAI,CAAE,YAAY,CAAE,CAAC,CAAG,CAAC;MACjD,MAAM,EAAE,IAAI;MACZ,WAAW,EAAE,IAAI;MACjB,KAAK,EAAE,IAAI;MACX,WAAW,EAAE,kDAAkD;MAC/D;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MAEE,OAAO,EAAE;QACR,GAAG,EAAE,QAAQ;QACb,IAAI,EAAE,YAAY;QAClB,IAAI,EAAE,WAAW;QACjB,GAAG,EAAE,2BAA2B;QAChC,IAAI,EAAE;MACP,CAAC;MAED,QAAQ,EAAE;QACT,GAAG,EAAE,SAAS;QACd,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE;MACP,CAAC;MAED,cAAc,EAAE;QACf,GAAG,EAAE,aAAa;QAClB,IAAI,EAAE,cAAc;QACpB,IAAI,EAAE;MACP,CAAC;MAED;MACA;MACA,UAAU,EAAE;QAEX;QACA,QAAQ,EAAE,MAAM;QAEhB;QACA,WAAW,EAAE,IAAI;QAEjB;QACA,WAAW,EAAE,MAAM,CAAC,SAAS;QAE7B;QACA,UAAU,EAAE,MAAM,CAAC;MACpB,CAAC;MAED;MACA;MACA;MACA;MACA,WAAW,EAAE;QACZ,GAAG,EAAE,IAAI;QACT,OAAO,EAAE;MACV;IACD,CAAC;IAED;IACA;IACA;IACA,SAAS,EAAE,SAAA,UAAU,MAAM,EAAE,QAAQ,EAAG;MACvC,OAAO,QAAQ;MAEd;MACA,UAAU,CAAE,UAAU,CAAE,MAAM,EAAE,MAAM,CAAC,YAAa,CAAC,EAAE,QAAS,CAAC;MAEjE;MACA,UAAU,CAAE,MAAM,CAAC,YAAY,EAAE,MAAO,CAAC;IAC3C,CAAC;IAED,aAAa,EAAE,2BAA2B,CAAE,UAAW,CAAC;IACxD,aAAa,EAAE,2BAA2B,CAAE,UAAW,CAAC;IAExD;IACA,IAAI,EAAE,SAAA,KAAU,GAAG,EAAE,OAAO,EAAG;MAE9B;MACA,IAAK,OAAA,CAAO,GAAG,MAAK,QAAQ,EAAG;QAC9B,OAAO,GAAG,GAAG;QACb,GAAG,GAAG,SAAS;MAChB;;MAEA;MACA,OAAO,GAAG,OAAO,IAAI,CAAC,CAAC;MAEvB;QAEC;QACA,KAAK;QAEL;QACA,CAAC;QAED;QACA,QAAQ;QAER;QACA,qBAAqB;QAErB;QACA,YAAY;QAEZ;QACA,WAAW;QAEX,SAAS;QAET;QACA,eAAe;QAEf;QACA,CAAC,GAAG,MAAM,CAAC,SAAS,CAAE,CAAC,CAAC,EAAE,OAAQ,CAAC;QAEnC;QACA,eAAe,GAAG,CAAC,CAAC,OAAO,IAAI,CAAC;QAEhC;QACA,kBAAkB,GAAG,CAAC,CAAC,OAAO,KAC3B,eAAe,CAAC,QAAQ,IAAI,eAAe,CAAC,MAAM,CAAE,GACrD,MAAM,CAAE,eAAgB,CAAC,GACzB,MAAM,CAAC,KAAK;QAEd;QACA,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC5B,gBAAgB,GAAG,MAAM,CAAC,SAAS,CAAE,aAAc,CAAC;QAEpD;QACA,WAAU,GAAG,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC;QAE/B;QACA,cAAc,GAAG,CAAC,CAAC;QACnB,mBAAmB,GAAG,CAAC,CAAC;QAExB;QACA,KAAK,GAAG,CAAC;QAET;QACA,QAAQ,GAAG,UAAU;QAErB;QACA,KAAK,GAAG;UACP,UAAU,EAAE,CAAC;UAEb;UACA,iBAAiB,EAAE,SAAA,kBAAU,GAAG,EAAG;YAClC,IAAI,KAAK;YACT,IAAK,KAAK,KAAK,CAAC,EAAG;cAClB,IAAK,CAAC,eAAe,EAAG;gBACvB,eAAe,GAAG,CAAC,CAAC;gBACpB,OAAU,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAE,qBAAsB,CAAC,EAAK;kBAC5D,eAAe,CAAE,KAAK,CAAE,CAAC,CAAE,CAAC,WAAW,CAAC,CAAC,CAAE,GAAG,KAAK,CAAE,CAAC,CAAE;gBACzD;cACD;cACA,KAAK,GAAG,eAAe,CAAE,GAAG,CAAC,WAAW,CAAC,CAAC,CAAE;YAC7C;YACA,OAAO,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,KAAK;UACpC,CAAC;UAED;UACA,qBAAqB,EAAE,SAAA,sBAAA,EAAW;YACjC,OAAO,KAAK,KAAK,CAAC,GAAG,qBAAqB,GAAG,IAAI;UAClD,CAAC;UAED;UACA,gBAAgB,EAAE,SAAA,iBAAU,IAAI,EAAE,KAAK,EAAG;YACzC,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;YAC9B,IAAK,CAAC,KAAK,EAAG;cACb,IAAI,GAAG,mBAAmB,CAAE,KAAK,CAAE,GAAG,mBAAmB,CAAE,KAAK,CAAE,IAAI,IAAI;cAC1E,cAAc,CAAE,IAAI,CAAE,GAAG,KAAK;YAC/B;YACA,OAAO,IAAI;UACZ,CAAC;UAED;UACA,gBAAgB,EAAE,SAAA,iBAAU,IAAI,EAAG;YAClC,IAAK,CAAC,KAAK,EAAG;cACb,CAAC,CAAC,QAAQ,GAAG,IAAI;YAClB;YACA,OAAO,IAAI;UACZ,CAAC;UAED;UACA,UAAU,EAAE,SAAA,WAAU,GAAG,EAAG;YAC3B,IAAI,IAAI;YACR,IAAK,GAAG,EAAG;cACV,IAAK,KAAK,GAAG,CAAC,EAAG;gBAChB,KAAM,IAAI,IAAI,GAAG,EAAG;kBAEnB;kBACA,WAAU,CAAE,IAAI,CAAE,GAAG,CAAE,WAAU,CAAE,IAAI,CAAE,EAAE,GAAG,CAAE,IAAI,CAAE,CAAE;gBACzD;cACD,CAAC,MAAM;gBAEN;gBACA,KAAK,CAAC,MAAM,CAAE,GAAG,CAAE,KAAK,CAAC,MAAM,CAAG,CAAC;cACpC;YACD;YACA,OAAO,IAAI;UACZ,CAAC;UAED;UACA,KAAK,EAAE,SAAA,MAAU,UAAU,EAAG;YAC7B,IAAI,SAAS,GAAG,UAAU,IAAI,QAAQ;YACtC,IAAK,SAAS,EAAG;cAChB,SAAS,CAAC,KAAK,CAAE,SAAU,CAAC;YAC7B;YACA,IAAI,CAAE,CAAC,EAAE,SAAU,CAAC;YACpB,OAAO,IAAI;UACZ;QACD,CAAC;;MAEF;MACA,QAAQ,CAAC,OAAO,CAAE,KAAM,CAAC,CAAC,QAAQ,GAAG,gBAAgB,CAAC,GAAG;MACzD,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,IAAI;MAC1B,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI;;MAExB;MACA;MACA;MACA;MACA,CAAC,CAAC,GAAG,GAAG,CAAE,CAAE,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,YAAY,IAAK,EAAE,EAC7C,OAAO,CAAE,KAAK,EAAE,EAAG,CAAC,CACpB,OAAO,CAAE,SAAS,EAAE,YAAY,CAAE,CAAC,CAAE,GAAG,IAAK,CAAC;;MAEhD;MACA,CAAC,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,IAAI;;MAE7D;MACA,CAAC,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAE,CAAC,CAAC,QAAQ,IAAI,GAAI,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAE,SAAU,CAAC,IAAI,CAAE,EAAE,CAAE;;MAEzF;MACA,IAAK,CAAC,CAAC,WAAW,IAAI,IAAI,EAAG;QAC5B,KAAK,GAAG,IAAI,CAAC,IAAI,CAAE,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAE,CAAC;QACxC,CAAC,CAAC,WAAW,GAAG,CAAC,EAAG,KAAK,KACtB,KAAK,CAAE,CAAC,CAAE,KAAK,YAAY,CAAE,CAAC,CAAE,IAAI,KAAK,CAAE,CAAC,CAAE,KAAK,YAAY,CAAE,CAAC,CAAE,IACrE,CAAE,KAAK,CAAE,CAAC,CAAE,KAAM,KAAK,CAAE,CAAC,CAAE,KAAK,OAAO,GAAG,IAAI,GAAG,KAAK,CAAE,OACtD,YAAY,CAAE,CAAC,CAAE,KAAM,YAAY,CAAE,CAAC,CAAE,KAAK,OAAO,GAAG,IAAI,GAAG,KAAK,CAAE,CAAE,CAAE,CAC7E;MACF;;MAEA;MACA,IAAK,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,WAAW,IAAI,OAAO,CAAC,CAAC,IAAI,KAAK,QAAQ,EAAG;QAC5D,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,CAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,WAAY,CAAC;MAC/C;;MAEA;MACA,6BAA6B,CAAE,UAAU,EAAE,CAAC,EAAE,OAAO,EAAE,KAAM,CAAC;;MAE9D;MACA,IAAK,KAAK,KAAK,CAAC,EAAG;QAClB,OAAO,KAAK;MACb;;MAEA;MACA;MACA,WAAW,GAAG,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,MAAM;;MAEtC;MACA,IAAK,WAAW,IAAI,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,EAAG;QAC3C,MAAM,CAAC,KAAK,CAAC,OAAO,CAAE,WAAY,CAAC;MACpC;;MAEA;MACA,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;;MAE7B;MACA,CAAC,CAAC,UAAU,GAAG,CAAC,UAAU,CAAC,IAAI,CAAE,CAAC,CAAC,IAAK,CAAC;;MAEzC;MACA;MACA,QAAQ,GAAG,CAAC,CAAC,GAAG;;MAEhB;MACA,IAAK,CAAC,CAAC,CAAC,UAAU,EAAG;QAEpB;QACA,IAAK,CAAC,CAAC,IAAI,EAAG;UACb,QAAQ,GAAK,CAAC,CAAC,GAAG,IAAI,CAAE,MAAM,CAAC,IAAI,CAAE,QAAS,CAAC,GAAG,GAAG,GAAG,GAAG,IAAK,CAAC,CAAC,IAAM;;UAExE;UACA,OAAO,CAAC,CAAC,IAAI;QACd;;QAEA;QACA,IAAK,CAAC,CAAC,KAAK,KAAK,KAAK,EAAG;UACxB,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,CAAE,QAAS,CAAC;UAE3B;UACA,QAAQ,CAAC,OAAO,CAAE,GAAG,EAAE,MAAM,GAAG,KAAK,EAAG,CAAC;UAEzC;UACA,QAAQ,IAAK,MAAM,CAAC,IAAI,CAAE,QAAS,CAAC,GAAG,GAAG,GAAG,GAAG,CAAE,GAAG,IAAI,GAAG,KAAK,EAAE;QACrE;MACD;;MAEA;MACA,IAAK,CAAC,CAAC,UAAU,EAAG;QACnB,IAAK,MAAM,CAAC,YAAY,CAAE,QAAQ,CAAE,EAAG;UACtC,KAAK,CAAC,gBAAgB,CAAE,mBAAmB,EAAE,MAAM,CAAC,YAAY,CAAE,QAAQ,CAAG,CAAC;QAC/E;QACA,IAAK,MAAM,CAAC,IAAI,CAAE,QAAQ,CAAE,EAAG;UAC9B,KAAK,CAAC,gBAAgB,CAAE,eAAe,EAAE,MAAM,CAAC,IAAI,CAAE,QAAQ,CAAG,CAAC;QACnE;MACD;;MAEA;MACA,IAAK,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,WAAW,KAAK,KAAK,IAAI,OAAO,CAAC,WAAW,EAAG;QAC/E,KAAK,CAAC,gBAAgB,CAAE,cAAc,EAAE,CAAC,CAAC,WAAY,CAAC;MACxD;;MAEA;MACA,KAAK,CAAC,gBAAgB,CACrB,QAAQ,EACR,CAAC,CAAC,SAAS,CAAE,CAAC,CAAE,IAAI,CAAC,CAAC,OAAO,CAAE,CAAC,CAAC,SAAS,CAAE,CAAC,CAAE,CAAE,GAChD,CAAC,CAAC,OAAO,CAAE,CAAC,CAAC,SAAS,CAAE,CAAC,CAAE,CAAE,IAC1B,CAAC,CAAC,SAAS,CAAE,CAAC,CAAE,KAAK,GAAG,GAAG,IAAI,GAAG,QAAQ,GAAG,UAAU,GAAG,EAAE,CAAE,GACjE,CAAC,CAAC,OAAO,CAAE,GAAG,CAChB,CAAC;;MAED;MACA,KAAM,CAAC,IAAI,CAAC,CAAC,OAAO,EAAG;QACtB,KAAK,CAAC,gBAAgB,CAAE,CAAC,EAAE,CAAC,CAAC,OAAO,CAAE,CAAC,CAAG,CAAC;MAC5C;;MAEA;MACA,IAAK,CAAC,CAAC,UAAU,KACd,CAAC,CAAC,UAAU,CAAC,IAAI,CAAE,eAAe,EAAE,KAAK,EAAE,CAAE,CAAC,KAAK,KAAK,IAAI,KAAK,KAAK,CAAC,CAAE,EAAG;QAE9E;QACA,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC;MACrB;;MAEA;MACA,QAAQ,GAAG,OAAO;;MAElB;MACA,KAAM,CAAC,IAAI;QAAE,OAAO,EAAE,CAAC;QAAE,KAAK,EAAE,CAAC;QAAE,QAAQ,EAAE;MAAE,CAAC,EAAG;QAClD,KAAK,CAAE,CAAC,CAAE,CAAE,CAAC,CAAE,CAAC,CAAG,CAAC;MACrB;;MAEA;MACA,SAAS,GAAG,6BAA6B,CAAE,UAAU,EAAE,CAAC,EAAE,OAAO,EAAE,KAAM,CAAC;;MAE1E;MACA,IAAK,CAAC,SAAS,EAAG;QACjB,IAAI,CAAE,CAAC,CAAC,EAAE,cAAe,CAAC;MAC3B,CAAC,MAAM;QACN,KAAK,CAAC,UAAU,GAAG,CAAC;;QAEpB;QACA,IAAK,WAAW,EAAG;UAClB,kBAAkB,CAAC,OAAO,CAAE,UAAU,EAAE,CAAE,KAAK,EAAE,CAAC,CAAG,CAAC;QACvD;;QAEA;QACA,IAAK,KAAK,KAAK,CAAC,EAAG;UAClB,OAAO,KAAK;QACb;;QAEA;QACA,IAAK,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,OAAO,GAAG,CAAC,EAAG;UAC/B,YAAY,GAAG,MAAM,CAAC,UAAU,CAAE,YAAW;YAC5C,KAAK,CAAC,KAAK,CAAE,SAAU,CAAC;UACzB,CAAC,EAAE,CAAC,CAAC,OAAQ,CAAC;QACf;QAEA,IAAI;UACH,KAAK,GAAG,CAAC;UACT,SAAS,CAAC,IAAI,CAAE,cAAc,EAAE,IAAK,CAAC;QACvC,CAAC,CAAC,OAAQ,CAAC,EAAG;UAEb;UACA,IAAK,KAAK,GAAG,CAAC,EAAG;YAChB,IAAI,CAAE,CAAC,CAAC,EAAE,CAAE,CAAC;;YAEd;UACA,CAAC,MAAM;YACN,MAAM,CAAC;UACR;QACD;MACD;;MAEA;MACA,SAAS,IAAI,CAAE,MAAM,EAAE,gBAAgB,EAAE,SAAS,EAAE,OAAO,EAAG;QAC7D,IAAI,SAAS;UAAE,OAAO;UAAE,KAAK;UAAE,QAAQ;UAAE,QAAQ;UAChD,UAAU,GAAG,gBAAgB;;QAE9B;QACA,IAAK,KAAK,KAAK,CAAC,EAAG;UAClB;QACD;;QAEA;QACA,KAAK,GAAG,CAAC;;QAET;QACA,IAAK,YAAY,EAAG;UACnB,MAAM,CAAC,YAAY,CAAE,YAAa,CAAC;QACpC;;QAEA;QACA;QACA,SAAS,GAAG,SAAS;;QAErB;QACA,qBAAqB,GAAG,OAAO,IAAI,EAAE;;QAErC;QACA,KAAK,CAAC,UAAU,GAAG,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;;QAErC;QACA,SAAS,GAAG,MAAM,IAAI,GAAG,IAAI,MAAM,GAAG,GAAG,IAAI,MAAM,KAAK,GAAG;;QAE3D;QACA,IAAK,SAAS,EAAG;UAChB,QAAQ,GAAG,mBAAmB,CAAE,CAAC,EAAE,KAAK,EAAE,SAAU,CAAC;QACtD;;QAEA;QACA,QAAQ,GAAG,WAAW,CAAE,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAU,CAAC;;QAEvD;QACA,IAAK,SAAS,EAAG;UAEhB;UACA,IAAK,CAAC,CAAC,UAAU,EAAG;YACnB,QAAQ,GAAG,KAAK,CAAC,iBAAiB,CAAE,eAAgB,CAAC;YACrD,IAAK,QAAQ,EAAG;cACf,MAAM,CAAC,YAAY,CAAE,QAAQ,CAAE,GAAG,QAAQ;YAC3C;YACA,QAAQ,GAAG,KAAK,CAAC,iBAAiB,CAAE,MAAO,CAAC;YAC5C,IAAK,QAAQ,EAAG;cACf,MAAM,CAAC,IAAI,CAAE,QAAQ,CAAE,GAAG,QAAQ;YACnC;UACD;;UAEA;UACA,IAAK,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,IAAI,KAAK,MAAM,EAAG;YAC1C,UAAU,GAAG,WAAW;;YAEzB;UACA,CAAC,MAAM,IAAK,MAAM,KAAK,GAAG,EAAG;YAC5B,UAAU,GAAG,aAAa;;YAE3B;UACA,CAAC,MAAM;YACN,UAAU,GAAG,QAAQ,CAAC,KAAK;YAC3B,OAAO,GAAG,QAAQ,CAAC,IAAI;YACvB,KAAK,GAAG,QAAQ,CAAC,KAAK;YACtB,SAAS,GAAG,CAAC,KAAK;UACnB;QACD,CAAC,MAAM;UAEN;UACA;UACA,KAAK,GAAG,UAAU;UAClB,IAAK,MAAM,IAAI,CAAC,UAAU,EAAG;YAC5B,UAAU,GAAG,OAAO;YACpB,IAAK,MAAM,GAAG,CAAC,EAAG;cACjB,MAAM,GAAG,CAAC;YACX;UACD;QACD;;QAEA;QACA,KAAK,CAAC,MAAM,GAAG,MAAM;QACrB,KAAK,CAAC,UAAU,GAAG,CAAE,gBAAgB,IAAI,UAAU,IAAK,EAAE;;QAE1D;QACA,IAAK,SAAS,EAAG;UAChB,QAAQ,CAAC,WAAW,CAAE,eAAe,EAAE,CAAE,OAAO,EAAE,UAAU,EAAE,KAAK,CAAG,CAAC;QACxE,CAAC,MAAM;UACN,QAAQ,CAAC,UAAU,CAAE,eAAe,EAAE,CAAE,KAAK,EAAE,UAAU,EAAE,KAAK,CAAG,CAAC;QACrE;;QAEA;QACA,KAAK,CAAC,UAAU,CAAE,WAAW,CAAC;QAC9B,WAAU,GAAG,SAAS;QAEtB,IAAK,WAAW,EAAG;UAClB,kBAAkB,CAAC,OAAO,CAAE,SAAS,GAAG,aAAa,GAAG,WAAW,EAClE,CAAE,KAAK,EAAE,CAAC,EAAE,SAAS,GAAG,OAAO,GAAG,KAAK,CAAG,CAAC;QAC7C;;QAEA;QACA,gBAAgB,CAAC,QAAQ,CAAE,eAAe,EAAE,CAAE,KAAK,EAAE,UAAU,CAAG,CAAC;QAEnE,IAAK,WAAW,EAAG;UAClB,kBAAkB,CAAC,OAAO,CAAE,cAAc,EAAE,CAAE,KAAK,EAAE,CAAC,CAAG,CAAC;;UAE1D;UACA,IAAK,CAAG,GAAE,MAAM,CAAC,MAAQ,EAAG;YAC3B,MAAM,CAAC,KAAK,CAAC,OAAO,CAAE,UAAW,CAAC;UACnC;QACD;MACD;MAEA,OAAO,KAAK;IACb,CAAC;IAED,OAAO,EAAE,SAAA,QAAU,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAG;MACxC,OAAO,MAAM,CAAC,GAAG,CAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAO,CAAC;IACjD,CAAC;IAED,SAAS,EAAE,SAAA,UAAU,GAAG,EAAE,QAAQ,EAAG;MACpC,OAAO,MAAM,CAAC,GAAG,CAAE,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAS,CAAC;IACxD;EACD,CAAE,CAAC;EAEH,MAAM,CAAC,IAAI,CAAE,CAAE,KAAK,EAAE,MAAM,CAAE,EAAE,UAAU,CAAC,EAAE,MAAM,EAAG;IACrD,MAAM,CAAE,MAAM,CAAE,GAAG,UAAU,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAG;MAExD;MACA,IAAK,MAAM,CAAC,UAAU,CAAE,IAAK,CAAC,EAAG;QAChC,IAAI,GAAG,IAAI,IAAI,QAAQ;QACvB,QAAQ,GAAG,IAAI;QACf,IAAI,GAAG,SAAS;MACjB;;MAEA;MACA,OAAO,MAAM,CAAC,IAAI,CAAE,MAAM,CAAC,MAAM,CAAE;QAClC,GAAG,EAAE,GAAG;QACR,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE,IAAI;QACV,OAAO,EAAE;MACV,CAAC,EAAE,MAAM,CAAC,aAAa,CAAE,GAAI,CAAC,IAAI,GAAI,CAAE,CAAC;IAC1C,CAAC;EACF,CAAE,CAAC;EAGH,MAAM,CAAC,QAAQ,GAAG,UAAU,GAAG,EAAG;IACjC,OAAO,MAAM,CAAC,IAAI,CAAE;MACnB,GAAG,EAAE,GAAG;MAER;MACA,IAAI,EAAE,KAAK;MACX,QAAQ,EAAE,QAAQ;MAClB,KAAK,EAAE,IAAI;MACX,KAAK,EAAE,KAAK;MACZ,MAAM,EAAE,KAAK;MACb,QAAQ,EAAE;IACX,CAAE,CAAC;EACJ,CAAC;EAGD,MAAM,CAAC,EAAE,CAAC,MAAM,CAAE;IACjB,OAAO,EAAE,SAAA,QAAU,IAAI,EAAG;MACzB,IAAK,MAAM,CAAC,UAAU,CAAE,IAAK,CAAC,EAAG;QAChC,OAAO,IAAI,CAAC,IAAI,CAAE,UAAU,CAAC,EAAG;UAC/B,MAAM,CAAE,IAAK,CAAC,CAAC,OAAO,CAAE,IAAI,CAAC,IAAI,CAAE,IAAI,EAAE,CAAE,CAAE,CAAC;QAC/C,CAAE,CAAC;MACJ;MAEA,IAAK,IAAI,CAAE,CAAC,CAAE,EAAG;QAEhB;QACA,IAAI,IAAI,GAAG,MAAM,CAAE,IAAI,EAAE,IAAI,CAAE,CAAC,CAAE,CAAC,aAAc,CAAC,CAAC,EAAE,CAAE,CAAE,CAAC,CAAC,KAAK,CAAE,IAAK,CAAC;QAExE,IAAK,IAAI,CAAE,CAAC,CAAE,CAAC,UAAU,EAAG;UAC3B,IAAI,CAAC,YAAY,CAAE,IAAI,CAAE,CAAC,CAAG,CAAC;QAC/B;QAEA,IAAI,CAAC,GAAG,CAAE,YAAW;UACpB,IAAI,IAAI,GAAG,IAAI;UAEf,OAAQ,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,KAAK,CAAC,EAAG;YAC3D,IAAI,GAAG,IAAI,CAAC,UAAU;UACvB;UAEA,OAAO,IAAI;QACZ,CAAE,CAAC,CAAC,MAAM,CAAE,IAAK,CAAC;MACnB;MAEA,OAAO,IAAI;IACZ,CAAC;IAED,SAAS,EAAE,SAAA,UAAU,IAAI,EAAG;MAC3B,IAAK,MAAM,CAAC,UAAU,CAAE,IAAK,CAAC,EAAG;QAChC,OAAO,IAAI,CAAC,IAAI,CAAE,UAAU,CAAC,EAAG;UAC/B,MAAM,CAAE,IAAK,CAAC,CAAC,SAAS,CAAE,IAAI,CAAC,IAAI,CAAE,IAAI,EAAE,CAAE,CAAE,CAAC;QACjD,CAAE,CAAC;MACJ;MAEA,OAAO,IAAI,CAAC,IAAI,CAAE,YAAW;QAC5B,IAAI,IAAI,GAAG,MAAM,CAAE,IAAK,CAAC;UACxB,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE3B,IAAK,QAAQ,CAAC,MAAM,EAAG;UACtB,QAAQ,CAAC,OAAO,CAAE,IAAK,CAAC;QAEzB,CAAC,MAAM;UACN,IAAI,CAAC,MAAM,CAAE,IAAK,CAAC;QACpB;MACD,CAAE,CAAC;IACJ,CAAC;IAED,IAAI,EAAE,SAAA,KAAU,IAAI,EAAG;MACtB,IAAI,UAAU,GAAG,MAAM,CAAC,UAAU,CAAE,IAAK,CAAC;MAE1C,OAAO,IAAI,CAAC,IAAI,CAAE,UAAU,CAAC,EAAG;QAC/B,MAAM,CAAE,IAAK,CAAC,CAAC,OAAO,CAAE,UAAU,GAAG,IAAI,CAAC,IAAI,CAAE,IAAI,EAAE,CAAE,CAAC,GAAG,IAAK,CAAC;MACnE,CAAE,CAAC;IACJ,CAAC;IAED,MAAM,EAAE,SAAA,OAAA,EAAW;MAClB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAE,YAAW;QACrC,IAAK,CAAC,MAAM,CAAC,QAAQ,CAAE,IAAI,EAAE,MAAO,CAAC,EAAG;UACvC,MAAM,CAAE,IAAK,CAAC,CAAC,WAAW,CAAE,IAAI,CAAC,UAAW,CAAC;QAC9C;MACD,CAAE,CAAC,CAAC,GAAG,CAAC,CAAC;IACV;EACD,CAAE,CAAC;EAGH,SAAS,UAAU,CAAE,IAAI,EAAG;IAC3B,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,MAAM,CAAC,GAAG,CAAE,IAAI,EAAE,SAAU,CAAC;EACzE;EAEA,SAAS,YAAY,CAAE,IAAI,EAAG;IAE7B;IACA,IAAK,CAAC,MAAM,CAAC,QAAQ,CAAE,IAAI,CAAC,aAAa,IAAI,QAAQ,EAAE,IAAK,CAAC,EAAG;MAC/D,OAAO,IAAI;IACZ;IACA,OAAQ,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAG;MACrC,IAAK,UAAU,CAAE,IAAK,CAAC,KAAK,MAAM,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAG;QAC9D,OAAO,IAAI;MACZ;MACA,IAAI,GAAG,IAAI,CAAC,UAAU;IACvB;IACA,OAAO,KAAK;EACb;EAEA,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,UAAU,IAAI,EAAG;IAE7C;IACA;IACA,OAAO,OAAO,CAAC,qBAAqB,CAAC,CAAC,GACnC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,IAAI,CAAC,YAAY,IAAI,CAAC,IAChD,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,MAAM,GAC7B,YAAY,CAAE,IAAK,CAAC;EACvB,CAAC;EAED,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,UAAU,IAAI,EAAG;IAC9C,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAE,IAAK,CAAC;EAC3C,CAAC;EAKD,IAAI,GAAG,GAAG,MAAM;IACf,QAAQ,GAAG,OAAO;IAClB,KAAK,GAAG,QAAQ;IAChB,eAAe,GAAG,uCAAuC;IACzD,YAAY,GAAG,oCAAoC;EAEpD,SAAS,WAAW,CAAE,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,GAAG,EAAG;IACrD,IAAI,IAAI;IAER,IAAK,MAAM,CAAC,OAAO,CAAE,GAAI,CAAC,EAAG;MAE5B;MACA,MAAM,CAAC,IAAI,CAAE,GAAG,EAAE,UAAU,CAAC,EAAE,CAAC,EAAG;QAClC,IAAK,WAAW,IAAI,QAAQ,CAAC,IAAI,CAAE,MAAO,CAAC,EAAG;UAE7C;UACA,GAAG,CAAE,MAAM,EAAE,CAAE,CAAC;QAEjB,CAAC,MAAM;UAEN;UACA,WAAW,CACV,MAAM,GAAG,GAAG,IAAK,OAAA,CAAO,CAAC,MAAK,QAAQ,IAAI,CAAC,IAAI,IAAI,GAAG,CAAC,GAAG,EAAE,CAAE,GAAG,GAAG,EACpE,CAAC,EACD,WAAW,EACX,GACD,CAAC;QACF;MACD,CAAE,CAAC;IAEJ,CAAC,MAAM,IAAK,CAAC,WAAW,IAAI,MAAM,CAAC,IAAI,CAAE,GAAI,CAAC,KAAK,QAAQ,EAAG;MAE7D;MACA,KAAM,IAAI,IAAI,GAAG,EAAG;QACnB,WAAW,CAAE,MAAM,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,EAAE,GAAG,CAAE,IAAI,CAAE,EAAE,WAAW,EAAE,GAAI,CAAC;MACxE;IAED,CAAC,MAAM;MAEN;MACA,GAAG,CAAE,MAAM,EAAE,GAAI,CAAC;IACnB;EACD;;EAEA;EACA;EACA,MAAM,CAAC,KAAK,GAAG,UAAU,CAAC,EAAE,WAAW,EAAG;IACzC,IAAI,MAAM;MACT,CAAC,GAAG,EAAE;MACN,GAAG,GAAG,SAAN,GAAG,CAAa,GAAG,EAAE,KAAK,EAAG;QAE5B;QACA,KAAK,GAAG,MAAM,CAAC,UAAU,CAAE,KAAM,CAAC,GAAG,KAAK,CAAC,CAAC,GAAK,KAAK,IAAI,IAAI,GAAG,EAAE,GAAG,KAAO;QAC7E,CAAC,CAAE,CAAC,CAAC,MAAM,CAAE,GAAG,kBAAkB,CAAE,GAAI,CAAC,GAAG,GAAG,GAAG,kBAAkB,CAAE,KAAM,CAAC;MAC9E,CAAC;;IAEF;IACA,IAAK,WAAW,KAAK,SAAS,EAAG;MAChC,WAAW,GAAG,MAAM,CAAC,YAAY,IAAI,MAAM,CAAC,YAAY,CAAC,WAAW;IACrE;;IAEA;IACA,IAAK,MAAM,CAAC,OAAO,CAAE,CAAE,CAAC,IAAM,CAAC,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,aAAa,CAAE,CAAE,CAAG,EAAG;MAExE;MACA,MAAM,CAAC,IAAI,CAAE,CAAC,EAAE,YAAW;QAC1B,GAAG,CAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAM,CAAC;MAC7B,CAAE,CAAC;IAEJ,CAAC,MAAM;MAEN;MACA;MACA,KAAM,MAAM,IAAI,CAAC,EAAG;QACnB,WAAW,CAAE,MAAM,EAAE,CAAC,CAAE,MAAM,CAAE,EAAE,WAAW,EAAE,GAAI,CAAC;MACrD;IACD;;IAEA;IACA,OAAO,CAAC,CAAC,IAAI,CAAE,GAAI,CAAC,CAAC,OAAO,CAAE,GAAG,EAAE,GAAI,CAAC;EACzC,CAAC;EAED,MAAM,CAAC,EAAE,CAAC,MAAM,CAAE;IACjB,SAAS,EAAE,SAAA,UAAA,EAAW;MACrB,OAAO,MAAM,CAAC,KAAK,CAAE,IAAI,CAAC,cAAc,CAAC,CAAE,CAAC;IAC7C,CAAC;IACD,cAAc,EAAE,SAAA,eAAA,EAAW;MAC1B,OAAO,IAAI,CAAC,GAAG,CAAE,YAAW;QAE3B;QACA,IAAI,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAE,IAAI,EAAE,UAAW,CAAC;QAC9C,OAAO,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAE,QAAS,CAAC,GAAG,IAAI;MACtD,CAAE,CAAC,CACF,MAAM,CAAE,YAAW;QACnB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI;;QAEpB;QACA,OAAO,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,CAAE,IAAK,CAAC,CAAC,EAAE,CAAE,WAAY,CAAC,IACpD,YAAY,CAAC,IAAI,CAAE,IAAI,CAAC,QAAS,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAE,IAAK,CAAC,KACjE,IAAI,CAAC,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAE,IAAK,CAAC,CAAE;MAClD,CAAE,CAAC,CACF,GAAG,CAAE,UAAU,CAAC,EAAE,IAAI,EAAG;QACzB,IAAI,GAAG,GAAG,MAAM,CAAE,IAAK,CAAC,CAAC,GAAG,CAAC,CAAC;QAE9B,OAAO,GAAG,IAAI,IAAI,GACjB,IAAI,GACJ,MAAM,CAAC,OAAO,CAAE,GAAI,CAAC,GACpB,MAAM,CAAC,GAAG,CAAE,GAAG,EAAE,UAAU,GAAG,EAAG;UAChC,OAAO;YAAE,IAAI,EAAE,IAAI,CAAC,IAAI;YAAE,KAAK,EAAE,GAAG,CAAC,OAAO,CAAE,KAAK,EAAE,MAAO;UAAE,CAAC;QAChE,CAAE,CAAC,GACH;UAAE,IAAI,EAAE,IAAI,CAAC,IAAI;UAAE,KAAK,EAAE,GAAG,CAAC,OAAO,CAAE,KAAK,EAAE,MAAO;QAAE,CAAC;MAC3D,CAAE,CAAC,CAAC,GAAG,CAAC,CAAC;IACV;EACD,CAAE,CAAC;;EAGH;EACA;EACA,MAAM,CAAC,YAAY,CAAC,GAAG,GAAG,MAAM,CAAC,aAAa,KAAK,SAAS;EAE3D;EACA,YAAW;IAEV;IACA,IAAK,IAAI,CAAC,OAAO,EAAG;MACnB,OAAO,eAAe,CAAC,CAAC;IACzB;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA,IAAK,QAAQ,CAAC,YAAY,GAAG,CAAC,EAAG;MAChC,OAAO,iBAAiB,CAAC,CAAC;IAC3B;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,uCAAuC,CAAC,IAAI,CAAE,IAAI,CAAC,IAAK,CAAC,IAC/D,iBAAiB,CAAC,CAAC,IAAI,eAAe,CAAC,CAAC;EAC1C,CAAC;EAED;EACA,iBAAiB;EAElB,IAAI,KAAK,GAAG,CAAC;IACZ,YAAY,GAAG,CAAC,CAAC;IACjB,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;;EAEzC;EACA;EACA;EACA,IAAK,MAAM,CAAC,WAAW,EAAG;IACzB,MAAM,CAAC,WAAW,CAAE,UAAU,EAAE,YAAW;MAC1C,KAAM,IAAI,GAAG,IAAI,YAAY,EAAG;QAC/B,YAAY,CAAE,GAAG,CAAE,CAAE,SAAS,EAAE,IAAK,CAAC;MACvC;IACD,CAAE,CAAC;EACJ;;EAEA;EACA,OAAO,CAAC,IAAI,GAAG,CAAC,CAAC,YAAY,IAAM,iBAAiB,IAAI,YAAc;EACtE,YAAY,GAAG,OAAO,CAAC,IAAI,GAAG,CAAC,CAAC,YAAY;;EAE5C;EACA,IAAK,YAAY,EAAG;IAEnB,MAAM,CAAC,aAAa,CAAE,UAAU,OAAO,EAAG;MAEzC;MACA,IAAK,CAAC,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,IAAI,EAAG;QAE3C,IAAI,SAAQ;QAEZ,OAAO;UACN,IAAI,EAAE,SAAA,KAAU,OAAO,EAAE,QAAQ,EAAG;YACnC,IAAI,CAAC;cACJ,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;cACnB,EAAE,GAAG,EAAE,KAAK;;YAEb;YACA,GAAG,CAAC,IAAI,CACP,OAAO,CAAC,IAAI,EACZ,OAAO,CAAC,GAAG,EACX,OAAO,CAAC,KAAK,EACb,OAAO,CAAC,QAAQ,EAChB,OAAO,CAAC,QACT,CAAC;;YAED;YACA,IAAK,OAAO,CAAC,SAAS,EAAG;cACxB,KAAM,CAAC,IAAI,OAAO,CAAC,SAAS,EAAG;gBAC9B,GAAG,CAAE,CAAC,CAAE,GAAG,OAAO,CAAC,SAAS,CAAE,CAAC,CAAE;cAClC;YACD;;YAEA;YACA,IAAK,OAAO,CAAC,QAAQ,IAAI,GAAG,CAAC,gBAAgB,EAAG;cAC/C,GAAG,CAAC,gBAAgB,CAAE,OAAO,CAAC,QAAS,CAAC;YACzC;;YAEA;YACA;YACA;YACA;YACA;YACA,IAAK,CAAC,OAAO,CAAC,WAAW,IAAI,CAAC,OAAO,CAAE,kBAAkB,CAAE,EAAG;cAC7D,OAAO,CAAE,kBAAkB,CAAE,GAAG,gBAAgB;YACjD;;YAEA;YACA,KAAM,CAAC,IAAI,OAAO,EAAG;cAEpB;cACA;cACA;cACA;cACA;cACA;cACA,IAAK,OAAO,CAAE,CAAC,CAAE,KAAK,SAAS,EAAG;gBACjC,GAAG,CAAC,gBAAgB,CAAE,CAAC,EAAE,OAAO,CAAE,CAAC,CAAE,GAAG,EAAG,CAAC;cAC7C;YACD;;YAEA;YACA;YACA;YACA,GAAG,CAAC,IAAI,CAAI,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,IAAI,IAAM,IAAK,CAAC;;YAE1D;YACA,SAAQ,GAAG,SAAA,SAAU,CAAC,EAAE,OAAO,EAAG;cACjC,IAAI,MAAM,EAAE,UAAU,EAAE,SAAS;;cAEjC;cACA,IAAK,SAAQ,KAAM,OAAO,IAAI,GAAG,CAAC,UAAU,KAAK,CAAC,CAAE,EAAG;gBAEtD;gBACA,OAAO,YAAY,CAAE,EAAE,CAAE;gBACzB,SAAQ,GAAG,SAAS;gBACpB,GAAG,CAAC,kBAAkB,GAAG,MAAM,CAAC,IAAI;;gBAEpC;gBACA,IAAK,OAAO,EAAG;kBACd,IAAK,GAAG,CAAC,UAAU,KAAK,CAAC,EAAG;oBAC3B,GAAG,CAAC,KAAK,CAAC,CAAC;kBACZ;gBACD,CAAC,MAAM;kBACN,SAAS,GAAG,CAAC,CAAC;kBACd,MAAM,GAAG,GAAG,CAAC,MAAM;;kBAEnB;kBACA;kBACA;kBACA,IAAK,OAAO,GAAG,CAAC,YAAY,KAAK,QAAQ,EAAG;oBAC3C,SAAS,CAAC,IAAI,GAAG,GAAG,CAAC,YAAY;kBAClC;;kBAEA;kBACA;kBACA,IAAI;oBACH,UAAU,GAAG,GAAG,CAAC,UAAU;kBAC5B,CAAC,CAAC,OAAQ,CAAC,EAAG;oBAEb;oBACA,UAAU,GAAG,EAAE;kBAChB;;kBAEA;;kBAEA;kBACA;kBACA;kBACA,IAAK,CAAC,MAAM,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,EAAG;oBACzD,MAAM,GAAG,SAAS,CAAC,IAAI,GAAG,GAAG,GAAG,GAAG;;oBAEpC;kBACA,CAAC,MAAM,IAAK,MAAM,KAAK,IAAI,EAAG;oBAC7B,MAAM,GAAG,GAAG;kBACb;gBACD;cACD;;cAEA;cACA,IAAK,SAAS,EAAG;gBAChB,QAAQ,CAAE,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,CAAC,qBAAqB,CAAC,CAAE,CAAC;cACvE;YACD,CAAC;;YAED;YACA;YACA;YACA,IAAK,CAAC,OAAO,CAAC,KAAK,EAAG;cAErB;cACA,SAAQ,CAAC,CAAC;YACX,CAAC,MAAM,IAAK,GAAG,CAAC,UAAU,KAAK,CAAC,EAAG;cAElC;cACA;cACA,MAAM,CAAC,UAAU,CAAE,SAAS,CAAC;YAC9B,CAAC,MAAM;cAEN;cACA;cACA,GAAG,CAAC,kBAAkB,GAAG,YAAY,CAAE,EAAE,CAAE,GAAG,SAAQ;YACvD;UACD,CAAC;UAED,KAAK,EAAE,SAAA,MAAA,EAAW;YACjB,IAAK,SAAQ,EAAG;cACf,SAAQ,CAAE,SAAS,EAAE,IAAK,CAAC;YAC5B;UACD;QACD,CAAC;MACF;IACD,CAAE,CAAC;EACJ;;EAEA;EACA,SAAS,iBAAiB,CAAA,EAAG;IAC5B,IAAI;MACH,OAAO,IAAI,MAAM,CAAC,cAAc,CAAC,CAAC;IACnC,CAAC,CAAC,OAAQ,CAAC,EAAG,CAAC;EAChB;EAEA,SAAS,eAAe,CAAA,EAAG;IAC1B,IAAI;MACH,OAAO,IAAI,MAAM,CAAC,aAAa,CAAE,mBAAoB,CAAC;IACvD,CAAC,CAAC,OAAQ,CAAC,EAAG,CAAC;EAChB;;EAKA;EACA,MAAM,CAAC,SAAS,CAAE;IACjB,OAAO,EAAE;MACR,MAAM,EAAE,2CAA2C,GAClD;IACF,CAAC;IACD,QAAQ,EAAE;MACT,MAAM,EAAE;IACT,CAAC;IACD,UAAU,EAAE;MACX,aAAa,EAAE,SAAA,WAAU,IAAI,EAAG;QAC/B,MAAM,CAAC,UAAU,CAAE,IAAK,CAAC;QACzB,OAAO,IAAI;MACZ;IACD;EACD,CAAE,CAAC;;EAEH;EACA,MAAM,CAAC,aAAa,CAAE,QAAQ,EAAE,UAAU,CAAC,EAAG;IAC7C,IAAK,CAAC,CAAC,KAAK,KAAK,SAAS,EAAG;MAC5B,CAAC,CAAC,KAAK,GAAG,KAAK;IAChB;IACA,IAAK,CAAC,CAAC,WAAW,EAAG;MACpB,CAAC,CAAC,IAAI,GAAG,KAAK;MACd,CAAC,CAAC,MAAM,GAAG,KAAK;IACjB;EACD,CAAE,CAAC;;EAEH;EACA,MAAM,CAAC,aAAa,CAAE,QAAQ,EAAE,UAAU,CAAC,EAAG;IAE7C;IACA,IAAK,CAAC,CAAC,WAAW,EAAG;MAEpB,IAAI,MAAM;QACT,IAAI,GAAG,QAAQ,CAAC,IAAI,IAAI,MAAM,CAAE,MAAO,CAAC,CAAE,CAAC,CAAE,IAAI,QAAQ,CAAC,eAAe;MAE1E,OAAO;QAEN,IAAI,EAAE,SAAA,KAAU,CAAC,EAAE,QAAQ,EAAG;UAE7B,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAE,QAAS,CAAC;UAE3C,MAAM,CAAC,KAAK,GAAG,IAAI;UAEnB,IAAK,CAAC,CAAC,aAAa,EAAG;YACtB,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC,aAAa;UACjC;UAEA,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG;;UAElB;UACA,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,kBAAkB,GAAG,UAAU,CAAC,EAAE,OAAO,EAAG;YAElE,IAAK,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,iBAAiB,CAAC,IAAI,CAAE,MAAM,CAAC,UAAW,CAAC,EAAG;cAEnF;cACA,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,kBAAkB,GAAG,IAAI;;cAEhD;cACA,IAAK,MAAM,CAAC,UAAU,EAAG;gBACxB,MAAM,CAAC,UAAU,CAAC,WAAW,CAAE,MAAO,CAAC;cACxC;;cAEA;cACA,MAAM,GAAG,IAAI;;cAEb;cACA,IAAK,CAAC,OAAO,EAAG;gBACf,QAAQ,CAAE,GAAG,EAAE,SAAU,CAAC;cAC3B;YACD;UACD,CAAC;;UAED;UACA;UACA,IAAI,CAAC,YAAY,CAAE,MAAM,EAAE,IAAI,CAAC,UAAW,CAAC;QAC7C,CAAC;QAED,KAAK,EAAE,SAAA,MAAA,EAAW;UACjB,IAAK,MAAM,EAAG;YACb,MAAM,CAAC,MAAM,CAAE,SAAS,EAAE,IAAK,CAAC;UACjC;QACD;MACD,CAAC;IACF;EACD,CAAE,CAAC;EAKH,IAAI,YAAY,GAAG,EAAE;IACpB,MAAM,GAAG,mBAAmB;;EAE7B;EACA,MAAM,CAAC,SAAS,CAAE;IACjB,KAAK,EAAE,UAAU;IACjB,aAAa,EAAE,SAAA,cAAA,EAAW;MACzB,IAAI,QAAQ,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,IAAM,MAAM,CAAC,OAAO,GAAG,GAAG,GAAK,KAAK,EAAM;MAC3E,IAAI,CAAE,QAAQ,CAAE,GAAG,IAAI;MACvB,OAAO,QAAQ;IAChB;EACD,CAAE,CAAC;;EAEH;EACA,MAAM,CAAC,aAAa,CAAE,YAAY,EAAE,UAAU,CAAC,EAAE,gBAAgB,EAAE,KAAK,EAAG;IAE1E,IAAI,YAAY;MAAE,WAAW;MAAE,iBAAiB;MAC/C,QAAQ,GAAG,CAAC,CAAC,KAAK,KAAK,KAAK,KAAM,MAAM,CAAC,IAAI,CAAE,CAAC,CAAC,GAAI,CAAC,GACrD,KAAK,GACL,OAAO,CAAC,CAAC,IAAI,KAAK,QAAQ,IACzB,CAAE,CAAC,CAAC,WAAW,IAAI,EAAE,EACnB,OAAO,CAAE,mCAAoC,CAAC,KAAK,CAAC,IACtD,MAAM,CAAC,IAAI,CAAE,CAAC,CAAC,IAAK,CAAC,IAAI,MAAM,CAChC;;IAEF;IACA,IAAK,QAAQ,IAAI,CAAC,CAAC,SAAS,CAAE,CAAC,CAAE,KAAK,OAAO,EAAG;MAE/C;MACA,YAAY,GAAG,CAAC,CAAC,aAAa,GAAG,MAAM,CAAC,UAAU,CAAE,CAAC,CAAC,aAAc,CAAC,GACpE,CAAC,CAAC,aAAa,CAAC,CAAC,GACjB,CAAC,CAAC,aAAa;;MAEhB;MACA,IAAK,QAAQ,EAAG;QACf,CAAC,CAAE,QAAQ,CAAE,GAAG,CAAC,CAAE,QAAQ,CAAE,CAAC,OAAO,CAAE,MAAM,EAAE,IAAI,GAAG,YAAa,CAAC;MACrE,CAAC,MAAM,IAAK,CAAC,CAAC,KAAK,KAAK,KAAK,EAAG;QAC/B,CAAC,CAAC,GAAG,IAAI,CAAE,MAAM,CAAC,IAAI,CAAE,CAAC,CAAC,GAAI,CAAC,GAAG,GAAG,GAAG,GAAG,IAAK,CAAC,CAAC,KAAK,GAAG,GAAG,GAAG,YAAY;MAC7E;;MAEA;MACA,CAAC,CAAC,UAAU,CAAE,aAAa,CAAE,GAAG,YAAW;QAC1C,IAAK,CAAC,iBAAiB,EAAG;UACzB,MAAM,CAAC,KAAK,CAAE,YAAY,GAAG,iBAAkB,CAAC;QACjD;QACA,OAAO,iBAAiB,CAAE,CAAC,CAAE;MAC9B,CAAC;;MAED;MACA,CAAC,CAAC,SAAS,CAAE,CAAC,CAAE,GAAG,MAAM;;MAEzB;MACA,WAAW,GAAG,MAAM,CAAE,YAAY,CAAE;MACpC,MAAM,CAAE,YAAY,CAAE,GAAG,YAAW;QACnC,iBAAiB,GAAG,SAAS;MAC9B,CAAC;;MAED;MACA,KAAK,CAAC,MAAM,CAAE,YAAW;QAExB;QACA,IAAK,WAAW,KAAK,SAAS,EAAG;UAChC,MAAM,CAAE,MAAO,CAAC,CAAC,UAAU,CAAE,YAAa,CAAC;;UAE5C;QACA,CAAC,MAAM;UACN,MAAM,CAAE,YAAY,CAAE,GAAG,WAAW;QACrC;;QAEA;QACA,IAAK,CAAC,CAAE,YAAY,CAAE,EAAG;UAExB;UACA,CAAC,CAAC,aAAa,GAAG,gBAAgB,CAAC,aAAa;;UAEhD;UACA,YAAY,CAAC,IAAI,CAAE,YAAa,CAAC;QAClC;;QAEA;QACA,IAAK,iBAAiB,IAAI,MAAM,CAAC,UAAU,CAAE,WAAY,CAAC,EAAG;UAC5D,WAAW,CAAE,iBAAiB,CAAE,CAAC,CAAG,CAAC;QACtC;QAEA,iBAAiB,GAAG,WAAW,GAAG,SAAS;MAC5C,CAAE,CAAC;;MAEH;MACA,OAAO,QAAQ;IAChB;EACD,CAAE,CAAC;;EAKH;EACA;EACA;EACA;EACA,MAAM,CAAC,SAAS,GAAG,UAAU,IAAI,EAAE,OAAO,EAAE,WAAW,EAAG;IACzD,IAAK,CAAC,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAG;MACxC,OAAO,IAAI;IACZ;IACA,IAAK,OAAO,OAAO,KAAK,SAAS,EAAG;MACnC,WAAW,GAAG,OAAO;MACrB,OAAO,GAAG,KAAK;IAChB;IACA,OAAO,GAAG,OAAO,IAAI,QAAQ;IAE7B,IAAI,MAAM,GAAG,UAAU,CAAC,IAAI,CAAE,IAAK,CAAC;MACnC,OAAO,GAAG,CAAC,WAAW,IAAI,EAAE;;IAE7B;IACA,IAAK,MAAM,EAAG;MACb,OAAO,CAAE,OAAO,CAAC,aAAa,CAAE,MAAM,CAAE,CAAC,CAAG,CAAC,CAAE;IAChD;IAEA,MAAM,GAAG,aAAa,CAAE,CAAE,IAAI,CAAE,EAAE,OAAO,EAAE,OAAQ,CAAC;IAEpD,IAAK,OAAO,IAAI,OAAO,CAAC,MAAM,EAAG;MAChC,MAAM,CAAE,OAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;IAC3B;IAEA,OAAO,MAAM,CAAC,KAAK,CAAE,EAAE,EAAE,MAAM,CAAC,UAAW,CAAC;EAC7C,CAAC;;EAGD;EACA,IAAI,KAAK,GAAG,MAAM,CAAC,EAAE,CAAC,IAAI;;EAE1B;AACA;AACA;EACA,MAAM,CAAC,EAAE,CAAC,IAAI,GAAG,UAAU,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAG;IAClD,IAAK,OAAO,GAAG,KAAK,QAAQ,IAAI,KAAK,EAAG;MACvC,OAAO,KAAK,CAAC,KAAK,CAAE,IAAI,EAAE,SAAU,CAAC;IACtC;IAEA,IAAI,QAAQ;MAAE,IAAI;MAAE,QAAQ;MAC3B,IAAI,GAAG,IAAI;MACX,GAAG,GAAG,GAAG,CAAC,OAAO,CAAE,GAAI,CAAC;IAEzB,IAAK,GAAG,GAAG,CAAC,CAAC,EAAG;MACf,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAE,GAAG,CAAC,KAAK,CAAE,GAAG,EAAE,GAAG,CAAC,MAAO,CAAE,CAAC;MACtD,GAAG,GAAG,GAAG,CAAC,KAAK,CAAE,CAAC,EAAE,GAAI,CAAC;IAC1B;;IAEA;IACA,IAAK,MAAM,CAAC,UAAU,CAAE,MAAO,CAAC,EAAG;MAElC;MACA,QAAQ,GAAG,MAAM;MACjB,MAAM,GAAG,SAAS;;MAEnB;IACA,CAAC,MAAM,IAAK,MAAM,IAAI,OAAA,CAAO,MAAM,MAAK,QAAQ,EAAG;MAClD,IAAI,GAAG,MAAM;IACd;;IAEA;IACA,IAAK,IAAI,CAAC,MAAM,GAAG,CAAC,EAAG;MACtB,MAAM,CAAC,IAAI,CAAE;QACZ,GAAG,EAAE,GAAG;QAER;QACA;QACA;QACA,IAAI,EAAE,IAAI,IAAI,KAAK;QACnB,QAAQ,EAAE,MAAM;QAChB,IAAI,EAAE;MACP,CAAE,CAAC,CAAC,IAAI,CAAE,UAAU,YAAY,EAAG;QAElC;QACA,QAAQ,GAAG,SAAS;QAEpB,IAAI,CAAC,IAAI,CAAE,QAAQ;QAElB;QACA;QACA,MAAM,CAAE,OAAQ,CAAC,CAAC,MAAM,CAAE,MAAM,CAAC,SAAS,CAAE,YAAa,CAAE,CAAC,CAAC,IAAI,CAAE,QAAS,CAAC;QAE7E;QACA,YAAa,CAAC;;QAEhB;QACA;QACA;MACA,CAAE,CAAC,CAAC,MAAM,CAAE,QAAQ,IAAI,UAAU,KAAK,EAAE,MAAM,EAAG;QACjD,IAAI,CAAC,IAAI,CAAE,YAAW;UACrB,QAAQ,CAAC,KAAK,CAAE,IAAI,EAAE,QAAQ,IAAI,CAAE,KAAK,CAAC,YAAY,EAAE,MAAM,EAAE,KAAK,CAAG,CAAC;QAC1E,CAAE,CAAC;MACJ,CAAE,CAAC;IACJ;IAEA,OAAO,IAAI;EACZ,CAAC;;EAKD;EACA,MAAM,CAAC,IAAI,CAAE,CACZ,WAAW,EACX,UAAU,EACV,cAAc,EACd,WAAW,EACX,aAAa,EACb,UAAU,CACV,EAAE,UAAU,CAAC,EAAE,IAAI,EAAG;IACtB,MAAM,CAAC,EAAE,CAAE,IAAI,CAAE,GAAG,UAAU,EAAE,EAAG;MAClC,OAAO,IAAI,CAAC,EAAE,CAAE,IAAI,EAAE,EAAG,CAAC;IAC3B,CAAC;EACF,CAAE,CAAC;EAKH,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,UAAU,IAAI,EAAG;IAC/C,OAAO,MAAM,CAAC,IAAI,CAAE,MAAM,CAAC,MAAM,EAAE,UAAU,EAAE,EAAG;MACjD,OAAO,IAAI,KAAK,EAAE,CAAC,IAAI;IACxB,CAAE,CAAC,CAAC,MAAM;EACX,CAAC;;EAMD;AACA;AACA;EACA,SAAS,SAAS,CAAE,IAAI,EAAG;IAC1B,OAAO,MAAM,CAAC,QAAQ,CAAE,IAAK,CAAC,GAC7B,IAAI,GACJ,IAAI,CAAC,QAAQ,KAAK,CAAC,GAClB,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,YAAY,GACrC,KAAK;EACR;EAEA,MAAM,CAAC,MAAM,GAAG;IACf,SAAS,EAAE,SAAA,UAAU,IAAI,EAAE,OAAO,EAAE,CAAC,EAAG;MACvC,IAAI,WAAW;QAAE,OAAO;QAAE,SAAS;QAAE,MAAM;QAAE,SAAS;QAAE,UAAU;QAAE,iBAAiB;QACpF,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAE,IAAI,EAAE,UAAW,CAAC;QACzC,OAAO,GAAG,MAAM,CAAE,IAAK,CAAC;QACxB,KAAK,GAAG,CAAC,CAAC;;MAEX;MACA,IAAK,QAAQ,KAAK,QAAQ,EAAG;QAC5B,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU;MACjC;MAEA,SAAS,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;MAC5B,SAAS,GAAG,MAAM,CAAC,GAAG,CAAE,IAAI,EAAE,KAAM,CAAC;MACrC,UAAU,GAAG,MAAM,CAAC,GAAG,CAAE,IAAI,EAAE,MAAO,CAAC;MACvC,iBAAiB,GAAG,CAAE,QAAQ,KAAK,UAAU,IAAI,QAAQ,KAAK,OAAO,KACpE,MAAM,CAAC,OAAO,CAAE,MAAM,EAAE,CAAE,SAAS,EAAE,UAAU,CAAG,CAAC,GAAG,CAAC,CAAC;;MAEzD;MACA;MACA,IAAK,iBAAiB,EAAG;QACxB,WAAW,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;QAChC,MAAM,GAAG,WAAW,CAAC,GAAG;QACxB,OAAO,GAAG,WAAW,CAAC,IAAI;MAC3B,CAAC,MAAM;QACN,MAAM,GAAG,UAAU,CAAE,SAAU,CAAC,IAAI,CAAC;QACrC,OAAO,GAAG,UAAU,CAAE,UAAW,CAAC,IAAI,CAAC;MACxC;MAEA,IAAK,MAAM,CAAC,UAAU,CAAE,OAAQ,CAAC,EAAG;QAEnC;QACA,OAAO,GAAG,OAAO,CAAC,IAAI,CAAE,IAAI,EAAE,CAAC,EAAE,MAAM,CAAC,MAAM,CAAE,CAAC,CAAC,EAAE,SAAU,CAAE,CAAC;MAClE;MAEA,IAAK,OAAO,CAAC,GAAG,IAAI,IAAI,EAAG;QAC1B,KAAK,CAAC,GAAG,GAAK,OAAO,CAAC,GAAG,GAAG,SAAS,CAAC,GAAG,GAAK,MAAM;MACrD;MACA,IAAK,OAAO,CAAC,IAAI,IAAI,IAAI,EAAG;QAC3B,KAAK,CAAC,IAAI,GAAK,OAAO,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,GAAK,OAAO;MACzD;MAEA,IAAK,OAAO,IAAI,OAAO,EAAG;QACzB,OAAO,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,EAAE,KAAM,CAAC;MAClC,CAAC,MAAM;QACN,OAAO,CAAC,GAAG,CAAE,KAAM,CAAC;MACrB;IACD;EACD,CAAC;EAED,MAAM,CAAC,EAAE,CAAC,MAAM,CAAE;IACjB,MAAM,EAAE,SAAA,OAAU,OAAO,EAAG;MAC3B,IAAK,SAAS,CAAC,MAAM,EAAG;QACvB,OAAO,OAAO,KAAK,SAAS,GAC3B,IAAI,GACJ,IAAI,CAAC,IAAI,CAAE,UAAU,CAAC,EAAG;UACxB,MAAM,CAAC,MAAM,CAAC,SAAS,CAAE,IAAI,EAAE,OAAO,EAAE,CAAE,CAAC;QAC5C,CAAE,CAAC;MACL;MAEA,IAAI,OAAO;QAAE,GAAG;QACf,GAAG,GAAG;UAAE,GAAG,EAAE,CAAC;UAAE,IAAI,EAAE;QAAE,CAAC;QACzB,IAAI,GAAG,IAAI,CAAE,CAAC,CAAE;QAChB,GAAG,GAAG,IAAI,IAAI,IAAI,CAAC,aAAa;MAEjC,IAAK,CAAC,GAAG,EAAG;QACX;MACD;MAEA,OAAO,GAAG,GAAG,CAAC,eAAe;;MAE7B;MACA,IAAK,CAAC,MAAM,CAAC,QAAQ,CAAE,OAAO,EAAE,IAAK,CAAC,EAAG;QACxC,OAAO,GAAG;MACX;;MAEA;MACA;MACA,IAAK,OAAO,IAAI,CAAC,qBAAqB,KAAK,WAAW,EAAG;QACxD,GAAG,GAAG,IAAI,CAAC,qBAAqB,CAAC,CAAC;MACnC;MACA,GAAG,GAAG,SAAS,CAAE,GAAI,CAAC;MACtB,OAAO;QACN,GAAG,EAAE,GAAG,CAAC,GAAG,IAAM,GAAG,CAAC,WAAW,IAAI,OAAO,CAAC,SAAS,CAAE,IAAM,OAAO,CAAC,SAAS,IAAK,CAAC,CAAE;QACvF,IAAI,EAAE,GAAG,CAAC,IAAI,IAAK,GAAG,CAAC,WAAW,IAAI,OAAO,CAAC,UAAU,CAAE,IAAK,OAAO,CAAC,UAAU,IAAI,CAAC;MACvF,CAAC;IACF,CAAC;IAED,QAAQ,EAAE,SAAA,SAAA,EAAW;MACpB,IAAK,CAAC,IAAI,CAAE,CAAC,CAAE,EAAG;QACjB;MACD;MAEA,IAAI,YAAY;QAAE,MAAM;QACvB,YAAY,GAAG;UAAE,GAAG,EAAE,CAAC;UAAE,IAAI,EAAE;QAAE,CAAC;QAClC,IAAI,GAAG,IAAI,CAAE,CAAC,CAAE;;MAEjB;MACA;MACA,IAAK,MAAM,CAAC,GAAG,CAAE,IAAI,EAAE,UAAW,CAAC,KAAK,OAAO,EAAG;QAEjD;QACA,MAAM,GAAG,IAAI,CAAC,qBAAqB,CAAC,CAAC;MACtC,CAAC,MAAM;QAEN;QACA,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;;QAElC;QACA,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QACtB,IAAK,CAAC,MAAM,CAAC,QAAQ,CAAE,YAAY,CAAE,CAAC,CAAE,EAAE,MAAO,CAAC,EAAG;UACpD,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC;QACrC;;QAEA;QACA,YAAY,CAAC,GAAG,IAAK,MAAM,CAAC,GAAG,CAAE,YAAY,CAAE,CAAC,CAAE,EAAE,gBAAgB,EAAE,IAAK,CAAC;QAC5E,YAAY,CAAC,IAAI,IAAI,MAAM,CAAC,GAAG,CAAE,YAAY,CAAE,CAAC,CAAE,EAAE,iBAAiB,EAAE,IAAK,CAAC;MAC9E;;MAEA;MACA;MACA;MACA,OAAO;QACN,GAAG,EAAG,MAAM,CAAC,GAAG,GAAI,YAAY,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAE,IAAI,EAAE,WAAW,EAAE,IAAK,CAAC;QAC5E,IAAI,EAAE,MAAM,CAAC,IAAI,GAAG,YAAY,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAE,IAAI,EAAE,YAAY,EAAE,IAAK;MAC9E,CAAC;IACF,CAAC;IAED,YAAY,EAAE,SAAA,aAAA,EAAW;MACxB,OAAO,IAAI,CAAC,GAAG,CAAE,YAAW;QAC3B,IAAI,YAAY,GAAG,IAAI,CAAC,YAAY;QAEpC,OAAQ,YAAY,IAAM,CAAC,MAAM,CAAC,QAAQ,CAAE,YAAY,EAAE,MAAO,CAAC,IACjE,MAAM,CAAC,GAAG,CAAE,YAAY,EAAE,UAAW,CAAC,KAAK,QAAU,EAAG;UACxD,YAAY,GAAG,YAAY,CAAC,YAAY;QACzC;QACA,OAAO,YAAY,IAAI,eAAe;MACvC,CAAE,CAAC;IACJ;EACD,CAAE,CAAC;;EAEH;EACA,MAAM,CAAC,IAAI,CAAE;IAAE,UAAU,EAAE,aAAa;IAAE,SAAS,EAAE;EAAc,CAAC,EAAE,UAAU,MAAM,EAAE,IAAI,EAAG;IAC9F,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,CAAE,IAAK,CAAC;IAE1B,MAAM,CAAC,EAAE,CAAE,MAAM,CAAE,GAAG,UAAU,GAAG,EAAG;MACrC,OAAO,MAAM,CAAE,IAAI,EAAE,UAAU,IAAI,EAAE,MAAM,EAAE,GAAG,EAAG;QAClD,IAAI,GAAG,GAAG,SAAS,CAAE,IAAK,CAAC;QAE3B,IAAK,GAAG,KAAK,SAAS,EAAG;UACxB,OAAO,GAAG,GAAK,IAAI,IAAI,GAAG,GAAK,GAAG,CAAE,IAAI,CAAE,GACzC,GAAG,CAAC,QAAQ,CAAC,eAAe,CAAE,MAAM,CAAE,GACtC,IAAI,CAAE,MAAM,CAAE;QAChB;QAEA,IAAK,GAAG,EAAG;UACV,GAAG,CAAC,QAAQ,CACX,CAAC,GAAG,GAAG,GAAG,GAAG,MAAM,CAAE,GAAI,CAAC,CAAC,UAAU,CAAC,CAAC,EACvC,GAAG,GAAG,GAAG,GAAG,MAAM,CAAE,GAAI,CAAC,CAAC,SAAS,CAAC,CACrC,CAAC;QAEF,CAAC,MAAM;UACN,IAAI,CAAE,MAAM,CAAE,GAAG,GAAG;QACrB;MACD,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,SAAS,CAAC,MAAM,EAAE,IAAK,CAAC;IACzC,CAAC;EACF,CAAE,CAAC;;EAEH;EACA;EACA;EACA;EACA;EACA,MAAM,CAAC,IAAI,CAAE,CAAE,KAAK,EAAE,MAAM,CAAE,EAAE,UAAU,CAAC,EAAE,IAAI,EAAG;IACnD,MAAM,CAAC,QAAQ,CAAE,IAAI,CAAE,GAAG,YAAY,CAAE,OAAO,CAAC,aAAa,EAC5D,UAAU,IAAI,EAAE,QAAQ,EAAG;MAC1B,IAAK,QAAQ,EAAG;QACf,QAAQ,GAAG,MAAM,CAAE,IAAI,EAAE,IAAK,CAAC;;QAE/B;QACA,OAAO,SAAS,CAAC,IAAI,CAAE,QAAS,CAAC,GAChC,MAAM,CAAE,IAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAE,IAAI,CAAE,GAAG,IAAI,GACxC,QAAQ;MACV;IACD,CACD,CAAC;EACF,CAAE,CAAC;;EAGH;EACA,MAAM,CAAC,IAAI,CAAE;IAAE,MAAM,EAAE,QAAQ;IAAE,KAAK,EAAE;EAAQ,CAAC,EAAE,UAAU,IAAI,EAAE,IAAI,EAAG;IACzE,MAAM,CAAC,IAAI,CAAE;MAAE,OAAO,EAAE,OAAO,GAAG,IAAI;MAAE,OAAO,EAAE,IAAI;MAAE,EAAE,EAAE,OAAO,GAAG;IAAK,CAAC,EAC3E,UAAU,YAAY,EAAE,QAAQ,EAAG;MAElC;MACA,MAAM,CAAC,EAAE,CAAE,QAAQ,CAAE,GAAG,UAAU,MAAM,EAAE,KAAK,EAAG;QACjD,IAAI,SAAS,GAAG,SAAS,CAAC,MAAM,KAAM,YAAY,IAAI,OAAO,MAAM,KAAK,SAAS,CAAE;UAClF,KAAK,GAAG,YAAY,KAAM,MAAM,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,GAAG,QAAQ,GAAG,QAAQ,CAAE;QAEpF,OAAO,MAAM,CAAE,IAAI,EAAE,UAAU,IAAI,EAAE,IAAI,EAAE,KAAK,EAAG;UAClD,IAAI,GAAG;UAEP,IAAK,MAAM,CAAC,QAAQ,CAAE,IAAK,CAAC,EAAG;YAE9B;YACA;YACA;YACA,OAAO,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAE,QAAQ,GAAG,IAAI,CAAE;UACxD;;UAEA;UACA,IAAK,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAG;YAC1B,GAAG,GAAG,IAAI,CAAC,eAAe;;YAE1B;YACA;YACA;YACA;YACA,OAAO,IAAI,CAAC,GAAG,CACd,IAAI,CAAC,IAAI,CAAE,QAAQ,GAAG,IAAI,CAAE,EAAE,GAAG,CAAE,QAAQ,GAAG,IAAI,CAAE,EACpD,IAAI,CAAC,IAAI,CAAE,QAAQ,GAAG,IAAI,CAAE,EAAE,GAAG,CAAE,QAAQ,GAAG,IAAI,CAAE,EACpD,GAAG,CAAE,QAAQ,GAAG,IAAI,CACrB,CAAC;UACF;UAEA,OAAO,KAAK,KAAK,SAAS;UAEzB;UACA,MAAM,CAAC,GAAG,CAAE,IAAI,EAAE,IAAI,EAAE,KAAM,CAAC;UAE/B;UACA,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAM,CAAC;QAC1C,CAAC,EAAE,IAAI,EAAE,SAAS,GAAG,MAAM,GAAG,SAAS,EAAE,SAAS,EAAE,IAAK,CAAC;MAC3D,CAAC;IACF,CAAE,CAAC;EACJ,CAAE,CAAC;EAGH,MAAM,CAAC,EAAE,CAAC,MAAM,CAAE;IAEjB,IAAI,EAAE,SAAA,KAAU,KAAK,EAAE,IAAI,EAAE,EAAE,EAAG;MACjC,OAAO,IAAI,CAAC,EAAE,CAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,EAAG,CAAC;IACxC,CAAC;IACD,MAAM,EAAE,SAAA,OAAU,KAAK,EAAE,EAAE,EAAG;MAC7B,OAAO,IAAI,CAAC,GAAG,CAAE,KAAK,EAAE,IAAI,EAAE,EAAG,CAAC;IACnC,CAAC;IAED,QAAQ,EAAE,SAAA,SAAU,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAG;MAC/C,OAAO,IAAI,CAAC,EAAE,CAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAG,CAAC;IAC5C,CAAC;IACD,UAAU,EAAE,SAAA,WAAU,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAG;MAE3C;MACA,OAAO,SAAS,CAAC,MAAM,KAAK,CAAC,GAC5B,IAAI,CAAC,GAAG,CAAE,QAAQ,EAAE,IAAK,CAAC,GAC1B,IAAI,CAAC,GAAG,CAAE,KAAK,EAAE,QAAQ,IAAI,IAAI,EAAE,EAAG,CAAC;IACzC;EACD,CAAE,CAAC;;EAEH;EACA,MAAM,CAAC,EAAE,CAAC,IAAI,GAAG,YAAW;IAC3B,OAAO,IAAI,CAAC,MAAM;EACnB,CAAC;EAED,MAAM,CAAC,EAAE,CAAC,OAAO,GAAG,MAAM,CAAC,EAAE,CAAC,OAAO;;EAKrC;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA,IAAK,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,EAAG;IACjD,MAAM,CAAE,QAAQ,EAAE,EAAE,EAAE,YAAW;MAChC,OAAO,MAAM;IACd,CAAE,CAAC;EACJ;EAIA;IAEC;IACA,OAAO,GAAG,MAAM,CAAC,MAAM;IAEvB;IACA,EAAE,GAAG,MAAM,CAAC,CAAC;EAEd,MAAM,CAAC,UAAU,GAAG,UAAU,IAAI,EAAG;IACpC,IAAK,MAAM,CAAC,CAAC,KAAK,MAAM,EAAG;MAC1B,MAAM,CAAC,CAAC,GAAG,EAAE;IACd;IAEA,IAAK,IAAI,IAAI,MAAM,CAAC,MAAM,KAAK,MAAM,EAAG;MACvC,MAAM,CAAC,MAAM,GAAG,OAAO;IACxB;IAEA,OAAO,MAAM;EACd,CAAC;;EAED;EACA;EACA;EACA,IAAK,CAAC,QAAQ,EAAG;IAChB,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM;EAClC;EAEA,OAAO,MAAM;AACb,CAAC,CAAC;;;;;;AC/vVD,WAAS,MAAM,EAAE,OAAO,EAAE;EAC1B,IAAI,SAAS,GAAG,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC;EACtD,MAAM,CAAC,SAAS,GAAG,SAAS;EAC5B,IAAG,QAAO,MAAM,iCAAA,OAAA,CAAN,MAAM,MAAI,QAAQ,IAAI,MAAM,CAAC,OAAO,EAAC;IAC9C,MAAM,CAAC,OAAO,GAAG,SAAS;EAC3B;AACD,CAAC,EAAC,OAAO,MAAM,IAAI,WAAW,GACxB,MAAM,GAAG,CAAC,CAAC;AACjB;AACA;AACA;AACA;AACA,SAAS,CAAC,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;EAAE;EACpC,YAAY;;EACZ;EAEA,IAAI,SAAS;IACZ;AACF;AACA;IACE,YAAY;EAEb,CAAC,YAAU;IACV,IAAI,IAAI;IAER,IAAI,iBAAiB,GAAG;MACvB,SAAS,EAAE,UAAU;MACrB,WAAW,EAAE,YAAY;MACzB,YAAY,EAAE,aAAa;MAC3B,YAAY,EAAE,aAAa;MAC3B,UAAU,EAAE,WAAW;MACvB;MACA,cAAc,EAAE,eAAe;MAC/B,eAAe,EAAE,cAAc;MAC/B,cAAc,EAAE,CAAC;MACjB,OAAO,EAAE,UAAU;MACnB,UAAU,EAAE,aAAa;MACzB,SAAS,EAAE,YAAY;MACvB;MACA,OAAO,EAAE,EAAE;MACX,WAAW,EAAE,CAAC,CAAC;MACf,IAAI,EAAE,IAAI;MACV,SAAS,EAAE,GAAG;MACd,IAAI,EAAE,GAAG;MACT,QAAQ,EAAE,CAAC;MACX,UAAU,EAAE,IAAI;MAChB,UAAU,EAAE,CAAC;MACb,aAAa,EAAE;IAChB,CAAC;IAED,YAAY,GAAG,MAAM,CAAC,eAAe,IAAI,MAAM,CAAC,eAAe,IAAI,CAAC,CAAC;IAErE,KAAI,IAAI,IAAI,iBAAiB,EAAC;MAC7B,IAAG,EAAE,IAAI,IAAI,YAAY,CAAC,EAAC;QAC1B,YAAY,CAAC,IAAI,CAAC,GAAG,iBAAiB,CAAC,IAAI,CAAC;MAC7C;IACD;EACD,CAAC,EAAE,CAAC;EAEJ,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,sBAAsB,EAAE;IAClD,OAAO;MACN,IAAI,EAAE,SAAA,KAAA,EAAY,CAAC,CAAC;MACpB;AACH;AACA;MACG,GAAG,EAAE,YAAY;MACjB;AACH;AACA;MACG,SAAS,EAAE;IACZ,CAAC;EACF;EAEA,IAAI,OAAO,GAAG,QAAQ,CAAC,eAAe;EAEtC,IAAI,cAAc,GAAG,MAAM,CAAC,kBAAkB;EAE9C,IAAI,iBAAiB,GAAG,kBAAkB;EAE1C,IAAI,aAAa,GAAG,cAAc;;EAElC;AACD;AACA;AACA;EACC,IAAI,gBAAgB,GAAG,MAAM,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;EAE7D,IAAI,UAAU,GAAG,MAAM,CAAC,UAAU;EAElC,IAAI,qBAAqB,GAAG,MAAM,CAAC,qBAAqB,IAAI,UAAU;EAEtE,IAAI,mBAAmB,GAAG,MAAM,CAAC,mBAAmB;EAEpD,IAAI,UAAU,GAAG,YAAY;EAE7B,IAAI,UAAU,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,cAAc,EAAE,aAAa,CAAC;EAEjE,IAAI,aAAa,GAAG,CAAC,CAAC;EAEtB,IAAI,OAAO,GAAG,KAAK,CAAC,SAAS,CAAC,OAAO;;EAErC;AACD;AACA;AACA;EACC,IAAI,QAAQ,GAAG,SAAX,QAAQ,CAAY,GAAG,EAAE,GAAG,EAAE;IACjC,IAAG,CAAC,aAAa,CAAC,GAAG,CAAC,EAAC;MACtB,aAAa,CAAC,GAAG,CAAC,GAAG,IAAI,MAAM,CAAC,SAAS,GAAC,GAAG,GAAC,SAAS,CAAC;IACzD;IACA,OAAO,aAAa,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,aAAa,CAAC,GAAG,CAAC;EACxF,CAAC;;EAED;AACD;AACA;AACA;EACC,IAAI,QAAQ,GAAG,SAAX,QAAQ,CAAY,GAAG,EAAE,GAAG,EAAE;IACjC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,EAAC;MACvB,GAAG,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC;IAClF;EACD,CAAC;;EAED;AACD;AACA;AACA;EACC,IAAI,WAAW,GAAG,SAAd,WAAW,CAAY,GAAG,EAAE,GAAG,EAAE;IACpC,IAAI,GAAG;IACP,IAAK,GAAG,GAAG,QAAQ,CAAC,GAAG,EAAC,GAAG,CAAC,EAAG;MAC9B,GAAG,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACjF;EACD,CAAC;EAED,IAAI,mBAAmB,GAAG,SAAtB,mBAAmB,CAAY,GAAG,EAAE,EAAE,EAAE,GAAG,EAAC;IAC/C,IAAI,MAAM,GAAG,GAAG,GAAG,iBAAiB,GAAG,qBAAqB;IAC5D,IAAG,GAAG,EAAC;MACN,mBAAmB,CAAC,GAAG,EAAE,EAAE,CAAC;IAC7B;IACA,UAAU,CAAC,OAAO,CAAC,UAAS,GAAG,EAAC;MAC/B,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC;IACrB,CAAC,CAAC;EACH,CAAC;;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,IAAI,YAAY,GAAG,SAAf,YAAY,CAAY,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,YAAY,EAAC;IACvE,IAAI,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC;IAEzC,IAAG,CAAC,MAAM,EAAC;MACV,MAAM,GAAG,CAAC,CAAC;IACZ;IAEA,MAAM,CAAC,QAAQ,GAAG,SAAS;IAE3B,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC,YAAY,CAAC;IAEhD,KAAK,CAAC,MAAM,GAAG,MAAM;IAErB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;IACzB,OAAO,KAAK;EACb,CAAC;EAED,IAAI,cAAc,GAAG,SAAjB,cAAc,CAAa,EAAE,EAAE,IAAI,EAAC;IACvC,IAAI,QAAQ;IACZ,IAAI,CAAC,cAAc,KAAM,QAAQ,GAAI,MAAM,CAAC,WAAW,IAAI,YAAY,CAAC,EAAG,CAAE,EAAE;MAC9E,IAAG,IAAI,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,EAAC;QACnD,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC;MACpC;MACA,QAAQ,CAAC;QAAC,UAAU,EAAE,IAAI;QAAE,QAAQ,EAAE,CAAC,EAAE;MAAC,CAAC,CAAC;IAC7C,CAAC,MAAM,IAAG,IAAI,IAAI,IAAI,CAAC,GAAG,EAAC;MAC1B,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG;IAClB;EACD,CAAC;EAED,IAAI,MAAM,GAAG,SAAT,MAAM,CAAa,IAAI,EAAE,KAAK,EAAC;IAClC,OAAO,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC;EACnD,CAAC;;EAED;AACD;AACA;AACA;AACA;AACA;AACA;EACC,IAAI,QAAQ,GAAG,SAAX,QAAQ,CAAY,IAAI,EAAE,MAAM,EAAE,KAAK,EAAC;IAC3C,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC,WAAW;IAEjC,OAAM,KAAK,GAAG,YAAY,CAAC,OAAO,IAAI,MAAM,IAAI,CAAC,IAAI,CAAC,eAAe,EAAC;MACrE,KAAK,GAAI,MAAM,CAAC,WAAW;MAC3B,MAAM,GAAG,MAAM,CAAC,UAAU;IAC3B;IAEA,OAAO,KAAK;EACb,CAAC;EAED,IAAI,GAAG,GAAI,YAAU;IACpB,IAAI,OAAO,EAAE,OAAO;IACpB,IAAI,QAAQ,GAAG,EAAE;IACjB,IAAI,SAAS,GAAG,EAAE;IAClB,IAAI,GAAG,GAAG,QAAQ;IAElB,IAAI,GAAG,GAAG,SAAN,GAAG,CAAA,EAAa;MACnB,IAAI,MAAM,GAAG,GAAG;MAEhB,GAAG,GAAG,QAAQ,CAAC,MAAM,GAAG,SAAS,GAAG,QAAQ;MAE5C,OAAO,GAAG,IAAI;MACd,OAAO,GAAG,KAAK;MAEf,OAAM,MAAM,CAAC,MAAM,EAAC;QACnB,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;MACjB;MAEA,OAAO,GAAG,KAAK;IAChB,CAAC;IAED,IAAI,QAAQ,GAAG,SAAX,QAAQ,CAAY,EAAE,EAAE,KAAK,EAAC;MACjC,IAAG,OAAO,IAAI,CAAC,KAAK,EAAC;QACpB,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC;MAC1B,CAAC,MAAM;QACN,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;QAEZ,IAAG,CAAC,OAAO,EAAC;UACX,OAAO,GAAG,IAAI;UACd,CAAC,QAAQ,CAAC,MAAM,GAAG,UAAU,GAAG,qBAAqB,EAAE,GAAG,CAAC;QAC5D;MACD;IACD,CAAC;IAED,QAAQ,CAAC,QAAQ,GAAG,GAAG;IAEvB,OAAO,QAAQ;EAChB,CAAC,CAAE,CAAC;EAEJ,IAAI,KAAK,GAAG,SAAR,KAAK,CAAY,EAAE,EAAE,MAAM,EAAC;IAC/B,OAAO,MAAM,GACZ,YAAW;MACV,GAAG,CAAC,EAAE,CAAC;IACR,CAAC,GACD,YAAU;MACT,IAAI,IAAI,GAAG,IAAI;MACf,IAAI,IAAI,GAAG,SAAS;MACpB,GAAG,CAAC,YAAU;QACb,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC;MACrB,CAAC,CAAC;IACH,CAAC;EAEH,CAAC;EAED,IAAI,QAAQ,GAAG,SAAX,QAAQ,CAAY,EAAE,EAAC;IAC1B,IAAI,OAAO;IACX,IAAI,QAAQ,GAAG,CAAC;IAChB,IAAI,MAAM,GAAG,YAAY,CAAC,aAAa;IACvC,IAAI,UAAU,GAAG,YAAY,CAAC,UAAU;IACxC,IAAI,GAAG,GAAG,SAAN,GAAG,CAAA,EAAa;MACnB,OAAO,GAAG,KAAK;MACf,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;MACrB,EAAE,CAAC,CAAC;IACL,CAAC;IACD,IAAI,YAAY,GAAG,mBAAmB,IAAI,UAAU,GAAG,EAAE,GACxD,YAAU;MACT,mBAAmB,CAAC,GAAG,EAAE;QAAC,OAAO,EAAE;MAAU,CAAC,CAAC;MAE/C,IAAG,UAAU,KAAK,YAAY,CAAC,UAAU,EAAC;QACzC,UAAU,GAAG,YAAY,CAAC,UAAU;MACrC;IACD,CAAC,GACD,KAAK,CAAC,YAAU;MACf,UAAU,CAAC,GAAG,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;IAGT,OAAO,UAAS,UAAU,EAAC;MAC1B,IAAI,KAAK;MAET,IAAI,UAAU,GAAG,UAAU,KAAK,IAAI,EAAE;QACrC,UAAU,GAAG,EAAE;MAChB;MAEA,IAAG,OAAO,EAAC;QACV;MACD;MAEA,OAAO,GAAI,IAAI;MAEf,KAAK,GAAG,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;MAExC,IAAG,KAAK,GAAG,CAAC,EAAC;QACZ,KAAK,GAAG,CAAC;MACV;MAEA,IAAG,UAAU,IAAI,KAAK,GAAG,CAAC,EAAC;QAC1B,YAAY,CAAC,CAAC;MACf,CAAC,MAAM;QACN,UAAU,CAAC,YAAY,EAAE,KAAK,CAAC;MAChC;IACD,CAAC;EACF,CAAC;;EAED;EACA,IAAI,QAAQ,GAAG,SAAX,QAAQ,CAAY,IAAI,EAAE;IAC7B,IAAI,OAAO,EAAE,SAAS;IACtB,IAAI,IAAI,GAAG,EAAE;IACb,IAAI,GAAG,GAAG,SAAN,GAAG,CAAA,EAAa;MACnB,OAAO,GAAG,IAAI;MACd,IAAI,CAAC,CAAC;IACP,CAAC;IACD,IAAI,KAAK,GAAG,SAAR,KAAK,CAAA,EAAc;MACtB,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS;MAEjC,IAAI,IAAI,GAAG,IAAI,EAAE;QAChB,UAAU,CAAC,KAAK,EAAE,IAAI,GAAG,IAAI,CAAC;MAC/B,CAAC,MAAM;QACN,CAAC,mBAAmB,IAAI,GAAG,EAAE,GAAG,CAAC;MAClC;IACD,CAAC;IAED,OAAO,YAAW;MACjB,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;MAEtB,IAAI,CAAC,OAAO,EAAE;QACb,OAAO,GAAG,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC;MAClC;IACD,CAAC;EACF,CAAC;EAED,IAAI,MAAM,GAAI,YAAU;IACvB,IAAI,YAAY,EAAE,WAAW,EAAE,oBAAoB,EAAE,QAAQ,EAAE,OAAO;IAEtE,IAAI,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,YAAY;IAE9D,IAAI,MAAM,GAAG,QAAQ;IACrB,IAAI,SAAS,GAAG,WAAW;IAE3B,IAAI,aAAa,GAAI,UAAU,IAAI,MAAM,IAAK,CAAE,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAE;IAEzF,IAAI,YAAY,GAAG,CAAC;IACpB,IAAI,aAAa,GAAG,CAAC;IAErB,IAAI,SAAS,GAAG,CAAC;IACjB,IAAI,OAAO,GAAG,CAAC,CAAC;IAEhB,IAAI,eAAe,GAAG,SAAlB,eAAe,CAAY,CAAC,EAAC;MAChC,SAAS,EAAE;MACX,IAAG,CAAC,CAAC,IAAI,SAAS,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,EAAC;QACnC,SAAS,GAAG,CAAC;MACd;IACD,CAAC;IAED,IAAI,SAAS,GAAG,SAAZ,SAAS,CAAa,IAAI,EAAE;MAC/B,IAAI,YAAY,IAAI,IAAI,EAAE;QACzB,YAAY,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,YAAY,CAAC,IAAI,QAAQ;MAC/D;MAEA,OAAO,YAAY,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,YAAY,CAAC,IAAI,QAAQ,IAAI,MAAM,CAAC,IAAI,EAAE,YAAY,CAAC,IAAI,QAAQ,CAAC;IACtH,CAAC;IAED,IAAI,eAAe,GAAG,SAAlB,eAAe,CAAY,IAAI,EAAE,UAAU,EAAC;MAC/C,IAAI,SAAS;MACb,IAAI,MAAM,GAAG,IAAI;MACjB,IAAI,OAAO,GAAG,SAAS,CAAC,IAAI,CAAC;MAE7B,KAAK,IAAI,UAAU;MACnB,QAAQ,IAAI,UAAU;MACtB,MAAM,IAAI,UAAU;MACpB,OAAO,IAAI,UAAU;MAErB,OAAM,OAAO,KAAK,MAAM,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,MAAM,IAAI,QAAQ,CAAC,IAAI,IAAI,MAAM,IAAI,OAAO,EAAC;QAC/F,OAAO,GAAI,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,IAAI,CAAC,IAAI,CAAE;QAEhD,IAAG,OAAO,IAAI,MAAM,CAAC,MAAM,EAAE,UAAU,CAAC,IAAI,SAAS,EAAC;UACrD,SAAS,GAAG,MAAM,CAAC,qBAAqB,CAAC,CAAC;UAC1C,OAAO,GAAG,OAAO,GAAG,SAAS,CAAC,IAAI,IACjC,MAAM,GAAG,SAAS,CAAC,KAAK,IACxB,QAAQ,GAAG,SAAS,CAAC,GAAG,GAAG,CAAC,IAC5B,KAAK,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC;QAE9B;MACD;MAEA,OAAO,OAAO;IACf,CAAC;IAED,IAAI,aAAa,GAAG,SAAhB,aAAa,CAAA,EAAc;MAC9B,IAAI,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,eAAe,EAAE,UAAU,EAAE,kBAAkB,EAAE,aAAa,EAC/F,eAAe,EAAE,aAAa,EAAE,aAAa,EAAE,IAAI;MACpD,IAAI,aAAa,GAAG,SAAS,CAAC,QAAQ;MAEtC,IAAG,CAAC,QAAQ,GAAG,YAAY,CAAC,QAAQ,KAAK,SAAS,GAAG,CAAC,KAAK,KAAK,GAAG,aAAa,CAAC,MAAM,CAAC,EAAC;QAExF,CAAC,GAAG,CAAC;QAEL,OAAO,EAAE;QAET,OAAM,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAC;UAEpB,IAAG,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS,EAAC;YAAC;UAAS;UAE7D,IAAG,CAAC,aAAa,IAAK,SAAS,CAAC,eAAe,IAAI,SAAS,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC,CAAC,CAAE,EAAC;YAAC,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YAAC;UAAS;UAE1I,IAAG,EAAE,aAAa,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,aAAa,CAAC,CAAC,IAAI,EAAE,UAAU,GAAG,aAAa,GAAG,CAAC,CAAC,EAAC;YACzG,UAAU,GAAG,aAAa;UAC3B;UAEA,IAAI,CAAC,aAAa,EAAE;YACnB,aAAa,GAAI,CAAC,YAAY,CAAC,MAAM,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,GAC/D,OAAO,CAAC,YAAY,GAAG,GAAG,IAAI,OAAO,CAAC,WAAW,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GACnE,YAAY,CAAC,MAAM;YAEpB,SAAS,CAAC,MAAM,GAAG,aAAa;YAEhC,aAAa,GAAG,aAAa,GAAG,YAAY,CAAC,SAAS;YACtD,IAAI,GAAG,YAAY,CAAC,IAAI;YACxB,YAAY,GAAG,IAAI;YAEnB,IAAG,aAAa,GAAG,aAAa,IAAI,SAAS,GAAG,CAAC,IAAI,OAAO,GAAG,CAAC,IAAI,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAC;cACpG,aAAa,GAAG,aAAa;cAC7B,OAAO,GAAG,CAAC;YACZ,CAAC,MAAM,IAAG,QAAQ,GAAG,CAAC,IAAI,OAAO,GAAG,CAAC,IAAI,SAAS,GAAG,CAAC,EAAC;cACtD,aAAa,GAAG,aAAa;YAC9B,CAAC,MAAM;cACN,aAAa,GAAG,YAAY;YAC7B;UACD;UAEA,IAAG,eAAe,KAAK,UAAU,EAAC;YACjC,IAAI,GAAG,UAAU,GAAI,UAAU,GAAG,IAAK;YACvC,IAAI,GAAG,WAAW,GAAG,UAAU;YAC/B,kBAAkB,GAAG,UAAU,GAAG,CAAC,CAAC;YACpC,eAAe,GAAG,UAAU;UAC7B;UAEA,IAAI,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC;UAE/C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,KAAK,kBAAkB,IACjD,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,KAAK,IAAI,IAC1B,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,KAAK,kBAAkB,GAAG,IAAI,IACnD,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,KAAK,IAAI,KAC3B,QAAQ,IAAI,OAAO,IAAI,MAAM,IAAI,KAAK,CAAC,KACvC,YAAY,CAAC,UAAU,IAAI,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,KACtD,WAAW,IAAI,SAAS,GAAG,CAAC,IAAI,CAAC,aAAa,KAAK,QAAQ,GAAG,CAAC,IAAI,OAAO,GAAG,CAAC,CAAC,IAAK,eAAe,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,EAAC;YACrI,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YAC/B,eAAe,GAAG,IAAI;YACtB,IAAG,SAAS,GAAG,CAAC,EAAC;cAAC;YAAM;UACzB,CAAC,MAAM,IAAG,CAAC,eAAe,IAAI,WAAW,IAAI,CAAC,YAAY,IACzD,SAAS,GAAG,CAAC,IAAI,OAAO,GAAG,CAAC,IAAI,QAAQ,GAAG,CAAC,KAC3C,YAAY,CAAC,CAAC,CAAC,IAAI,YAAY,CAAC,gBAAgB,CAAC,KACjD,YAAY,CAAC,CAAC,CAAC,IAAK,CAAC,aAAa,KAAM,QAAQ,IAAI,OAAO,IAAI,MAAM,IAAI,KAAK,IAAK,aAAa,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,MAAM,CAAE,CAAC,EAAC;YACzJ,YAAY,GAAG,YAAY,CAAC,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,CAAC;UACnD;QACD;QAEA,IAAG,YAAY,IAAI,CAAC,eAAe,EAAC;UACnC,aAAa,CAAC,YAAY,CAAC;QAC5B;MACD;IACD,CAAC;IAED,IAAI,sBAAsB,GAAG,QAAQ,CAAC,aAAa,CAAC;IAEpD,IAAI,kBAAkB,GAAG,SAArB,kBAAkB,CAAY,CAAC,EAAC;MACnC,IAAI,IAAI,GAAG,CAAC,CAAC,MAAM;MAEnB,IAAI,IAAI,CAAC,UAAU,EAAE;QACpB,OAAO,IAAI,CAAC,UAAU;QACtB;MACD;MAEA,eAAe,CAAC,CAAC,CAAC;MAClB,QAAQ,CAAC,IAAI,EAAE,YAAY,CAAC,WAAW,CAAC;MACxC,WAAW,CAAC,IAAI,EAAE,YAAY,CAAC,YAAY,CAAC;MAC5C,mBAAmB,CAAC,IAAI,EAAE,qBAAqB,CAAC;MAChD,YAAY,CAAC,IAAI,EAAE,YAAY,CAAC;IACjC,CAAC;IACD,IAAI,uBAAuB,GAAG,KAAK,CAAC,kBAAkB,CAAC;IACvD,IAAI,qBAAqB,GAAG,SAAxB,qBAAqB,CAAY,CAAC,EAAC;MACtC,uBAAuB,CAAC;QAAC,MAAM,EAAE,CAAC,CAAC;MAAM,CAAC,CAAC;IAC5C,CAAC;IAED,IAAI,eAAe,GAAG,SAAlB,eAAe,CAAY,IAAI,EAAE,GAAG,EAAC;MACxC,IAAI,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,YAAY,CAAC,cAAc;;MAEjF;MACA,IAAI,QAAQ,IAAI,CAAC,EAAE;QAClB,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC;MACzC,CAAC,MAAM,IAAI,QAAQ,IAAI,CAAC,EAAE;QACzB,IAAI,CAAC,GAAG,GAAG,GAAG;MACf;IACD,CAAC;IAED,IAAI,aAAa,GAAG,SAAhB,aAAa,CAAY,MAAM,EAAC;MACnC,IAAI,WAAW;MAEf,IAAI,YAAY,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC,YAAY,CAAC,UAAU,CAAC;MAEjE,IAAK,WAAW,GAAG,YAAY,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,YAAY,CAAC,IAAI,MAAM,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,EAAG;QACpH,MAAM,CAAC,YAAY,CAAC,OAAO,EAAE,WAAW,CAAC;MAC1C;MAEA,IAAG,YAAY,EAAC;QACf,MAAM,CAAC,YAAY,CAAC,QAAQ,EAAE,YAAY,CAAC;MAC5C;IACD,CAAC;IAED,IAAI,UAAU,GAAG,KAAK,CAAC,UAAU,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAC;MACnE,IAAI,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS;MAEpD,IAAG,CAAC,CAAC,KAAK,GAAG,YAAY,CAAC,IAAI,EAAE,kBAAkB,EAAE,MAAM,CAAC,EAAE,gBAAgB,EAAC;QAE7E,IAAG,KAAK,EAAC;UACR,IAAG,MAAM,EAAC;YACT,QAAQ,CAAC,IAAI,EAAE,YAAY,CAAC,cAAc,CAAC;UAC5C,CAAC,MAAM;YACN,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC;UAClC;QACD;QAEA,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,YAAY,CAAC,UAAU,CAAC;QACrD,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC;QAE/C,IAAG,KAAK,EAAE;UACT,MAAM,GAAG,IAAI,CAAC,UAAU;UACxB,SAAS,GAAG,MAAM,IAAI,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,EAAE,CAAC;QAC7D;QAEA,SAAS,GAAG,MAAM,CAAC,SAAS,IAAM,KAAK,IAAI,IAAI,KAAM,MAAM,IAAI,GAAG,IAAI,SAAS,CAAE;QAEjF,KAAK,GAAG;UAAC,MAAM,EAAE;QAAI,CAAC;QAEtB,QAAQ,CAAC,IAAI,EAAE,YAAY,CAAC,YAAY,CAAC;QAEzC,IAAG,SAAS,EAAC;UACZ,YAAY,CAAC,oBAAoB,CAAC;UAClC,oBAAoB,GAAG,UAAU,CAAC,eAAe,EAAE,IAAI,CAAC;UACxD,mBAAmB,CAAC,IAAI,EAAE,qBAAqB,EAAE,IAAI,CAAC;QACvD;QAEA,IAAG,SAAS,EAAC;UACZ,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,QAAQ,CAAC,EAAE,aAAa,CAAC;QACnE;QAEA,IAAG,MAAM,EAAC;UACT,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC;QACpC,CAAC,MAAM,IAAG,GAAG,IAAI,CAAC,SAAS,EAAC;UAC3B,IAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAC;YAChC,eAAe,CAAC,IAAI,EAAE,GAAG,CAAC;UAC3B,CAAC,MAAM;YACN,IAAI,CAAC,GAAG,GAAG,GAAG;UACf;QACD;QAEA,IAAG,KAAK,KAAK,MAAM,IAAI,SAAS,CAAC,EAAC;UACjC,cAAc,CAAC,IAAI,EAAE;YAAC,GAAG,EAAE;UAAG,CAAC,CAAC;QACjC;MACD;MAEA,IAAG,IAAI,CAAC,SAAS,EAAC;QACjB,OAAO,IAAI,CAAC,SAAS;MACtB;MACA,WAAW,CAAC,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC;MAEzC,GAAG,CAAC,YAAU;QACb;QACA,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC;QAErD,IAAI,CAAC,SAAS,IAAI,QAAQ,EAAC;UAC1B,IAAI,QAAQ,EAAE;YACb,QAAQ,CAAC,IAAI,EAAE,YAAY,CAAC,eAAe,CAAC;UAC7C;UACA,kBAAkB,CAAC,KAAK,CAAC;UACzB,IAAI,CAAC,UAAU,GAAG,IAAI;UACtB,UAAU,CAAC,YAAU;YACpB,IAAI,YAAY,IAAI,IAAI,EAAE;cACzB,OAAO,IAAI,CAAC,UAAU;YACvB;UACD,CAAC,EAAE,CAAC,CAAC;QACN;QACA,IAAI,IAAI,CAAC,OAAO,IAAI,MAAM,EAAE;UAC3B,SAAS,EAAE;QACZ;MACD,CAAC,EAAE,IAAI,CAAC;IACT,CAAC,CAAC;;IAEF;AACF;AACA;AACA;IACE,IAAI,aAAa,GAAG,SAAhB,aAAa,CAAa,IAAI,EAAC;MAClC,IAAI,IAAI,CAAC,SAAS,EAAE;QAAC;MAAO;MAC5B,IAAI,MAAM;MAEV,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;;MAEtC;MACA,IAAI,KAAK,GAAG,KAAK,KAAK,IAAI,CAAC,aAAa,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC;MAClG,IAAI,MAAM,GAAG,KAAK,IAAI,MAAM;MAE5B,IAAI,CAAC,MAAM,IAAI,CAAC,WAAW,KAAK,KAAK,KAAK,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,YAAY,CAAC,UAAU,CAAC,IAAI,QAAQ,CAAC,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,EAAC;QAAC;MAAO;MAErM,MAAM,GAAG,YAAY,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC,MAAM;MAEpD,IAAG,MAAM,EAAC;QACR,SAAS,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC;MACpD;MAEA,IAAI,CAAC,SAAS,GAAG,IAAI;MACrB,SAAS,EAAE;MAEX,UAAU,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC;IAC/C,CAAC;IAED,IAAI,WAAW,GAAG,QAAQ,CAAC,YAAU;MACpC,YAAY,CAAC,QAAQ,GAAG,CAAC;MACzB,sBAAsB,CAAC,CAAC;IACzB,CAAC,CAAC;IAEF,IAAI,wBAAwB,GAAG,SAA3B,wBAAwB,CAAA,EAAa;MACxC,IAAG,YAAY,CAAC,QAAQ,IAAI,CAAC,EAAC;QAC7B,YAAY,CAAC,QAAQ,GAAG,CAAC;MAC1B;MACA,WAAW,CAAC,CAAC;IACd,CAAC;IAED,IAAI,MAAM,GAAG,SAAT,MAAM,CAAA,EAAa;MACtB,IAAG,WAAW,EAAC;QAAC;MAAO;MACvB,IAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,GAAG,GAAG,EAAC;QAC7B,UAAU,CAAC,MAAM,EAAE,GAAG,CAAC;QACvB;MACD;MAGA,WAAW,GAAG,IAAI;MAElB,YAAY,CAAC,QAAQ,GAAG,CAAC;MAEzB,sBAAsB,CAAC,CAAC;MAExB,gBAAgB,CAAC,QAAQ,EAAE,wBAAwB,EAAE,IAAI,CAAC;IAC3D,CAAC;IAED,OAAO;MACN,CAAC,EAAE,SAAA,EAAA,EAAU;QACZ,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;QAEpB,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC,sBAAsB,CAAC,YAAY,CAAC,SAAS,CAAC;QAC5E,YAAY,GAAG,QAAQ,CAAC,sBAAsB,CAAC,YAAY,CAAC,SAAS,GAAG,GAAG,GAAG,YAAY,CAAC,YAAY,CAAC;QAExG,gBAAgB,CAAC,QAAQ,EAAE,sBAAsB,EAAE,IAAI,CAAC;QAExD,gBAAgB,CAAC,QAAQ,EAAE,sBAAsB,EAAE,IAAI,CAAC;QAExD,gBAAgB,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE;UACzC,IAAI,CAAC,CAAC,SAAS,EAAE;YAChB,IAAI,eAAe,GAAG,QAAQ,CAAC,gBAAgB,CAAC,GAAG,GAAG,YAAY,CAAC,YAAY,CAAC;YAEhF,IAAI,eAAe,CAAC,MAAM,IAAI,eAAe,CAAC,OAAO,EAAE;cACtD,qBAAqB,CAAC,YAAY;gBACjC,eAAe,CAAC,OAAO,CAAE,UAAU,GAAG,EAAE;kBACvC,IAAI,GAAG,CAAC,QAAQ,EAAE;oBACjB,aAAa,CAAC,GAAG,CAAC;kBACnB;gBACD,CAAC,CAAC;cACH,CAAC,CAAC;YACH;UACD;QACD,CAAC,CAAC;QAEF,IAAG,MAAM,CAAC,gBAAgB,EAAC;UAC1B,IAAI,gBAAgB,CAAE,sBAAuB,CAAC,CAAC,OAAO,CAAE,OAAO,EAAE;YAAC,SAAS,EAAE,IAAI;YAAE,OAAO,EAAE,IAAI;YAAE,UAAU,EAAE;UAAI,CAAE,CAAC;QACtH,CAAC,MAAM;UACN,OAAO,CAAC,iBAAiB,CAAC,CAAC,iBAAiB,EAAE,sBAAsB,EAAE,IAAI,CAAC;UAC3E,OAAO,CAAC,iBAAiB,CAAC,CAAC,iBAAiB,EAAE,sBAAsB,EAAE,IAAI,CAAC;UAC3E,WAAW,CAAC,sBAAsB,EAAE,GAAG,CAAC;QACzC;QAEA,gBAAgB,CAAC,YAAY,EAAE,sBAAsB,EAAE,IAAI,CAAC;;QAE5D;QACA,CAAC,OAAO,EAAE,WAAW,EAAE,OAAO,EAAE,MAAM,EAAE,eAAe,EAAE,cAAc,CAAC,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC;UAC9F,QAAQ,CAAC,iBAAiB,CAAC,CAAC,IAAI,EAAE,sBAAsB,EAAE,IAAI,CAAC;QAChE,CAAC,CAAC;QAEF,IAAI,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;UACtC,MAAM,CAAC,CAAC;QACT,CAAC,MAAM;UACN,gBAAgB,CAAC,MAAM,EAAE,MAAM,CAAC;UAChC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,kBAAkB,EAAE,sBAAsB,CAAC;UACvE,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC;QAC1B;QAEA,IAAG,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAC;UAC5B,aAAa,CAAC,CAAC;UACf,GAAG,CAAC,QAAQ,CAAC,CAAC;QACf,CAAC,MAAM;UACN,sBAAsB,CAAC,CAAC;QACzB;MACD,CAAC;MACD,UAAU,EAAE,sBAAsB;MAClC,MAAM,EAAE,aAAa;MACrB,KAAK,EAAE;IACR,CAAC;EACF,CAAC,CAAE,CAAC;EAGJ,IAAI,SAAS,GAAI,YAAU;IAC1B,IAAI,cAAc;IAElB,IAAI,WAAW,GAAG,KAAK,CAAC,UAAS,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAC;MAC3D,IAAI,OAAO,EAAE,CAAC,EAAE,GAAG;MACnB,IAAI,CAAC,eAAe,GAAG,KAAK;MAC5B,KAAK,IAAI,IAAI;MAEb,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC;MAEjC,IAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,EAAE,CAAC,EAAC;QACzC,OAAO,GAAG,MAAM,CAAC,oBAAoB,CAAC,QAAQ,CAAC;QAC/C,KAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAC;UAC7C,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC;QACxC;MACD;MAEA,IAAG,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAC;QACzB,cAAc,CAAC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC;MACnC;IACD,CAAC,CAAC;IACF;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,cAAc,GAAG,SAAjB,cAAc,CAAa,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAC;MACpD,IAAI,KAAK;MACT,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU;MAE5B,IAAG,MAAM,EAAC;QACT,KAAK,GAAG,QAAQ,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,CAAC;QACrC,KAAK,GAAG,YAAY,CAAC,IAAI,EAAE,iBAAiB,EAAE;UAAC,KAAK,EAAE,KAAK;UAAE,QAAQ,EAAE,CAAC,CAAC;QAAQ,CAAC,CAAC;QAEnF,IAAG,CAAC,KAAK,CAAC,gBAAgB,EAAC;UAC1B,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK;UAE1B,IAAG,KAAK,IAAI,KAAK,KAAK,IAAI,CAAC,eAAe,EAAC;YAC1C,WAAW,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC;UACxC;QACD;MACD;IACD,CAAC;IAED,IAAI,mBAAmB,GAAG,SAAtB,mBAAmB,CAAA,EAAa;MACnC,IAAI,CAAC;MACL,IAAI,GAAG,GAAG,cAAc,CAAC,MAAM;MAC/B,IAAG,GAAG,EAAC;QACN,CAAC,GAAG,CAAC;QAEL,OAAM,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAC;UAClB,cAAc,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QAClC;MACD;IACD,CAAC;IAED,IAAI,4BAA4B,GAAG,QAAQ,CAAC,mBAAmB,CAAC;IAEhE,OAAO;MACN,CAAC,EAAE,SAAA,EAAA,EAAU;QACZ,cAAc,GAAG,QAAQ,CAAC,sBAAsB,CAAC,YAAY,CAAC,cAAc,CAAC;QAC7E,gBAAgB,CAAC,QAAQ,EAAE,4BAA4B,CAAC;MACzD,CAAC;MACD,UAAU,EAAE,4BAA4B;MACxC,UAAU,EAAE;IACb,CAAC;EACF,CAAC,CAAE,CAAC;EAEJ,IAAI,IAAI,GAAG,SAAP,IAAI,CAAA,EAAa;IACpB,IAAG,CAAC,IAAI,CAAC,CAAC,IAAI,QAAQ,CAAC,sBAAsB,EAAC;MAC7C,IAAI,CAAC,CAAC,GAAG,IAAI;MACb,SAAS,CAAC,CAAC,CAAC,CAAC;MACb,MAAM,CAAC,CAAC,CAAC,CAAC;IACX;EACD,CAAC;EAED,UAAU,CAAC,YAAU;IACpB,IAAG,YAAY,CAAC,IAAI,EAAC;MACpB,IAAI,CAAC,CAAC;IACP;EACD,CAAC,CAAC;EAEF,SAAS,GAAG;IACX;AACF;AACA;IACE,GAAG,EAAE,YAAY;IACjB,SAAS,EAAE,SAAS;IACpB,MAAM,EAAE,MAAM;IACd,IAAI,EAAE,IAAI;IACV,EAAE,EAAE,cAAc;IAClB,EAAE,EAAE,QAAQ;IACZ,EAAE,EAAE,WAAW;IACf,EAAE,EAAE,QAAQ;IACZ,IAAI,EAAE,YAAY;IAClB,EAAE,EAAE,QAAQ;IACZ,GAAG,EAAE;EACN,CAAC;EAED,OAAO,SAAS;AACjB,CACA,CAAC;;;;;;AC7yBA,WAAS,MAAM,EAAE,OAAO,EAAE;EAC1B,IAAI,aAAa,GAAG,SAAhB,aAAa,CAAA,EAAa;IAC7B,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC;IACzB,MAAM,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,aAAa,EAAE,IAAI,CAAC;EAClE,CAAC;EAED,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC;EAErD,IAAG,QAAO,MAAM,iCAAA,OAAA,CAAN,MAAM,MAAI,QAAQ,IAAI,MAAM,CAAC,OAAO,EAAC;IAC9C,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;EAC9B,CAAC,MAAM,IAAI,OAAO,MAAM,IAAI,UAAU,IAAI,MAAM,CAAC,GAAG,EAAE;IACrD,MAAM,CAAC,CAAC,WAAW,CAAC,EAAE,OAAO,CAAC;EAC/B,CAAC,MAAM,IAAG,MAAM,CAAC,SAAS,EAAE;IAC3B,aAAa,CAAC,CAAC;EAChB,CAAC,MAAM;IACN,MAAM,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,aAAa,EAAE,IAAI,CAAC;EAC/D;AACD,CAAC,EAAC,MAAM,EAAE,UAAS,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE;EAC/C,YAAY;;EACZ,IAAG,CAAC,MAAM,CAAC,gBAAgB,EAAC;IAAC;EAAO;EAEpC,IAAI,YAAY,GAAG,SAAS,CAAC,GAAG;EAChC,IAAI,QAAQ,GAAG,MAAM;EACrB,IAAI,WAAW,GAAG,oBAAoB;EACtC,IAAI,SAAS,GAAG,sDAAsD;EACtE,IAAI,OAAO,GAAG,sCAAsC;EACpD,IAAI,cAAc,GAAG,SAAS;EAC9B,IAAI,qBAAqB,GAAG;IAAC,OAAO,EAAE,CAAC;IAAE,KAAK,EAAE;EAAC,CAAC;EAClD,IAAI,UAAU,GAAG,SAAb,UAAU,CAAY,IAAI,EAAC;IAC9B,IAAI,KAAK,GAAG,SAAS,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC;IAE/C,IAAG,CAAC,IAAI,CAAC,eAAe,IAAI,KAAK,GAAG,IAAI,CAAC,eAAe,EAAC;MACxD,IAAI,CAAC,eAAe,GAAG,KAAK;IAC7B;IACA,OAAO,IAAI,CAAC,eAAe;EAC5B,CAAC;EACD,IAAI,SAAS,GAAG,SAAZ,SAAS,CAAY,IAAI,EAAC;IAC7B,IAAI,MAAM;IAEV,MAAM,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI;MAAC,gBAAgB,EAAE,SAAA,iBAAA,EAAU,CAAC;IAAC,CAAC,EAAE,gBAAgB,CAAC,iBAAiB,CAAC;IAEzG,IAAG,CAAC,qBAAqB,CAAC,MAAM,CAAC,IAAI,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,EAAC;MACrF,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc;IACnC;IAEA,OAAO,MAAM;EACd,CAAC;EACD,IAAI,cAAc,GAAG,SAAjB,cAAc,CAAY,MAAM,EAAE,KAAK,EAAC;IAC3C,IAAG,KAAK,EAAC;MACR,IAAI,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;MACpC,IAAG,SAAS,IAAI,SAAS,CAAC,CAAC,CAAC,EAAC;QAC5B,MAAM,CAAC,YAAY,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;MAC1C,CAAC,MAAM;QACN,MAAM,CAAC,YAAY,CAAC,OAAO,EAAE,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC;MACvE;IACD;EACD,CAAC;EACD,IAAI,aAAa,GAAG,SAAhB,aAAa,CAAY,IAAI,EAAE,IAAI,EAAE,GAAG,EAAC;IAC5C,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC;IAC/C,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,SAAS,CAAC;IACrD,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC;IAC3C,IAAI,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC;IAEjD,IAAG,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,IAAI,IAAI,EAAC;MACxD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC;IAClC;IAEA,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,YAAY,EAAE;MACxC,KAAK,EAAE,IAAI;MACX,QAAQ,EAAE;IACX,CAAC,CAAC;IACF,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,YAAY,EAAE;MACzC,KAAK,EAAE,OAAO;MACd,QAAQ,EAAE;IACX,CAAC,CAAC;IAEF,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC;IAErD,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM;IAC9B,GAAG,CAAC,SAAS,GAAG,YAAY,CAAC,SAAS;IAEtC,IAAG,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,EAAC;MAC7B,KAAK,GAAG,MAAM;IACf;IAEA,IAAI,CAAC,OAAO,CAAC,UAAS,GAAG,EAAC;MACzB,IAAI,KAAK;MACT,IAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC;MAE7C,IAAG,KAAK,IAAI,KAAK,IAAI,MAAM,EAAC;QAC3B,MAAM,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC;MACpC;MAEA,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;QACjC,MAAM,CAAC,YAAY,CAAC,YAAY,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;QAEtD,cAAc,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;QAChC,cAAc,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;MACjC,CAAC,MAAM;QACN,MAAM,CAAC,YAAY,CAAC,YAAY,CAAC,UAAU,EAAE,GAAG,CAAC;MAClD;MAEA,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC;IAC5B,CAAC,CAAC;IAEF,IAAG,KAAK,EAAC;MACR,GAAG,CAAC,YAAY,CAAC,YAAY,CAAC,SAAS,EAAE,KAAK,CAAC;MAC/C,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,SAAS,CAAC;MAC5C,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC;IAC9B;IACA,IAAG,QAAQ,EAAC;MACX,GAAG,CAAC,YAAY,CAAC,eAAe,EAAE,QAAQ,CAAC;IAC5C;IACA,IAAG,KAAK,EAAE;MACT,GAAG,CAAC,YAAY,CAAC,YAAY,EAAE,KAAK,CAAC;IACtC;IAEA,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC;IAExB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;EAC1B,CAAC;EAED,IAAI,SAAS,GAAG,SAAZ,SAAS,CAAY,CAAC,EAAC;IAC1B,IAAG,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,EAAC;MAAC;IAAO;IAEhC,IAAI,KAAK,GAAG,CAAC,CAAC,MAAM;IACpB,IAAI,IAAI,GAAG,KAAK,CAAC,UAAU;IAC3B,IAAI,EAAE,GAAG,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,GAAG;IAGtC,IAAG,EAAE,EAAC;MACL,IAAI,MAAM,GAAG,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,EAAE;MAC9D,IAAI,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,YAAY,EAAE;QAC9C,GAAG,EAAE,EAAE;QACP,MAAM,EAAE,MAAM;QACd,OAAO,EAAE;MACV,CAAC,CAAC;MAEF,IAAG,CAAC,KAAK,CAAC,gBAAgB,EAAC;QAC1B,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,KAAK,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG;MACxF;IACD;IAEA,IAAG,KAAK,CAAC,iBAAiB,EAAC;MAC1B,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,aAAa,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC;MACpD,OAAO,KAAK,CAAC,iBAAiB;IAC/B;EACD,CAAC;EAED,gBAAgB,CAAC,kBAAkB,EAAE,UAAS,CAAC,EAAC;IAC/C,IAAI,GAAG,EAAE,KAAK,EAAE,IAAI;IAEpB,IAAG,CAAC,CAAC,gBAAgB,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,EAAC;MAAC;IAAO;IAE9E,IAAI,GAAG,CAAC,CAAC,MAAM;IACf,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;IAErC,KAAK,CAAC,GAAG,GAAG,EAAE;IAEd,KAAK,CAAC,iBAAiB,GAAG,IAAI;IAC9B,CAAC,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI;IAEzB,aAAa,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC;IAE/B,UAAU,CAAC,YAAU;MACpB,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;MAE9B,SAAS,CAAC,GAAG,CAAC,YAAU;QACvB,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,aAAa,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;QACpD,IAAG,KAAK,CAAC,QAAQ,EAAE;UAClB,SAAS,CAAC;YAAC,MAAM,EAAE;UAAK,CAAC,CAAC;QAC3B;MACD,CAAC,CAAC;IACH,CAAC,CAAC;EAEH,CAAC,CAAC;EAEF,QAAQ,CAAC,gBAAgB,CAAC,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC;EAElD,MAAM,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,UAAS,CAAC,EAAC;IACrD,IAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,IAAI,SAAS,EAAC;MAAC;IAAO;IAC1C,IAAG,CAAC,CAAC,MAAM,CAAC,UAAU,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAC;MAC3C,IAAI,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC,UAAU;MAC9B,IAAI,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC;MAE5B,IAAG,qBAAqB,CAAC,MAAM,CAAC,EAAC;QAChC,CAAC,CAAC,MAAM,CAAC,mBAAmB,GAAG,MAAM;QAErC,SAAS,CAAC,GAAG,CAAC,YAAU;UACvB,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,iBAAiB,EAAE,MAAM,CAAC;UAChD,IAAG,CAAC,CAAC,MAAM,CAAC,mBAAmB,EAAC;YAC/B,OAAO,CAAC,CAAC,MAAM,CAAC,mBAAmB;UACpC;QACD,CAAC,CAAC;MACH;IACD;EACD,CAAC,EAAE,IAAI,CAAC;EAER,QAAQ,CAAC,eAAe,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,UAAS,CAAC,EAAC;IACvE,IAAG,CAAC,CAAC,gBAAgB,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,IAAI,SAAS,EAAC;MAAC;IAAO;IACxF,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC;EACjD,CAAC,CAAC;AACH,CAAC,CAAC;;;;;;AC1MD,WAAS,MAAM,EAAE,OAAO,EAAE;EAC1B,IAAG,CAAC,MAAM,EAAE;IAAC;EAAO;EACpB,IAAI,aAAa,GAAG,SAAhB,aAAa,CAAA,EAAa;IAC7B,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC;IACzB,MAAM,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,aAAa,EAAE,IAAI,CAAC;EAClE,CAAC;EAED,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC;EAErD,IAAG,QAAO,MAAM,iCAAA,OAAA,CAAN,MAAM,MAAI,QAAQ,IAAI,MAAM,CAAC,OAAO,EAAC;IAC9C,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;EAC9B,CAAC,MAAM,IAAI,OAAO,MAAM,IAAI,UAAU,IAAI,MAAM,CAAC,GAAG,EAAE;IACrD,MAAM,CAAC,CAAC,WAAW,CAAC,EAAE,OAAO,CAAC;EAC/B,CAAC,MAAM,IAAG,MAAM,CAAC,SAAS,EAAE;IAC3B,aAAa,CAAC,CAAC;EAChB,CAAC,MAAM;IACN,MAAM,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,aAAa,EAAE,IAAI,CAAC;EAC/D;AACD,CAAC,EAAC,OAAO,MAAM,IAAI,WAAW,GAC7B,MAAM,GAAG,CAAC,EAAE,UAAS,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE;EAClD,YAAY;;EAEZ,IAAG,CAAC,MAAM,CAAC,gBAAgB,EAAC;IAAC;EAAO;EAEpC,IAAI,cAAc,GAAG,4BAA4B;EACjD,IAAI,SAAS,GAAG,kDAAkD;EAClE,IAAI,YAAY,GAAG,0DAA0D;EAC7E,IAAI,UAAU,GAAG,YAAY;EAC7B,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG;EAEvB,IAAI,MAAM,GAAG,SAAT,MAAM,CAAa,IAAI,EAAC;IAC3B,OAAQ,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;EAC3C,CAAC;EAED,IAAI,SAAS,GAAG;IAEf,SAAS,EAAE,SAAA,UAAS,OAAO,EAAE,SAAS,EAAC;MACtC,IAAI,MAAM,GAAG,OAAO;MACpB,IAAI,UAAU,GAAG,OAAO,CAAC,UAAU;MAEnC,IAAG,CAAC,CAAC,SAAS,IAAI,SAAS,IAAI,MAAM,KAAK,UAAU,IAAI,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,IAAI,EAAE,CAAC,EAAC;QAClG,UAAU,GAAG,UAAU,CAAC,UAAU;MACnC;MAEA,IAAG,SAAS,IAAI,MAAM,EAAC;QACtB,IAAG,SAAS,IAAI,MAAM,EAAC;UACtB,MAAM,GAAG,OAAO,CAAC,sBAAsB;QACxC,CAAC,MAAM,IAAG,SAAS,KAAK,UAAU,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,EAAC;UAC5D,MAAM,GAAG,CAAC,UAAU,CAAC,OAAO,GAC1B,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,GAC7B,MAAM,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KACzC,UAAU;QAEZ,CAAC,MAAM;UACN,MAAM,GAAG,UAAU;QACpB;MACD;MAEA,OAAO,MAAM;IACd,CAAC;IAED,MAAM,EAAE,SAAA,OAAS,OAAO,EAAC;MACxB,IAAI,QAAQ,EAAE,SAAS;MACvB,IAAI,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC;MACzB,IAAI,OAAO,GAAG,GAAG,CAAC,OAAO,IAAI,GAAG,CAAC,UAAU;MAC3C,IAAI,GAAG,GAAG;QACT,GAAG,EAAE,OAAO,CAAC,mBAAmB,IAAI,OAAO,CAAC,YAAY,CAAC,iBAAiB;MAC3E,CAAC;MAED,IAAG,CAAC,GAAG,CAAC,GAAG,IAAI,OAAO,KAAK,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAC;QAC/D,GAAG,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC;MACtB;MAEA,IAAG,GAAG,CAAC,GAAG,EAAC;QACV,SAAS,GAAG,OAAO,CAAC,yBAAyB,IAAI,OAAO,CAAC,YAAY,CAAC,uBAAuB,CAAC;QAE9F,IAAG,CAAC,SAAS,IAAI,OAAO,KAAK,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,EAAC;UACpE,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC;QACxB;QAEA,GAAG,CAAC,MAAM,GAAG,SAAS,CAAC,SAAS,CAAC,OAAO,EAAE,SAAS,CAAC;MAGrD,CAAC,MAAM;QACN,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,SAAS;MACxB;MAEA,OAAO,GAAG;IACX,CAAC;IAED,aAAa,EAAE,SAAA,cAAS,OAAO,EAAC;MAC/B,IAAI,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM;MACjD,IAAI,MAAM,GAAG,OAAO,CAAC,UAAU;MAC/B,IAAI,QAAQ,GAAG,MAAM,IAAI,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,EAAE,CAAC,GAC7D,MAAM,CAAC,gBAAgB,CAAC,aAAa,CAAC,GACtC,CAAC,OAAO,CAAC;MAGX,KAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;QACnC,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC;QACrB,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,OAAO,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,EAAE;QACvK,KAAK,GAAG,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC;QACzD,KAAK,GAAG,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK;QAE7E,IAAG,MAAM,KAAK,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,OAAO,CAAE,EAAC;UAChF,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;UAE5D,IAAI,CAAC,KAAK,EAAE;YACX,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC;YAEpC,IAAI,KAAK,EAAE;cACV,IAAG,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG,EAAC;gBAClB,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC;gBAChB,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC;cAClB,CAAC,MAAM;gBACN,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC;gBAChB,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC;cAClB;YACD,CAAC,MAAM;cACN,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC;cACrC,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC;YACxC;YAEA,KAAK,GAAG,KAAK,GAAG,MAAM;UACvB;UAEA;QACD;MACD;MAEA,OAAO,KAAK;IACb,CAAC;IAED,aAAa,EAAE,SAAA,cAAS,OAAO,EAAE,KAAK,EAAC;MACtC,IAAI,YAAY,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ;MAC9C,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;MACjC,IAAI,GAAG,GAAG,MAAM,CAAC,GAAG;MACpB,IAAI,OAAO,GAAG,MAAM,CAAC,MAAM;MAE3B,IAAG,GAAG,IAAI,OAAO,KAAM,GAAG,IAAI,SAAS,IAAI,GAAG,IAAI,OAAO,IAAK,EAAE,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,EAAC;QAC1G,OAAO,KAAK;MACb;MAEA,IAAG,OAAO,EAAC;QACV,KAAK,GAAG,OAAO,CAAC,WAAW;MAC5B,CAAC,MAAM;QACN,OAAO,GAAG,OAAO;MAClB;MAEA,QAAQ,GAAG,KAAK;MAEhB,IAAG,GAAG,IAAI,OAAO,EAAC;QACjB,QAAQ,GAAG,KAAK;MACjB,CAAC,MAAM;QACN,MAAM,GAAG,OAAO,CAAC,YAAY;QAE7B,IAAG,CAAC,YAAY,GAAI,KAAK,GAAG,MAAM,MAAO,GAAG,IAAI,OAAO,IAAI,YAAY,GAAG,UAAU,IAAM,GAAG,IAAI,SAAS,IAAI,YAAY,GAAG,UAAW,CAAC,EAAC;UACzI,QAAQ,GAAG,KAAK,IAAI,UAAU,GAAG,YAAY,CAAC;QAC/C;MACD;MAEA,OAAO,QAAQ;IAChB;EACD,CAAC;EAED,SAAS,CAAC,SAAS,GAAG,SAAS;EAE/B,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,UAAS,CAAC,EAAC;IACvD,IAAG,CAAC,CAAC,gBAAgB,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,IAAI,SAAS,EAAC;MAAC;IAAO;IAEhE,IAAI,OAAO,GAAG,CAAC,CAAC,MAAM;IACtB,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,SAAS,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;EAClE,CAAC,CAAC;AACH,CAAC,CAAC;;;;;;;;;;;;;AC7KF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,GAAG,EAAE;EACnB,OAAQ,GAAG,KAAK,IAAI,IAChB,OAAA,CAAO,GAAG,MAAK,QAAQ,IACvB,aAAa,IAAI,GAAG,IACpB,GAAG,CAAC,WAAW,KAAK,MAAM;AAClC;AACA,SAAS,MAAM,CAAA,EAAwB;EAAA,IAAvB,MAAM,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,CAAC,CAAC;EAAA,IAAE,GAAG,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,CAAC,CAAC;EACjC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAC,GAAG,EAAK;IAC9B,IAAI,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,WAAW,EAClC,MAAM,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,KACtB,IAAI,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IACvB,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IACrB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;MAClC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IACjC;EACJ,CAAC,CAAC;AACN;AAEA,IAAM,WAAW,GAAG;EAChB,IAAI,EAAE,CAAC,CAAC;EACR,gBAAgB,WAAA,iBAAA,EAAG,CAAE,CAAC;EACtB,mBAAmB,WAAA,oBAAA,EAAG,CAAE,CAAC;EACzB,aAAa,EAAE;IACX,IAAI,WAAA,KAAA,EAAG,CAAE,CAAC;IACV,QAAQ,EAAE;EACd,CAAC;EACD,aAAa,WAAA,cAAA,EAAG;IACZ,OAAO,IAAI;EACf,CAAC;EACD,gBAAgB,WAAA,iBAAA,EAAG;IACf,OAAO,EAAE;EACb,CAAC;EACD,cAAc,WAAA,eAAA,EAAG;IACb,OAAO,IAAI;EACf,CAAC;EACD,WAAW,WAAA,YAAA,EAAG;IACV,OAAO;MACH,SAAS,WAAA,UAAA,EAAG,CAAE;IAClB,CAAC;EACL,CAAC;EACD,aAAa,WAAA,cAAA,EAAG;IACZ,OAAO;MACH,QAAQ,EAAE,EAAE;MACZ,UAAU,EAAE,EAAE;MACd,KAAK,EAAE,CAAC,CAAC;MACT,YAAY,WAAA,aAAA,EAAG,CAAE,CAAC;MAClB,oBAAoB,WAAA,qBAAA,EAAG;QACnB,OAAO,EAAE;MACb;IACJ,CAAC;EACL,CAAC;EACD,eAAe,WAAA,gBAAA,EAAG;IACd,OAAO,CAAC,CAAC;EACb,CAAC;EACD,UAAU,WAAA,WAAA,EAAG;IACT,OAAO,IAAI;EACf,CAAC;EACD,QAAQ,EAAE;IACN,IAAI,EAAE,EAAE;IACR,IAAI,EAAE,EAAE;IACR,QAAQ,EAAE,EAAE;IACZ,IAAI,EAAE,EAAE;IACR,MAAM,EAAE,EAAE;IACV,QAAQ,EAAE,EAAE;IACZ,QAAQ,EAAE,EAAE;IACZ,MAAM,EAAE;EACZ;AACJ,CAAC;AAAC,OAAA,CAAA,WAAA,GAAA,WAAA;AACF,SAAS,WAAW,CAAA,EAAG;EACnB,IAAM,GAAG,GAAG,OAAO,QAAQ,KAAK,WAAW,GAAG,QAAQ,GAAG,CAAC,CAAC;EAC3D,MAAM,CAAC,GAAG,EAAE,WAAW,CAAC;EACxB,OAAO,GAAG;AACd;AAEA,IAAM,SAAS,GAAG;EACd,QAAQ,EAAE,WAAW;EACrB,SAAS,EAAE;IACP,SAAS,EAAE;EACf,CAAC;EACD,QAAQ,EAAE;IACN,IAAI,EAAE,EAAE;IACR,IAAI,EAAE,EAAE;IACR,QAAQ,EAAE,EAAE;IACZ,IAAI,EAAE,EAAE;IACR,MAAM,EAAE,EAAE;IACV,QAAQ,EAAE,EAAE;IACZ,QAAQ,EAAE,EAAE;IACZ,MAAM,EAAE;EACZ,CAAC;EACD,OAAO,EAAE;IACL,YAAY,WAAA,aAAA,EAAG,CAAE,CAAC;IAClB,SAAS,WAAA,UAAA,EAAG,CAAE,CAAC;IACf,EAAE,WAAA,GAAA,EAAG,CAAE,CAAC;IACR,IAAI,WAAA,KAAA,EAAG,CAAE;EACb,CAAC;EACD,WAAW,EAAE,SAAS,WAAW,CAAA,EAAG;IAChC,OAAO,IAAI;EACf,CAAC;EACD,gBAAgB,WAAA,iBAAA,EAAG,CAAE,CAAC;EACtB,mBAAmB,WAAA,oBAAA,EAAG,CAAE,CAAC;EACzB,gBAAgB,WAAA,iBAAA,EAAG;IACf,OAAO;MACH,gBAAgB,WAAA,iBAAA,EAAG;QACf,OAAO,EAAE;MACb;IACJ,CAAC;EACL,CAAC;EACD,KAAK,WAAA,MAAA,EAAG,CAAE,CAAC;EACX,IAAI,WAAA,KAAA,EAAG,CAAE,CAAC;EACV,MAAM,EAAE,CAAC,CAAC;EACV,UAAU,WAAA,WAAA,EAAG,CAAE,CAAC;EAChB,YAAY,WAAA,aAAA,EAAG,CAAE,CAAC;EAClB,UAAU,WAAA,WAAA,EAAG;IACT,OAAO,CAAC,CAAC;EACb,CAAC;EACD,qBAAqB,WAAA,sBAAC,QAAQ,EAAE;IAC5B,IAAI,OAAO,UAAU,KAAK,WAAW,EAAE;MACnC,QAAQ,CAAC,CAAC;MACV,OAAO,IAAI;IACf;IACA,OAAO,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;EAClC,CAAC;EACD,oBAAoB,WAAA,qBAAC,EAAE,EAAE;IACrB,IAAI,OAAO,UAAU,KAAK,WAAW,EAAE;MACnC;IACJ;IACA,YAAY,CAAC,EAAE,CAAC;EACpB;AACJ,CAAC;AAAC,OAAA,CAAA,SAAA,GAAA,SAAA;AACF,SAAS,SAAS,CAAA,EAAG;EACjB,IAAM,GAAG,GAAG,OAAO,MAAM,KAAK,WAAW,GAAG,MAAM,GAAG,CAAC,CAAC;EACvD,MAAM,CAAC,GAAG,EAAE,SAAS,CAAC;EACtB,OAAO,GAAG;AACd;;;;;;;;;ACjJA,IAAA,UAAA,GAAA,OAAA;AACe,SAAS,aAAa,CAAC,WAAW,EAAgC;EAAA,IAA9B,IAAI,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,QAAQ;EAAA,IAAE,WAAW,GAAA,SAAA,CAAA,MAAA,OAAA,SAAA,MAAA,SAAA;EAC7E,IAAI,CAAC,WAAW,IAAI,IAAI,KAAK,WAAW,IAAI,CAAC,WAAW,EAAE,OAAO,SAAS;EAC1E,IAAI,UAAU,GAAG,KAAK;EACtB,IAAM,MAAM,GAAG,IAAA,oBAAS,EAAC,CAAC;EAC1B,IAAM,aAAa,GAAG,IAAI,KAAK,QAAQ,GAAG,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC,YAAY;EACvF,IAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,UAAA,KAAK,EAAI;IACnD,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;MACzD,IAAM,QAAQ,GAAG,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;MAC5C,IAAM,KAAK,GAAG,aAAa,GAAG,QAAQ;MACtC,OAAO;QACL,KAAK,EAAL,KAAK;QACL,KAAK,EAAL;MACF,CAAC;IACH;IACA,OAAO;MACL,KAAK,EAAE,KAAK;MACZ,KAAK,EAAL;IACF,CAAC;EACH,CAAC,CAAC;EACF,MAAM,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;IAAA,OAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC;EAAA,EAAC;EACpE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IACzC,IAAA,SAAA,GAGI,MAAM,CAAC,CAAC,CAAC;MAFX,KAAK,GAAA,SAAA,CAAL,KAAK;MACL,KAAK,GAAA,SAAA,CAAL,KAAK;IAEP,IAAI,IAAI,KAAK,QAAQ,EAAE;MACrB,IAAI,MAAM,CAAC,UAAU,gBAAA,MAAA,CAAgB,KAAK,QAAK,CAAC,CAAC,OAAO,EAAE;QACxD,UAAU,GAAG,KAAK;MACpB;IACF,CAAC,MAAM,IAAI,KAAK,IAAI,WAAW,CAAC,WAAW,EAAE;MAC3C,UAAU,GAAG,KAAK;IACpB;EACF;EACA,OAAO,UAAU,IAAI,KAAK;AAC5B;;;;;;;;;ACnCA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA;AAA+C,SAAA,uBAAA,GAAA,WAAA,GAAA,IAAA,GAAA,CAAA,UAAA,GAAA,GAAA,gBAAA,GAAA;AAAA,IAAA,QAAA,GAChC;EACb,aAAa,EAAb,yBAAa;EACb,aAAa,EAAb;AACF,CAAC;AAAA,OAAA,cAAA,QAAA;;;;;;;;;ACLD,IAAA,MAAA,GAAA,OAAA;AACA,IAAM,aAAa,GAAG,SAAhB,aAAa,CAAI,MAAM,EAAE,MAAM,EAAK;EACxC,OAAO,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC;AAC3D,CAAC;AACc,SAAS,aAAa,CAAA,EAAG;EACtC,IAAM,MAAM,GAAG,IAAI;EACnB,IACE,SAAS,GAIP,MAAM,CAJR,SAAS;IACT,WAAW,GAGT,MAAM,CAHR,WAAW;IACX,MAAM,GAEJ,MAAM,CAFR,MAAM;IACN,EAAE,GACA,MAAM,CADR,EAAE;EAEJ,IAAM,WAAW,GAAG,MAAM,CAAC,WAAW;EACtC,IAAI,CAAC,WAAW,IAAI,WAAW,IAAI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;;EAE1E;EACA,IAAM,UAAU,GAAG,MAAM,CAAC,aAAa,CAAC,WAAW,EAAE,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,MAAM,CAAC,EAAE,CAAC;EAC9F,IAAI,CAAC,UAAU,IAAI,MAAM,CAAC,iBAAiB,KAAK,UAAU,EAAE;EAC5D,IAAM,oBAAoB,GAAG,UAAU,IAAI,WAAW,GAAG,WAAW,CAAC,UAAU,CAAC,GAAG,SAAS;EAC5F,IAAM,gBAAgB,GAAG,oBAAoB,IAAI,MAAM,CAAC,cAAc;EACtE,IAAM,WAAW,GAAG,aAAa,CAAC,MAAM,EAAE,MAAM,CAAC;EACjD,IAAM,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE,gBAAgB,CAAC;EAC1D,IAAM,UAAU,GAAG,MAAM,CAAC,OAAO;EACjC,IAAI,WAAW,IAAI,CAAC,UAAU,EAAE;IAC9B,EAAE,CAAC,SAAS,CAAC,MAAM,IAAA,MAAA,CAAI,MAAM,CAAC,sBAAsB,cAAA,MAAA,CAAW,MAAM,CAAC,sBAAsB,gBAAa,CAAC;IAC1G,MAAM,CAAC,oBAAoB,CAAC,CAAC;EAC/B,CAAC,MAAM,IAAI,CAAC,WAAW,IAAI,UAAU,EAAE;IACrC,EAAE,CAAC,SAAS,CAAC,GAAG,IAAA,MAAA,CAAI,MAAM,CAAC,sBAAsB,SAAM,CAAC;IACxD,IAAI,gBAAgB,CAAC,IAAI,CAAC,IAAI,IAAI,gBAAgB,CAAC,IAAI,CAAC,IAAI,KAAK,QAAQ,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;MACzI,EAAE,CAAC,SAAS,CAAC,GAAG,IAAA,MAAA,CAAI,MAAM,CAAC,sBAAsB,gBAAa,CAAC;IACjE;IACA,MAAM,CAAC,oBAAoB,CAAC,CAAC;EAC/B;;EAEA;EACA,CAAC,YAAY,EAAE,YAAY,EAAE,WAAW,CAAC,CAAC,OAAO,CAAC,UAAA,IAAI,EAAI;IACxD,IAAM,gBAAgB,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO;IAC7D,IAAM,eAAe,GAAG,gBAAgB,CAAC,IAAI,CAAC,IAAI,gBAAgB,CAAC,IAAI,CAAC,CAAC,OAAO;IAChF,IAAI,gBAAgB,IAAI,CAAC,eAAe,EAAE;MACxC,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC;IACxB;IACA,IAAI,CAAC,gBAAgB,IAAI,eAAe,EAAE;MACxC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;IACvB;EACF,CAAC,CAAC;EACF,IAAM,gBAAgB,GAAG,gBAAgB,CAAC,SAAS,IAAI,gBAAgB,CAAC,SAAS,KAAK,MAAM,CAAC,SAAS;EACtG,IAAM,WAAW,GAAG,MAAM,CAAC,IAAI,KAAK,gBAAgB,CAAC,aAAa,KAAK,MAAM,CAAC,aAAa,IAAI,gBAAgB,CAAC;EAChH,IAAI,gBAAgB,IAAI,WAAW,EAAE;IACnC,MAAM,CAAC,eAAe,CAAC,CAAC;EAC1B;EACA,IAAA,aAAM,EAAC,MAAM,CAAC,MAAM,EAAE,gBAAgB,CAAC;EACvC,IAAM,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO;EACvC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;IACpB,cAAc,EAAE,MAAM,CAAC,MAAM,CAAC,cAAc;IAC5C,cAAc,EAAE,MAAM,CAAC,MAAM,CAAC,cAAc;IAC5C,cAAc,EAAE,MAAM,CAAC,MAAM,CAAC;EAChC,CAAC,CAAC;EACF,IAAI,UAAU,IAAI,CAAC,SAAS,EAAE;IAC5B,MAAM,CAAC,OAAO,CAAC,CAAC;EAClB,CAAC,MAAM,IAAI,CAAC,UAAU,IAAI,SAAS,EAAE;IACnC,MAAM,CAAC,MAAM,CAAC,CAAC;EACjB;EACA,MAAM,CAAC,iBAAiB,GAAG,UAAU;EACrC,MAAM,CAAC,IAAI,CAAC,mBAAmB,EAAE,gBAAgB,CAAC;EAClD,IAAI,WAAW,IAAI,WAAW,EAAE;IAC9B,MAAM,CAAC,WAAW,CAAC,CAAC;IACpB,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC;IAC5B,MAAM,CAAC,YAAY,CAAC,CAAC;EACvB;EACA,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,gBAAgB,CAAC;AAC7C;;;;;;;;;ACtEA,SAAS,aAAa,CAAA,EAAG;EACvB,IAAM,MAAM,GAAG,IAAI;EACnB,IACY,SAAS,GAEjB,MAAM,CAFR,QAAQ;IACR,MAAM,GACJ,MAAM,CADR,MAAM;EAER,IACE,kBAAkB,GAChB,MAAM,CADR,kBAAkB;EAEpB,IAAI,kBAAkB,EAAE;IACtB,IAAM,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC;IAC/C,IAAM,kBAAkB,GAAG,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,GAAG,MAAM,CAAC,eAAe,CAAC,cAAc,CAAC,GAAG,kBAAkB,GAAG,CAAC;IAC9H,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,GAAG,kBAAkB;EACpD,CAAC,MAAM;IACL,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC;EAChD;EACA,IAAI,MAAM,CAAC,cAAc,KAAK,IAAI,EAAE;IAClC,MAAM,CAAC,cAAc,GAAG,CAAC,MAAM,CAAC,QAAQ;EAC1C;EACA,IAAI,MAAM,CAAC,cAAc,KAAK,IAAI,EAAE;IAClC,MAAM,CAAC,cAAc,GAAG,CAAC,MAAM,CAAC,QAAQ;EAC1C;EACA,IAAI,SAAS,IAAI,SAAS,KAAK,MAAM,CAAC,QAAQ,EAAE;IAC9C,MAAM,CAAC,KAAK,GAAG,KAAK;EACtB;EACA,IAAI,SAAS,KAAK,MAAM,CAAC,QAAQ,EAAE;IACjC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,MAAM,GAAG,QAAQ,CAAC;EAClD;AACF;AAAC,IAAA,QAAA,GACc;EACb,aAAa,EAAb;AACF,CAAC;AAAA,OAAA,cAAA,QAAA;;;;;;;;;;;;;;;;AC/BD,SAAS,cAAc,CAAC,OAAO,EAAE,MAAM,EAAE;EACvC,IAAM,aAAa,GAAG,EAAE;EACxB,OAAO,CAAC,OAAO,CAAC,UAAA,IAAI,EAAI;IACtB,IAAI,OAAA,CAAO,IAAI,MAAK,QAAQ,EAAE;MAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,UAAA,UAAU,EAAI;QACtC,IAAI,IAAI,CAAC,UAAU,CAAC,EAAE;UACpB,aAAa,CAAC,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;QACzC;MACF,CAAC,CAAC;IACJ,CAAC,MAAM,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;MACnC,aAAa,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACnC;EACF,CAAC,CAAC;EACF,OAAO,aAAa;AACtB;AACe,SAAS,UAAU,CAAA,EAAG;EAAA,IAAA,aAAA;EACnC,IAAM,MAAM,GAAG,IAAI;EACnB,IACE,UAAU,GAKR,MAAM,CALR,UAAU;IACV,MAAM,GAIJ,MAAM,CAJR,MAAM;IACN,GAAG,GAGD,MAAM,CAHR,GAAG;IACH,EAAE,GAEA,MAAM,CAFR,EAAE;IACF,MAAM,GACJ,MAAM,CADR,MAAM;EAER;EACA,IAAM,QAAQ,GAAG,cAAc,CAAC,CAAC,aAAa,EAAE,MAAM,CAAC,SAAS,EAAE;IAChE,WAAW,EAAE,MAAM,CAAC,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC;EACzD,CAAC,EAAE;IACD,YAAY,EAAE,MAAM,CAAC;EACvB,CAAC,EAAE;IACD,KAAK,EAAE;EACT,CAAC,EAAE;IACD,MAAM,EAAE,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG;EAC5C,CAAC,EAAE;IACD,aAAa,EAAE,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK;EAC7E,CAAC,EAAE;IACD,SAAS,EAAE,MAAM,CAAC;EACpB,CAAC,EAAE;IACD,KAAK,EAAE,MAAM,CAAC;EAChB,CAAC,EAAE;IACD,UAAU,EAAE,MAAM,CAAC;EACrB,CAAC,EAAE;IACD,UAAU,EAAE,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC;EACvC,CAAC,EAAE;IACD,gBAAgB,EAAE,MAAM,CAAC;EAC3B,CAAC,CAAC,EAAE,MAAM,CAAC,sBAAsB,CAAC;EAClC,UAAU,CAAC,IAAI,CAAA,KAAA,CAAf,UAAU,EAAA,kBAAA,CAAS,QAAQ,EAAC;EAC5B,CAAA,aAAA,GAAA,EAAE,CAAC,SAAS,EAAC,GAAG,CAAA,KAAA,CAAA,aAAA,EAAA,kBAAA,CAAI,UAAU,EAAC;EAC/B,MAAM,CAAC,oBAAoB,CAAC,CAAC;AAC/B;;;;;;;;;ACjDA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA;AAA+C,SAAA,uBAAA,GAAA,WAAA,GAAA,IAAA,GAAA,CAAA,UAAA,GAAA,GAAA,gBAAA,GAAA;AAAA,IAAA,QAAA,GAChC;EACb,UAAU,EAAV,sBAAU;EACV,aAAa,EAAb;AACF,CAAC;AAAA,OAAA,cAAA,QAAA;;;;;;;;;;;;;;;ACLc,SAAS,aAAa,CAAA,EAAG;EAAA,IAAA,aAAA;EACtC,IAAM,MAAM,GAAG,IAAI;EACnB,IACE,EAAE,GAEA,MAAM,CAFR,EAAE;IACF,UAAU,GACR,MAAM,CADR,UAAU;EAEZ,CAAA,aAAA,GAAA,EAAE,CAAC,SAAS,EAAC,MAAM,CAAA,KAAA,CAAA,aAAA,EAAA,kBAAA,CAAI,UAAU,EAAC;EAClC,MAAM,CAAC,oBAAoB,CAAC,CAAC;AAC/B;;;;;;;;;ACPA,IAAA,UAAA,GAAA,OAAA;AACA,IAAA,MAAA,GAAA,OAAA;AACA,IAAA,WAAA,GAAA,OAAA;AACA,IAAA,UAAA,GAAA,OAAA;AACA,IAAA,WAAA,GAAA,OAAA;AACA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,SAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,QAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,SAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,mBAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,qBAAA,GAAA,OAAA;AAAoF,SAAA,uBAAA,GAAA,WAAA,GAAA,IAAA,GAAA,CAAA,UAAA,GAAA,GAAA,gBAAA,GAAA;AAAA,SAAA,QAAA,GAAA,sCAAA,OAAA,wBAAA,MAAA,uBAAA,MAAA,CAAA,QAAA,aAAA,GAAA,kBAAA,GAAA,gBAAA,GAAA,WAAA,GAAA,yBAAA,MAAA,IAAA,GAAA,CAAA,WAAA,KAAA,MAAA,IAAA,GAAA,KAAA,MAAA,CAAA,SAAA,qBAAA,GAAA,KAAA,OAAA,CAAA,GAAA;AAAA,SAAA,mBAAA,GAAA,WAAA,kBAAA,CAAA,GAAA,KAAA,gBAAA,CAAA,GAAA,KAAA,2BAAA,CAAA,GAAA,KAAA,kBAAA;AAAA,SAAA,mBAAA,cAAA,SAAA;AAAA,SAAA,4BAAA,CAAA,EAAA,MAAA,SAAA,CAAA,qBAAA,CAAA,sBAAA,iBAAA,CAAA,CAAA,EAAA,MAAA,OAAA,CAAA,GAAA,MAAA,CAAA,SAAA,CAAA,QAAA,CAAA,IAAA,CAAA,CAAA,EAAA,KAAA,aAAA,CAAA,iBAAA,CAAA,CAAA,WAAA,EAAA,CAAA,GAAA,CAAA,CAAA,WAAA,CAAA,IAAA,MAAA,CAAA,cAAA,CAAA,mBAAA,KAAA,CAAA,IAAA,CAAA,CAAA,OAAA,CAAA,+DAAA,IAAA,CAAA,CAAA,UAAA,iBAAA,CAAA,CAAA,EAAA,MAAA;AAAA,SAAA,iBAAA,IAAA,eAAA,MAAA,oBAAA,IAAA,CAAA,MAAA,CAAA,QAAA,aAAA,IAAA,+BAAA,KAAA,CAAA,IAAA,CAAA,IAAA;AAAA,SAAA,mBAAA,GAAA,QAAA,KAAA,CAAA,OAAA,CAAA,GAAA,UAAA,iBAAA,CAAA,GAAA;AAAA,SAAA,kBAAA,GAAA,EAAA,GAAA,QAAA,GAAA,YAAA,GAAA,GAAA,GAAA,CAAA,MAAA,EAAA,GAAA,GAAA,GAAA,CAAA,MAAA,WAAA,CAAA,MAAA,IAAA,OAAA,KAAA,CAAA,GAAA,GAAA,CAAA,GAAA,GAAA,EAAA,CAAA,IAAA,IAAA,CAAA,CAAA,IAAA,GAAA,CAAA,CAAA,UAAA,IAAA;AAAA,SAAA,gBAAA,QAAA,EAAA,WAAA,UAAA,QAAA,YAAA,WAAA,eAAA,SAAA;AAAA,SAAA,kBAAA,MAAA,EAAA,KAAA,aAAA,CAAA,MAAA,CAAA,GAAA,KAAA,CAAA,MAAA,EAAA,CAAA,UAAA,UAAA,GAAA,KAAA,CAAA,CAAA,GAAA,UAAA,CAAA,UAAA,GAAA,UAAA,CAAA,UAAA,WAAA,UAAA,CAAA,YAAA,wBAAA,UAAA,EAAA,UAAA,CAAA,QAAA,SAAA,MAAA,CAAA,cAAA,CAAA,MAAA,EAAA,cAAA,CAAA,UAAA,CAAA,GAAA,GAAA,UAAA;AAAA,SAAA,aAAA,WAAA,EAAA,UAAA,EAAA,WAAA,QAAA,UAAA,EAAA,iBAAA,CAAA,WAAA,CAAA,SAAA,EAAA,UAAA,OAAA,WAAA,EAAA,iBAAA,CAAA,WAAA,EAAA,WAAA,GAAA,MAAA,CAAA,cAAA,CAAA,WAAA,iBAAA,QAAA,mBAAA,WAAA;AAAA,SAAA,eAAA,GAAA,QAAA,GAAA,GAAA,YAAA,CAAA,GAAA,oBAAA,OAAA,CAAA,GAAA,iBAAA,GAAA,GAAA,MAAA,CAAA,GAAA;AAAA,SAAA,aAAA,KAAA,EAAA,IAAA,QAAA,OAAA,CAAA,KAAA,kBAAA,KAAA,kBAAA,KAAA,MAAA,IAAA,GAAA,KAAA,CAAA,MAAA,CAAA,WAAA,OAAA,IAAA,KAAA,SAAA,QAAA,GAAA,GAAA,IAAA,CAAA,IAAA,CAAA,KAAA,EAAA,IAAA,oBAAA,OAAA,CAAA,GAAA,uBAAA,GAAA,YAAA,SAAA,4DAAA,IAAA,gBAAA,MAAA,GAAA,MAAA,EAAA,KAAA,KArBpF;AAsBA,IAAM,UAAU,GAAG;EACjB,aAAa,EAAb,yBAAa;EACb,MAAM,EAAN,iBAAM;EACN,SAAS,EAAT,kBAAS;EACT,UAAU,EAAV,kBAAU;EACV,KAAK,EAAL,kBAAK;EACL,IAAI,EAAJ,kBAAI;EACJ,UAAU,EAAV,kBAAU;EACV,MAAM,EAAN,kBAAM;EACN,WAAW,EAAX,kBAAW;EACX,aAAa,EAAb,mBAAa;EACb,OAAO,EAAP;AACF,CAAC;AACD,IAAM,gBAAgB,GAAG,CAAC,CAAC;AAAC,IACtB,MAAM;EACV,SAAA,OAAA,EAAqB;IAAA,eAAA,OAAA,MAAA;IACnB,IAAI,EAAE;IACN,IAAI,MAAM;IAAC,SAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAFE,IAAI,OAAA,KAAA,CAAA,IAAA,GAAA,IAAA,MAAA,IAAA,GAAA,IAAA,EAAA,IAAA;MAAJ,IAAI,CAAA,IAAA,IAAA,SAAA,CAAA,IAAA;IAAA;IAGjB,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;MACjH,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;IAClB,CAAC,MAAM;MACJ,EAAE,GAAY,IAAI;MAAd,MAAM,GAAI,IAAI;IACrB;IACA,IAAI,CAAC,MAAM,EAAE,MAAM,GAAG,CAAC,CAAC;IACxB,MAAM,GAAG,IAAA,aAAM,EAAC,CAAC,CAAC,EAAE,MAAM,CAAC;IAC3B,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,GAAG,EAAE;IACpC,IAAM,QAAQ,GAAG,IAAA,sBAAW,EAAC,CAAC;IAC9B,IAAI,MAAM,CAAC,EAAE,IAAI,OAAO,MAAM,CAAC,EAAE,KAAK,QAAQ,IAAI,QAAQ,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;MACjG,IAAM,OAAO,GAAG,EAAE;MAClB,QAAQ,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,UAAA,WAAW,EAAI;QAC1D,IAAM,SAAS,GAAG,IAAA,aAAM,EAAC,CAAC,CAAC,EAAE,MAAM,EAAE;UACnC,EAAE,EAAE;QACN,CAAC,CAAC;QACF,OAAO,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC;MACrC,CAAC,CAAC;MACF;MACA,OAAO,OAAO;IAChB;;IAEA;IACA,IAAM,MAAM,GAAG,IAAI;IACnB,MAAM,CAAC,UAAU,GAAG,IAAI;IACxB,MAAM,CAAC,OAAO,GAAG,IAAA,sBAAU,EAAC,CAAC;IAC7B,MAAM,CAAC,MAAM,GAAG,IAAA,oBAAS,EAAC;MACxB,SAAS,EAAE,MAAM,CAAC;IACpB,CAAC,CAAC;IACF,MAAM,CAAC,OAAO,GAAG,IAAA,sBAAU,EAAC,CAAC;IAC7B,MAAM,CAAC,eAAe,GAAG,CAAC,CAAC;IAC3B,MAAM,CAAC,kBAAkB,GAAG,EAAE;IAC9B,MAAM,CAAC,OAAO,GAAA,kBAAA,CAAO,MAAM,CAAC,WAAW,CAAC;IACxC,IAAI,MAAM,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;MAAA,IAAA,eAAA;MACnD,CAAA,eAAA,GAAA,MAAM,CAAC,OAAO,EAAC,IAAI,CAAA,KAAA,CAAA,eAAA,EAAA,kBAAA,CAAI,MAAM,CAAC,OAAO,EAAC;IACxC;IACA,IAAM,gBAAgB,GAAG,CAAC,CAAC;IAC3B,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,UAAA,GAAG,EAAI;MAC5B,GAAG,CAAC;QACF,MAAM,EAAN,MAAM;QACN,MAAM,EAAN,MAAM;QACN,YAAY,EAAE,IAAA,8BAAkB,EAAC,MAAM,EAAE,gBAAgB,CAAC;QAC1D,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QAC9B,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;QAC5B,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM;MAC/B,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACA,IAAM,YAAY,GAAG,IAAA,aAAM,EAAC,CAAC,CAAC,EAAE,oBAAQ,EAAE,gBAAgB,CAAC;;IAE3D;IACA,MAAM,CAAC,MAAM,GAAG,IAAA,aAAM,EAAC,CAAC,CAAC,EAAE,YAAY,EAAE,gBAAgB,EAAE,MAAM,CAAC;IAClE,MAAM,CAAC,cAAc,GAAG,IAAA,aAAM,EAAC,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC;IACjD,MAAM,CAAC,YAAY,GAAG,IAAA,aAAM,EAAC,CAAC,CAAC,EAAE,MAAM,CAAC;;IAExC;IACA,IAAI,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE;MACrC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,UAAA,SAAS,EAAI;QACjD,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;MACnD,CAAC,CAAC;IACJ;IACA,IAAI,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE;MACxC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;IACnC;;IAEA;IACA,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;MACpB,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,OAAO;MAC9B,EAAE,EAAF,EAAE;MACF;MACA,UAAU,EAAE,EAAE;MACd;MACA,MAAM,EAAE,EAAE;MACV,UAAU,EAAE,EAAE;MACd,QAAQ,EAAE,EAAE;MACZ,eAAe,EAAE,EAAE;MACnB;MACA,YAAY,WAAA,aAAA,EAAG;QACb,OAAO,MAAM,CAAC,MAAM,CAAC,SAAS,KAAK,YAAY;MACjD,CAAC;MACD,UAAU,WAAA,WAAA,EAAG;QACX,OAAO,MAAM,CAAC,MAAM,CAAC,SAAS,KAAK,UAAU;MAC/C,CAAC;MACD;MACA,WAAW,EAAE,CAAC;MACd,SAAS,EAAE,CAAC;MACZ;MACA,WAAW,EAAE,IAAI;MACjB,KAAK,EAAE,KAAK;MACZ;MACA,SAAS,EAAE,CAAC;MACZ,iBAAiB,EAAE,CAAC;MACpB,QAAQ,EAAE,CAAC;MACX,QAAQ,EAAE,CAAC;MACX,SAAS,EAAE,KAAK;MAChB,qBAAqB,WAAA,sBAAA,EAAG;QACtB;QACA;QACA,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,GAAA,IAAA,CAAA,GAAA,CAAG,CAAC,EAAI,EAAE,EAAC,GAAA,IAAA,CAAA,GAAA,CAAG,CAAC,EAAI,EAAE;MACvD,CAAC;MACD;MACA,cAAc,EAAE,MAAM,CAAC,MAAM,CAAC,cAAc;MAC5C,cAAc,EAAE,MAAM,CAAC,MAAM,CAAC,cAAc;MAC5C;MACA,eAAe,EAAE;QACf,SAAS,EAAE,SAAS;QACpB,OAAO,EAAE,SAAS;QAClB,mBAAmB,EAAE,SAAS;QAC9B,cAAc,EAAE,SAAS;QACzB,WAAW,EAAE,SAAS;QACtB,gBAAgB,EAAE,SAAS;QAC3B,cAAc,EAAE,SAAS;QACzB,kBAAkB,EAAE,SAAS;QAC7B;QACA,iBAAiB,EAAE,MAAM,CAAC,MAAM,CAAC,iBAAiB;QAClD;QACA,aAAa,EAAE,CAAC;QAChB,YAAY,EAAE,SAAS;QACvB;QACA,UAAU,EAAE,EAAE;QACd,mBAAmB,EAAE,SAAS;QAC9B,WAAW,EAAE,SAAS;QACtB,OAAO,EAAE;MACX,CAAC;MACD;MACA,UAAU,EAAE,IAAI;MAChB;MACA,cAAc,EAAE,MAAM,CAAC,MAAM,CAAC,cAAc;MAC5C,OAAO,EAAE;QACP,MAAM,EAAE,CAAC;QACT,MAAM,EAAE,CAAC;QACT,QAAQ,EAAE,CAAC;QACX,QAAQ,EAAE,CAAC;QACX,IAAI,EAAE;MACR,CAAC;MACD;MACA,YAAY,EAAE,EAAE;MAChB,YAAY,EAAE;IAChB,CAAC,CAAC;IACF,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;;IAEtB;IACA,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE;MACtB,MAAM,CAAC,IAAI,CAAC,CAAC;IACf;;IAEA;IACA;IACA,OAAO,MAAM;EACf;EAAC,YAAA,CAAA,MAAA;IAAA,GAAA;IAAA,KAAA,EACD,SAAA,cAAc,OAAO,EAAE;MACrB,IACE,QAAQ,GAEN,IAAI,CAFN,QAAQ;QACR,MAAM,GACJ,IAAI,CADN,MAAM;MAER,IAAM,MAAM,GAAG,IAAA,sBAAe,EAAC,QAAQ,MAAA,MAAA,CAAM,MAAM,CAAC,UAAU,mBAAgB,CAAC;MAC/E,IAAM,eAAe,GAAG,IAAA,mBAAY,EAAC,MAAM,CAAC,CAAC,CAAC,CAAC;MAC/C,OAAO,IAAA,mBAAY,EAAC,OAAO,CAAC,GAAG,eAAe;IAChD;EAAC;IAAA,GAAA;IAAA,KAAA,EACD,SAAA,oBAAoB,KAAK,EAAE;MACzB,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAA,OAAO;QAAA,OAAI,OAAO,CAAC,YAAY,CAAC,yBAAyB,CAAC,GAAG,CAAC,KAAK,KAAK;MAAA,EAAC,CAAC,CAAC,CAAC,CAAC;IAC5H;EAAC;IAAA,GAAA;IAAA,KAAA,EACD,SAAA,aAAA,EAAe;MACb,IAAM,MAAM,GAAG,IAAI;MACnB,IACE,QAAQ,GAEN,MAAM,CAFR,QAAQ;QACR,MAAM,GACJ,MAAM,CADR,MAAM;MAER,MAAM,CAAC,MAAM,GAAG,IAAA,sBAAe,EAAC,QAAQ,MAAA,MAAA,CAAM,MAAM,CAAC,UAAU,mBAAgB,CAAC;IAClF;EAAC;IAAA,GAAA;IAAA,KAAA,EACD,SAAA,OAAA,EAAS;MACP,IAAM,MAAM,GAAG,IAAI;MACnB,IAAI,MAAM,CAAC,OAAO,EAAE;MACpB,MAAM,CAAC,OAAO,GAAG,IAAI;MACrB,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE;QAC5B,MAAM,CAAC,aAAa,CAAC,CAAC;MACxB;MACA,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACvB;EAAC;IAAA,GAAA;IAAA,KAAA,EACD,SAAA,QAAA,EAAU;MACR,IAAM,MAAM,GAAG,IAAI;MACnB,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;MACrB,MAAM,CAAC,OAAO,GAAG,KAAK;MACtB,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE;QAC5B,MAAM,CAAC,eAAe,CAAC,CAAC;MAC1B;MACA,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IACxB;EAAC;IAAA,GAAA;IAAA,KAAA,EACD,SAAA,YAAY,QAAQ,EAAE,KAAK,EAAE;MAC3B,IAAM,MAAM,GAAG,IAAI;MACnB,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAC7C,IAAM,GAAG,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;MACjC,IAAM,GAAG,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;MACjC,IAAM,OAAO,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,QAAQ,GAAG,GAAG;MAC5C,MAAM,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,KAAK,KAAK,WAAW,GAAG,CAAC,GAAG,KAAK,CAAC;MACrE,MAAM,CAAC,iBAAiB,CAAC,CAAC;MAC1B,MAAM,CAAC,mBAAmB,CAAC,CAAC;IAC9B;EAAC;IAAA,GAAA;IAAA,KAAA,EACD,SAAA,qBAAA,EAAuB;MACrB,IAAM,MAAM,GAAG,IAAI;MACnB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE;MAC/C,IAAM,GAAG,GAAG,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,UAAA,SAAS,EAAI;QAC7D,OAAO,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,sBAAsB,CAAC,KAAK,CAAC;MAC3G,CAAC,CAAC;MACF,MAAM,CAAC,IAAI,CAAC,mBAAmB,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjD;EAAC;IAAA,GAAA;IAAA,KAAA,EACD,SAAA,gBAAgB,OAAO,EAAE;MACvB,IAAM,MAAM,GAAG,IAAI;MACnB,IAAI,MAAM,CAAC,SAAS,EAAE,OAAO,EAAE;MAC/B,OAAO,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,UAAA,SAAS,EAAI;QACtD,OAAO,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC;MACrG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;IACd;EAAC;IAAA,GAAA;IAAA,KAAA,EACD,SAAA,kBAAA,EAAoB;MAClB,IAAM,MAAM,GAAG,IAAI;MACnB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE;MAC/C,IAAM,OAAO,GAAG,EAAE;MAClB,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,OAAO,EAAI;QAC/B,IAAM,UAAU,GAAG,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC;QAClD,OAAO,CAAC,IAAI,CAAC;UACX,OAAO,EAAP,OAAO;UACP,UAAU,EAAV;QACF,CAAC,CAAC;QACF,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,OAAO,EAAE,UAAU,CAAC;MACjD,CAAC,CAAC;MACF,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,OAAO,CAAC;IACvC;EAAC;IAAA,GAAA;IAAA,KAAA,EACD,SAAA,qBAAA,EAAsD;MAAA,IAAjC,IAAI,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,SAAS;MAAA,IAAE,KAAK,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,KAAK;MAClD,IAAM,MAAM,GAAG,IAAI;MACnB,IACE,MAAM,GAMJ,MAAM,CANR,MAAM;QACN,MAAM,GAKJ,MAAM,CALR,MAAM;QACN,UAAU,GAIR,MAAM,CAJR,UAAU;QACV,eAAe,GAGb,MAAM,CAHR,eAAe;QACT,UAAU,GAEd,MAAM,CAFR,IAAI;QACJ,WAAW,GACT,MAAM,CADR,WAAW;MAEb,IAAI,GAAG,GAAG,CAAC;MACX,IAAI,MAAM,CAAC,cAAc,EAAE;QACzB,IAAI,SAAS,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,eAAe;QACnD,IAAI,SAAS;QACb,KAAK,IAAI,CAAC,GAAG,WAAW,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;UACvD,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE;YAC3B,SAAS,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,eAAe;YACtC,GAAG,IAAI,CAAC;YACR,IAAI,SAAS,GAAG,UAAU,EAAE,SAAS,GAAG,IAAI;UAC9C;QACF;QACA,KAAK,IAAI,EAAC,GAAG,WAAW,GAAG,CAAC,EAAE,EAAC,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,EAAE;UAC5C,IAAI,MAAM,CAAC,EAAC,CAAC,IAAI,CAAC,SAAS,EAAE;YAC3B,SAAS,IAAI,MAAM,CAAC,EAAC,CAAC,CAAC,eAAe;YACtC,GAAG,IAAI,CAAC;YACR,IAAI,SAAS,GAAG,UAAU,EAAE,SAAS,GAAG,IAAI;UAC9C;QACF;MACF,CAAC,MAAM;QACL;QACA,IAAI,IAAI,KAAK,SAAS,EAAE;UACtB,KAAK,IAAI,GAAC,GAAG,WAAW,GAAG,CAAC,EAAE,GAAC,GAAG,MAAM,CAAC,MAAM,EAAE,GAAC,IAAI,CAAC,EAAE;YACvD,IAAM,WAAW,GAAG,KAAK,GAAG,UAAU,CAAC,GAAC,CAAC,GAAG,eAAe,CAAC,GAAC,CAAC,GAAG,UAAU,CAAC,WAAW,CAAC,GAAG,UAAU,GAAG,UAAU,CAAC,GAAC,CAAC,GAAG,UAAU,CAAC,WAAW,CAAC,GAAG,UAAU;YAC5J,IAAI,WAAW,EAAE;cACf,GAAG,IAAI,CAAC;YACV;UACF;QACF,CAAC,MAAM;UACL;UACA,KAAK,IAAI,GAAC,GAAG,WAAW,GAAG,CAAC,EAAE,GAAC,IAAI,CAAC,EAAE,GAAC,IAAI,CAAC,EAAE;YAC5C,IAAM,YAAW,GAAG,UAAU,CAAC,WAAW,CAAC,GAAG,UAAU,CAAC,GAAC,CAAC,GAAG,UAAU;YACxE,IAAI,YAAW,EAAE;cACf,GAAG,IAAI,CAAC;YACV;UACF;QACF;MACF;MACA,OAAO,GAAG;IACZ;EAAC;IAAA,GAAA;IAAA,KAAA,EACD,SAAA,OAAA,EAAS;MACP,IAAM,MAAM,GAAG,IAAI;MACnB,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,EAAE;MACjC,IACE,QAAQ,GAEN,MAAM,CAFR,QAAQ;QACR,MAAM,GACJ,MAAM,CADR,MAAM;MAER;MACA,IAAI,MAAM,CAAC,WAAW,EAAE;QACtB,MAAM,CAAC,aAAa,CAAC,CAAC;MACxB;MACA,kBAAA,CAAI,MAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,EAAE,OAAO,CAAC,UAAA,OAAO,EAAI;QACrE,IAAI,OAAO,CAAC,QAAQ,EAAE;UACpB,IAAA,0CAAoB,EAAC,MAAM,EAAE,OAAO,CAAC;QACvC;MACF,CAAC,CAAC;MACF,MAAM,CAAC,UAAU,CAAC,CAAC;MACnB,MAAM,CAAC,YAAY,CAAC,CAAC;MACrB,MAAM,CAAC,cAAc,CAAC,CAAC;MACvB,MAAM,CAAC,mBAAmB,CAAC,CAAC;MAC5B,SAAS,YAAY,CAAA,EAAG;QACtB,IAAM,cAAc,GAAG,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,SAAS;QACrF,IAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;QACrG,MAAM,CAAC,YAAY,CAAC,YAAY,CAAC;QACjC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QAC1B,MAAM,CAAC,mBAAmB,CAAC,CAAC;MAC9B;MACA,IAAI,UAAU;MACd,IAAI,MAAM,CAAC,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE;QAC5D,YAAY,CAAC,CAAC;QACd,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE;UAC5B,MAAM,CAAC,gBAAgB,CAAC,CAAC;QAC3B;MACF,CAAC,MAAM;QACL,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,KAAK,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,aAAa,GAAG,CAAC,KAAK,MAAM,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE;UAChI,IAAM,MAAM,GAAG,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM;UACtG,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC;QAChE,CAAC,MAAM;UACL,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC;QACjE;QACA,IAAI,CAAC,UAAU,EAAE;UACf,YAAY,CAAC,CAAC;QAChB;MACF;MACA,IAAI,MAAM,CAAC,aAAa,IAAI,QAAQ,KAAK,MAAM,CAAC,QAAQ,EAAE;QACxD,MAAM,CAAC,aAAa,CAAC,CAAC;MACxB;MACA,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACvB;EAAC;IAAA,GAAA;IAAA,KAAA,EACD,SAAA,gBAAgB,YAAY,EAAqB;MAAA,IAAnB,UAAU,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,IAAI;MAC7C,IAAM,MAAM,GAAG,IAAI;MACnB,IAAM,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS;MAChD,IAAI,CAAC,YAAY,EAAE;QACjB;QACA,YAAY,GAAG,gBAAgB,KAAK,YAAY,GAAG,UAAU,GAAG,YAAY;MAC9E;MACA,IAAI,YAAY,KAAK,gBAAgB,IAAI,YAAY,KAAK,YAAY,IAAI,YAAY,KAAK,UAAU,EAAE;QACrG,OAAO,MAAM;MACf;MACA,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM,IAAA,MAAA,CAAI,MAAM,CAAC,MAAM,CAAC,sBAAsB,EAAA,MAAA,CAAG,gBAAgB,CAAE,CAAC;MACxF,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,IAAA,MAAA,CAAI,MAAM,CAAC,MAAM,CAAC,sBAAsB,EAAA,MAAA,CAAG,YAAY,CAAE,CAAC;MACjF,MAAM,CAAC,oBAAoB,CAAC,CAAC;MAC7B,MAAM,CAAC,MAAM,CAAC,SAAS,GAAG,YAAY;MACtC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,OAAO,EAAI;QAC/B,IAAI,YAAY,KAAK,UAAU,EAAE;UAC/B,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE;QAC1B,CAAC,MAAM;UACL,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE;QAC3B;MACF,CAAC,CAAC;MACF,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC;MAC9B,IAAI,UAAU,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;MAC/B,OAAO,MAAM;IACf;EAAC;IAAA,GAAA;IAAA,KAAA,EACD,SAAA,wBAAwB,SAAS,EAAE;MACjC,IAAM,MAAM,GAAG,IAAI;MACnB,IAAI,MAAM,CAAC,GAAG,IAAI,SAAS,KAAK,KAAK,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,SAAS,KAAK,KAAK,EAAE;MAC7E,MAAM,CAAC,GAAG,GAAG,SAAS,KAAK,KAAK;MAChC,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,KAAK,YAAY,IAAI,MAAM,CAAC,GAAG;MAC5E,IAAI,MAAM,CAAC,GAAG,EAAE;QACd,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,IAAA,MAAA,CAAI,MAAM,CAAC,MAAM,CAAC,sBAAsB,QAAK,CAAC;QACrE,MAAM,CAAC,EAAE,CAAC,GAAG,GAAG,KAAK;MACvB,CAAC,MAAM;QACL,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM,IAAA,MAAA,CAAI,MAAM,CAAC,MAAM,CAAC,sBAAsB,QAAK,CAAC;QACxE,MAAM,CAAC,EAAE,CAAC,GAAG,GAAG,KAAK;MACvB;MACA,MAAM,CAAC,MAAM,CAAC,CAAC;IACjB;EAAC;IAAA,GAAA;IAAA,KAAA,EACD,SAAA,MAAM,OAAO,EAAE;MACb,IAAM,MAAM,GAAG,IAAI;MACnB,IAAI,MAAM,CAAC,OAAO,EAAE,OAAO,IAAI;;MAE/B;MACA,IAAI,EAAE,GAAG,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,EAAE;MACpC,IAAI,OAAO,EAAE,KAAK,QAAQ,EAAE;QAC1B,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC;MACjC;MACA,IAAI,CAAC,EAAE,EAAE;QACP,OAAO,KAAK;MACd;MACA,EAAE,CAAC,MAAM,GAAG,MAAM;MAClB,IAAI,EAAE,CAAC,QAAQ,EAAE;QACf,MAAM,CAAC,SAAS,GAAG,IAAI;MACzB;MACA,IAAM,kBAAkB,GAAG,SAArB,kBAAkB,CAAA,EAAS;QAC/B,WAAA,MAAA,CAAW,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,IAAI,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;MAC3E,CAAC;MACD,IAAM,UAAU,GAAG,SAAb,UAAU,CAAA,EAAS;QACvB,IAAI,EAAE,IAAI,EAAE,CAAC,UAAU,IAAI,EAAE,CAAC,UAAU,CAAC,aAAa,EAAE;UACtD,IAAM,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC;UAC7D;UACA,OAAO,GAAG;QACZ;QACA,OAAO,IAAA,sBAAe,EAAC,EAAE,EAAE,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrD,CAAC;MACD;MACA,IAAI,SAAS,GAAG,UAAU,CAAC,CAAC;MAC5B,IAAI,CAAC,SAAS,IAAI,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE;QAC9C,SAAS,GAAG,IAAA,oBAAa,EAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC;QAC5D,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC;QACpB,IAAA,sBAAe,EAAC,EAAE,MAAA,MAAA,CAAM,MAAM,CAAC,MAAM,CAAC,UAAU,CAAE,CAAC,CAAC,OAAO,CAAC,UAAA,OAAO,EAAI;UACrE,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC;QAC3B,CAAC,CAAC;MACJ;MACA,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;QACpB,EAAE,EAAF,EAAE;QACF,SAAS,EAAT,SAAS;QACT,QAAQ,EAAE,MAAM,CAAC,SAAS,GAAG,EAAE,GAAG,SAAS;QAC3C,OAAO,EAAE,IAAI;QACb;QACA,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,KAAK,IAAI,IAAA,mBAAY,EAAC,EAAE,EAAE,WAAW,CAAC,KAAK,KAAK;QAC9E,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,SAAS,KAAK,YAAY,KAAK,EAAE,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,KAAK,IAAI,IAAA,mBAAY,EAAC,EAAE,EAAE,WAAW,CAAC,KAAK,KAAK,CAAC;QACrI,QAAQ,EAAE,IAAA,mBAAY,EAAC,SAAS,EAAE,SAAS,CAAC,KAAK;MACnD,CAAC,CAAC;MACF,OAAO,IAAI;IACb;EAAC;IAAA,GAAA;IAAA,KAAA,EACD,SAAA,KAAK,EAAE,EAAE;MACP,IAAM,MAAM,GAAG,IAAI;MACnB,IAAI,MAAM,CAAC,WAAW,EAAE,OAAO,MAAM;MACrC,IAAM,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC;MAChC,IAAI,OAAO,KAAK,KAAK,EAAE,OAAO,MAAM;MACpC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;;MAEzB;MACA,IAAI,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE;QAC7B,MAAM,CAAC,aAAa,CAAC,CAAC;MACxB;;MAEA;MACA,MAAM,CAAC,UAAU,CAAC,CAAC;;MAEnB;MACA,MAAM,CAAC,UAAU,CAAC,CAAC;;MAEnB;MACA,MAAM,CAAC,YAAY,CAAC,CAAC;MACrB,IAAI,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE;QAC/B,MAAM,CAAC,aAAa,CAAC,CAAC;MACxB;;MAEA;MACA,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,OAAO,EAAE;QAC9C,MAAM,CAAC,aAAa,CAAC,CAAC;MACxB;;MAEA;MACA,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE;QACzE,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE,KAAK,EAAE,IAAI,CAAC;MAC5H,CAAC,MAAM;QACL,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE,KAAK,EAAE,IAAI,CAAC;MAC9F;;MAEA;MACA,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE;QACtB,MAAM,CAAC,UAAU,CAAC,CAAC;MACrB;;MAEA;MACA,MAAM,CAAC,YAAY,CAAC,CAAC;MACrB,kBAAA,CAAI,MAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,EAAE,OAAO,CAAC,UAAA,OAAO,EAAI;QACrE,IAAI,OAAO,CAAC,QAAQ,EAAE;UACpB,IAAA,0CAAoB,EAAC,MAAM,EAAE,OAAO,CAAC;QACvC,CAAC,MAAM;UACL,OAAO,CAAC,gBAAgB,CAAC,MAAM,EAAE,UAAA,CAAC,EAAI;YACpC,IAAA,0CAAoB,EAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC;UACxC,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;MACF,IAAA,6BAAO,EAAC,MAAM,CAAC;;MAEf;MACA,MAAM,CAAC,WAAW,GAAG,IAAI;MACzB,IAAA,6BAAO,EAAC,MAAM,CAAC;;MAEf;MACA,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;MACnB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;MACxB,OAAO,MAAM;IACf;EAAC;IAAA,GAAA;IAAA,KAAA,EACD,SAAA,QAAA,EAAmD;MAAA,IAA3C,cAAc,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,IAAI;MAAA,IAAE,WAAW,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,IAAI;MAC/C,IAAM,MAAM,GAAG,IAAI;MACnB,IACE,MAAM,GAIJ,MAAM,CAJR,MAAM;QACN,EAAE,GAGA,MAAM,CAHR,EAAE;QACF,SAAS,GAEP,MAAM,CAFR,SAAS;QACT,MAAM,GACJ,MAAM,CADR,MAAM;MAER,IAAI,OAAO,MAAM,CAAC,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,SAAS,EAAE;QAC5D,OAAO,IAAI;MACb;MACA,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;;MAE5B;MACA,MAAM,CAAC,WAAW,GAAG,KAAK;;MAE1B;MACA,MAAM,CAAC,YAAY,CAAC,CAAC;;MAErB;MACA,IAAI,MAAM,CAAC,IAAI,EAAE;QACf,MAAM,CAAC,WAAW,CAAC,CAAC;MACtB;;MAEA;MACA,IAAI,WAAW,EAAE;QACf,MAAM,CAAC,aAAa,CAAC,CAAC;QACtB,EAAE,CAAC,eAAe,CAAC,OAAO,CAAC;QAC3B,SAAS,CAAC,eAAe,CAAC,OAAO,CAAC;QAClC,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE;UAC3B,MAAM,CAAC,OAAO,CAAC,UAAA,OAAO,EAAI;YACxB,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,iBAAiB,EAAE,MAAM,CAAC,gBAAgB,EAAE,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,cAAc,CAAC;YACzH,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC;YAChC,OAAO,CAAC,eAAe,CAAC,yBAAyB,CAAC;UACpD,CAAC,CAAC;QACJ;MACF;MACA,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;;MAEtB;MACA,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,UAAA,SAAS,EAAI;QACvD,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC;MACvB,CAAC,CAAC;MACF,IAAI,cAAc,KAAK,KAAK,EAAE;QAC5B,MAAM,CAAC,EAAE,CAAC,MAAM,GAAG,IAAI;QACvB,IAAA,kBAAW,EAAC,MAAM,CAAC;MACrB;MACA,MAAM,CAAC,SAAS,GAAG,IAAI;MACvB,OAAO,IAAI;IACb;EAAC;IAAA,GAAA;IAAA,KAAA,EACD,SAAA,eAAsB,WAAW,EAAE;MACjC,IAAA,aAAM,EAAC,gBAAgB,EAAE,WAAW,CAAC;IACvC;EAAC;IAAA,GAAA;IAAA,GAAA,EACD,SAAA,IAAA,EAA8B;MAC5B,OAAO,gBAAgB;IACzB;EAAC;IAAA,GAAA;IAAA,GAAA,EACD,SAAA,IAAA,EAAsB;MACpB,OAAO,oBAAQ;IACjB;EAAC;IAAA,GAAA;IAAA,KAAA,EACD,SAAA,cAAqB,GAAG,EAAE;MACxB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,EAAE,MAAM,CAAC,SAAS,CAAC,WAAW,GAAG,EAAE;MACpE,IAAM,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,WAAW;MAC5C,IAAI,OAAO,GAAG,KAAK,UAAU,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;QACzD,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;MACnB;IACF;EAAC;IAAA,GAAA;IAAA,KAAA,EACD,SAAA,IAAW,MAAM,EAAE;MACjB,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;QACzB,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC;UAAA,OAAI,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;QAAA,EAAC;QAC5C,OAAO,MAAM;MACf;MACA,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC;MAC5B,OAAO,MAAM;IACf;EAAC;EAAA,OAAA,MAAA;AAAA;AAEH,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,UAAA,cAAc,EAAI;EAChD,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,OAAO,CAAC,UAAA,WAAW,EAAI;IAC7D,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,UAAU,CAAC,cAAc,CAAC,CAAC,WAAW,CAAC;EACzE,CAAC,CAAC;AACJ,CAAC,CAAC;AACF,MAAM,CAAC,GAAG,CAAC,CAAC,kBAAM,EAAE,oBAAQ,CAAC,CAAC;AAAC,IAAA,QAAA,GAChB,MAAM;AAAA,OAAA,cAAA,QAAA;;;;;;;;;eCrlBN;EACb,IAAI,EAAE,IAAI;EACV,SAAS,EAAE,YAAY;EACvB,cAAc,EAAE,KAAK;EACrB,iBAAiB,EAAE,SAAS;EAC5B,YAAY,EAAE,CAAC;EACf,KAAK,EAAE,GAAG;EACV,OAAO,EAAE,KAAK;EACd,oBAAoB,EAAE,IAAI;EAC1B,cAAc,EAAE,IAAI;EACpB,MAAM,EAAE,KAAK;EACb,cAAc,EAAE,KAAK;EACrB,OAAO,EAAE,IAAI;EACb,iBAAiB,EAAE,uDAAuD;EAC1E;EACA,KAAK,EAAE,IAAI;EACX,MAAM,EAAE,IAAI;EACZ;EACA,8BAA8B,EAAE,KAAK;EACrC;EACA,SAAS,EAAE,IAAI;EACf,GAAG,EAAE,IAAI;EACT;EACA,kBAAkB,EAAE,KAAK;EACzB,kBAAkB,EAAE,EAAE;EACtB;EACA,UAAU,EAAE,KAAK;EACjB;EACA,cAAc,EAAE,KAAK;EACrB;EACA,gBAAgB,EAAE,KAAK;EACvB;EACA,MAAM,EAAE,OAAO;EACf;;EAEA;EACA,WAAW,EAAE,SAAS;EACtB,eAAe,EAAE,QAAQ;EACzB;EACA,YAAY,EAAE,CAAC;EACf,aAAa,EAAE,CAAC;EAChB,cAAc,EAAE,CAAC;EACjB,kBAAkB,EAAE,CAAC;EACrB,kBAAkB,EAAE,KAAK;EACzB,cAAc,EAAE,KAAK;EACrB,oBAAoB,EAAE,KAAK;EAC3B,kBAAkB,EAAE,CAAC;EACrB;EACA,iBAAiB,EAAE,CAAC;EACpB;EACA,mBAAmB,EAAE,IAAI;EACzB,wBAAwB,EAAE,KAAK;EAC/B;EACA,aAAa,EAAE,IAAI;EACnB;EACA,YAAY,EAAE,KAAK;EACnB;EACA,UAAU,EAAE,CAAC;EACb,UAAU,EAAE,EAAE;EACd,aAAa,EAAE,IAAI;EACnB,WAAW,EAAE,IAAI;EACjB,UAAU,EAAE,IAAI;EAChB,eAAe,EAAE,GAAG;EACpB,YAAY,EAAE,GAAG;EACjB,YAAY,EAAE,IAAI;EAClB,cAAc,EAAE,IAAI;EACpB,SAAS,EAAE,CAAC;EACZ,wBAAwB,EAAE,KAAK;EAC/B,wBAAwB,EAAE,IAAI;EAC9B,6BAA6B,EAAE,KAAK;EACpC,mBAAmB,EAAE,KAAK;EAC1B;EACA,iBAAiB,EAAE,IAAI;EACvB;EACA,UAAU,EAAE,IAAI;EAChB,eAAe,EAAE,IAAI;EACrB;EACA,mBAAmB,EAAE,KAAK;EAC1B;EACA,UAAU,EAAE,KAAK;EACjB;EACA,aAAa,EAAE,IAAI;EACnB,wBAAwB,EAAE,IAAI;EAC9B,mBAAmB,EAAE,KAAK;EAC1B;EACA,IAAI,EAAE,KAAK;EACX,YAAY,EAAE,IAAI;EAClB,mBAAmB,EAAE,IAAI;EACzB;EACA,MAAM,EAAE,KAAK;EACb;EACA,cAAc,EAAE,IAAI;EACpB,cAAc,EAAE,IAAI;EACpB,YAAY,EAAE,IAAI;EAClB;EACA,SAAS,EAAE,IAAI;EACf,cAAc,EAAE,mBAAmB;EACnC,iBAAiB,EAAE,IAAI;EACvB;EACA,gBAAgB,EAAE,IAAI;EACtB,uBAAuB,EAAE,EAAE;EAC3B;EACA,sBAAsB,EAAE,SAAS;EACjC;EACA,UAAU,EAAE,cAAc;EAC1B,gBAAgB,EAAE,qBAAqB;EACvC,iBAAiB,EAAE,sBAAsB;EACzC,cAAc,EAAE,mBAAmB;EACnC,cAAc,EAAE,mBAAmB;EACnC,YAAY,EAAE,gBAAgB;EAC9B,kBAAkB,EAAE,uBAAuB;EAC3C,mBAAmB,EAAE,CAAC;EACtB;EACA,kBAAkB,EAAE,IAAI;EACxB;EACA,YAAY,EAAE;AAChB,CAAC;AAAA,OAAA,cAAA,QAAA;;;;;;;;;;;;;;;ACpHD;AAAA,IAAA,QAAA,GAEe;EACb,EAAE,WAAA,GAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE;IAC5B,IAAM,IAAI,GAAG,IAAI;IACjB,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,SAAS,EAAE,OAAO,IAAI;IACxD,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE,OAAO,IAAI;IAC9C,IAAM,MAAM,GAAG,QAAQ,GAAG,SAAS,GAAG,MAAM;IAC5C,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAA,KAAK,EAAI;MACjC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,EAAE;MAClE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC;IAC9C,CAAC,CAAC;IACF,OAAO,IAAI;EACb,CAAC;EACD,IAAI,WAAA,KAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE;IAC9B,IAAM,IAAI,GAAG,IAAI;IACjB,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,SAAS,EAAE,OAAO,IAAI;IACxD,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE,OAAO,IAAI;IAC9C,SAAS,WAAW,CAAA,EAAU;MAC5B,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,WAAW,CAAC;MAC7B,IAAI,WAAW,CAAC,cAAc,EAAE;QAC9B,OAAO,WAAW,CAAC,cAAc;MACnC;MAAC,SAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAJqB,IAAI,OAAA,KAAA,CAAA,IAAA,GAAA,IAAA,MAAA,IAAA,GAAA,IAAA,EAAA,IAAA;QAAJ,IAAI,CAAA,IAAA,IAAA,SAAA,CAAA,IAAA;MAAA;MAK1B,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC;IAC3B;IACA,WAAW,CAAC,cAAc,GAAG,OAAO;IACpC,OAAO,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,WAAW,EAAE,QAAQ,CAAC;EAC/C,CAAC;EACD,KAAK,WAAA,MAAC,OAAO,EAAE,QAAQ,EAAE;IACvB,IAAM,IAAI,GAAG,IAAI;IACjB,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,SAAS,EAAE,OAAO,IAAI;IACxD,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE,OAAO,IAAI;IAC9C,IAAM,MAAM,GAAG,QAAQ,GAAG,SAAS,GAAG,MAAM;IAC5C,IAAI,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;MAChD,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC;IAC1C;IACA,OAAO,IAAI;EACb,CAAC;EACD,MAAM,WAAA,OAAC,OAAO,EAAE;IACd,IAAM,IAAI,GAAG,IAAI;IACjB,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,SAAS,EAAE,OAAO,IAAI;IACxD,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,OAAO,IAAI;IACzC,IAAM,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,OAAO,CAAC;IACtD,IAAI,KAAK,IAAI,CAAC,EAAE;MACd,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;IAC1C;IACA,OAAO,IAAI;EACb,CAAC;EACD,GAAG,WAAA,IAAC,MAAM,EAAE,OAAO,EAAE;IACnB,IAAM,IAAI,GAAG,IAAI;IACjB,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,SAAS,EAAE,OAAO,IAAI;IACxD,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,OAAO,IAAI;IACtC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAA,KAAK,EAAI;MACjC,IAAI,OAAO,OAAO,KAAK,WAAW,EAAE;QAClC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,EAAE;MAClC,CAAC,MAAM,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE;QACtC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,UAAC,YAAY,EAAE,KAAK,EAAK;UAC3D,IAAI,YAAY,KAAK,OAAO,IAAI,YAAY,CAAC,cAAc,IAAI,YAAY,CAAC,cAAc,KAAK,OAAO,EAAE;YACtG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;UAC9C;QACF,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;IACF,OAAO,IAAI;EACb,CAAC;EACD,IAAI,WAAA,KAAA,EAAU;IACZ,IAAM,IAAI,GAAG,IAAI;IACjB,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,SAAS,EAAE,OAAO,IAAI;IACxD,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,OAAO,IAAI;IACtC,IAAI,MAAM;IACV,IAAI,IAAI;IACR,IAAI,OAAO;IAAC,SAAA,KAAA,GAAA,SAAA,CAAA,MAAA,EANN,IAAI,OAAA,KAAA,CAAA,KAAA,GAAA,KAAA,MAAA,KAAA,GAAA,KAAA,EAAA,KAAA;MAAJ,IAAI,CAAA,KAAA,IAAA,SAAA,CAAA,KAAA;IAAA;IAOV,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;MACzD,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;MAChB,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;MACjC,OAAO,GAAG,IAAI;IAChB,CAAC,MAAM;MACL,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM;MACvB,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI;MACnB,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,IAAI;IACnC;IACA,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;IACrB,IAAM,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC;IACtE,WAAW,CAAC,OAAO,CAAC,UAAA,KAAK,EAAI;MAC3B,IAAI,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE;QAC7D,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,UAAA,YAAY,EAAI;UAC9C,YAAY,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,EAAA,MAAA,CAAA,kBAAA,CAAK,IAAI,EAAC,CAAC;QAC/C,CAAC,CAAC;MACJ;MACA,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE;QACvD,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,UAAA,YAAY,EAAI;UAClD,YAAY,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC;QACnC,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;IACF,OAAO,IAAI;EACb;AACF,CAAC;AAAA,OAAA,cAAA,QAAA;;;;;;;;;ACjGD,IAAA,UAAA,GAAA,OAAA;AACA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,YAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,SAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,QAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,SAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA;AAAiC,SAAA,uBAAA,GAAA,WAAA,GAAA,IAAA,GAAA,CAAA,UAAA,GAAA,GAAA,gBAAA,GAAA;AACjC,IAAI,kBAAkB,GAAG,KAAK;AAC9B,SAAS,kBAAkB,CAAA,EAAG,CAAC;AAC/B,IAAM,MAAM,GAAG,SAAT,MAAM,CAAI,MAAM,EAAE,MAAM,EAAK;EACjC,IAAM,QAAQ,GAAG,IAAA,sBAAW,EAAC,CAAC;EAC9B,IACE,MAAM,GAIJ,MAAM,CAJR,MAAM;IACN,EAAE,GAGA,MAAM,CAHR,EAAE;IACF,SAAS,GAEP,MAAM,CAFR,SAAS;IACT,MAAM,GACJ,MAAM,CADR,MAAM;EAER,IAAM,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM;EAC/B,IAAM,SAAS,GAAG,MAAM,KAAK,IAAI,GAAG,kBAAkB,GAAG,qBAAqB;EAC9E,IAAM,YAAY,GAAG,MAAM;;EAE3B;EACA,EAAE,CAAC,SAAS,CAAC,CAAC,aAAa,EAAE,MAAM,CAAC,YAAY,EAAE;IAChD,OAAO,EAAE;EACX,CAAC,CAAC;EACF,QAAQ,CAAC,SAAS,CAAC,CAAC,aAAa,EAAE,MAAM,CAAC,WAAW,EAAE;IACrD,OAAO,EAAE,KAAK;IACd,OAAO,EAAP;EACF,CAAC,CAAC;EACF,QAAQ,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE,MAAM,CAAC,UAAU,EAAE;IAClD,OAAO,EAAE;EACX,CAAC,CAAC;EACF,QAAQ,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,MAAM,CAAC,UAAU,EAAE;IACtD,OAAO,EAAE;EACX,CAAC,CAAC;EACF,QAAQ,CAAC,SAAS,CAAC,CAAC,YAAY,EAAE,MAAM,CAAC,UAAU,EAAE;IACnD,OAAO,EAAE;EACX,CAAC,CAAC;EACF,QAAQ,CAAC,SAAS,CAAC,CAAC,cAAc,EAAE,MAAM,CAAC,UAAU,EAAE;IACrD,OAAO,EAAE;EACX,CAAC,CAAC;;EAEF;EACA,IAAI,MAAM,CAAC,aAAa,IAAI,MAAM,CAAC,wBAAwB,EAAE;IAC3D,EAAE,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC;EAC9C;EACA,IAAI,MAAM,CAAC,OAAO,EAAE;IAClB,SAAS,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC;EACjD;;EAEA;EACA,IAAI,MAAM,CAAC,oBAAoB,EAAE;IAC/B,MAAM,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,OAAO,GAAG,yCAAyC,GAAG,uBAAuB,EAAE,oBAAQ,EAAE,IAAI,CAAC;EAC1I,CAAC,MAAM;IACL,MAAM,CAAC,YAAY,CAAC,CAAC,gBAAgB,EAAE,oBAAQ,EAAE,IAAI,CAAC;EACxD;;EAEA;EACA,EAAE,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE;IACnC,OAAO,EAAE;EACX,CAAC,CAAC;AACJ,CAAC;AACD,SAAS,YAAY,CAAA,EAAG;EACtB,IAAM,MAAM,GAAG,IAAI;EACnB,IAAM,QAAQ,GAAG,IAAA,sBAAW,EAAC,CAAC;EAC9B,IACE,MAAM,GACJ,MAAM,CADR,MAAM;EAER,MAAM,CAAC,YAAY,GAAG,wBAAY,CAAC,IAAI,CAAC,MAAM,CAAC;EAC/C,MAAM,CAAC,WAAW,GAAG,uBAAW,CAAC,IAAI,CAAC,MAAM,CAAC;EAC7C,MAAM,CAAC,UAAU,GAAG,sBAAU,CAAC,IAAI,CAAC,MAAM,CAAC;EAC3C,IAAI,MAAM,CAAC,OAAO,EAAE;IAClB,MAAM,CAAC,QAAQ,GAAG,oBAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;EACzC;EACA,MAAM,CAAC,OAAO,GAAG,mBAAO,CAAC,IAAI,CAAC,MAAM,CAAC;EACrC,MAAM,CAAC,MAAM,GAAG,kBAAM,CAAC,IAAI,CAAC,MAAM,CAAC;EACnC,IAAI,CAAC,kBAAkB,EAAE;IACvB,QAAQ,CAAC,gBAAgB,CAAC,YAAY,EAAE,kBAAkB,CAAC;IAC3D,kBAAkB,GAAG,IAAI;EAC3B;EACA,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC;AACtB;AACA,SAAS,YAAY,CAAA,EAAG;EACtB,IAAM,MAAM,GAAG,IAAI;EACnB,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC;AACvB;AAAC,IAAA,QAAA,GACc;EACb,YAAY,EAAZ,YAAY;EACZ,YAAY,EAAZ;AACF,CAAC;AAAA,OAAA,cAAA,QAAA;;;;;;;;;AC1Fc,SAAS,OAAO,CAAC,CAAC,EAAE;EACjC,IAAM,MAAM,GAAG,IAAI;EACnB,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;EACrB,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;IACtB,IAAI,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC;IACnD,IAAI,MAAM,CAAC,MAAM,CAAC,wBAAwB,IAAI,MAAM,CAAC,SAAS,EAAE;MAC9D,CAAC,CAAC,eAAe,CAAC,CAAC;MACnB,CAAC,CAAC,wBAAwB,CAAC,CAAC;IAC9B;EACF;AACF;;;;;;;;;ACVA,IAAA,qBAAA,GAAA,OAAA;AACe,SAAS,MAAM,CAAC,CAAC,EAAE;EAChC,IAAM,MAAM,GAAG,IAAI;EACnB,IAAA,0CAAoB,EAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC;EACtC,MAAM,CAAC,MAAM,CAAC,CAAC;AACjB;;;;;;;;;ACLe,SAAS,QAAQ,CAAA,EAAG;EACjC,IAAM,MAAM,GAAG,IAAI;EACnB,IACE,MAAM,GAEJ,MAAM,CAFR,MAAM;IACN,EAAE,GACA,MAAM,CADR,EAAE;EAEJ,IAAI,EAAE,IAAI,EAAE,CAAC,WAAW,KAAK,CAAC,EAAE;;EAEhC;EACA,IAAI,MAAM,CAAC,WAAW,EAAE;IACtB,MAAM,CAAC,aAAa,CAAC,CAAC;EACxB;;EAEA;EACA,IACE,cAAc,GAGZ,MAAM,CAHR,cAAc;IACd,cAAc,GAEZ,MAAM,CAFR,cAAc;IACd,QAAQ,GACN,MAAM,CADR,QAAQ;EAEV,IAAM,SAAS,GAAG,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO;;EAEjE;EACA,MAAM,CAAC,cAAc,GAAG,IAAI;EAC5B,MAAM,CAAC,cAAc,GAAG,IAAI;EAC5B,MAAM,CAAC,UAAU,CAAC,CAAC;EACnB,MAAM,CAAC,YAAY,CAAC,CAAC;EACrB,MAAM,CAAC,mBAAmB,CAAC,CAAC;EAC5B,IAAM,aAAa,GAAG,SAAS,IAAI,MAAM,CAAC,IAAI;EAC9C,IAAI,CAAC,MAAM,CAAC,aAAa,KAAK,MAAM,IAAI,MAAM,CAAC,aAAa,GAAG,CAAC,KAAK,MAAM,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,WAAW,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,IAAI,CAAC,aAAa,EAAE;IAC3J,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC;EAC1D,CAAC,MAAM;IACL,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,SAAS,EAAE;MACpC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC;IACtD,CAAC,MAAM;MACL,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC;IACpD;EACF;EACA,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,OAAO,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE;IACxE,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC;IAC3C,MAAM,CAAC,QAAQ,CAAC,aAAa,GAAG,UAAU,CAAC,YAAM;MAC/C,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,OAAO,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE;QACxE,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;MAC1B;IACF,CAAC,EAAE,GAAG,CAAC;EACT;EACA;EACA,MAAM,CAAC,cAAc,GAAG,cAAc;EACtC,MAAM,CAAC,cAAc,GAAG,cAAc;EACtC,IAAI,MAAM,CAAC,MAAM,CAAC,aAAa,IAAI,QAAQ,KAAK,MAAM,CAAC,QAAQ,EAAE;IAC/D,MAAM,CAAC,aAAa,CAAC,CAAC;EACxB;AACF;;;;;;;;;ACnDe,SAAS,QAAQ,CAAA,EAAG;EACjC,IAAM,MAAM,GAAG,IAAI;EACnB,IACE,SAAS,GAGP,MAAM,CAHR,SAAS;IACT,YAAY,GAEV,MAAM,CAFR,YAAY;IACZ,OAAO,GACL,MAAM,CADR,OAAO;EAET,IAAI,CAAC,OAAO,EAAE;EACd,MAAM,CAAC,iBAAiB,GAAG,MAAM,CAAC,SAAS;EAC3C,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;IACzB,MAAM,CAAC,SAAS,GAAG,CAAC,SAAS,CAAC,UAAU;EAC1C,CAAC,MAAM;IACL,MAAM,CAAC,SAAS,GAAG,CAAC,SAAS,CAAC,SAAS;EACzC;EACA;EACA,IAAI,MAAM,CAAC,SAAS,KAAK,CAAC,EAAE,MAAM,CAAC,SAAS,GAAG,CAAC;EAChD,MAAM,CAAC,iBAAiB,CAAC,CAAC;EAC1B,MAAM,CAAC,mBAAmB,CAAC,CAAC;EAC5B,IAAI,WAAW;EACf,IAAM,cAAc,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;EACpE,IAAI,cAAc,KAAK,CAAC,EAAE;IACxB,WAAW,GAAG,CAAC;EACjB,CAAC,MAAM;IACL,WAAW,GAAG,CAAC,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,cAAc;EAC3E;EACA,IAAI,WAAW,KAAK,MAAM,CAAC,QAAQ,EAAE;IACnC,MAAM,CAAC,cAAc,CAAC,YAAY,GAAG,CAAC,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;EAC5E;EACA,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,MAAM,CAAC,SAAS,EAAE,KAAK,CAAC;AACtD;;;;;;;;;AC7BA,IAAA,MAAA,GAAA,OAAA;AACe,SAAS,UAAU,CAAC,KAAK,EAAE;EACxC,IAAM,MAAM,GAAG,IAAI;EACnB,IAAM,IAAI,GAAG,MAAM,CAAC,eAAe;EACnC,IAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,UAAA,QAAQ;IAAA,OAAI,QAAQ,CAAC,SAAS,KAAK,KAAK,CAAC,SAAS;EAAA,EAAC;EAC/F,IAAI,YAAY,IAAI,CAAC,EAAE;IACrB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC;EACtC;EACA,IAAI,CAAC,eAAe,EAAE,YAAY,EAAE,cAAc,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;IACxE,IAAM,OAAO,GAAG,KAAK,CAAC,IAAI,KAAK,eAAe,KAAK,MAAM,CAAC,OAAO,CAAC,QAAQ,IAAI,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC;IACvG,IAAI,CAAC,OAAO,EAAE;MACZ;IACF;EACF;EACA,IACE,MAAM,GAKJ,MAAM,CALR,MAAM;IACN,OAAO,GAIL,MAAM,CAJR,OAAO;IACO,GAAG,GAGf,MAAM,CAHR,YAAY;IACZ,UAAU,GAER,MAAM,CAFR,UAAU;IACV,OAAO,GACL,MAAM,CADR,OAAO;EAET,IAAI,CAAC,OAAO,EAAE;EACd,IAAI,CAAC,MAAM,CAAC,aAAa,IAAI,KAAK,CAAC,WAAW,KAAK,OAAO,EAAE;EAC5D,IAAI,CAAC,GAAG,KAAK;EACb,IAAI,CAAC,CAAC,aAAa,EAAE,CAAC,GAAG,CAAC,CAAC,aAAa;EACxC,IAAI,IAAI,CAAC,mBAAmB,EAAE;IAC5B,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;EAC5B;EACA,IAAI,CAAC,mBAAmB,GAAG,KAAK;EAChC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;IACnB,IAAI,IAAI,CAAC,OAAO,IAAI,MAAM,CAAC,UAAU,EAAE;MACrC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC;IAC7B;IACA,IAAI,CAAC,OAAO,GAAG,KAAK;IACpB,IAAI,CAAC,WAAW,GAAG,KAAK;IACxB;EACF;EACA;EACA,IAAI,MAAM,CAAC,UAAU,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,KAAK,MAAM,CAAC,cAAc,KAAK,IAAI,IAAI,MAAM,CAAC,cAAc,KAAK,IAAI,CAAC,EAAE;IAC7H,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC;EAC7B;;EAEA;EACA,IAAM,YAAY,GAAG,IAAA,UAAG,EAAC,CAAC;EAC1B,IAAM,QAAQ,GAAG,YAAY,GAAG,IAAI,CAAC,cAAc;;EAEnD;EACA,IAAI,MAAM,CAAC,UAAU,EAAE;IACrB,IAAM,QAAQ,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,YAAY,IAAI,CAAC,CAAC,YAAY,CAAC,CAAC;IAC7D,MAAM,CAAC,kBAAkB,CAAC,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC;IAC9D,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;IAC3B,IAAI,QAAQ,GAAG,GAAG,IAAI,YAAY,GAAG,IAAI,CAAC,aAAa,GAAG,GAAG,EAAE;MAC7D,MAAM,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC,CAAC;IACzC;EACF;EACA,IAAI,CAAC,aAAa,GAAG,IAAA,UAAG,EAAC,CAAC;EAC1B,IAAA,eAAQ,EAAC,YAAM;IACb,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,UAAU,GAAG,IAAI;EACjD,CAAC,CAAC;EACF,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,OAAO,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,gBAAgB,KAAK,IAAI,CAAC,cAAc,EAAE;IACrI,IAAI,CAAC,SAAS,GAAG,KAAK;IACtB,IAAI,CAAC,OAAO,GAAG,KAAK;IACpB,IAAI,CAAC,WAAW,GAAG,KAAK;IACxB;EACF;EACA,IAAI,CAAC,SAAS,GAAG,KAAK;EACtB,IAAI,CAAC,OAAO,GAAG,KAAK;EACpB,IAAI,CAAC,WAAW,GAAG,KAAK;EACxB,IAAI,UAAU;EACd,IAAI,MAAM,CAAC,YAAY,EAAE;IACvB,UAAU,GAAG,GAAG,GAAG,MAAM,CAAC,SAAS,GAAG,CAAC,MAAM,CAAC,SAAS;EACzD,CAAC,MAAM;IACL,UAAU,GAAG,CAAC,IAAI,CAAC,gBAAgB;EACrC;EACA,IAAI,MAAM,CAAC,OAAO,EAAE;IAClB;EACF;EACA,IAAI,MAAM,CAAC,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE;IACrD,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC;MACzB,UAAU,EAAV;IACF,CAAC,CAAC;IACF;EACF;;EAEA;EACA,IAAI,SAAS,GAAG,CAAC;EACjB,IAAI,SAAS,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC;EACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,kBAAkB,GAAG,CAAC,GAAG,MAAM,CAAC,cAAc,EAAE;IACrG,IAAM,UAAS,GAAG,CAAC,GAAG,MAAM,CAAC,kBAAkB,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,cAAc;IAC/E,IAAI,OAAO,UAAU,CAAC,CAAC,GAAG,UAAS,CAAC,KAAK,WAAW,EAAE;MACpD,IAAI,UAAU,IAAI,UAAU,CAAC,CAAC,CAAC,IAAI,UAAU,GAAG,UAAU,CAAC,CAAC,GAAG,UAAS,CAAC,EAAE;QACzE,SAAS,GAAG,CAAC;QACb,SAAS,GAAG,UAAU,CAAC,CAAC,GAAG,UAAS,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;MACvD;IACF,CAAC,MAAM,IAAI,UAAU,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE;MACtC,SAAS,GAAG,CAAC;MACb,SAAS,GAAG,UAAU,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;IACnF;EACF;EACA,IAAI,gBAAgB,GAAG,IAAI;EAC3B,IAAI,eAAe,GAAG,IAAI;EAC1B,IAAI,MAAM,CAAC,MAAM,EAAE;IACjB,IAAI,MAAM,CAAC,WAAW,EAAE;MACtB,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC;IAC1J,CAAC,MAAM,IAAI,MAAM,CAAC,KAAK,EAAE;MACvB,gBAAgB,GAAG,CAAC;IACtB;EACF;EACA;EACA,IAAM,KAAK,GAAG,CAAC,UAAU,GAAG,UAAU,CAAC,SAAS,CAAC,IAAI,SAAS;EAC9D,IAAM,SAAS,GAAG,SAAS,GAAG,MAAM,CAAC,kBAAkB,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,cAAc;EACvF,IAAI,QAAQ,GAAG,MAAM,CAAC,YAAY,EAAE;IAClC;IACA,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;MACtB,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC;MAClC;IACF;IACA,IAAI,MAAM,CAAC,cAAc,KAAK,MAAM,EAAE;MACpC,IAAI,KAAK,IAAI,MAAM,CAAC,eAAe,EAAE,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,KAAK,GAAG,gBAAgB,GAAG,SAAS,GAAG,SAAS,CAAC,CAAC,KAAK,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC;IAC9J;IACA,IAAI,MAAM,CAAC,cAAc,KAAK,MAAM,EAAE;MACpC,IAAI,KAAK,GAAG,CAAC,GAAG,MAAM,CAAC,eAAe,EAAE;QACtC,MAAM,CAAC,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;MACvC,CAAC,MAAM,IAAI,eAAe,KAAK,IAAI,IAAI,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,eAAe,EAAE;QAC5F,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC;MACjC,CAAC,MAAM;QACL,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC;MAC3B;IACF;EACF,CAAC,MAAM;IACL;IACA,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;MACvB,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC;MAClC;IACF;IACA,IAAM,iBAAiB,GAAG,MAAM,CAAC,UAAU,KAAK,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC;IAC/H,IAAI,CAAC,iBAAiB,EAAE;MACtB,IAAI,MAAM,CAAC,cAAc,KAAK,MAAM,EAAE;QACpC,MAAM,CAAC,OAAO,CAAC,gBAAgB,KAAK,IAAI,GAAG,gBAAgB,GAAG,SAAS,GAAG,SAAS,CAAC;MACtF;MACA,IAAI,MAAM,CAAC,cAAc,KAAK,MAAM,EAAE;QACpC,MAAM,CAAC,OAAO,CAAC,eAAe,KAAK,IAAI,GAAG,eAAe,GAAG,SAAS,CAAC;MACxE;IACF,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE;MAChD,MAAM,CAAC,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;IACvC,CAAC,MAAM;MACL,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC;IAC3B;EACF;AACF;;;;;;;;;ACrJA,IAAA,UAAA,GAAA,OAAA;AACA,IAAA,MAAA,GAAA,OAAA;AACe,SAAS,WAAW,CAAC,KAAK,EAAE;EACzC,IAAM,QAAQ,GAAG,IAAA,sBAAW,EAAC,CAAC;EAC9B,IAAM,MAAM,GAAG,IAAI;EACnB,IAAM,IAAI,GAAG,MAAM,CAAC,eAAe;EACnC,IACE,MAAM,GAIJ,MAAM,CAJR,MAAM;IACN,OAAO,GAGL,MAAM,CAHR,OAAO;IACO,GAAG,GAEf,MAAM,CAFR,YAAY;IACZ,OAAO,GACL,MAAM,CADR,OAAO;EAET,IAAI,CAAC,OAAO,EAAE;EACd,IAAI,CAAC,MAAM,CAAC,aAAa,IAAI,KAAK,CAAC,WAAW,KAAK,OAAO,EAAE;EAC5D,IAAI,CAAC,GAAG,KAAK;EACb,IAAI,CAAC,CAAC,aAAa,EAAE,CAAC,GAAG,CAAC,CAAC,aAAa;EACxC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;IACnB,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,EAAE;MACxC,MAAM,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;IACrC;IACA;EACF;EACA,IAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,UAAA,QAAQ;IAAA,OAAI,QAAQ,CAAC,SAAS,KAAK,CAAC,CAAC,SAAS;EAAA,EAAC;EAC3F,IAAI,YAAY,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC;EACrD,IAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;EACjE,IAAM,KAAK,GAAG,WAAW,CAAC,KAAK;EAC/B,IAAM,KAAK,GAAG,WAAW,CAAC,KAAK;EAC/B,IAAI,CAAC,CAAC,uBAAuB,EAAE;IAC7B,OAAO,CAAC,MAAM,GAAG,KAAK;IACtB,OAAO,CAAC,MAAM,GAAG,KAAK;IACtB;EACF;EACA,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE;IAC1B,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE;MAC7C,MAAM,CAAC,UAAU,GAAG,KAAK;IAC3B;IACA,IAAI,IAAI,CAAC,SAAS,EAAE;MAClB,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE;QACrB,MAAM,EAAE,KAAK;QACb,MAAM,EAAE,KAAK;QACb,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC,QAAQ;QAC9B,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC,QAAQ;QAC9B,QAAQ,EAAE,KAAK;QACf,QAAQ,EAAE;MACZ,CAAC,CAAC;MACF,IAAI,CAAC,cAAc,GAAG,IAAA,UAAG,EAAC,CAAC;IAC7B;IACA;EACF;EACA,IAAI,MAAM,CAAC,mBAAmB,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;IAC9C,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE;MACvB;MACA,IAAI,KAAK,GAAG,OAAO,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,KAAK,GAAG,OAAO,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;QAC9I,IAAI,CAAC,SAAS,GAAG,KAAK;QACtB,IAAI,CAAC,OAAO,GAAG,KAAK;QACpB;MACF;IACF,CAAC,MAAM,IAAI,KAAK,GAAG,OAAO,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,KAAK,GAAG,OAAO,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;MACrJ;IACF;EACF;EACA,IAAI,QAAQ,CAAC,aAAa,EAAE;IAC1B,IAAI,CAAC,CAAC,MAAM,KAAK,QAAQ,CAAC,aAAa,IAAI,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE;MACnF,IAAI,CAAC,OAAO,GAAG,IAAI;MACnB,MAAM,CAAC,UAAU,GAAG,KAAK;MACzB;IACF;EACF;EACA,IAAI,IAAI,CAAC,mBAAmB,EAAE;IAC5B,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;EAC7B;EACA,IAAI,CAAC,CAAC,aAAa,IAAI,CAAC,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;EACnD,OAAO,CAAC,QAAQ,GAAG,KAAK;EACxB,OAAO,CAAC,QAAQ,GAAG,KAAK;EACxB,IAAM,KAAK,GAAG,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,MAAM;EAC/C,IAAM,KAAK,GAAG,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,MAAM;EAC/C,IAAI,MAAM,CAAC,MAAM,CAAC,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,IAAA,CAAA,GAAA,CAAA,KAAK,EAAI,CAAC,IAAA,IAAA,CAAA,GAAA,CAAG,KAAK,EAAI,CAAC,EAAC,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE;EAC7F,IAAI,OAAO,IAAI,CAAC,WAAW,KAAK,WAAW,EAAE;IAC3C,IAAI,UAAU;IACd,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,OAAO,CAAC,QAAQ,KAAK,OAAO,CAAC,MAAM,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,OAAO,CAAC,QAAQ,KAAK,OAAO,CAAC,MAAM,EAAE;MAC9H,IAAI,CAAC,WAAW,GAAG,KAAK;IAC1B,CAAC,MAAM;MACL;MACA,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI,EAAE,EAAE;QACvC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE;QACzE,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,UAAU,GAAG,MAAM,CAAC,UAAU,GAAG,EAAE,GAAG,UAAU,GAAG,MAAM,CAAC,UAAU;MACjH;IACF;EACF;EACA,IAAI,IAAI,CAAC,WAAW,EAAE;IACpB,MAAM,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;EACrC;EACA,IAAI,OAAO,IAAI,CAAC,WAAW,KAAK,WAAW,EAAE;IAC3C,IAAI,OAAO,CAAC,QAAQ,KAAK,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,QAAQ,KAAK,OAAO,CAAC,MAAM,EAAE;MAC9E,IAAI,CAAC,WAAW,GAAG,IAAI;IACzB;EACF;EACA,IAAI,IAAI,CAAC,WAAW,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;IAClH,IAAI,CAAC,SAAS,GAAG,KAAK;IACtB;EACF;EACA,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;IACrB;EACF;EACA,MAAM,CAAC,UAAU,GAAG,KAAK;EACzB,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,CAAC,CAAC,UAAU,EAAE;IACnC,CAAC,CAAC,cAAc,CAAC,CAAC;EACpB;EACA,IAAI,MAAM,CAAC,wBAAwB,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;IACrD,CAAC,CAAC,eAAe,CAAC,CAAC;EACrB;EACA,IAAI,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK;EAChD,IAAI,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,SAAS;EACrH,IAAI,MAAM,CAAC,cAAc,EAAE;IACzB,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACtC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;EACtD;EACA,OAAO,CAAC,IAAI,GAAG,IAAI;EACnB,IAAI,IAAI,MAAM,CAAC,UAAU;EACzB,IAAI,GAAG,EAAE;IACP,IAAI,GAAG,CAAC,IAAI;IACZ,WAAW,GAAG,CAAC,WAAW;EAC5B;EACA,IAAM,oBAAoB,GAAG,MAAM,CAAC,gBAAgB;EACpD,MAAM,CAAC,cAAc,GAAG,IAAI,GAAG,CAAC,GAAG,MAAM,GAAG,MAAM;EAClD,MAAM,CAAC,gBAAgB,GAAG,WAAW,GAAG,CAAC,GAAG,MAAM,GAAG,MAAM;EAC3D,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO;EACpD,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;IACjB,IAAI,MAAM,EAAE;MACV,MAAM,CAAC,OAAO,CAAC;QACb,SAAS,EAAE,MAAM,CAAC;MACpB,CAAC,CAAC;IACJ;IACA,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;IAC3C,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;IACvB,IAAI,MAAM,CAAC,SAAS,EAAE;MACpB,IAAM,GAAG,GAAG,IAAI,MAAM,CAAC,WAAW,CAAC,eAAe,EAAE;QAClD,OAAO,EAAE,IAAI;QACb,UAAU,EAAE;MACd,CAAC,CAAC;MACF,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,GAAG,CAAC;IACrC;IACA,IAAI,CAAC,mBAAmB,GAAG,KAAK;IAChC;IACA,IAAI,MAAM,CAAC,UAAU,KAAK,MAAM,CAAC,cAAc,KAAK,IAAI,IAAI,MAAM,CAAC,cAAc,KAAK,IAAI,CAAC,EAAE;MAC3F,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC;IAC5B;IACA,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;EACnC;EACA,IAAI,SAAS;EACb,IAAI,IAAI,CAAC,OAAO,IAAI,oBAAoB,KAAK,MAAM,CAAC,gBAAgB,IAAI,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;IACrG;IACA,MAAM,CAAC,OAAO,CAAC;MACb,SAAS,EAAE,MAAM,CAAC,cAAc;MAChC,YAAY,EAAE;IAChB,CAAC,CAAC;IACF,SAAS,GAAG,IAAI;EAClB;EACA,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;EAC5B,IAAI,CAAC,OAAO,GAAG,IAAI;EACnB,IAAI,CAAC,gBAAgB,GAAG,IAAI,GAAG,IAAI,CAAC,cAAc;EAClD,IAAI,mBAAmB,GAAG,IAAI;EAC9B,IAAI,eAAe,GAAG,MAAM,CAAC,eAAe;EAC5C,IAAI,MAAM,CAAC,mBAAmB,EAAE;IAC9B,eAAe,GAAG,CAAC;EACrB;EACA,IAAI,IAAI,GAAG,CAAC,EAAE;IACZ,IAAI,MAAM,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,gBAAgB,IAAI,MAAM,CAAC,cAAc,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,MAAM,CAAC,IAAI,GAAG,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE;MAC7I,MAAM,CAAC,OAAO,CAAC;QACb,SAAS,EAAE,MAAM;QACjB,YAAY,EAAE,IAAI;QAClB,gBAAgB,EAAE;MACpB,CAAC,CAAC;IACJ;IACA,IAAI,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;MACjD,mBAAmB,GAAG,KAAK;MAC3B,IAAI,MAAM,CAAC,UAAU,EAAE;QACrB,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,GAAA,IAAA,CAAA,GAAA,CAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,EAAK,eAAe;MAC9H;IACF;EACF,CAAC,MAAM,IAAI,IAAI,GAAG,CAAC,EAAE;IACnB,IAAI,MAAM,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,gBAAgB,IAAI,MAAM,CAAC,cAAc,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,MAAM,CAAC,IAAI,GAAG,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE;MAC7I,MAAM,CAAC,OAAO,CAAC;QACb,SAAS,EAAE,MAAM;QACjB,YAAY,EAAE,IAAI;QAClB,gBAAgB,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,aAAa,KAAK,MAAM,GAAG,MAAM,CAAC,oBAAoB,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;MAC7J,CAAC,CAAC;IACJ;IACA,IAAI,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;MACjD,mBAAmB,GAAG,KAAK;MAC3B,IAAI,MAAM,CAAC,UAAU,EAAE;QACrB,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,GAAA,IAAA,CAAA,GAAA,CAAI,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,EAAK,eAAe;MAC7H;IACF;EACF;EACA,IAAI,mBAAmB,EAAE;IACvB,CAAC,CAAC,uBAAuB,GAAG,IAAI;EAClC;;EAEA;EACA,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,MAAM,CAAC,cAAc,KAAK,MAAM,IAAI,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,EAAE;IAC7G,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc;EAC7C;EACA,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,MAAM,CAAC,cAAc,KAAK,MAAM,IAAI,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,EAAE;IAC7G,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc;EAC7C;EACA,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE;IACpD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc;EAC7C;;EAEA;EACA,IAAI,MAAM,CAAC,SAAS,GAAG,CAAC,EAAE;IACxB,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,SAAS,IAAI,IAAI,CAAC,kBAAkB,EAAE;MAChE,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;QAC5B,IAAI,CAAC,kBAAkB,GAAG,IAAI;QAC9B,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,QAAQ;QACjC,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,QAAQ;QACjC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc;QAC3C,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,MAAM;QAC5G;MACF;IACF,CAAC,MAAM;MACL,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc;MAC3C;IACF;EACF;EACA,IAAI,CAAC,MAAM,CAAC,YAAY,IAAI,MAAM,CAAC,OAAO,EAAE;;EAE5C;EACA,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,OAAO,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,mBAAmB,EAAE;IAC/F,MAAM,CAAC,iBAAiB,CAAC,CAAC;IAC1B,MAAM,CAAC,mBAAmB,CAAC,CAAC;EAC9B;EACA,IAAI,MAAM,CAAC,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,OAAO,IAAI,MAAM,CAAC,QAAQ,EAAE;IACxE,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;EAC/B;EACA;EACA,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAgB,CAAC;EAC5C;EACA,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC;AAC5C;;;;;;;;;AChPA,IAAA,UAAA,GAAA,OAAA;AACA,IAAA,MAAA,GAAA,OAAA;AAEA;AACA,SAAS,cAAc,CAAC,QAAQ,EAAe;EAAA,IAAb,IAAI,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,IAAI;EAC3C,SAAS,aAAa,CAAC,EAAE,EAAE;IACzB,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,IAAA,sBAAW,EAAC,CAAC,IAAI,EAAE,KAAK,IAAA,oBAAS,EAAC,CAAC,EAAE,OAAO,IAAI;IAClE,IAAI,EAAE,CAAC,YAAY,EAAE,EAAE,GAAG,EAAE,CAAC,YAAY;IACzC,IAAM,KAAK,GAAG,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC;IAClC,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,WAAW,EAAE;MAC7B,OAAO,IAAI;IACb;IACA,OAAO,KAAK,IAAI,aAAa,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC;EACtD;EACA,OAAO,aAAa,CAAC,IAAI,CAAC;AAC5B;AACe,SAAS,YAAY,CAAC,KAAK,EAAE;EAC1C,IAAM,MAAM,GAAG,IAAI;EACnB,IAAM,QAAQ,GAAG,IAAA,sBAAW,EAAC,CAAC;EAC9B,IAAM,MAAM,GAAG,IAAA,oBAAS,EAAC,CAAC;EAC1B,IAAM,IAAI,GAAG,MAAM,CAAC,eAAe;EACnC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;EACxB,IACE,MAAM,GAGJ,MAAM,CAHR,MAAM;IACN,OAAO,GAEL,MAAM,CAFR,OAAO;IACP,OAAO,GACL,MAAM,CADR,OAAO;EAET,IAAI,CAAC,OAAO,EAAE;EACd,IAAI,CAAC,MAAM,CAAC,aAAa,IAAI,KAAK,CAAC,WAAW,KAAK,OAAO,EAAE;EAC5D,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,8BAA8B,EAAE;IAC7D;EACF;EACA,IAAI,CAAC,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,IAAI,EAAE;IACtD,MAAM,CAAC,OAAO,CAAC,CAAC;EAClB;EACA,IAAI,CAAC,GAAG,KAAK;EACb,IAAI,CAAC,CAAC,aAAa,EAAE,CAAC,GAAG,CAAC,CAAC,aAAa;EACxC,IAAI,QAAQ,GAAG,CAAC,CAAC,MAAM;EACvB,IAAI,MAAM,CAAC,iBAAiB,KAAK,SAAS,EAAE;IAC1C,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;EAC5C;EACA,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,EAAE;EACnC,IAAI,QAAQ,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;EACnC,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,EAAE;;EAEpC;EACA,IAAM,oBAAoB,GAAG,CAAC,CAAC,MAAM,CAAC,cAAc,IAAI,MAAM,CAAC,cAAc,KAAK,EAAE;EACpF;EACA,IAAM,SAAS,GAAG,KAAK,CAAC,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC,CAAC,GAAG,KAAK,CAAC,IAAI;EACxE,IAAI,oBAAoB,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,UAAU,IAAI,SAAS,EAAE;IACxE,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC;EACzB;EACA,IAAM,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,OAAA,MAAA,CAAO,MAAM,CAAC,cAAc,CAAE;EAC3G,IAAM,cAAc,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC;;EAE1D;EACA,IAAI,MAAM,CAAC,SAAS,KAAK,cAAc,GAAG,cAAc,CAAC,iBAAiB,EAAE,QAAQ,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,EAAE;IAC5H,MAAM,CAAC,UAAU,GAAG,IAAI;IACxB;EACF;EACA,IAAI,MAAM,CAAC,YAAY,EAAE;IACvB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE;EAC9C;EACA,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC,KAAK;EAC1B,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC,KAAK;EAC1B,IAAM,MAAM,GAAG,OAAO,CAAC,QAAQ;EAC/B,IAAM,MAAM,GAAG,OAAO,CAAC,QAAQ;;EAE/B;;EAEA,IAAM,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,IAAI,MAAM,CAAC,qBAAqB;EACpF,IAAM,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,IAAI,MAAM,CAAC,qBAAqB;EACpF,IAAI,kBAAkB,KAAK,MAAM,IAAI,kBAAkB,IAAI,MAAM,IAAI,MAAM,CAAC,UAAU,GAAG,kBAAkB,CAAC,EAAE;IAC5G,IAAI,kBAAkB,KAAK,SAAS,EAAE;MACpC,KAAK,CAAC,cAAc,CAAC,CAAC;IACxB,CAAC,MAAM;MACL;IACF;EACF;EACA,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE;IAClB,SAAS,EAAE,IAAI;IACf,OAAO,EAAE,KAAK;IACd,mBAAmB,EAAE,IAAI;IACzB,WAAW,EAAE,SAAS;IACtB,WAAW,EAAE;EACf,CAAC,CAAC;EACF,OAAO,CAAC,MAAM,GAAG,MAAM;EACvB,OAAO,CAAC,MAAM,GAAG,MAAM;EACvB,IAAI,CAAC,cAAc,GAAG,IAAA,UAAG,EAAC,CAAC;EAC3B,MAAM,CAAC,UAAU,GAAG,IAAI;EACxB,MAAM,CAAC,UAAU,CAAC,CAAC;EACnB,MAAM,CAAC,cAAc,GAAG,SAAS;EACjC,IAAI,MAAM,CAAC,SAAS,GAAG,CAAC,EAAE,IAAI,CAAC,kBAAkB,GAAG,KAAK;EACzD,IAAI,cAAc,GAAG,IAAI;EACzB,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE;IAC5C,cAAc,GAAG,KAAK;IACtB,IAAI,QAAQ,CAAC,QAAQ,KAAK,QAAQ,EAAE;MAClC,IAAI,CAAC,SAAS,GAAG,KAAK;IACxB;EACF;EACA,IAAI,QAAQ,CAAC,aAAa,IAAI,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,QAAQ,CAAC,aAAa,KAAK,QAAQ,EAAE;IAC3H,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;EAC/B;EACA,IAAM,oBAAoB,GAAG,cAAc,IAAI,MAAM,CAAC,cAAc,IAAI,MAAM,CAAC,wBAAwB;EACvG,IAAI,CAAC,MAAM,CAAC,6BAA6B,IAAI,oBAAoB,KAAK,CAAC,QAAQ,CAAC,iBAAiB,EAAE;IACjG,CAAC,CAAC,cAAc,CAAC,CAAC;EACpB;EACA,IAAI,MAAM,CAAC,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,SAAS,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;IACtH,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;EAChC;EACA,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;AAC9B;;;;;;;;;AC/GA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,gBAAA,GAAA,sBAAA,CAAA,OAAA;AAAmD,SAAA,uBAAA,GAAA,WAAA,GAAA,IAAA,GAAA,CAAA,UAAA,GAAA,GAAA,gBAAA,GAAA;AAAA,IAAA,QAAA,GACpC;EACb,aAAa,EAAb,yBAAa;EACb,eAAe,EAAf;AACF,CAAC;AAAA,OAAA,cAAA,QAAA;;;;;;;;;ACLc,SAAS,aAAa,CAAC,MAAM,EAAE;EAC5C,IAAM,MAAM,GAAG,IAAI;EACnB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,IAAI,MAAM,CAAC,MAAM,CAAC,aAAa,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE;EAC7G,IAAM,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,iBAAiB,KAAK,WAAW,GAAG,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,SAAS;EACzF,IAAI,MAAM,CAAC,SAAS,EAAE;IACpB,MAAM,CAAC,mBAAmB,GAAG,IAAI;EACnC;EACA,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM;EACxB,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,GAAG,UAAU,GAAG,MAAM;EAC9C,IAAI,MAAM,CAAC,SAAS,EAAE;IACpB,qBAAqB,CAAC,YAAM;MAC1B,MAAM,CAAC,mBAAmB,GAAG,KAAK;IACpC,CAAC,CAAC;EACJ;AACF;;;;;;;;;ACde,SAAS,eAAe,CAAA,EAAG;EACxC,IAAM,MAAM,GAAG,IAAI;EACnB,IAAI,MAAM,CAAC,MAAM,CAAC,aAAa,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE;IAC3E;EACF;EACA,IAAI,MAAM,CAAC,SAAS,EAAE;IACpB,MAAM,CAAC,mBAAmB,GAAG,IAAI;EACnC;EACA,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,iBAAiB,KAAK,WAAW,GAAG,IAAI,GAAG,WAAW,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE;EAC9F,IAAI,MAAM,CAAC,SAAS,EAAE;IACpB,qBAAqB,CAAC,YAAM;MAC1B,MAAM,CAAC,mBAAmB,GAAG,KAAK;IACpC,CAAC,CAAC;EACJ;AACF;;;;;;;;;ACdA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,QAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,YAAA,GAAA,sBAAA,CAAA,OAAA;AAA2C,SAAA,uBAAA,GAAA,WAAA,GAAA,IAAA,GAAA,CAAA,UAAA,GAAA,GAAA,gBAAA,GAAA;AAAA,IAAA,QAAA,GAC5B;EACb,UAAU,EAAV,sBAAU;EACV,OAAO,EAAP,mBAAO;EACP,WAAW,EAAX;AACF,CAAC;AAAA,OAAA,cAAA,QAAA;;;;;;;;;ACPD,IAAA,MAAA,GAAA,OAAA;AACe,SAAS,UAAU,CAAC,cAAc,EAAE;EACjD,IAAM,MAAM,GAAG,IAAI;EACnB,IACE,MAAM,GAEJ,MAAM,CAFR,MAAM;IACN,QAAQ,GACN,MAAM,CADR,QAAQ;EAEV,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE;EACrE,IAAM,MAAM,GAAG,IAAA,sBAAe,EAAC,QAAQ,MAAA,MAAA,CAAM,MAAM,CAAC,UAAU,mBAAgB,CAAC;EAC/E,MAAM,CAAC,OAAO,CAAC,UAAC,EAAE,EAAE,KAAK,EAAK;IAC5B,EAAE,CAAC,YAAY,CAAC,yBAAyB,EAAE,KAAK,CAAC;EACnD,CAAC,CAAC;EACF,MAAM,CAAC,OAAO,CAAC;IACb,cAAc,EAAd,cAAc;IACd,SAAS,EAAE,MAAM,CAAC,cAAc,GAAG,SAAS,GAAG;EACjD,CAAC,CAAC;AACJ;;;;;;;;;AChBe,SAAS,WAAW,CAAA,EAAG;EACpC,IAAM,MAAM,GAAG,IAAI;EACnB,IACE,MAAM,GAEJ,MAAM,CAFR,MAAM;IACN,QAAQ,GACN,MAAM,CADR,QAAQ;EAEV,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE;EACrE,MAAM,CAAC,YAAY,CAAC,CAAC;EACrB,IAAM,cAAc,GAAG,EAAE;EACzB,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,OAAO,EAAI;IAC/B,IAAM,KAAK,GAAG,OAAO,OAAO,CAAC,gBAAgB,KAAK,WAAW,GAAG,OAAO,CAAC,YAAY,CAAC,yBAAyB,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,gBAAgB;IAC9I,cAAc,CAAC,KAAK,CAAC,GAAG,OAAO;EACjC,CAAC,CAAC;EACF,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,OAAO,EAAI;IAC/B,OAAO,CAAC,eAAe,CAAC,yBAAyB,CAAC;EACpD,CAAC,CAAC;EACF,cAAc,CAAC,OAAO,CAAC,UAAA,OAAO,EAAI;IAChC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC;EAC1B,CAAC,CAAC;EACF,MAAM,CAAC,YAAY,CAAC,CAAC;EACrB,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;AACrC;;;;;;;;;ACrBe,SAAS,OAAO,CAAA,EAQvB;EAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAJ,CAAC,CAAC;IAPJ,cAAc,GAAA,IAAA,CAAd,cAAc;IAAA,YAAA,GAAA,IAAA,CACd,OAAO;IAAP,OAAO,GAAA,YAAA,cAAG,IAAI,GAAA,YAAA;IACd,SAAS,GAAA,IAAA,CAAT,SAAS;IACT,YAAY,GAAA,IAAA,CAAZ,YAAY;IACZ,gBAAgB,GAAA,IAAA,CAAhB,gBAAgB;IAChB,YAAY,GAAA,IAAA,CAAZ,YAAY;IACZ,YAAY,GAAA,IAAA,CAAZ,YAAY;EAEZ,IAAM,MAAM,GAAG,IAAI;EACnB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE;EACzB,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;EAC5B,IACE,MAAM,GAKJ,MAAM,CALR,MAAM;IACN,cAAc,GAIZ,MAAM,CAJR,cAAc;IACd,cAAc,GAGZ,MAAM,CAHR,cAAc;IACd,QAAQ,GAEN,MAAM,CAFR,QAAQ;IACR,MAAM,GACJ,MAAM,CADR,MAAM;EAER,MAAM,CAAC,cAAc,GAAG,IAAI;EAC5B,MAAM,CAAC,cAAc,GAAG,IAAI;EAC5B,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE;IAC5C,IAAI,OAAO,EAAE;MACX,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,MAAM,CAAC,SAAS,KAAK,CAAC,EAAE;QACpD,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC;MAC9D,CAAC,MAAM,IAAI,MAAM,CAAC,cAAc,IAAI,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,aAAa,EAAE;QAC3E,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC;MACjF,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,KAAK,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;QAC1D,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC;MAC7D;IACF;IACA,MAAM,CAAC,cAAc,GAAG,cAAc;IACtC,MAAM,CAAC,cAAc,GAAG,cAAc;IACtC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IACtB;EACF;EACA,IAAM,aAAa,GAAG,MAAM,CAAC,aAAa,KAAK,MAAM,GAAG,MAAM,CAAC,oBAAoB,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;EACvI,IAAI,YAAY,GAAG,MAAM,CAAC,YAAY,IAAI,aAAa;EACvD,IAAI,YAAY,GAAG,MAAM,CAAC,cAAc,KAAK,CAAC,EAAE;IAC9C,YAAY,IAAI,MAAM,CAAC,cAAc,GAAG,YAAY,GAAG,MAAM,CAAC,cAAc;EAC9E;EACA,MAAM,CAAC,YAAY,GAAG,YAAY;EAClC,IAAM,oBAAoB,GAAG,EAAE;EAC/B,IAAM,mBAAmB,GAAG,EAAE;EAC9B,IAAI,WAAW,GAAG,MAAM,CAAC,WAAW;EACpC,IAAI,OAAO,gBAAgB,KAAK,WAAW,EAAE;IAC3C,gBAAgB,GAAG,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAA,EAAE;MAAA,OAAI,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,gBAAgB,CAAC;IAAA,EAAC,CAAC,CAAC,CAAC,CAAC;EACxH,CAAC,MAAM;IACL,WAAW,GAAG,gBAAgB;EAChC;EACA,IAAM,MAAM,GAAG,SAAS,KAAK,MAAM,IAAI,CAAC,SAAS;EACjD,IAAM,MAAM,GAAG,SAAS,KAAK,MAAM,IAAI,CAAC,SAAS;EACjD,IAAI,eAAe,GAAG,CAAC;EACvB,IAAI,cAAc,GAAG,CAAC;EACtB;EACA,IAAI,gBAAgB,GAAG,YAAY,EAAE;IACnC,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,GAAG,gBAAgB,EAAE,MAAM,CAAC,cAAc,CAAC;IAClF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,GAAG,gBAAgB,EAAE,CAAC,IAAI,CAAC,EAAE;MAC3D,IAAM,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM;MAC/D,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC;IACtD;EACF,CAAC,MAAM,IAAI,gBAAgB,CAAC,wBAAwB,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,YAAY,GAAG,CAAC,EAAE;IAC3F,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,YAAY,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,cAAc,CAAC;IAC9G,KAAK,IAAI,EAAC,GAAG,CAAC,EAAE,EAAC,GAAG,cAAc,EAAE,EAAC,IAAI,CAAC,EAAE;MAC1C,IAAM,MAAK,GAAG,EAAC,GAAG,IAAI,CAAC,KAAK,CAAC,EAAC,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM;MAC/D,mBAAmB,CAAC,IAAI,CAAC,MAAK,CAAC;IACjC;EACF;EACA,IAAI,MAAM,EAAE;IACV,oBAAoB,CAAC,OAAO,CAAC,UAAA,KAAK,EAAI;MACpC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACxC,CAAC,CAAC;EACJ;EACA,IAAI,MAAM,EAAE;IACV,mBAAmB,CAAC,OAAO,CAAC,UAAA,KAAK,EAAI;MACnC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACvC,CAAC,CAAC;EACJ;EACA,MAAM,CAAC,YAAY,CAAC,CAAC;EACrB,IAAI,MAAM,CAAC,aAAa,KAAK,MAAM,EAAE;IACnC,MAAM,CAAC,YAAY,CAAC,CAAC;EACvB;EACA,IAAI,MAAM,CAAC,mBAAmB,EAAE;IAC9B,MAAM,CAAC,kBAAkB,CAAC,CAAC;EAC7B;EACA,IAAI,OAAO,EAAE;IACX,IAAI,oBAAoB,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,EAAE;MAC7C,IAAI,OAAO,cAAc,KAAK,WAAW,EAAE;QACzC,IAAM,qBAAqB,GAAG,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC;QAC5D,IAAM,iBAAiB,GAAG,MAAM,CAAC,UAAU,CAAC,WAAW,GAAG,eAAe,CAAC;QAC1E,IAAM,IAAI,GAAG,iBAAiB,GAAG,qBAAqB;QACtD,IAAI,YAAY,EAAE;UAChB,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;QAC9C,CAAC,MAAM;UACL,MAAM,CAAC,OAAO,CAAC,WAAW,GAAG,eAAe,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC;UAC7D,IAAI,YAAY,EAAE;YAChB,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,QAAQ,GAAG,QAAQ,CAAC,IAAI,IAAI;UACrE;QACF;MACF,CAAC,MAAM;QACL,IAAI,YAAY,EAAE;UAChB,MAAM,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC;QACpD;MACF;IACF,CAAC,MAAM,IAAI,mBAAmB,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,EAAE;MACnD,IAAI,OAAO,cAAc,KAAK,WAAW,EAAE;QACzC,IAAM,sBAAqB,GAAG,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC;QAC5D,IAAM,kBAAiB,GAAG,MAAM,CAAC,UAAU,CAAC,WAAW,GAAG,cAAc,CAAC;QACzE,IAAM,KAAI,GAAG,kBAAiB,GAAG,sBAAqB;QACtD,IAAI,YAAY,EAAE;UAChB,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,SAAS,GAAG,KAAI,CAAC;QAC9C,CAAC,MAAM;UACL,MAAM,CAAC,OAAO,CAAC,WAAW,GAAG,cAAc,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC;UAC5D,IAAI,YAAY,EAAE;YAChB,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,QAAQ,GAAG,QAAQ,CAAC,IAAI,KAAI;UACrE;QACF;MACF,CAAC,MAAM;QACL,MAAM,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC;MACpD;IACF;EACF;EACA,MAAM,CAAC,cAAc,GAAG,cAAc;EACtC,MAAM,CAAC,cAAc,GAAG,cAAc;EACtC,IAAI,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,UAAU,CAAC,OAAO,IAAI,CAAC,YAAY,EAAE;IACnE,IAAM,UAAU,GAAG;MACjB,cAAc,EAAd,cAAc;MACd,OAAO,EAAE,KAAK;MACd,SAAS,EAAT,SAAS;MACT,YAAY,EAAZ,YAAY;MACZ,gBAAgB,EAAhB,gBAAgB;MAChB,YAAY,EAAE;IAChB,CAAC;IACD,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;MAC5C,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,UAAA,CAAC,EAAI;QACrC,IAAI,CAAC,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC;MAC1D,CAAC,CAAC;IACJ,CAAC,MAAM,IAAI,MAAM,CAAC,UAAU,CAAC,OAAO,YAAY,MAAM,CAAC,WAAW,IAAI,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE;MAC3G,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC;IAC/C;EACF;EACA,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;AACxB;;;;;;;;;AC9IA,IAAA,MAAA,GAAA,OAAA;AAA4C,SAAA,QAAA,GAAA,sCAAA,OAAA,wBAAA,MAAA,uBAAA,MAAA,CAAA,QAAA,aAAA,GAAA,kBAAA,GAAA,gBAAA,GAAA,WAAA,GAAA,yBAAA,MAAA,IAAA,GAAA,CAAA,WAAA,KAAA,MAAA,IAAA,GAAA,KAAA,MAAA,CAAA,SAAA,qBAAA,GAAA,KAAA,OAAA,CAAA,GAAA;AAC7B,SAAS,kBAAkB,CAAC,MAAM,EAAE,gBAAgB,EAAE;EACnE,OAAO,SAAS,YAAY,CAAA,EAAW;IAAA,IAAV,GAAG,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,CAAC,CAAC;IACnC,IAAM,eAAe,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3C,IAAM,YAAY,GAAG,GAAG,CAAC,eAAe,CAAC;IACzC,IAAI,OAAA,CAAO,YAAY,MAAK,QAAQ,IAAI,YAAY,KAAK,IAAI,EAAE;MAC7D,IAAA,aAAM,EAAC,gBAAgB,EAAE,GAAG,CAAC;MAC7B;IACF;IACA,IAAI,CAAC,YAAY,EAAE,YAAY,EAAE,WAAW,CAAC,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,eAAe,CAAC,KAAK,IAAI,EAAE;MAC/G,MAAM,CAAC,eAAe,CAAC,GAAG;QACxB,IAAI,EAAE;MACR,CAAC;IACH;IACA,IAAI,EAAE,eAAe,IAAI,MAAM,IAAI,SAAS,IAAI,YAAY,CAAC,EAAE;MAC7D,IAAA,aAAM,EAAC,gBAAgB,EAAE,GAAG,CAAC;MAC7B;IACF;IACA,IAAI,MAAM,CAAC,eAAe,CAAC,KAAK,IAAI,EAAE;MACpC,MAAM,CAAC,eAAe,CAAC,GAAG;QACxB,OAAO,EAAE;MACX,CAAC;IACH;IACA,IAAI,OAAA,CAAO,MAAM,CAAC,eAAe,CAAC,MAAK,QAAQ,IAAI,EAAE,SAAS,IAAI,MAAM,CAAC,eAAe,CAAC,CAAC,EAAE;MAC1F,MAAM,CAAC,eAAe,CAAC,CAAC,OAAO,GAAG,IAAI;IACxC;IACA,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,EAAE,MAAM,CAAC,eAAe,CAAC,GAAG;MACtD,OAAO,EAAE;IACX,CAAC;IACD,IAAA,aAAM,EAAC,gBAAgB,EAAE,GAAG,CAAC;EAC/B,CAAC;AACH;;;;;;;;;AC/BA,IAAA,UAAA,GAAA,OAAA;AACA,IAAA,MAAA,GAAA,OAAA;AACe,SAAS,QAAQ,CAAA,IAAA,EAK7B;EAAA,IAJD,MAAM,GAAA,IAAA,CAAN,MAAM;IACN,YAAY,GAAA,IAAA,CAAZ,YAAY;IACZ,EAAE,GAAA,IAAA,CAAF,EAAE;IACF,IAAI,GAAA,IAAA,CAAJ,IAAI;EAEJ,IAAM,SAAS,GAAG,EAAE;EACpB,IAAM,MAAM,GAAG,IAAA,oBAAS,EAAC,CAAC;EAC1B,IAAM,MAAM,GAAG,SAAT,MAAM,CAAI,MAAM,EAAmB;IAAA,IAAjB,OAAO,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,CAAC,CAAC;IAClC,IAAM,YAAY,GAAG,MAAM,CAAC,gBAAgB,IAAI,MAAM,CAAC,sBAAsB;IAC7E,IAAM,QAAQ,GAAG,IAAI,YAAY,CAAC,UAAA,SAAS,EAAI;MAC7C;MACA;MACA;MACA,IAAI,MAAM,CAAC,mBAAmB,EAAE;MAChC,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;QAC1B,IAAI,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;QACpC;MACF;MACA,IAAM,cAAc,GAAG,SAAS,cAAc,CAAA,EAAG;QAC/C,IAAI,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;MACtC,CAAC;MACD,IAAI,MAAM,CAAC,qBAAqB,EAAE;QAChC,MAAM,CAAC,qBAAqB,CAAC,cAAc,CAAC;MAC9C,CAAC,MAAM;QACL,MAAM,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC;MACtC;IACF,CAAC,CAAC;IACF,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE;MACvB,UAAU,EAAE,OAAO,OAAO,CAAC,UAAU,KAAK,WAAW,GAAG,IAAI,GAAG,OAAO,CAAC,UAAU;MACjF,SAAS,EAAE,OAAO,OAAO,CAAC,SAAS,KAAK,WAAW,GAAG,IAAI,GAAG,OAAO,CAAC,SAAS;MAC9E,aAAa,EAAE,OAAO,OAAO,CAAC,aAAa,KAAK,WAAW,GAAG,IAAI,GAAG,OAAO,CAAC;IAC/E,CAAC,CAAC;IACF,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;EAC1B,CAAC;EACD,IAAM,IAAI,GAAG,SAAP,IAAI,CAAA,EAAS;IACjB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE;IAC7B,IAAI,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE;MAChC,IAAM,gBAAgB,GAAG,IAAA,qBAAc,EAAC,MAAM,CAAC,EAAE,CAAC;MAClD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;QACnD,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;MAC7B;IACF;IACA;IACA,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE;MAChB,SAAS,EAAE,MAAM,CAAC,MAAM,CAAC;IAC3B,CAAC,CAAC;;IAEF;IACA,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE;MACvB,UAAU,EAAE;IACd,CAAC,CAAC;EACJ,CAAC;EACD,IAAM,OAAO,GAAG,SAAV,OAAO,CAAA,EAAS;IACpB,SAAS,CAAC,OAAO,CAAC,UAAA,QAAQ,EAAI;MAC5B,QAAQ,CAAC,UAAU,CAAC,CAAC;IACvB,CAAC,CAAC;IACF,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,CAAC;EACvC,CAAC;EACD,YAAY,CAAC;IACX,QAAQ,EAAE,KAAK;IACf,cAAc,EAAE,KAAK;IACrB,oBAAoB,EAAE;EACxB,CAAC,CAAC;EACF,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC;EAChB,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;AACxB;;;;;;;;;ACpEA,IAAA,UAAA,GAAA,OAAA;AACe,SAAS,MAAM,CAAA,IAAA,EAI3B;EAAA,IAHD,MAAM,GAAA,IAAA,CAAN,MAAM;IACN,EAAE,GAAA,IAAA,CAAF,EAAE;IACF,IAAI,GAAA,IAAA,CAAJ,IAAI;EAEJ,IAAM,MAAM,GAAG,IAAA,oBAAS,EAAC,CAAC;EAC1B,IAAI,QAAQ,GAAG,IAAI;EACnB,IAAI,cAAc,GAAG,IAAI;EACzB,IAAM,aAAa,GAAG,SAAhB,aAAa,CAAA,EAAS;IAC1B,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;IACxD,IAAI,CAAC,cAAc,CAAC;IACpB,IAAI,CAAC,QAAQ,CAAC;EAChB,CAAC;EACD,IAAM,cAAc,GAAG,SAAjB,cAAc,CAAA,EAAS;IAC3B,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;IACxD,QAAQ,GAAG,IAAI,cAAc,CAAC,UAAA,OAAO,EAAI;MACvC,cAAc,GAAG,MAAM,CAAC,qBAAqB,CAAC,YAAM;QAClD,IACE,KAAK,GAEH,MAAM,CAFR,KAAK;UACL,MAAM,GACJ,MAAM,CADR,MAAM;QAER,IAAI,QAAQ,GAAG,KAAK;QACpB,IAAI,SAAS,GAAG,MAAM;QACtB,OAAO,CAAC,OAAO,CAAC,UAAA,KAAA,EAIV;UAAA,IAHJ,cAAc,GAAA,KAAA,CAAd,cAAc;YACd,WAAW,GAAA,KAAA,CAAX,WAAW;YACX,MAAM,GAAA,KAAA,CAAN,MAAM;UAEN,IAAI,MAAM,IAAI,MAAM,KAAK,MAAM,CAAC,EAAE,EAAE;UACpC,QAAQ,GAAG,WAAW,GAAG,WAAW,CAAC,KAAK,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,cAAc,EAAE,UAAU;UAC7F,SAAS,GAAG,WAAW,GAAG,WAAW,CAAC,MAAM,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,cAAc,EAAE,SAAS;QAChG,CAAC,CAAC;QACF,IAAI,QAAQ,KAAK,KAAK,IAAI,SAAS,KAAK,MAAM,EAAE;UAC9C,aAAa,CAAC,CAAC;QACjB;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC;EAC7B,CAAC;EACD,IAAM,cAAc,GAAG,SAAjB,cAAc,CAAA,EAAS;IAC3B,IAAI,cAAc,EAAE;MAClB,MAAM,CAAC,oBAAoB,CAAC,cAAc,CAAC;IAC7C;IACA,IAAI,QAAQ,IAAI,QAAQ,CAAC,SAAS,IAAI,MAAM,CAAC,EAAE,EAAE;MAC/C,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC;MAC7B,QAAQ,GAAG,IAAI;IACjB;EACF,CAAC;EACD,IAAM,wBAAwB,GAAG,SAA3B,wBAAwB,CAAA,EAAS;IACrC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;IACxD,IAAI,CAAC,mBAAmB,CAAC;EAC3B,CAAC;EACD,EAAE,CAAC,MAAM,EAAE,YAAM;IACf,IAAI,MAAM,CAAC,MAAM,CAAC,cAAc,IAAI,OAAO,MAAM,CAAC,cAAc,KAAK,WAAW,EAAE;MAChF,cAAc,CAAC,CAAC;MAChB;IACF;IACA,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,aAAa,CAAC;IAChD,MAAM,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,wBAAwB,CAAC;EACxE,CAAC,CAAC;EACF,EAAE,CAAC,SAAS,EAAE,YAAM;IAClB,cAAc,CAAC,CAAC;IAChB,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,aAAa,CAAC;IACnD,MAAM,CAAC,mBAAmB,CAAC,mBAAmB,EAAE,wBAAwB,CAAC;EAC3E,CAAC,CAAC;AACJ;;;;;;;;;AClEA,IAAA,QAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,YAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,UAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,UAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,eAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,oBAAA,GAAA,sBAAA,CAAA,OAAA;AAA2D,SAAA,uBAAA,GAAA,WAAA,GAAA,IAAA,GAAA,CAAA,UAAA,GAAA,GAAA,gBAAA,GAAA;AAAA,IAAA,QAAA,GAC5C;EACb,OAAO,EAAP,mBAAO;EACP,WAAW,EAAX,uBAAW;EACX,SAAS,EAAT,qBAAS;EACT,SAAS,EAAT,qBAAS;EACT,UAAU,EAAV,sBAAU;EACV,cAAc,EAAd,0BAAc;EACd,mBAAmB,EAAnB;AACF,CAAC;AAAA,OAAA,cAAA,QAAA;;;;;;;;;ACfD;AACe,SAAS,SAAS,CAAA,EAA2D;EAAA,IAA1D,KAAK,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,IAAI,CAAC,MAAM,CAAC,KAAK;EAAA,IAAE,YAAY,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,IAAI;EAAA,IAAE,QAAQ,GAAA,SAAA,CAAA,MAAA,OAAA,SAAA,MAAA,SAAA;EACxF,IAAM,MAAM,GAAG,IAAI;EACnB,IACE,OAAO,GAGL,MAAM,CAHR,OAAO;IACP,MAAM,GAEJ,MAAM,CAFR,MAAM;IACN,SAAS,GACP,MAAM,CADR,SAAS;EAEX,IAAI,CAAC,OAAO,EAAE,OAAO,MAAM;EAC3B,IAAI,QAAQ,GAAG,MAAM,CAAC,cAAc;EACpC,IAAI,MAAM,CAAC,aAAa,KAAK,MAAM,IAAI,MAAM,CAAC,cAAc,KAAK,CAAC,IAAI,MAAM,CAAC,kBAAkB,EAAE;IAC/F,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,oBAAoB,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;EACtE;EACA,IAAM,SAAS,GAAG,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,kBAAkB,GAAG,CAAC,GAAG,QAAQ;EAC/E,IAAM,SAAS,GAAG,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO;EAC1D,IAAI,MAAM,CAAC,IAAI,EAAE;IACf,IAAI,SAAS,IAAI,CAAC,SAAS,IAAI,MAAM,CAAC,mBAAmB,EAAE,OAAO,KAAK;IACvE,MAAM,CAAC,OAAO,CAAC;MACb,SAAS,EAAE;IACb,CAAC,CAAC;IACF;IACA,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,SAAS,CAAC,UAAU;EAClD;EACA,IAAI,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,KAAK,EAAE;IACjC,OAAO,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE,QAAQ,CAAC;EACzD;EACA,OAAO,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,GAAG,SAAS,EAAE,KAAK,EAAE,YAAY,EAAE,QAAQ,CAAC;AACtF;;;;;;;;;AC3BA;AACe,SAAS,SAAS,CAAA,EAA2D;EAAA,IAA1D,KAAK,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,IAAI,CAAC,MAAM,CAAC,KAAK;EAAA,IAAE,YAAY,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,IAAI;EAAA,IAAE,QAAQ,GAAA,SAAA,CAAA,MAAA,OAAA,SAAA,MAAA,SAAA;EACxF,IAAM,MAAM,GAAG,IAAI;EACnB,IACE,MAAM,GAMJ,MAAM,CANR,MAAM;IACN,QAAQ,GAKN,MAAM,CALR,QAAQ;IACR,UAAU,GAIR,MAAM,CAJR,UAAU;IACV,YAAY,GAGV,MAAM,CAHR,YAAY;IACZ,OAAO,GAEL,MAAM,CAFR,OAAO;IACP,SAAS,GACP,MAAM,CADR,SAAS;EAEX,IAAI,CAAC,OAAO,EAAE,OAAO,MAAM;EAC3B,IAAM,SAAS,GAAG,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO;EAC1D,IAAI,MAAM,CAAC,IAAI,EAAE;IACf,IAAI,SAAS,IAAI,CAAC,SAAS,IAAI,MAAM,CAAC,mBAAmB,EAAE,OAAO,KAAK;IACvE,MAAM,CAAC,OAAO,CAAC;MACb,SAAS,EAAE;IACb,CAAC,CAAC;IACF;IACA,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,SAAS,CAAC,UAAU;EAClD;EACA,IAAM,SAAS,GAAG,YAAY,GAAG,MAAM,CAAC,SAAS,GAAG,CAAC,MAAM,CAAC,SAAS;EACrE,SAAS,SAAS,CAAC,GAAG,EAAE;IACtB,IAAI,GAAG,GAAG,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC9C,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;EACxB;EACA,IAAM,mBAAmB,GAAG,SAAS,CAAC,SAAS,CAAC;EAChD,IAAM,kBAAkB,GAAG,QAAQ,CAAC,GAAG,CAAC,UAAA,GAAG;IAAA,OAAI,SAAS,CAAC,GAAG,CAAC;EAAA,EAAC;EAC9D,IAAI,QAAQ,GAAG,QAAQ,CAAC,kBAAkB,CAAC,OAAO,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;EAC5E,IAAI,OAAO,QAAQ,KAAK,WAAW,IAAI,MAAM,CAAC,OAAO,EAAE;IACrD,IAAI,aAAa;IACjB,QAAQ,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,SAAS,EAAK;MACpC,IAAI,mBAAmB,IAAI,IAAI,EAAE;QAC/B;QACA,aAAa,GAAG,SAAS;MAC3B;IACF,CAAC,CAAC;IACF,IAAI,OAAO,aAAa,KAAK,WAAW,EAAE;MACxC,QAAQ,GAAG,QAAQ,CAAC,aAAa,GAAG,CAAC,GAAG,aAAa,GAAG,CAAC,GAAG,aAAa,CAAC;IAC5E;EACF;EACA,IAAI,SAAS,GAAG,CAAC;EACjB,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE;IACnC,SAAS,GAAG,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC;IACxC,IAAI,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,MAAM,CAAC,WAAW,GAAG,CAAC;IACrD,IAAI,MAAM,CAAC,aAAa,KAAK,MAAM,IAAI,MAAM,CAAC,cAAc,KAAK,CAAC,IAAI,MAAM,CAAC,kBAAkB,EAAE;MAC/F,SAAS,GAAG,SAAS,GAAG,MAAM,CAAC,oBAAoB,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC;MACzE,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC;IACpC;EACF;EACA,IAAI,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,WAAW,EAAE;IACvC,IAAM,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC;IACxJ,OAAO,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,EAAE,YAAY,EAAE,QAAQ,CAAC;EACjE;EACA,OAAO,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,EAAE,YAAY,EAAE,QAAQ,CAAC;AACjE;;;;;;;;;ACvDA;AACe,SAAS,UAAU,CAAA,EAA2D;EAAA,IAA1D,KAAK,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,IAAI,CAAC,MAAM,CAAC,KAAK;EAAA,IAAE,YAAY,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,IAAI;EAAA,IAAE,QAAQ,GAAA,SAAA,CAAA,MAAA,OAAA,SAAA,MAAA,SAAA;EACzF,IAAM,MAAM,GAAG,IAAI;EACnB,OAAO,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,KAAK,EAAE,YAAY,EAAE,QAAQ,CAAC;AAC1E;;;;;;;;;ACJA,IAAA,MAAA,GAAA,OAAA;AAA6D,SAAA,QAAA,GAAA,sCAAA,OAAA,wBAAA,MAAA,uBAAA,MAAA,CAAA,QAAA,aAAA,GAAA,kBAAA,GAAA,gBAAA,GAAA,WAAA,GAAA,yBAAA,MAAA,IAAA,GAAA,CAAA,WAAA,KAAA,MAAA,IAAA,GAAA,KAAA,MAAA,CAAA,SAAA,qBAAA,GAAA,KAAA,OAAA,CAAA,GAAA;AAAA,SAAA,gBAAA,GAAA,EAAA,GAAA,EAAA,KAAA,IAAA,GAAA,GAAA,cAAA,CAAA,GAAA,OAAA,GAAA,IAAA,GAAA,IAAA,MAAA,CAAA,cAAA,CAAA,GAAA,EAAA,GAAA,IAAA,KAAA,EAAA,KAAA,EAAA,UAAA,QAAA,YAAA,QAAA,QAAA,oBAAA,GAAA,CAAA,GAAA,IAAA,KAAA,WAAA,GAAA;AAAA,SAAA,eAAA,GAAA,QAAA,GAAA,GAAA,YAAA,CAAA,GAAA,oBAAA,OAAA,CAAA,GAAA,iBAAA,GAAA,GAAA,MAAA,CAAA,GAAA;AAAA,SAAA,aAAA,KAAA,EAAA,IAAA,QAAA,OAAA,CAAA,KAAA,kBAAA,KAAA,kBAAA,KAAA,MAAA,IAAA,GAAA,KAAA,CAAA,MAAA,CAAA,WAAA,OAAA,IAAA,KAAA,SAAA,QAAA,GAAA,GAAA,IAAA,CAAA,IAAA,CAAA,KAAA,EAAA,IAAA,oBAAA,OAAA,CAAA,GAAA,uBAAA,GAAA,YAAA,SAAA,4DAAA,IAAA,gBAAA,MAAA,GAAA,MAAA,EAAA,KAAA;AAC9C,SAAS,OAAO,CAAA,EAA+E;EAAA,IAA9E,KAAK,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,CAAC;EAAA,IAAE,KAAK,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,IAAI,CAAC,MAAM,CAAC,KAAK;EAAA,IAAE,YAAY,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,IAAI;EAAA,IAAE,QAAQ,GAAA,SAAA,CAAA,MAAA,OAAA,SAAA,MAAA,SAAA;EAAA,IAAE,OAAO,GAAA,SAAA,CAAA,MAAA,OAAA,SAAA,MAAA,SAAA;EAC1G,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;IAC7B,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC;EAC7B;EACA,IAAM,MAAM,GAAG,IAAI;EACnB,IAAI,UAAU,GAAG,KAAK;EACtB,IAAI,UAAU,GAAG,CAAC,EAAE,UAAU,GAAG,CAAC;EAClC,IACE,MAAM,GAQJ,MAAM,CARR,MAAM;IACN,QAAQ,GAON,MAAM,CAPR,QAAQ;IACR,UAAU,GAMR,MAAM,CANR,UAAU;IACV,aAAa,GAKX,MAAM,CALR,aAAa;IACb,WAAW,GAIT,MAAM,CAJR,WAAW;IACG,GAAG,GAGf,MAAM,CAHR,YAAY;IACZ,SAAS,GAEP,MAAM,CAFR,SAAS;IACT,OAAO,GACL,MAAM,CADR,OAAO;EAET,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,8BAA8B,IAAI,CAAC,OAAO,IAAI,CAAC,QAAQ,IAAI,CAAC,OAAO,EAAE;IAClG,OAAO,KAAK;EACd;EACA,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE,UAAU,CAAC;EACnE,IAAI,SAAS,GAAG,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,UAAU,GAAG,IAAI,IAAI,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC;EACrF,IAAI,SAAS,IAAI,QAAQ,CAAC,MAAM,EAAE,SAAS,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC;EACjE,IAAM,SAAS,GAAG,CAAC,QAAQ,CAAC,SAAS,CAAC;EACtC;EACA,IAAI,MAAM,CAAC,mBAAmB,EAAE;IAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;MAC7C,IAAM,mBAAmB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,GAAG,CAAC;MACxD,IAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;MACtD,IAAM,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;MAC9D,IAAI,OAAO,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,WAAW,EAAE;QAC5C,IAAI,mBAAmB,IAAI,cAAc,IAAI,mBAAmB,GAAG,kBAAkB,GAAG,CAAC,kBAAkB,GAAG,cAAc,IAAI,CAAC,EAAE;UACjI,UAAU,GAAG,CAAC;QAChB,CAAC,MAAM,IAAI,mBAAmB,IAAI,cAAc,IAAI,mBAAmB,GAAG,kBAAkB,EAAE;UAC5F,UAAU,GAAG,CAAC,GAAG,CAAC;QACpB;MACF,CAAC,MAAM,IAAI,mBAAmB,IAAI,cAAc,EAAE;QAChD,UAAU,GAAG,CAAC;MAChB;IACF;EACF;EACA;EACA,IAAI,MAAM,CAAC,WAAW,IAAI,UAAU,KAAK,WAAW,EAAE;IACpD,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,SAAS,GAAG,MAAM,CAAC,SAAS,IAAI,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;MAC/F,OAAO,KAAK;IACd;IACA,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,SAAS,GAAG,MAAM,CAAC,SAAS,IAAI,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;MAC/F,IAAI,CAAC,WAAW,IAAI,CAAC,MAAM,UAAU,EAAE;QACrC,OAAO,KAAK;MACd;IACF;EACF;EACA,IAAI,UAAU,MAAM,aAAa,IAAI,CAAC,CAAC,IAAI,YAAY,EAAE;IACvD,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC;EACvC;;EAEA;EACA,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC;EAChC,IAAI,SAAS;EACb,IAAI,UAAU,GAAG,WAAW,EAAE,SAAS,GAAG,MAAM,CAAC,KAAK,IAAI,UAAU,GAAG,WAAW,EAAE,SAAS,GAAG,MAAM,CAAC,KAAK,SAAS,GAAG,OAAO;;EAE/H;EACA,IAAI,GAAG,IAAI,CAAC,SAAS,KAAK,MAAM,CAAC,SAAS,IAAI,CAAC,GAAG,IAAI,SAAS,KAAK,MAAM,CAAC,SAAS,EAAE;IACpF,MAAM,CAAC,iBAAiB,CAAC,UAAU,CAAC;IACpC;IACA,IAAI,MAAM,CAAC,UAAU,EAAE;MACrB,MAAM,CAAC,gBAAgB,CAAC,CAAC;IAC3B;IACA,MAAM,CAAC,mBAAmB,CAAC,CAAC;IAC5B,IAAI,MAAM,CAAC,MAAM,KAAK,OAAO,EAAE;MAC7B,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC;IAChC;IACA,IAAI,SAAS,KAAK,OAAO,EAAE;MACzB,MAAM,CAAC,eAAe,CAAC,YAAY,EAAE,SAAS,CAAC;MAC/C,MAAM,CAAC,aAAa,CAAC,YAAY,EAAE,SAAS,CAAC;IAC/C;IACA,OAAO,KAAK;EACd;EACA,IAAI,MAAM,CAAC,OAAO,EAAE;IAClB,IAAM,GAAG,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;IACjC,IAAM,CAAC,GAAG,GAAG,GAAG,SAAS,GAAG,CAAC,SAAS;IACtC,IAAI,KAAK,KAAK,CAAC,EAAE;MACf,IAAM,SAAS,GAAG,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO;MACjE,IAAI,SAAS,EAAE;QACb,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,cAAc,GAAG,MAAM;QAC9C,MAAM,CAAC,iBAAiB,GAAG,IAAI;MACjC;MACA,IAAI,SAAS,IAAI,CAAC,MAAM,CAAC,yBAAyB,IAAI,MAAM,CAAC,MAAM,CAAC,YAAY,GAAG,CAAC,EAAE;QACpF,MAAM,CAAC,yBAAyB,GAAG,IAAI;QACvC,qBAAqB,CAAC,YAAM;UAC1B,SAAS,CAAC,GAAG,GAAG,YAAY,GAAG,WAAW,CAAC,GAAG,CAAC;QACjD,CAAC,CAAC;MACJ,CAAC,MAAM;QACL,SAAS,CAAC,GAAG,GAAG,YAAY,GAAG,WAAW,CAAC,GAAG,CAAC;MACjD;MACA,IAAI,SAAS,EAAE;QACb,qBAAqB,CAAC,YAAM;UAC1B,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,cAAc,GAAG,EAAE;UAC1C,MAAM,CAAC,iBAAiB,GAAG,KAAK;QAClC,CAAC,CAAC;MACJ;IACF,CAAC,MAAM;MAAA,IAAA,mBAAA;MACL,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE;QAChC,IAAA,2BAAoB,EAAC;UACnB,MAAM,EAAN,MAAM;UACN,cAAc,EAAE,CAAC;UACjB,IAAI,EAAE,GAAG,GAAG,MAAM,GAAG;QACvB,CAAC,CAAC;QACF,OAAO,IAAI;MACb;MACA,SAAS,CAAC,QAAQ,EAAA,mBAAA,OAAA,eAAA,CAAA,mBAAA,EACf,GAAG,GAAG,MAAM,GAAG,KAAK,EAAG,CAAC,GAAA,eAAA,CAAA,mBAAA,cACf,QAAQ,GAAA,mBAAA,CACnB,CAAC;IACJ;IACA,OAAO,IAAI;EACb;EACA,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC;EAC3B,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC;EAC9B,MAAM,CAAC,iBAAiB,CAAC,UAAU,CAAC;EACpC,MAAM,CAAC,mBAAmB,CAAC,CAAC;EAC5B,MAAM,CAAC,IAAI,CAAC,uBAAuB,EAAE,KAAK,EAAE,QAAQ,CAAC;EACrD,MAAM,CAAC,eAAe,CAAC,YAAY,EAAE,SAAS,CAAC;EAC/C,IAAI,KAAK,KAAK,CAAC,EAAE;IACf,MAAM,CAAC,aAAa,CAAC,YAAY,EAAE,SAAS,CAAC;EAC/C,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;IAC5B,MAAM,CAAC,SAAS,GAAG,IAAI;IACvB,IAAI,CAAC,MAAM,CAAC,6BAA6B,EAAE;MACzC,MAAM,CAAC,6BAA6B,GAAG,SAAS,aAAa,CAAC,CAAC,EAAE;QAC/D,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,EAAE;QACjC,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,EAAE;QACvB,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,eAAe,EAAE,MAAM,CAAC,6BAA6B,CAAC;QAC3F,MAAM,CAAC,6BAA6B,GAAG,IAAI;QAC3C,OAAO,MAAM,CAAC,6BAA6B;QAC3C,MAAM,CAAC,aAAa,CAAC,YAAY,EAAE,SAAS,CAAC;MAC/C,CAAC;IACH;IACA,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,eAAe,EAAE,MAAM,CAAC,6BAA6B,CAAC;EAC1F;EACA,OAAO,IAAI;AACb;;;;;;;;;AC7IA,IAAA,MAAA,GAAA,OAAA;AACe,SAAS,mBAAmB,CAAA,EAAG;EAC5C,IAAM,MAAM,GAAG,IAAI;EACnB,IACE,MAAM,GAEJ,MAAM,CAFR,MAAM;IACN,QAAQ,GACN,MAAM,CADR,QAAQ;EAEV,IAAM,aAAa,GAAG,MAAM,CAAC,aAAa,KAAK,MAAM,GAAG,MAAM,CAAC,oBAAoB,CAAC,CAAC,GAAG,MAAM,CAAC,aAAa;EAC5G,IAAI,YAAY,GAAG,MAAM,CAAC,YAAY;EACtC,IAAI,SAAS;EACb,IAAM,aAAa,GAAG,MAAM,CAAC,SAAS,wBAAA,MAAA,CAAwB,MAAM,CAAC,UAAU,CAAE;EACjF,IAAI,MAAM,CAAC,IAAI,EAAE;IACf,IAAI,MAAM,CAAC,SAAS,EAAE;IACtB,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,YAAY,CAAC,yBAAyB,CAAC,EAAE,EAAE,CAAC;IACrF,IAAI,MAAM,CAAC,cAAc,EAAE;MACzB,IAAI,YAAY,GAAG,MAAM,CAAC,YAAY,GAAG,aAAa,GAAG,CAAC,IAAI,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,YAAY,GAAG,aAAa,GAAG,CAAC,EAAE;QAC3I,MAAM,CAAC,OAAO,CAAC,CAAC;QAChB,YAAY,GAAG,MAAM,CAAC,aAAa,CAAC,IAAA,sBAAe,EAAC,QAAQ,KAAA,MAAA,CAAK,aAAa,iCAAA,MAAA,CAA6B,SAAS,QAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7H,IAAA,eAAQ,EAAC,YAAM;UACb,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC;QAC9B,CAAC,CAAC;MACJ,CAAC,MAAM;QACL,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC;MAC9B;IACF,CAAC,MAAM,IAAI,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,aAAa,EAAE;MAC9D,MAAM,CAAC,OAAO,CAAC,CAAC;MAChB,YAAY,GAAG,MAAM,CAAC,aAAa,CAAC,IAAA,sBAAe,EAAC,QAAQ,KAAA,MAAA,CAAK,aAAa,iCAAA,MAAA,CAA6B,SAAS,QAAI,CAAC,CAAC,CAAC,CAAC,CAAC;MAC7H,IAAA,eAAQ,EAAC,YAAM;QACb,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC;MAC9B,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC;IAC9B;EACF,CAAC,MAAM;IACL,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC;EAC9B;AACF;;;;;;;;;ACpCA;AACe,SAAS,cAAc,CAAA,EAA4E;EAAA,IAA3E,KAAK,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,IAAI,CAAC,MAAM,CAAC,KAAK;EAAA,IAAE,YAAY,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,IAAI;EAAA,IAAE,QAAQ,GAAA,SAAA,CAAA,MAAA,OAAA,SAAA,MAAA,SAAA;EAAA,IAAE,SAAS,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,GAAG;EAC9G,IAAM,MAAM,GAAG,IAAI;EACnB,IAAI,KAAK,GAAG,MAAM,CAAC,WAAW;EAC9B,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE,KAAK,CAAC;EAC9D,IAAM,SAAS,GAAG,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,IAAI,IAAI,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC;EAClF,IAAM,SAAS,GAAG,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,SAAS,GAAG,CAAC,MAAM,CAAC,SAAS;EAC5E,IAAI,SAAS,IAAI,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;IAC3C;IACA;IACA,IAAM,WAAW,GAAG,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC;IAC9C,IAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,SAAS,GAAG,CAAC,CAAC;IAC/C,IAAI,SAAS,GAAG,WAAW,GAAG,CAAC,QAAQ,GAAG,WAAW,IAAI,SAAS,EAAE;MAClE,KAAK,IAAI,MAAM,CAAC,MAAM,CAAC,cAAc;IACvC;EACF,CAAC,MAAM;IACL;IACA;IACA,IAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,SAAS,GAAG,CAAC,CAAC;IAC/C,IAAM,YAAW,GAAG,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC;IAC9C,IAAI,SAAS,GAAG,QAAQ,IAAI,CAAC,YAAW,GAAG,QAAQ,IAAI,SAAS,EAAE;MAChE,KAAK,IAAI,MAAM,CAAC,MAAM,CAAC,cAAc;IACvC;EACF;EACA,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;EAC1B,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;EACrD,OAAO,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,YAAY,EAAE,QAAQ,CAAC;AAC7D;;;;;;;;;AC3Be,SAAS,WAAW,CAAA,EAAsE;EAAA,IAArE,KAAK,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,CAAC;EAAA,IAAE,KAAK,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,IAAI,CAAC,MAAM,CAAC,KAAK;EAAA,IAAE,YAAY,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,IAAI;EAAA,IAAE,QAAQ,GAAA,SAAA,CAAA,MAAA,OAAA,SAAA,MAAA,SAAA;EACrG,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;IAC7B,IAAM,aAAa,GAAG,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC;IACzC,KAAK,GAAG,aAAa;EACvB;EACA,IAAM,MAAM,GAAG,IAAI;EACnB,IAAI,QAAQ,GAAG,KAAK;EACpB,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE;IACtB,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE;MACnD;MACA,QAAQ,GAAG,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,YAAY;IACnD,CAAC,MAAM;MACL,QAAQ,GAAG,MAAM,CAAC,mBAAmB,CAAC,QAAQ,CAAC;IACjD;EACF;EACA,OAAO,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,KAAK,EAAE,YAAY,EAAE,QAAQ,CAAC;AAChE;;;;;;;;;AChBA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,gBAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA;AAA+C,SAAA,uBAAA,GAAA,WAAA,GAAA,IAAA,GAAA,CAAA,UAAA,GAAA,GAAA,gBAAA,GAAA;AAAA,IAAA,QAAA,GAChC;EACb,aAAa,EAAb,yBAAa;EACb,eAAe,EAAf,2BAAe;EACf,aAAa,EAAb;AACF,CAAC;AAAA,OAAA,cAAA,QAAA;;;;;;;;;ACPc,SAAS,aAAa,CAAC,QAAQ,EAAE,YAAY,EAAE;EAC5D,IAAM,MAAM,GAAG,IAAI;EACnB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE;IAC1B,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,kBAAkB,MAAA,MAAA,CAAM,QAAQ,OAAI;EAC7D;EACA,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,QAAQ,EAAE,YAAY,CAAC;AACtD;;;;;;;;;ACNe,SAAS,cAAc,CAAA,IAAA,EAKnC;EAAA,IAJD,MAAM,GAAA,IAAA,CAAN,MAAM;IACN,YAAY,GAAA,IAAA,CAAZ,YAAY;IACZ,SAAS,GAAA,IAAA,CAAT,SAAS;IACT,IAAI,GAAA,IAAA,CAAJ,IAAI;EAEJ,IACE,WAAW,GAET,MAAM,CAFR,WAAW;IACX,aAAa,GACX,MAAM,CADR,aAAa;EAEf,IAAI,GAAG,GAAG,SAAS;EACnB,IAAI,CAAC,GAAG,EAAE;IACR,IAAI,WAAW,GAAG,aAAa,EAAE,GAAG,GAAG,MAAM,CAAC,KAAK,IAAI,WAAW,GAAG,aAAa,EAAE,GAAG,GAAG,MAAM,CAAC,KAAK,GAAG,GAAG,OAAO;EACrH;EACA,MAAM,CAAC,IAAI,cAAA,MAAA,CAAc,IAAI,CAAE,CAAC;EAChC,IAAI,YAAY,IAAI,WAAW,KAAK,aAAa,EAAE;IACjD,IAAI,GAAG,KAAK,OAAO,EAAE;MACnB,MAAM,CAAC,IAAI,wBAAA,MAAA,CAAwB,IAAI,CAAE,CAAC;MAC1C;IACF;IACA,MAAM,CAAC,IAAI,yBAAA,MAAA,CAAyB,IAAI,CAAE,CAAC;IAC3C,IAAI,GAAG,KAAK,MAAM,EAAE;MAClB,MAAM,CAAC,IAAI,uBAAA,MAAA,CAAuB,IAAI,CAAE,CAAC;IAC3C,CAAC,MAAM;MACL,MAAM,CAAC,IAAI,uBAAA,MAAA,CAAuB,IAAI,CAAE,CAAC;IAC3C;EACF;AACF;;;;;;;;;AC3BA,IAAA,eAAA,GAAA,sBAAA,CAAA,OAAA;AAAiD,SAAA,uBAAA,GAAA,WAAA,GAAA,IAAA,GAAA,CAAA,UAAA,GAAA,GAAA,gBAAA,GAAA;AAClC,SAAS,aAAa,CAAA,EAAiC;EAAA,IAAhC,YAAY,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,IAAI;EAAA,IAAE,SAAS,GAAA,SAAA,CAAA,MAAA,OAAA,SAAA,MAAA,SAAA;EAClE,IAAM,MAAM,GAAG,IAAI;EACnB,IACE,MAAM,GACJ,MAAM,CADR,MAAM;EAER,MAAM,CAAC,SAAS,GAAG,KAAK;EACxB,IAAI,MAAM,CAAC,OAAO,EAAE;EACpB,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;EACvB,IAAA,0BAAc,EAAC;IACb,MAAM,EAAN,MAAM;IACN,YAAY,EAAZ,YAAY;IACZ,SAAS,EAAT,SAAS;IACT,IAAI,EAAE;EACR,CAAC,CAAC;AACJ;;;;;;;;;ACfA,IAAA,eAAA,GAAA,sBAAA,CAAA,OAAA;AAAiD,SAAA,uBAAA,GAAA,WAAA,GAAA,IAAA,GAAA,CAAA,UAAA,GAAA,GAAA,gBAAA,GAAA;AAClC,SAAS,eAAe,CAAA,EAAiC;EAAA,IAAhC,YAAY,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,IAAI;EAAA,IAAE,SAAS,GAAA,SAAA,CAAA,MAAA,OAAA,SAAA,MAAA,SAAA;EACpE,IAAM,MAAM,GAAG,IAAI;EACnB,IACE,MAAM,GACJ,MAAM,CADR,MAAM;EAER,IAAI,MAAM,CAAC,OAAO,EAAE;EACpB,IAAI,MAAM,CAAC,UAAU,EAAE;IACrB,MAAM,CAAC,gBAAgB,CAAC,CAAC;EAC3B;EACA,IAAA,0BAAc,EAAC;IACb,MAAM,EAAN,MAAM;IACN,YAAY,EAAZ,YAAY;IACZ,SAAS,EAAT,SAAS;IACT,IAAI,EAAE;EACR,CAAC,CAAC;AACJ;;;;;;;;;AChBA,IAAA,MAAA,GAAA,OAAA;AACe,SAAS,kBAAkB,CAAA,EAAyC;EAAA,IAAxC,IAAI,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;EAC/E,IAAM,MAAM,GAAG,IAAI;EACnB,IACE,MAAM,GAIJ,MAAM,CAJR,MAAM;IACQ,GAAG,GAGf,MAAM,CAHR,YAAY;IACZ,SAAS,GAEP,MAAM,CAFR,SAAS;IACT,SAAS,GACP,MAAM,CADR,SAAS;EAEX,IAAI,MAAM,CAAC,gBAAgB,EAAE;IAC3B,OAAO,GAAG,GAAG,CAAC,SAAS,GAAG,SAAS;EACrC;EACA,IAAI,MAAM,CAAC,OAAO,EAAE;IAClB,OAAO,SAAS;EAClB;EACA,IAAI,gBAAgB,GAAG,IAAA,mBAAY,EAAC,SAAS,EAAE,IAAI,CAAC;EACpD,gBAAgB,IAAI,MAAM,CAAC,qBAAqB,CAAC,CAAC;EAClD,IAAI,GAAG,EAAE,gBAAgB,GAAG,CAAC,gBAAgB;EAC7C,OAAO,gBAAgB,IAAI,CAAC;AAC9B;;;;;;;;;ACnBA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,YAAA,GAAA,sBAAA,CAAA,OAAA;AAA2C,SAAA,uBAAA,GAAA,WAAA,GAAA,IAAA,GAAA,CAAA,UAAA,GAAA,GAAA,gBAAA,GAAA;AAAA,IAAA,QAAA,GAC5B;EACb,YAAY,EAAZ,wBAAY;EACZ,YAAY,EAAZ,wBAAY;EACZ,YAAY,EAAZ,wBAAY;EACZ,YAAY,EAAZ,wBAAY;EACZ,WAAW,EAAX;AACF,CAAC;AAAA,OAAA,cAAA,QAAA;;;;;;;;;ACXc,SAAS,YAAY,CAAA,EAAG;EACrC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;AACjD;;;;;;;;;ACFe,SAAS,YAAY,CAAA,EAAG;EACrC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC1B;;;;;;;;;ACFe,SAAS,YAAY,CAAC,SAAS,EAAE,YAAY,EAAE;EAC5D,IAAM,MAAM,GAAG,IAAI;EACnB,IACgB,GAAG,GAIf,MAAM,CAJR,YAAY;IACZ,MAAM,GAGJ,MAAM,CAHR,MAAM;IACN,SAAS,GAEP,MAAM,CAFR,SAAS;IACT,QAAQ,GACN,MAAM,CADR,QAAQ;EAEV,IAAI,CAAC,GAAG,CAAC;EACT,IAAI,CAAC,GAAG,CAAC;EACT,IAAM,CAAC,GAAG,CAAC;EACX,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;IACzB,CAAC,GAAG,GAAG,GAAG,CAAC,SAAS,GAAG,SAAS;EAClC,CAAC,MAAM;IACL,CAAC,GAAG,SAAS;EACf;EACA,IAAI,MAAM,CAAC,YAAY,EAAE;IACvB,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IACjB,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;EACnB;EACA,MAAM,CAAC,iBAAiB,GAAG,MAAM,CAAC,SAAS;EAC3C,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;EAChD,IAAI,MAAM,CAAC,OAAO,EAAE;IAClB,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,YAAY,GAAG,WAAW,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EACjG,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE;IACnC,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;MACzB,CAAC,IAAI,MAAM,CAAC,qBAAqB,CAAC,CAAC;IACrC,CAAC,MAAM;MACL,CAAC,IAAI,MAAM,CAAC,qBAAqB,CAAC,CAAC;IACrC;IACA,SAAS,CAAC,KAAK,CAAC,SAAS,kBAAA,MAAA,CAAkB,CAAC,UAAA,MAAA,CAAO,CAAC,UAAA,MAAA,CAAO,CAAC,QAAK;EACnE;;EAEA;EACA,IAAI,WAAW;EACf,IAAM,cAAc,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;EACpE,IAAI,cAAc,KAAK,CAAC,EAAE;IACxB,WAAW,GAAG,CAAC;EACjB,CAAC,MAAM;IACL,WAAW,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,cAAc;EACpE;EACA,IAAI,WAAW,KAAK,QAAQ,EAAE;IAC5B,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC;EAClC;EACA,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC;AAC7D;;;;;;;;;AC7CA,IAAA,MAAA,GAAA,OAAA;AAA6D,SAAA,QAAA,GAAA,sCAAA,OAAA,wBAAA,MAAA,uBAAA,MAAA,CAAA,QAAA,aAAA,GAAA,kBAAA,GAAA,gBAAA,GAAA,WAAA,GAAA,yBAAA,MAAA,IAAA,GAAA,CAAA,WAAA,KAAA,MAAA,IAAA,GAAA,KAAA,MAAA,CAAA,SAAA,qBAAA,GAAA,KAAA,OAAA,CAAA,GAAA;AAAA,SAAA,gBAAA,GAAA,EAAA,GAAA,EAAA,KAAA,IAAA,GAAA,GAAA,cAAA,CAAA,GAAA,OAAA,GAAA,IAAA,GAAA,IAAA,MAAA,CAAA,cAAA,CAAA,GAAA,EAAA,GAAA,IAAA,KAAA,EAAA,KAAA,EAAA,UAAA,QAAA,YAAA,QAAA,QAAA,oBAAA,GAAA,CAAA,GAAA,IAAA,KAAA,WAAA,GAAA;AAAA,SAAA,eAAA,GAAA,QAAA,GAAA,GAAA,YAAA,CAAA,GAAA,oBAAA,OAAA,CAAA,GAAA,iBAAA,GAAA,GAAA,MAAA,CAAA,GAAA;AAAA,SAAA,aAAA,KAAA,EAAA,IAAA,QAAA,OAAA,CAAA,KAAA,kBAAA,KAAA,kBAAA,KAAA,MAAA,IAAA,GAAA,KAAA,CAAA,MAAA,CAAA,WAAA,OAAA,IAAA,KAAA,SAAA,QAAA,GAAA,GAAA,IAAA,CAAA,IAAA,CAAA,KAAA,EAAA,IAAA,oBAAA,OAAA,CAAA,GAAA,uBAAA,GAAA,YAAA,SAAA,4DAAA,IAAA,gBAAA,MAAA,GAAA,MAAA,EAAA,KAAA;AAC9C,SAAS,WAAW,CAAA,EAAkG;EAAA,IAAjG,SAAS,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,CAAC;EAAA,IAAE,KAAK,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,IAAI,CAAC,MAAM,CAAC,KAAK;EAAA,IAAE,YAAY,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,IAAI;EAAA,IAAE,eAAe,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,IAAI;EAAA,IAAE,QAAQ,GAAA,SAAA,CAAA,MAAA,OAAA,SAAA,MAAA,SAAA;EACjI,IAAM,MAAM,GAAG,IAAI;EACnB,IACE,MAAM,GAEJ,MAAM,CAFR,MAAM;IACN,SAAS,GACP,MAAM,CADR,SAAS;EAEX,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,8BAA8B,EAAE;IAC7D,OAAO,KAAK;EACd;EACA,IAAM,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;EAC1C,IAAM,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;EAC1C,IAAI,YAAY;EAChB,IAAI,eAAe,IAAI,SAAS,GAAG,YAAY,EAAE,YAAY,GAAG,YAAY,CAAC,KAAK,IAAI,eAAe,IAAI,SAAS,GAAG,YAAY,EAAE,YAAY,GAAG,YAAY,CAAC,KAAK,YAAY,GAAG,SAAS;;EAE5L;EACA,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC;EACnC,IAAI,MAAM,CAAC,OAAO,EAAE;IAClB,IAAM,GAAG,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;IACjC,IAAI,KAAK,KAAK,CAAC,EAAE;MACf,SAAS,CAAC,GAAG,GAAG,YAAY,GAAG,WAAW,CAAC,GAAG,CAAC,YAAY;IAC7D,CAAC,MAAM;MAAA,IAAA,mBAAA;MACL,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE;QAChC,IAAA,2BAAoB,EAAC;UACnB,MAAM,EAAN,MAAM;UACN,cAAc,EAAE,CAAC,YAAY;UAC7B,IAAI,EAAE,GAAG,GAAG,MAAM,GAAG;QACvB,CAAC,CAAC;QACF,OAAO,IAAI;MACb;MACA,SAAS,CAAC,QAAQ,EAAA,mBAAA,OAAA,eAAA,CAAA,mBAAA,EACf,GAAG,GAAG,MAAM,GAAG,KAAK,EAAG,CAAC,YAAY,GAAA,eAAA,CAAA,mBAAA,cAC3B,QAAQ,GAAA,mBAAA,CACnB,CAAC;IACJ;IACA,OAAO,IAAI;EACb;EACA,IAAI,KAAK,KAAK,CAAC,EAAE;IACf,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;IACvB,MAAM,CAAC,YAAY,CAAC,YAAY,CAAC;IACjC,IAAI,YAAY,EAAE;MAChB,MAAM,CAAC,IAAI,CAAC,uBAAuB,EAAE,KAAK,EAAE,QAAQ,CAAC;MACrD,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;IAC9B;EACF,CAAC,MAAM;IACL,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC;IAC3B,MAAM,CAAC,YAAY,CAAC,YAAY,CAAC;IACjC,IAAI,YAAY,EAAE;MAChB,MAAM,CAAC,IAAI,CAAC,uBAAuB,EAAE,KAAK,EAAE,QAAQ,CAAC;MACrD,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC;IAChC;IACA,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;MACrB,MAAM,CAAC,SAAS,GAAG,IAAI;MACvB,IAAI,CAAC,MAAM,CAAC,iCAAiC,EAAE;QAC7C,MAAM,CAAC,iCAAiC,GAAG,SAAS,aAAa,CAAC,CAAC,EAAE;UACnE,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,EAAE;UACjC,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,EAAE;UACvB,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,eAAe,EAAE,MAAM,CAAC,iCAAiC,CAAC;UAC/F,MAAM,CAAC,iCAAiC,GAAG,IAAI;UAC/C,OAAO,MAAM,CAAC,iCAAiC;UAC/C,IAAI,YAAY,EAAE;YAChB,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;UAC9B;QACF,CAAC;MACH;MACA,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,eAAe,EAAE,MAAM,CAAC,iCAAiC,CAAC;IAC9F;EACF;EACA,OAAO,IAAI;AACb;;;;;;;;;ACrEA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,iBAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,mBAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,qBAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,eAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,oBAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,kBAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,mBAAA,GAAA,sBAAA,CAAA,OAAA;AAAyD,SAAA,uBAAA,GAAA,WAAA,GAAA,IAAA,GAAA,CAAA,UAAA,GAAA,GAAA,gBAAA,GAAA;AAAA,IAAA,QAAA,GAC1C;EACb,UAAU,EAAV,sBAAU;EACV,YAAY,EAAZ,wBAAY;EACZ,gBAAgB,EAAhB,4BAAgB;EAChB,kBAAkB,EAAlB,8BAAkB;EAClB,oBAAoB,EAApB,gCAAoB;EACpB,cAAc,EAAd,0BAAc;EACd,mBAAmB,EAAnB,+BAAmB;EACnB,iBAAiB,EAAjB,6BAAiB;EACjB,kBAAkB,EAAlB;AACF,CAAC;AAAA,OAAA,cAAA,QAAA;;;;;;;;;;ACnBD,IAAA,qBAAA,GAAA,OAAA;AACO,SAAS,yBAAyB,CAAC,MAAM,EAAE;EAChD,IACE,UAAU,GAER,MAAM,CAFR,UAAU;IACV,MAAM,GACJ,MAAM,CADR,MAAM;EAER,IAAM,SAAS,GAAG,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,SAAS,GAAG,CAAC,MAAM,CAAC,SAAS;EAC5E,IAAI,WAAW;EACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IAC7C,IAAI,OAAO,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,WAAW,EAAE;MAC5C,IAAI,SAAS,IAAI,UAAU,CAAC,CAAC,CAAC,IAAI,SAAS,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;QACzG,WAAW,GAAG,CAAC;MACjB,CAAC,MAAM,IAAI,SAAS,IAAI,UAAU,CAAC,CAAC,CAAC,IAAI,SAAS,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;QACtE,WAAW,GAAG,CAAC,GAAG,CAAC;MACrB;IACF,CAAC,MAAM,IAAI,SAAS,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE;MACrC,WAAW,GAAG,CAAC;IACjB;EACF;EACA;EACA,IAAI,MAAM,CAAC,mBAAmB,EAAE;IAC9B,IAAI,WAAW,GAAG,CAAC,IAAI,OAAO,WAAW,KAAK,WAAW,EAAE,WAAW,GAAG,CAAC;EAC5E;EACA,OAAO,WAAW;AACpB;AACe,SAAS,iBAAiB,CAAC,cAAc,EAAE;EACxD,IAAM,MAAM,GAAG,IAAI;EACnB,IAAM,SAAS,GAAG,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,SAAS,GAAG,CAAC,MAAM,CAAC,SAAS;EAC5E,IACE,QAAQ,GAKN,MAAM,CALR,QAAQ;IACR,MAAM,GAIJ,MAAM,CAJR,MAAM;IACO,aAAa,GAGxB,MAAM,CAHR,WAAW;IACA,iBAAiB,GAE1B,MAAM,CAFR,SAAS;IACE,iBAAiB,GAC1B,MAAM,CADR,SAAS;EAEX,IAAI,WAAW,GAAG,cAAc;EAChC,IAAI,SAAS;EACb,IAAM,mBAAmB,GAAG,SAAtB,mBAAmB,CAAG,MAAM,EAAI;IACpC,IAAI,SAAS,GAAG,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,YAAY;IACpD,IAAI,SAAS,GAAG,CAAC,EAAE;MACjB,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,SAAS;IACtD;IACA,IAAI,SAAS,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE;MAC7C,SAAS,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM;IAC3C;IACA,OAAO,SAAS;EAClB,CAAC;EACD,IAAI,OAAO,WAAW,KAAK,WAAW,EAAE;IACtC,WAAW,GAAG,yBAAyB,CAAC,MAAM,CAAC;EACjD;EACA,IAAI,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;IACpC,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC;EACzC,CAAC,MAAM;IACL,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,kBAAkB,EAAE,WAAW,CAAC;IAC7D,SAAS,GAAG,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,GAAG,IAAI,IAAI,MAAM,CAAC,cAAc,CAAC;EAC7E;EACA,IAAI,SAAS,IAAI,QAAQ,CAAC,MAAM,EAAE,SAAS,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC;EACjE,IAAI,WAAW,KAAK,aAAa,EAAE;IACjC,IAAI,SAAS,KAAK,iBAAiB,EAAE;MACnC,MAAM,CAAC,SAAS,GAAG,SAAS;MAC5B,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC;IAChC;IACA,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE;MACzE,MAAM,CAAC,SAAS,GAAG,mBAAmB,CAAC,WAAW,CAAC;IACrD;IACA;EACF;EACA;EACA,IAAI,SAAS;EACb,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,IAAI,MAAM,CAAC,IAAI,EAAE;IAC3D,SAAS,GAAG,mBAAmB,CAAC,WAAW,CAAC;EAC9C,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE;IACrC,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,YAAY,CAAC,yBAAyB,CAAC,IAAI,WAAW,EAAE,EAAE,CAAC;EAC7G,CAAC,MAAM;IACL,SAAS,GAAG,WAAW;EACzB;EACA,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;IACpB,iBAAiB,EAAjB,iBAAiB;IACjB,SAAS,EAAT,SAAS;IACT,iBAAiB,EAAjB,iBAAiB;IACjB,SAAS,EAAT,SAAS;IACT,aAAa,EAAb,aAAa;IACb,WAAW,EAAX;EACF,CAAC,CAAC;EACF,IAAI,MAAM,CAAC,WAAW,EAAE;IACtB,IAAA,6BAAO,EAAC,MAAM,CAAC;EACjB;EACA,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC;EAChC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC;EAC9B,IAAI,iBAAiB,KAAK,SAAS,EAAE;IACnC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC;EAChC;EACA,IAAI,MAAM,CAAC,WAAW,IAAI,MAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE;IAC1D,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;EAC5B;AACF;;;;;;;;;AC/Fe,SAAS,gBAAgB,CAAC,KAAK,EAAE;EAC9C,IAAM,MAAM,GAAG,IAAI;EACnB,IAAM,YAAY,GAAG,EAAE;EACvB,IAAM,SAAS,GAAG,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO;EACjE,IAAI,SAAS,GAAG,CAAC;EACjB,IAAI,CAAC;EACL,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;IAC7B,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC;EAC7B,CAAC,MAAM,IAAI,KAAK,KAAK,IAAI,EAAE;IACzB,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;EAC3C;EACA,IAAM,eAAe,GAAG,SAAlB,eAAe,CAAG,KAAK,EAAI;IAC/B,IAAI,SAAS,EAAE;MACb,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;IACzD;IACA,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;EAC7B,CAAC;EACD;EACA,IAAI,MAAM,CAAC,MAAM,CAAC,aAAa,KAAK,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,aAAa,GAAG,CAAC,EAAE;IAC7E,IAAI,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE;MAChC,CAAC,MAAM,CAAC,aAAa,IAAI,EAAE,EAAE,OAAO,CAAC,UAAA,KAAK,EAAI;QAC5C,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC;MAC1B,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;QAC9D,IAAM,KAAK,GAAG,MAAM,CAAC,WAAW,GAAG,CAAC;QACpC,IAAI,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,SAAS,EAAE;QAChD,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;MAC3C;IACF;EACF,CAAC,MAAM;IACL,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;EACxD;;EAEA;EACA,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IAC3C,IAAI,OAAO,YAAY,CAAC,CAAC,CAAC,KAAK,WAAW,EAAE;MAC1C,IAAM,MAAM,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY;MAC3C,SAAS,GAAG,MAAM,GAAG,SAAS,GAAG,MAAM,GAAG,SAAS;IACrD;EACF;;EAEA;EACA,IAAI,SAAS,IAAI,SAAS,KAAK,CAAC,EAAE,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,MAAA,MAAA,CAAM,SAAS,OAAI;AACpF;;;;;;;;;AC5Ce,SAAS,kBAAkB,CAAC,CAAC,EAAE;EAC5C,IAAM,MAAM,GAAG,IAAI;EACnB,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM;EAC5B,IAAM,KAAK,GAAG,CAAC,CAAC,OAAO,KAAA,MAAA,CAAK,MAAM,CAAC,UAAU,mBAAgB,CAAC;EAC9D,IAAI,UAAU,GAAG,KAAK;EACtB,IAAI,UAAU;EACd,IAAI,KAAK,EAAE;IACT,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;MAChD,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE;QAC9B,UAAU,GAAG,IAAI;QACjB,UAAU,GAAG,CAAC;QACd;MACF;IACF;EACF;EACA,IAAI,KAAK,IAAI,UAAU,EAAE;IACvB,MAAM,CAAC,YAAY,GAAG,KAAK;IAC3B,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE;MACnD,MAAM,CAAC,YAAY,GAAG,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC,yBAAyB,CAAC,EAAE,EAAE,CAAC;IACnF,CAAC,MAAM;MACL,MAAM,CAAC,YAAY,GAAG,UAAU;IAClC;EACF,CAAC,MAAM;IACL,MAAM,CAAC,YAAY,GAAG,SAAS;IAC/B,MAAM,CAAC,YAAY,GAAG,SAAS;IAC/B;EACF;EACA,IAAI,MAAM,CAAC,mBAAmB,IAAI,MAAM,CAAC,YAAY,KAAK,SAAS,IAAI,MAAM,CAAC,YAAY,KAAK,MAAM,CAAC,WAAW,EAAE;IACjH,MAAM,CAAC,mBAAmB,CAAC,CAAC;EAC9B;AACF;;;;;;;;;AC9Be,SAAS,cAAc,CAAC,SAAS,EAAE;EAChD,IAAM,MAAM,GAAG,IAAI;EACnB,IAAI,OAAO,SAAS,KAAK,WAAW,EAAE;IACpC,IAAM,UAAU,GAAG,MAAM,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC;IAC/C;IACA,SAAS,GAAG,MAAM,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,GAAG,UAAU,IAAI,CAAC;EAC9E;EACA,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM;EAC5B,IAAM,cAAc,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;EACpE,IACE,QAAQ,GAIN,MAAM,CAJR,QAAQ;IACR,WAAW,GAGT,MAAM,CAHR,WAAW;IACX,KAAK,GAEH,MAAM,CAFR,KAAK;IACL,YAAY,GACV,MAAM,CADR,YAAY;EAEd,IAAM,YAAY,GAAG,WAAW;EAChC,IAAM,MAAM,GAAG,KAAK;EACpB,IAAI,cAAc,KAAK,CAAC,EAAE;IACxB,QAAQ,GAAG,CAAC;IACZ,WAAW,GAAG,IAAI;IAClB,KAAK,GAAG,IAAI;EACd,CAAC,MAAM;IACL,QAAQ,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,cAAc;IAC/D,IAAM,kBAAkB,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC;IAC1E,IAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC;IACpE,WAAW,GAAG,kBAAkB,IAAI,QAAQ,IAAI,CAAC;IACjD,KAAK,GAAG,YAAY,IAAI,QAAQ,IAAI,CAAC;IACrC,IAAI,kBAAkB,EAAE,QAAQ,GAAG,CAAC;IACpC,IAAI,YAAY,EAAE,QAAQ,GAAG,CAAC;EAChC;EACA,IAAI,MAAM,CAAC,IAAI,EAAE;IACf,IAAM,eAAe,GAAG,MAAM,CAAC,mBAAmB,CAAC,CAAC,CAAC;IACrD,IAAM,cAAc,GAAG,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;IAC3E,IAAM,mBAAmB,GAAG,MAAM,CAAC,UAAU,CAAC,eAAe,CAAC;IAC9D,IAAM,kBAAkB,GAAG,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC;IAC5D,IAAM,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;IACpE,IAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC;IACxC,IAAI,YAAY,IAAI,mBAAmB,EAAE;MACvC,YAAY,GAAG,CAAC,YAAY,GAAG,mBAAmB,IAAI,YAAY;IACpE,CAAC,MAAM;MACL,YAAY,GAAG,CAAC,YAAY,GAAG,YAAY,GAAG,kBAAkB,IAAI,YAAY;IAClF;IACA,IAAI,YAAY,GAAG,CAAC,EAAE,YAAY,IAAI,CAAC;EACzC;EACA,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;IACpB,QAAQ,EAAR,QAAQ;IACR,YAAY,EAAZ,YAAY;IACZ,WAAW,EAAX,WAAW;IACX,KAAK,EAAL;EACF,CAAC,CAAC;EACF,IAAI,MAAM,CAAC,mBAAmB,IAAI,MAAM,CAAC,cAAc,IAAI,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,oBAAoB,CAAC,SAAS,CAAC;EACpH,IAAI,WAAW,IAAI,CAAC,YAAY,EAAE;IAChC,MAAM,CAAC,IAAI,CAAC,uBAAuB,CAAC;EACtC;EACA,IAAI,KAAK,IAAI,CAAC,MAAM,EAAE;IACpB,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC;EAChC;EACA,IAAI,YAAY,IAAI,CAAC,WAAW,IAAI,MAAM,IAAI,CAAC,KAAK,EAAE;IACpD,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;EACzB;EACA,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC;AACnC;;;;;;;;;AC7DA,IAAA,MAAA,GAAA,OAAA;AACe,SAAS,UAAU,CAAA,EAAG;EACnC,IAAM,MAAM,GAAG,IAAI;EACnB,IAAI,KAAK;EACT,IAAI,MAAM;EACV,IAAM,EAAE,GAAG,MAAM,CAAC,EAAE;EACpB,IAAI,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,KAAK,WAAW,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,KAAK,IAAI,EAAE;IAC9E,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK;EAC7B,CAAC,MAAM;IACL,KAAK,GAAG,EAAE,CAAC,WAAW;EACxB;EACA,IAAI,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,KAAK,IAAI,EAAE;IAChF,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM;EAC/B,CAAC,MAAM;IACL,MAAM,GAAG,EAAE,CAAC,YAAY;EAC1B;EACA,IAAI,KAAK,KAAK,CAAC,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,MAAM,KAAK,CAAC,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE;IAC/E;EACF;;EAEA;EACA,KAAK,GAAG,KAAK,GAAG,QAAQ,CAAC,IAAA,mBAAY,EAAC,EAAE,EAAE,cAAc,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,GAAG,QAAQ,CAAC,IAAA,mBAAY,EAAC,EAAE,EAAE,eAAe,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;EAC1H,MAAM,GAAG,MAAM,GAAG,QAAQ,CAAC,IAAA,mBAAY,EAAC,EAAE,EAAE,aAAa,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,GAAG,QAAQ,CAAC,IAAA,mBAAY,EAAC,EAAE,EAAE,gBAAgB,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;EAC5H,IAAI,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,KAAK,GAAG,CAAC;EAClC,IAAI,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,MAAM,GAAG,CAAC;EACpC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;IACpB,KAAK,EAAL,KAAK;IACL,MAAM,EAAN,MAAM;IACN,IAAI,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,KAAK,GAAG;EACxC,CAAC,CAAC;AACJ;;;;;;;;;AC9BA,IAAA,MAAA,GAAA,OAAA;AACe,SAAS,YAAY,CAAA,EAAG;EACrC,IAAM,MAAM,GAAG,IAAI;EACnB,SAAS,iBAAiB,CAAC,QAAQ,EAAE;IACnC,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;MACzB,OAAO,QAAQ;IACjB;IACA;IACA,OAAO;MACL,OAAO,EAAE,QAAQ;MACjB,YAAY,EAAE,aAAa;MAC3B,gBAAgB,EAAE,cAAc;MAChC,aAAa,EAAE,YAAY;MAC3B,cAAc,EAAE,eAAe;MAC/B,cAAc,EAAE,aAAa;MAC7B,eAAe,EAAE,gBAAgB;MACjC,aAAa,EAAE;IACjB,CAAC,CAAC,QAAQ,CAAC;EACb;EACA,SAAS,yBAAyB,CAAC,IAAI,EAAE,KAAK,EAAE;IAC9C,OAAO,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC;EACzE;EACA,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM;EAC5B,IACE,SAAS,GAKP,MAAM,CALR,SAAS;IACT,QAAQ,GAIN,MAAM,CAJR,QAAQ;IACF,UAAU,GAGd,MAAM,CAHR,IAAI;IACU,GAAG,GAEf,MAAM,CAFR,YAAY;IACZ,QAAQ,GACN,MAAM,CADR,QAAQ;EAEV,IAAM,SAAS,GAAG,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO;EAC1D,IAAM,oBAAoB,GAAG,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM;EAC5F,IAAM,MAAM,GAAG,IAAA,sBAAe,EAAC,QAAQ,MAAA,MAAA,CAAM,MAAM,CAAC,MAAM,CAAC,UAAU,mBAAgB,CAAC;EACtF,IAAM,YAAY,GAAG,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM;EAC7E,IAAI,QAAQ,GAAG,EAAE;EACjB,IAAM,UAAU,GAAG,EAAE;EACrB,IAAM,eAAe,GAAG,EAAE;EAC1B,IAAI,YAAY,GAAG,MAAM,CAAC,kBAAkB;EAC5C,IAAI,OAAO,YAAY,KAAK,UAAU,EAAE;IACtC,YAAY,GAAG,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC;EACvD;EACA,IAAI,WAAW,GAAG,MAAM,CAAC,iBAAiB;EAC1C,IAAI,OAAO,WAAW,KAAK,UAAU,EAAE;IACrC,WAAW,GAAG,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC;EACrD;EACA,IAAM,sBAAsB,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM;EACrD,IAAM,wBAAwB,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM;EACzD,IAAI,YAAY,GAAG,MAAM,CAAC,YAAY;EACtC,IAAI,aAAa,GAAG,CAAC,YAAY;EACjC,IAAI,aAAa,GAAG,CAAC;EACrB,IAAI,KAAK,GAAG,CAAC;EACb,IAAI,OAAO,UAAU,KAAK,WAAW,EAAE;IACrC;EACF;EACA,IAAI,OAAO,YAAY,KAAK,QAAQ,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;IACtE,YAAY,GAAG,UAAU,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,UAAU;EAC7E;EACA,MAAM,CAAC,WAAW,GAAG,CAAC,YAAY;;EAElC;EACA,MAAM,CAAC,OAAO,CAAC,UAAA,OAAO,EAAI;IACxB,IAAI,GAAG,EAAE;MACP,OAAO,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE;IAC/B,CAAC,MAAM;MACL,OAAO,CAAC,KAAK,CAAC,WAAW,GAAG,EAAE;IAChC;IACA,OAAO,CAAC,KAAK,CAAC,YAAY,GAAG,EAAE;IAC/B,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,EAAE;EAC9B,CAAC,CAAC;;EAEF;EACA,IAAI,MAAM,CAAC,cAAc,IAAI,MAAM,CAAC,OAAO,EAAE;IAC3C,IAAA,qBAAc,EAAC,SAAS,EAAE,iCAAiC,EAAE,EAAE,CAAC;IAChE,IAAA,qBAAc,EAAC,SAAS,EAAE,gCAAgC,EAAE,EAAE,CAAC;EACjE;EACA,IAAM,WAAW,GAAG,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,MAAM,CAAC,IAAI;EACtE,IAAI,WAAW,EAAE;IACf,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC;EACtC;;EAEA;EACA,IAAI,SAAS;EACb,IAAM,oBAAoB,GAAG,MAAM,CAAC,aAAa,KAAK,MAAM,IAAI,MAAM,CAAC,WAAW,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,UAAA,GAAG,EAAI;IAClI,OAAO,OAAO,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,aAAa,KAAK,WAAW;EACrE,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC;EACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,CAAC,IAAI,CAAC,EAAE;IACxC,SAAS,GAAG,CAAC;IACb,IAAI,KAAK;IACT,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC;IAChC,IAAI,WAAW,EAAE;MACf,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE,iBAAiB,CAAC;IACpE;IACA,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,IAAA,mBAAY,EAAC,KAAK,EAAE,SAAS,CAAC,KAAK,MAAM,EAAE,SAAS,CAAC;;IAEtE,IAAI,MAAM,CAAC,aAAa,KAAK,MAAM,EAAE;MACnC,IAAI,oBAAoB,EAAE;QACxB,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,KAAK;MAClD;MACA,IAAM,WAAW,GAAG,gBAAgB,CAAC,KAAK,CAAC;MAC3C,IAAM,gBAAgB,GAAG,KAAK,CAAC,KAAK,CAAC,SAAS;MAC9C,IAAM,sBAAsB,GAAG,KAAK,CAAC,KAAK,CAAC,eAAe;MAC1D,IAAI,gBAAgB,EAAE;QACpB,KAAK,CAAC,KAAK,CAAC,SAAS,GAAG,MAAM;MAChC;MACA,IAAI,sBAAsB,EAAE;QAC1B,KAAK,CAAC,KAAK,CAAC,eAAe,GAAG,MAAM;MACtC;MACA,IAAI,MAAM,CAAC,YAAY,EAAE;QACvB,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,IAAA,uBAAgB,EAAC,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,GAAG,IAAA,uBAAgB,EAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC;MACtH,CAAC,MAAM;QACL;QACA,IAAM,KAAK,GAAG,yBAAyB,CAAC,WAAW,EAAE,OAAO,CAAC;QAC7D,IAAM,WAAW,GAAG,yBAAyB,CAAC,WAAW,EAAE,cAAc,CAAC;QAC1E,IAAM,YAAY,GAAG,yBAAyB,CAAC,WAAW,EAAE,eAAe,CAAC;QAC5E,IAAM,UAAU,GAAG,yBAAyB,CAAC,WAAW,EAAE,aAAa,CAAC;QACxE,IAAM,WAAW,GAAG,yBAAyB,CAAC,WAAW,EAAE,cAAc,CAAC;QAC1E,IAAM,SAAS,GAAG,WAAW,CAAC,gBAAgB,CAAC,YAAY,CAAC;QAC5D,IAAI,SAAS,IAAI,SAAS,KAAK,YAAY,EAAE;UAC3C,SAAS,GAAG,KAAK,GAAG,UAAU,GAAG,WAAW;QAC9C,CAAC,MAAM;UACL,IAAA,MAAA,GAGI,KAAK;YAFP,WAAW,GAAA,MAAA,CAAX,WAAW;YACX,WAAW,GAAA,MAAA,CAAX,WAAW;UAEb,SAAS,GAAG,KAAK,GAAG,WAAW,GAAG,YAAY,GAAG,UAAU,GAAG,WAAW,IAAI,WAAW,GAAG,WAAW,CAAC;QACzG;MACF;MACA,IAAI,gBAAgB,EAAE;QACpB,KAAK,CAAC,KAAK,CAAC,SAAS,GAAG,gBAAgB;MAC1C;MACA,IAAI,sBAAsB,EAAE;QAC1B,KAAK,CAAC,KAAK,CAAC,eAAe,GAAG,sBAAsB;MACtD;MACA,IAAI,MAAM,CAAC,YAAY,EAAE,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;IAC5D,CAAC,MAAM;MACL,SAAS,GAAG,CAAC,UAAU,GAAG,CAAC,MAAM,CAAC,aAAa,GAAG,CAAC,IAAI,YAAY,IAAI,MAAM,CAAC,aAAa;MAC3F,IAAI,MAAM,CAAC,YAAY,EAAE,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;MAC1D,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE;QACb,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,MAAA,MAAA,CAAM,SAAS,OAAI;MAChE;IACF;IACA,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE;MACb,MAAM,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,SAAS;IACvC;IACA,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC;IAC/B,IAAI,MAAM,CAAC,cAAc,EAAE;MACzB,aAAa,GAAG,aAAa,GAAG,SAAS,GAAG,CAAC,GAAG,aAAa,GAAG,CAAC,GAAG,YAAY;MAChF,IAAI,aAAa,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,aAAa,GAAG,aAAa,GAAG,UAAU,GAAG,CAAC,GAAG,YAAY;MACjG,IAAI,CAAC,KAAK,CAAC,EAAE,aAAa,GAAG,aAAa,GAAG,UAAU,GAAG,CAAC,GAAG,YAAY;MAC1E,IAAI,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,IAAI,EAAE,aAAa,GAAG,CAAC;MACzD,IAAI,MAAM,CAAC,YAAY,EAAE,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;MAClE,IAAI,KAAK,GAAG,MAAM,CAAC,cAAc,KAAK,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC;MACrE,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC;IAChC,CAAC,MAAM;MACL,IAAI,MAAM,CAAC,YAAY,EAAE,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;MAClE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,cAAc,KAAK,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC;MAClI,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC;MAC9B,aAAa,GAAG,aAAa,GAAG,SAAS,GAAG,YAAY;IAC1D;IACA,MAAM,CAAC,WAAW,IAAI,SAAS,GAAG,YAAY;IAC9C,aAAa,GAAG,SAAS;IACzB,KAAK,IAAI,CAAC;EACZ;EACA,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,UAAU,CAAC,GAAG,WAAW;EAC3E,IAAI,GAAG,IAAI,QAAQ,KAAK,MAAM,CAAC,MAAM,KAAK,OAAO,IAAI,MAAM,CAAC,MAAM,KAAK,WAAW,CAAC,EAAE;IACnF,SAAS,CAAC,KAAK,CAAC,KAAK,MAAA,MAAA,CAAM,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,YAAY,OAAI;EACzE;EACA,IAAI,MAAM,CAAC,cAAc,EAAE;IACzB,SAAS,CAAC,KAAK,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,MAAA,MAAA,CAAM,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,YAAY,OAAI;EAC/F;EACA,IAAI,WAAW,EAAE;IACf,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,QAAQ,EAAE,iBAAiB,CAAC;EACvE;;EAEA;EACA,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE;IAC1B,IAAM,aAAa,GAAG,EAAE;IACxB,KAAK,IAAI,EAAC,GAAG,CAAC,EAAE,EAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,EAAC,IAAI,CAAC,EAAE;MAC3C,IAAI,cAAc,GAAG,QAAQ,CAAC,EAAC,CAAC;MAChC,IAAI,MAAM,CAAC,YAAY,EAAE,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;MACpE,IAAI,QAAQ,CAAC,EAAC,CAAC,IAAI,MAAM,CAAC,WAAW,GAAG,UAAU,EAAE;QAClD,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC;MACpC;IACF;IACA,QAAQ,GAAG,aAAa;IACxB,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,GAAG,UAAU,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;MAC/F,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,UAAU,CAAC;IAChD;EACF;EACA,IAAI,SAAS,IAAI,MAAM,CAAC,IAAI,EAAE;IAC5B,IAAM,IAAI,GAAG,eAAe,CAAC,CAAC,CAAC,GAAG,YAAY;IAC9C,IAAI,MAAM,CAAC,cAAc,GAAG,CAAC,EAAE;MAC7B,IAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,GAAG,MAAM,CAAC,OAAO,CAAC,WAAW,IAAI,MAAM,CAAC,cAAc,CAAC;MAC5G,IAAM,SAAS,GAAG,IAAI,GAAG,MAAM,CAAC,cAAc;MAC9C,KAAK,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,MAAM,EAAE,GAAC,IAAI,CAAC,EAAE;QAClC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;MAC1D;IACF;IACA,KAAK,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,MAAM,CAAC,OAAO,CAAC,YAAY,GAAG,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,GAAC,IAAI,CAAC,EAAE;MACpF,IAAI,MAAM,CAAC,cAAc,KAAK,CAAC,EAAE;QAC/B,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;MACrD;MACA,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;MACzD,MAAM,CAAC,WAAW,IAAI,IAAI;IAC5B;EACF;EACA,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE,QAAQ,GAAG,CAAC,CAAC,CAAC;EACzC,IAAI,MAAM,CAAC,YAAY,KAAK,CAAC,EAAE;IAC7B,IAAM,GAAG,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,GAAG,GAAG,YAAY,GAAG,iBAAiB,CAAC,aAAa,CAAC;IAC1F,MAAM,CAAC,MAAM,CAAC,UAAC,CAAC,EAAE,UAAU,EAAK;MAC/B,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,IAAI,EAAE,OAAO,IAAI;MAC/C,IAAI,UAAU,KAAK,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;QACpC,OAAO,KAAK;MACd;MACA,OAAO,IAAI;IACb,CAAC,CAAC,CAAC,OAAO,CAAC,UAAA,OAAO,EAAI;MACpB,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,MAAA,MAAA,CAAM,YAAY,OAAI;IAC1C,CAAC,CAAC;EACJ;EACA,IAAI,MAAM,CAAC,cAAc,IAAI,MAAM,CAAC,oBAAoB,EAAE;IACxD,IAAI,aAAa,GAAG,CAAC;IACrB,eAAe,CAAC,OAAO,CAAC,UAAA,cAAc,EAAI;MACxC,aAAa,IAAI,cAAc,IAAI,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,GAAG,CAAC,CAAC;IACnF,CAAC,CAAC;IACF,aAAa,IAAI,MAAM,CAAC,YAAY;IACpC,IAAM,OAAO,GAAG,aAAa,GAAG,UAAU;IAC1C,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,UAAA,IAAI,EAAI;MAC9B,IAAI,IAAI,GAAG,CAAC,EAAE,OAAO,CAAC,YAAY;MAClC,IAAI,IAAI,GAAG,OAAO,EAAE,OAAO,OAAO,GAAG,WAAW;MAChD,OAAO,IAAI;IACb,CAAC,CAAC;EACJ;EACA,IAAI,MAAM,CAAC,wBAAwB,EAAE;IACnC,IAAI,cAAa,GAAG,CAAC;IACrB,eAAe,CAAC,OAAO,CAAC,UAAA,cAAc,EAAI;MACxC,cAAa,IAAI,cAAc,IAAI,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,GAAG,CAAC,CAAC;IACnF,CAAC,CAAC;IACF,cAAa,IAAI,MAAM,CAAC,YAAY;IACpC,IAAI,cAAa,GAAG,UAAU,EAAE;MAC9B,IAAM,eAAe,GAAG,CAAC,UAAU,GAAG,cAAa,IAAI,CAAC;MACxD,QAAQ,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,SAAS,EAAK;QACpC,QAAQ,CAAC,SAAS,CAAC,GAAG,IAAI,GAAG,eAAe;MAC9C,CAAC,CAAC;MACF,UAAU,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,SAAS,EAAK;QACtC,UAAU,CAAC,SAAS,CAAC,GAAG,IAAI,GAAG,eAAe;MAChD,CAAC,CAAC;IACJ;EACF;EACA,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;IACpB,MAAM,EAAN,MAAM;IACN,QAAQ,EAAR,QAAQ;IACR,UAAU,EAAV,UAAU;IACV,eAAe,EAAf;EACF,CAAC,CAAC;EACF,IAAI,MAAM,CAAC,cAAc,IAAI,MAAM,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE;IAC3E,IAAA,qBAAc,EAAC,SAAS,EAAE,iCAAiC,KAAA,MAAA,CAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAI,CAAC;IACjF,IAAA,qBAAc,EAAC,SAAS,EAAE,gCAAgC,KAAA,MAAA,CAAK,MAAM,CAAC,IAAI,GAAG,CAAC,GAAG,eAAe,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,OAAI,CAAC;IACrI,IAAM,aAAa,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;IACzC,IAAM,eAAe,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;IAC7C,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAA,CAAC;MAAA,OAAI,CAAC,GAAG,aAAa;IAAA,EAAC;IAC7D,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,UAAA,CAAC;MAAA,OAAI,CAAC,GAAG,eAAe;IAAA,EAAC;EACrE;EACA,IAAI,YAAY,KAAK,oBAAoB,EAAE;IACzC,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC;EACnC;EACA,IAAI,QAAQ,CAAC,MAAM,KAAK,sBAAsB,EAAE;IAC9C,IAAI,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC;IACvD,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC;EACrC;EACA,IAAI,UAAU,CAAC,MAAM,KAAK,wBAAwB,EAAE;IAClD,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC;EACvC;EACA,IAAI,MAAM,CAAC,mBAAmB,EAAE;IAC9B,MAAM,CAAC,kBAAkB,CAAC,CAAC;EAC7B;EACA,IAAI,CAAC,SAAS,IAAI,CAAC,MAAM,CAAC,OAAO,KAAK,MAAM,CAAC,MAAM,KAAK,OAAO,IAAI,MAAM,CAAC,MAAM,KAAK,MAAM,CAAC,EAAE;IAC5F,IAAM,mBAAmB,MAAA,MAAA,CAAM,MAAM,CAAC,sBAAsB,oBAAiB;IAC7E,IAAM,0BAA0B,GAAG,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,mBAAmB,CAAC;IACpF,IAAI,YAAY,IAAI,MAAM,CAAC,uBAAuB,EAAE;MAClD,IAAI,CAAC,0BAA0B,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,mBAAmB,CAAC;IAC/E,CAAC,MAAM,IAAI,0BAA0B,EAAE;MACrC,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,mBAAmB,CAAC;IACjD;EACF;AACF;;;;;;;;;AC5RA,IAAA,MAAA,GAAA,OAAA;AACe,SAAS,mBAAmB,CAAA,EAAG;EAC5C,IAAM,MAAM,GAAG,IAAI;EACnB,IACE,MAAM,GAIJ,MAAM,CAJR,MAAM;IACN,MAAM,GAGJ,MAAM,CAHR,MAAM;IACN,QAAQ,GAEN,MAAM,CAFR,QAAQ;IACR,WAAW,GACT,MAAM,CADR,WAAW;EAEb,IAAM,SAAS,GAAG,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO;EAC1D,IAAM,gBAAgB,GAAG,SAAnB,gBAAgB,CAAG,QAAQ,EAAI;IACnC,OAAO,IAAA,sBAAe,EAAC,QAAQ,MAAA,MAAA,CAAM,MAAM,CAAC,UAAU,EAAA,MAAA,CAAG,QAAQ,oBAAA,MAAA,CAAiB,QAAQ,CAAE,CAAC,CAAC,CAAC,CAAC;EAClG,CAAC;EACD,MAAM,CAAC,OAAO,CAAC,UAAA,OAAO,EAAI;IACxB,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAgB,EAAE,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,cAAc,CAAC;EACjG,CAAC,CAAC;EACF,IAAI,WAAW;EACf,IAAI,SAAS,EAAE;IACb,IAAI,MAAM,CAAC,IAAI,EAAE;MACf,IAAI,UAAU,GAAG,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC,YAAY;MAC1D,IAAI,UAAU,GAAG,CAAC,EAAE,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,UAAU;MAC1E,IAAI,UAAU,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM;MAC1F,WAAW,GAAG,gBAAgB,+BAAA,MAAA,CAA8B,UAAU,QAAI,CAAC;IAC7E,CAAC,MAAM;MACL,WAAW,GAAG,gBAAgB,+BAAA,MAAA,CAA8B,WAAW,QAAI,CAAC;IAC9E;EACF,CAAC,MAAM;IACL,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;EACnC;EACA,IAAI,WAAW,EAAE;IACf;IACA,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,gBAAgB,CAAC;;IAElD;IACA,IAAI,SAAS,GAAG,IAAA,qBAAc,EAAC,WAAW,MAAA,MAAA,CAAM,MAAM,CAAC,UAAU,mBAAgB,CAAC,CAAC,CAAC,CAAC;IACrF,IAAI,MAAM,CAAC,IAAI,IAAI,CAAC,SAAS,EAAE;MAC7B,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC;IACvB;IACA,IAAI,SAAS,EAAE;MACb,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,cAAc,CAAC;IAChD;IACA;IACA,IAAI,SAAS,GAAG,IAAA,qBAAc,EAAC,WAAW,MAAA,MAAA,CAAM,MAAM,CAAC,UAAU,mBAAgB,CAAC,CAAC,CAAC,CAAC;IACrF,IAAI,MAAM,CAAC,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC,EAAE;MACnC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;IACvC;IACA,IAAI,SAAS,EAAE;MACb,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,cAAc,CAAC;IAChD;EACF;EACA,MAAM,CAAC,iBAAiB,CAAC,CAAC;AAC5B;;;;;;;;;ACnDe,SAAS,kBAAkB,CAAA,EAAG;EAC3C,IAAM,MAAM,GAAG,IAAI;EACnB,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM;EAC5B;EACA,IAAM,WAAW,GAAG,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC;EAC3H,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IACzC,MAAM,CAAC,CAAC,CAAC,CAAC,iBAAiB,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,IAAI,WAAW,GAAG,MAAM,CAAC,qBAAqB,CAAC,CAAC;EACnJ;AACF;;;;;;;;;ACRe,SAAS,oBAAoB,CAAA,EAA0C;EAAA,IAAzC,SAAS,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC;EAClF,IAAM,MAAM,GAAG,IAAI;EACnB,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM;EAC5B,IACE,MAAM,GAGJ,MAAM,CAHR,MAAM;IACQ,GAAG,GAEf,MAAM,CAFR,YAAY;IACZ,QAAQ,GACN,MAAM,CADR,QAAQ;EAEV,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;EACzB,IAAI,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,iBAAiB,KAAK,WAAW,EAAE,MAAM,CAAC,kBAAkB,CAAC,CAAC;EACnF,IAAI,YAAY,GAAG,CAAC,SAAS;EAC7B,IAAI,GAAG,EAAE,YAAY,GAAG,SAAS;;EAEjC;EACA,MAAM,CAAC,OAAO,CAAC,UAAA,OAAO,EAAI;IACxB,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC;EACpD,CAAC,CAAC;EACF,MAAM,CAAC,oBAAoB,GAAG,EAAE;EAChC,MAAM,CAAC,aAAa,GAAG,EAAE;EACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IACzC,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC;IACvB,IAAI,WAAW,GAAG,KAAK,CAAC,iBAAiB;IACzC,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,cAAc,EAAE;MAC3C,WAAW,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,iBAAiB;IAC5C;IACA,IAAM,aAAa,GAAG,CAAC,YAAY,IAAI,MAAM,CAAC,cAAc,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,KAAK,KAAK,CAAC,eAAe,GAAG,MAAM,CAAC,YAAY,CAAC;IACxJ,IAAM,qBAAqB,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,cAAc,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,KAAK,KAAK,CAAC,eAAe,GAAG,MAAM,CAAC,YAAY,CAAC;IAC9K,IAAM,WAAW,GAAG,EAAE,YAAY,GAAG,WAAW,CAAC;IACjD,IAAM,UAAU,GAAG,WAAW,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC;IAC1D,IAAM,SAAS,GAAG,WAAW,IAAI,CAAC,IAAI,WAAW,GAAG,MAAM,CAAC,IAAI,GAAG,CAAC,IAAI,UAAU,GAAG,CAAC,IAAI,UAAU,IAAI,MAAM,CAAC,IAAI,IAAI,WAAW,IAAI,CAAC,IAAI,UAAU,IAAI,MAAM,CAAC,IAAI;IACnK,IAAI,SAAS,EAAE;MACb,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC;MAChC,MAAM,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC;MACnC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC;IACnD;IACA,KAAK,CAAC,QAAQ,GAAG,GAAG,GAAG,CAAC,aAAa,GAAG,aAAa;IACrD,KAAK,CAAC,gBAAgB,GAAG,GAAG,GAAG,CAAC,qBAAqB,GAAG,qBAAqB;EAC/E;AACF;;;;;;;;;ACtCA,IAAA,kBAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,MAAA,GAAA,OAAA;AAAoE,SAAA,uBAAA,GAAA,WAAA,GAAA,IAAA,GAAA,CAAA,UAAA,GAAA,GAAA,gBAAA,GAAA;AACrD,SAAS,IAAI,CAAA,IAAA,EAIzB;EAAA,IAHD,MAAM,GAAA,IAAA,CAAN,MAAM;IACN,YAAY,GAAA,IAAA,CAAZ,YAAY;IACZ,EAAE,GAAA,IAAA,CAAF,EAAE;EAEF,YAAY,CAAC;IACX,IAAI,EAAE;MACJ,OAAO,EAAE,IAAI;MACb,iBAAiB,EAAE,qBAAqB;MACxC,gBAAgB,EAAE,gBAAgB;MAClC,gBAAgB,EAAE,YAAY;MAC9B,iBAAiB,EAAE,yBAAyB;MAC5C,gBAAgB,EAAE,wBAAwB;MAC1C,uBAAuB,EAAE,uBAAuB;MAChD,iBAAiB,EAAE,8BAA8B;MACjD,gBAAgB,EAAE,IAAI;MACtB,+BAA+B,EAAE,IAAI;MACrC,0BAA0B,EAAE,IAAI;MAChC,SAAS,EAAE,OAAO;MAClB,EAAE,EAAE;IACN;EACF,CAAC,CAAC;EACF,MAAM,CAAC,IAAI,GAAG;IACZ,OAAO,EAAE;EACX,CAAC;EACD,IAAI,UAAU,GAAG,IAAI;EACrB,SAAS,MAAM,CAAC,OAAO,EAAE;IACvB,IAAM,YAAY,GAAG,UAAU;IAC/B,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;IAC/B,YAAY,CAAC,SAAS,GAAG,EAAE;IAC3B,YAAY,CAAC,SAAS,GAAG,OAAO;EAClC;EACA,IAAM,iBAAiB,GAAG,SAApB,iBAAiB,CAAG,EAAE,EAAI;IAC9B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,UAAA,CAAC;MAAA,OAAI,CAAC,CAAC,CAAC;IAAA,EAAC;IAClD,OAAO,EAAE;EACX,CAAC;EACD,SAAS,eAAe,CAAA,EAAY;IAAA,IAAX,IAAI,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,EAAE;IAChC,IAAM,UAAU,GAAG,SAAb,UAAU,CAAA;MAAA,OAAS,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC;IAAA;IACpE,OAAO,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC;EACnD;EACA,SAAS,eAAe,CAAC,EAAE,EAAE;IAC3B,EAAE,GAAG,iBAAiB,CAAC,EAAE,CAAC;IAC1B,EAAE,CAAC,OAAO,CAAC,UAAA,KAAK,EAAI;MAClB,KAAK,CAAC,YAAY,CAAC,UAAU,EAAE,GAAG,CAAC;IACrC,CAAC,CAAC;EACJ;EACA,SAAS,kBAAkB,CAAC,EAAE,EAAE;IAC9B,EAAE,GAAG,iBAAiB,CAAC,EAAE,CAAC;IAC1B,EAAE,CAAC,OAAO,CAAC,UAAA,KAAK,EAAI;MAClB,KAAK,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC;IACtC,CAAC,CAAC;EACJ;EACA,SAAS,SAAS,CAAC,EAAE,EAAE,IAAI,EAAE;IAC3B,EAAE,GAAG,iBAAiB,CAAC,EAAE,CAAC;IAC1B,EAAE,CAAC,OAAO,CAAC,UAAA,KAAK,EAAI;MAClB,KAAK,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC;IAClC,CAAC,CAAC;EACJ;EACA,SAAS,oBAAoB,CAAC,EAAE,EAAE,WAAW,EAAE;IAC7C,EAAE,GAAG,iBAAiB,CAAC,EAAE,CAAC;IAC1B,EAAE,CAAC,OAAO,CAAC,UAAA,KAAK,EAAI;MAClB,KAAK,CAAC,YAAY,CAAC,sBAAsB,EAAE,WAAW,CAAC;IACzD,CAAC,CAAC;EACJ;EACA,SAAS,aAAa,CAAC,EAAE,EAAE,QAAQ,EAAE;IACnC,EAAE,GAAG,iBAAiB,CAAC,EAAE,CAAC;IAC1B,EAAE,CAAC,OAAO,CAAC,UAAA,KAAK,EAAI;MAClB,KAAK,CAAC,YAAY,CAAC,eAAe,EAAE,QAAQ,CAAC;IAC/C,CAAC,CAAC;EACJ;EACA,SAAS,UAAU,CAAC,EAAE,EAAE,KAAK,EAAE;IAC7B,EAAE,GAAG,iBAAiB,CAAC,EAAE,CAAC;IAC1B,EAAE,CAAC,OAAO,CAAC,UAAA,KAAK,EAAI;MAClB,KAAK,CAAC,YAAY,CAAC,YAAY,EAAE,KAAK,CAAC;IACzC,CAAC,CAAC;EACJ;EACA,SAAS,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE;IACvB,EAAE,GAAG,iBAAiB,CAAC,EAAE,CAAC;IAC1B,EAAE,CAAC,OAAO,CAAC,UAAA,KAAK,EAAI;MAClB,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,CAAC;IAC9B,CAAC,CAAC;EACJ;EACA,SAAS,SAAS,CAAC,EAAE,EAAE,IAAI,EAAE;IAC3B,EAAE,GAAG,iBAAiB,CAAC,EAAE,CAAC;IAC1B,EAAE,CAAC,OAAO,CAAC,UAAA,KAAK,EAAI;MAClB,KAAK,CAAC,YAAY,CAAC,WAAW,EAAE,IAAI,CAAC;IACvC,CAAC,CAAC;EACJ;EACA,SAAS,SAAS,CAAC,EAAE,EAAE;IACrB,EAAE,GAAG,iBAAiB,CAAC,EAAE,CAAC;IAC1B,EAAE,CAAC,OAAO,CAAC,UAAA,KAAK,EAAI;MAClB,KAAK,CAAC,YAAY,CAAC,eAAe,EAAE,IAAI,CAAC;IAC3C,CAAC,CAAC;EACJ;EACA,SAAS,QAAQ,CAAC,EAAE,EAAE;IACpB,EAAE,GAAG,iBAAiB,CAAC,EAAE,CAAC;IAC1B,EAAE,CAAC,OAAO,CAAC,UAAA,KAAK,EAAI;MAClB,KAAK,CAAC,YAAY,CAAC,eAAe,EAAE,KAAK,CAAC;IAC5C,CAAC,CAAC;EACJ;EACA,SAAS,iBAAiB,CAAC,CAAC,EAAE;IAC5B,IAAI,CAAC,CAAC,OAAO,KAAK,EAAE,IAAI,CAAC,CAAC,OAAO,KAAK,EAAE,EAAE;IAC1C,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI;IACjC,IAAM,QAAQ,GAAG,CAAC,CAAC,MAAM;IACzB,IAAI,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,UAAU,CAAC,EAAE,KAAK,QAAQ,KAAK,MAAM,CAAC,UAAU,CAAC,EAAE,IAAI,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE;MAC/H,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,IAAA,6BAAiB,EAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,EAAE;IAClF;IACA,IAAI,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM,IAAI,QAAQ,KAAK,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE;MAC1F,IAAI,EAAE,MAAM,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;QAC1C,MAAM,CAAC,SAAS,CAAC,CAAC;MACpB;MACA,IAAI,MAAM,CAAC,KAAK,EAAE;QAChB,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC;MACjC,CAAC,MAAM;QACL,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC;MACjC;IACF;IACA,IAAI,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM,IAAI,QAAQ,KAAK,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE;MAC1F,IAAI,EAAE,MAAM,CAAC,WAAW,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;QAChD,MAAM,CAAC,SAAS,CAAC,CAAC;MACpB;MACA,IAAI,MAAM,CAAC,WAAW,EAAE;QACtB,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC;MAClC,CAAC,MAAM;QACL,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC;MACjC;IACF;IACA,IAAI,MAAM,CAAC,UAAU,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAA,6BAAiB,EAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,EAAE;MAClG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAClB;EACF;EACA,SAAS,gBAAgB,CAAA,EAAG;IAC1B,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;IACtE,IAAA,kBAAA,GAGI,MAAM,CAAC,UAAU;MAFnB,MAAM,GAAA,kBAAA,CAAN,MAAM;MACN,MAAM,GAAA,kBAAA,CAAN,MAAM;IAER,IAAI,MAAM,EAAE;MACV,IAAI,MAAM,CAAC,WAAW,EAAE;QACtB,SAAS,CAAC,MAAM,CAAC;QACjB,kBAAkB,CAAC,MAAM,CAAC;MAC5B,CAAC,MAAM;QACL,QAAQ,CAAC,MAAM,CAAC;QAChB,eAAe,CAAC,MAAM,CAAC;MACzB;IACF;IACA,IAAI,MAAM,EAAE;MACV,IAAI,MAAM,CAAC,KAAK,EAAE;QAChB,SAAS,CAAC,MAAM,CAAC;QACjB,kBAAkB,CAAC,MAAM,CAAC;MAC5B,CAAC,MAAM;QACL,QAAQ,CAAC,MAAM,CAAC;QAChB,eAAe,CAAC,MAAM,CAAC;MACzB;IACF;EACF;EACA,SAAS,aAAa,CAAA,EAAG;IACvB,OAAO,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,UAAU,CAAC,OAAO,IAAI,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM;EAC3F;EACA,SAAS,sBAAsB,CAAA,EAAG;IAChC,OAAO,aAAa,CAAC,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS;EAC9D;EACA,SAAS,gBAAgB,CAAA,EAAG;IAC1B,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI;IACjC,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE;IACtB,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,UAAA,QAAQ,EAAI;MAC5C,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,EAAE;QACtC,eAAe,CAAC,QAAQ,CAAC;QACzB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,EAAE;UAC1C,SAAS,CAAC,QAAQ,EAAE,QAAQ,CAAC;UAC7B,UAAU,CAAC,QAAQ,EAAE,MAAM,CAAC,uBAAuB,CAAC,OAAO,CAAC,eAAe,EAAE,IAAA,mBAAY,EAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;QAC3G;MACF;MACA,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAA,6BAAiB,EAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC,EAAE;QACnF,QAAQ,CAAC,YAAY,CAAC,cAAc,EAAE,MAAM,CAAC;MAC/C,CAAC,MAAM;QACL,QAAQ,CAAC,eAAe,CAAC,cAAc,CAAC;MAC1C;IACF,CAAC,CAAC;EACJ;EACA,IAAM,SAAS,GAAG,SAAZ,SAAS,CAAI,EAAE,EAAE,SAAS,EAAE,OAAO,EAAK;IAC5C,eAAe,CAAC,EAAE,CAAC;IACnB,IAAI,EAAE,CAAC,OAAO,KAAK,QAAQ,EAAE;MAC3B,SAAS,CAAC,EAAE,EAAE,QAAQ,CAAC;MACvB,EAAE,CAAC,gBAAgB,CAAC,SAAS,EAAE,iBAAiB,CAAC;IACnD;IACA,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC;IACvB,aAAa,CAAC,EAAE,EAAE,SAAS,CAAC;EAC9B,CAAC;EACD,IAAM,iBAAiB,GAAG,SAApB,iBAAiB,CAAA,EAAS;IAC9B,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI;EAC5B,CAAC;EACD,IAAM,eAAe,GAAG,SAAlB,eAAe,CAAA,EAAS;IAC5B,qBAAqB,CAAC,YAAM;MAC1B,qBAAqB,CAAC,YAAM;QAC1B,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;UACrB,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,KAAK;QAC7B;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;EACD,IAAM,WAAW,GAAG,SAAd,WAAW,CAAG,CAAC,EAAI;IACvB,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE;IACzB,IAAM,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,KAAA,MAAA,CAAK,MAAM,CAAC,MAAM,CAAC,UAAU,mBAAgB,CAAC;IAC9E,IAAI,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;IAClD,IAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,MAAM,CAAC,WAAW;IACtE,IAAM,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,mBAAmB,IAAI,MAAM,CAAC,aAAa,IAAI,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC;IACrH,IAAI,QAAQ,IAAI,SAAS,EAAE;IAC3B,IAAI,CAAC,CAAC,kBAAkB,IAAI,CAAC,CAAC,kBAAkB,CAAC,gBAAgB,EAAE;IACnE,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;MACzB,MAAM,CAAC,EAAE,CAAC,UAAU,GAAG,CAAC;IAC1B,CAAC,MAAM;MACL,MAAM,CAAC,EAAE,CAAC,SAAS,GAAG,CAAC;IACzB;IACA,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;EACnD,CAAC;EACD,IAAM,UAAU,GAAG,SAAb,UAAU,CAAA,EAAS;IACvB,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI;IACjC,IAAI,MAAM,CAAC,0BAA0B,EAAE;MACrC,oBAAoB,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,0BAA0B,CAAC;IACxE;IACA,IAAI,MAAM,CAAC,SAAS,EAAE;MACpB,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,SAAS,CAAC;IAC5C;IACA,IAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM;IACzC,IAAI,MAAM,CAAC,iBAAiB,EAAE;MAC5B,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,OAAO,EAAE,KAAK,EAAK;QACxC,IAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,yBAAyB,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK;QAC7G,IAAM,gBAAgB,GAAG,MAAM,CAAC,iBAAiB,CAAC,OAAO,CAAC,eAAe,EAAE,UAAU,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,sBAAsB,EAAE,YAAY,CAAC;QACxI,UAAU,CAAC,OAAO,EAAE,gBAAgB,CAAC;MACvC,CAAC,CAAC;IACJ;EACF,CAAC;EACD,IAAM,IAAI,GAAG,SAAP,IAAI,CAAA,EAAS;IACjB,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI;IACjC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC;;IAE5B;IACA,IAAM,WAAW,GAAG,MAAM,CAAC,EAAE;IAC7B,IAAI,MAAM,CAAC,+BAA+B,EAAE;MAC1C,oBAAoB,CAAC,WAAW,EAAE,MAAM,CAAC,+BAA+B,CAAC;IAC3E;IACA,IAAI,MAAM,CAAC,gBAAgB,EAAE;MAC3B,UAAU,CAAC,WAAW,EAAE,MAAM,CAAC,gBAAgB,CAAC;IAClD;;IAEA;IACA,IAAM,SAAS,GAAG,MAAM,CAAC,SAAS;IAClC,IAAM,SAAS,GAAG,MAAM,CAAC,EAAE,IAAI,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,sBAAA,MAAA,CAAsB,eAAe,CAAC,EAAE,CAAC,CAAE;IACtG,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,GAAG,KAAK,GAAG,QAAQ;IACxF,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC;IAC7B,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC;;IAE1B;IACA,UAAU,CAAC,CAAC;;IAEZ;IACA,IAAA,KAAA,GAGI,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC;MAF5C,MAAM,GAAA,KAAA,CAAN,MAAM;MACN,MAAM,GAAA,KAAA,CAAN,MAAM;IAER,MAAM,GAAG,iBAAiB,CAAC,MAAM,CAAC;IAClC,MAAM,GAAG,iBAAiB,CAAC,MAAM,CAAC;IAClC,IAAI,MAAM,EAAE;MACV,MAAM,CAAC,OAAO,CAAC,UAAA,EAAE;QAAA,OAAI,SAAS,CAAC,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,gBAAgB,CAAC;MAAA,EAAC;IACzE;IACA,IAAI,MAAM,EAAE;MACV,MAAM,CAAC,OAAO,CAAC,UAAA,EAAE;QAAA,OAAI,SAAS,CAAC,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,gBAAgB,CAAC;MAAA,EAAC;IACzE;;IAEA;IACA,IAAI,sBAAsB,CAAC,CAAC,EAAE;MAC5B,IAAM,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC;MACxG,YAAY,CAAC,OAAO,CAAC,UAAA,EAAE,EAAI;QACzB,EAAE,CAAC,gBAAgB,CAAC,SAAS,EAAE,iBAAiB,CAAC;MACnD,CAAC,CAAC;IACJ;;IAEA;IACA,MAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,OAAO,EAAE,WAAW,EAAE,IAAI,CAAC;IACtD,MAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,aAAa,EAAE,iBAAiB,EAAE,IAAI,CAAC;IAClE,MAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,WAAW,EAAE,eAAe,EAAE,IAAI,CAAC;EAChE,CAAC;EACD,SAAS,OAAO,CAAA,EAAG;IACjB,IAAI,UAAU,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC;IAC5D,IAAA,KAAA,GAGI,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC;MAF5C,MAAM,GAAA,KAAA,CAAN,MAAM;MACN,MAAM,GAAA,KAAA,CAAN,MAAM;IAER,MAAM,GAAG,iBAAiB,CAAC,MAAM,CAAC;IAClC,MAAM,GAAG,iBAAiB,CAAC,MAAM,CAAC;IAClC,IAAI,MAAM,EAAE;MACV,MAAM,CAAC,OAAO,CAAC,UAAA,EAAE;QAAA,OAAI,EAAE,CAAC,mBAAmB,CAAC,SAAS,EAAE,iBAAiB,CAAC;MAAA,EAAC;IAC5E;IACA,IAAI,MAAM,EAAE;MACV,MAAM,CAAC,OAAO,CAAC,UAAA,EAAE;QAAA,OAAI,EAAE,CAAC,mBAAmB,CAAC,SAAS,EAAE,iBAAiB,CAAC;MAAA,EAAC;IAC5E;;IAEA;IACA,IAAI,sBAAsB,CAAC,CAAC,EAAE;MAC5B,IAAM,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC;MACxG,YAAY,CAAC,OAAO,CAAC,UAAA,EAAE,EAAI;QACzB,EAAE,CAAC,mBAAmB,CAAC,SAAS,EAAE,iBAAiB,CAAC;MACtD,CAAC,CAAC;IACJ;;IAEA;IACA,MAAM,CAAC,EAAE,CAAC,mBAAmB,CAAC,OAAO,EAAE,WAAW,EAAE,IAAI,CAAC;IACzD,MAAM,CAAC,EAAE,CAAC,mBAAmB,CAAC,aAAa,EAAE,iBAAiB,EAAE,IAAI,CAAC;IACrE,MAAM,CAAC,EAAE,CAAC,mBAAmB,CAAC,WAAW,EAAE,eAAe,EAAE,IAAI,CAAC;EACnE;EACA,EAAE,CAAC,YAAY,EAAE,YAAM;IACrB,UAAU,GAAG,IAAA,oBAAa,EAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC;IACxE,UAAU,CAAC,YAAY,CAAC,WAAW,EAAE,WAAW,CAAC;IACjD,UAAU,CAAC,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC;IAC9C,IAAI,MAAM,CAAC,SAAS,EAAE;MACpB,UAAU,CAAC,YAAY,CAAC,MAAM,EAAE,eAAe,CAAC;IAClD;EACF,CAAC,CAAC;EACF,EAAE,CAAC,WAAW,EAAE,YAAM;IACpB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE;IACjC,IAAI,CAAC,CAAC;EACR,CAAC,CAAC;EACF,EAAE,CAAC,gEAAgE,EAAE,YAAM;IACzE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE;IACjC,UAAU,CAAC,CAAC;EACd,CAAC,CAAC;EACF,EAAE,CAAC,uCAAuC,EAAE,YAAM;IAChD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE;IACjC,gBAAgB,CAAC,CAAC;EACpB,CAAC,CAAC;EACF,EAAE,CAAC,kBAAkB,EAAE,YAAM;IAC3B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE;IACjC,gBAAgB,CAAC,CAAC;EACpB,CAAC,CAAC;EACF,EAAE,CAAC,SAAS,EAAE,YAAM;IAClB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE;IACjC,OAAO,CAAC,CAAC;EACX,CAAC,CAAC;AACJ;;;;;;;;;ACnVA,IAAA,UAAA,GAAA,OAAA;AAFA;AACA;;AAEe,SAAS,QAAQ,CAAA,IAAA,EAM7B;EAAA,IALD,MAAM,GAAA,IAAA,CAAN,MAAM;IACN,YAAY,GAAA,IAAA,CAAZ,YAAY;IACZ,EAAE,GAAA,IAAA,CAAF,EAAE;IACF,IAAI,GAAA,IAAA,CAAJ,IAAI;IACJ,MAAM,GAAA,IAAA,CAAN,MAAM;EAEN,MAAM,CAAC,QAAQ,GAAG;IAChB,OAAO,EAAE,KAAK;IACd,MAAM,EAAE,KAAK;IACb,QAAQ,EAAE;EACZ,CAAC;EACD,YAAY,CAAC;IACX,QAAQ,EAAE;MACR,OAAO,EAAE,KAAK;MACd,KAAK,EAAE,IAAI;MACX,iBAAiB,EAAE,IAAI;MACvB,oBAAoB,EAAE,IAAI;MAC1B,eAAe,EAAE,KAAK;MACtB,gBAAgB,EAAE,KAAK;MACvB,iBAAiB,EAAE;IACrB;EACF,CAAC,CAAC;EACF,IAAI,OAAO;EACX,IAAI,GAAG;EACP,IAAI,kBAAkB,GAAG,MAAM,IAAI,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI;EACjF,IAAI,oBAAoB,GAAG,MAAM,IAAI,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI;EACnF,IAAI,gBAAgB;EACpB,IAAI,iBAAiB,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO;EAC1C,IAAI,SAAS;EACb,IAAI,SAAS;EACb,IAAI,aAAa;EACjB,IAAI,iBAAiB;EACrB,IAAI,YAAY;EAChB,IAAI,mBAAmB;EACvB,SAAS,eAAe,CAAC,CAAC,EAAE;IAC1B,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;IACtD,IAAI,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,SAAS,EAAE;IACnC,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,eAAe,EAAE,eAAe,CAAC;IACtE,MAAM,CAAC,CAAC;EACV;EACA,IAAM,YAAY,GAAG,SAAf,YAAY,CAAA,EAAS;IACzB,IAAI,MAAM,CAAC,SAAS,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE;IAClD,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE;MAC1B,SAAS,GAAG,IAAI;IAClB,CAAC,MAAM,IAAI,SAAS,EAAE;MACpB,oBAAoB,GAAG,gBAAgB;MACvC,SAAS,GAAG,KAAK;IACnB;IACA,IAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,gBAAgB,GAAG,iBAAiB,GAAG,oBAAoB,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;IAC5H,MAAM,CAAC,QAAQ,CAAC,QAAQ,GAAG,QAAQ;IACnC,IAAI,CAAC,kBAAkB,EAAE,QAAQ,EAAE,QAAQ,GAAG,kBAAkB,CAAC;IACjE,GAAG,GAAG,qBAAqB,CAAC,YAAM;MAChC,YAAY,CAAC,CAAC;IAChB,CAAC,CAAC;EACJ,CAAC;EACD,IAAM,aAAa,GAAG,SAAhB,aAAa,CAAA,EAAS;IAC1B,IAAI,aAAa;IACjB,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE;MACnD,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAA,OAAO;QAAA,OAAI,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,qBAAqB,CAAC;MAAA,EAAC,CAAC,CAAC,CAAC;IACvG,CAAC,MAAM;MACL,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC;IACnD;IACA,IAAI,CAAC,aAAa,EAAE,OAAO,SAAS;IACpC,IAAM,iBAAiB,GAAG,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,sBAAsB,CAAC,EAAE,EAAE,CAAC;IAC1F,OAAO,iBAAiB;EAC1B,CAAC;EACD,IAAM,GAAG,GAAG,SAAN,GAAG,CAAG,UAAU,EAAI;IACxB,IAAI,MAAM,CAAC,SAAS,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE;IAClD,oBAAoB,CAAC,GAAG,CAAC;IACzB,YAAY,CAAC,CAAC;IACd,IAAI,KAAK,GAAG,OAAO,UAAU,KAAK,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,GAAG,UAAU;IACzF,kBAAkB,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK;IACjD,oBAAoB,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK;IACnD,IAAM,iBAAiB,GAAG,aAAa,CAAC,CAAC;IACzC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,iBAAiB,GAAG,CAAC,IAAI,OAAO,UAAU,KAAK,WAAW,EAAE;MAClG,KAAK,GAAG,iBAAiB;MACzB,kBAAkB,GAAG,iBAAiB;MACtC,oBAAoB,GAAG,iBAAiB;IAC1C;IACA,gBAAgB,GAAG,KAAK;IACxB,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK;IACjC,IAAM,OAAO,GAAG,SAAV,OAAO,CAAA,EAAS;MACpB,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,EAAE;MACjC,IAAI,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,gBAAgB,EAAE;QAC3C,IAAI,CAAC,MAAM,CAAC,WAAW,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;UACrE,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC;UACnC,IAAI,CAAC,UAAU,CAAC;QAClB,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,eAAe,EAAE;UAClD,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC;UAC3D,IAAI,CAAC,UAAU,CAAC;QAClB;MACF,CAAC,MAAM;QACL,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;UAC/D,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC;UACnC,IAAI,CAAC,UAAU,CAAC;QAClB,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,eAAe,EAAE;UAClD,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC;UACpC,IAAI,CAAC,UAAU,CAAC;QAClB;MACF;MACA,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE;QACzB,iBAAiB,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QACxC,qBAAqB,CAAC,YAAM;UAC1B,GAAG,CAAC,CAAC;QACP,CAAC,CAAC;MACJ;IACF,CAAC;IACD,IAAI,KAAK,GAAG,CAAC,EAAE;MACb,YAAY,CAAC,OAAO,CAAC;MACrB,OAAO,GAAG,UAAU,CAAC,YAAM;QACzB,OAAO,CAAC,CAAC;MACX,CAAC,EAAE,KAAK,CAAC;IACX,CAAC,MAAM;MACL,qBAAqB,CAAC,YAAM;QAC1B,OAAO,CAAC,CAAC;MACX,CAAC,CAAC;IACJ;;IAEA;IACA,OAAO,KAAK;EACd,CAAC;EACD,IAAM,KAAK,GAAG,SAAR,KAAK,CAAA,EAAS;IAClB,MAAM,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI;IAC9B,GAAG,CAAC,CAAC;IACL,IAAI,CAAC,eAAe,CAAC;EACvB,CAAC;EACD,IAAM,IAAI,GAAG,SAAP,IAAI,CAAA,EAAS;IACjB,MAAM,CAAC,QAAQ,CAAC,OAAO,GAAG,KAAK;IAC/B,YAAY,CAAC,OAAO,CAAC;IACrB,oBAAoB,CAAC,GAAG,CAAC;IACzB,IAAI,CAAC,cAAc,CAAC;EACtB,CAAC;EACD,IAAM,KAAK,GAAG,SAAR,KAAK,CAAI,QAAQ,EAAE,KAAK,EAAK;IACjC,IAAI,MAAM,CAAC,SAAS,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE;IAClD,YAAY,CAAC,OAAO,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE;MACb,mBAAmB,GAAG,IAAI;IAC5B;IACA,IAAM,OAAO,GAAG,SAAV,OAAO,CAAA,EAAS;MACpB,IAAI,CAAC,eAAe,CAAC;MACrB,IAAI,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,iBAAiB,EAAE;QAC5C,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,eAAe,EAAE,eAAe,CAAC;MACrE,CAAC,MAAM;QACL,MAAM,CAAC,CAAC;MACV;IACF,CAAC;IACD,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI;IAC7B,IAAI,KAAK,EAAE;MACT,IAAI,YAAY,EAAE;QAChB,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK;MACjD;MACA,YAAY,GAAG,KAAK;MACpB,OAAO,CAAC,CAAC;MACT;IACF;IACA,IAAM,KAAK,GAAG,gBAAgB,IAAI,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK;IAC9D,gBAAgB,GAAG,KAAK,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,iBAAiB,CAAC;IACrE,IAAI,MAAM,CAAC,KAAK,IAAI,gBAAgB,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE;IACjE,IAAI,gBAAgB,GAAG,CAAC,EAAE,gBAAgB,GAAG,CAAC;IAC9C,OAAO,CAAC,CAAC;EACX,CAAC;EACD,IAAM,MAAM,GAAG,SAAT,MAAM,CAAA,EAAS;IACnB,IAAI,MAAM,CAAC,KAAK,IAAI,gBAAgB,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,SAAS,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE;IACjH,iBAAiB,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;IACxC,IAAI,mBAAmB,EAAE;MACvB,mBAAmB,GAAG,KAAK;MAC3B,GAAG,CAAC,gBAAgB,CAAC;IACvB,CAAC,MAAM;MACL,GAAG,CAAC,CAAC;IACP;IACA,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,KAAK;IAC9B,IAAI,CAAC,gBAAgB,CAAC;EACxB,CAAC;EACD,IAAM,kBAAkB,GAAG,SAArB,kBAAkB,CAAA,EAAS;IAC/B,IAAI,MAAM,CAAC,SAAS,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE;IAClD,IAAM,QAAQ,GAAG,IAAA,sBAAW,EAAC,CAAC;IAC9B,IAAI,QAAQ,CAAC,eAAe,KAAK,QAAQ,EAAE;MACzC,mBAAmB,GAAG,IAAI;MAC1B,KAAK,CAAC,IAAI,CAAC;IACb;IACA,IAAI,QAAQ,CAAC,eAAe,KAAK,SAAS,EAAE;MAC1C,MAAM,CAAC,CAAC;IACV;EACF,CAAC;EACD,IAAM,cAAc,GAAG,SAAjB,cAAc,CAAG,CAAC,EAAI;IAC1B,IAAI,CAAC,CAAC,WAAW,KAAK,OAAO,EAAE;IAC/B,mBAAmB,GAAG,IAAI;IAC1B,KAAK,CAAC,IAAI,CAAC;EACb,CAAC;EACD,IAAM,cAAc,GAAG,SAAjB,cAAc,CAAG,CAAC,EAAI;IAC1B,IAAI,CAAC,CAAC,WAAW,KAAK,OAAO,EAAE;IAC/B,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE;MAC1B,MAAM,CAAC,CAAC;IACV;EACF,CAAC;EACD,IAAM,iBAAiB,GAAG,SAApB,iBAAiB,CAAA,EAAS;IAC9B,IAAI,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,iBAAiB,EAAE;MAC5C,MAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,cAAc,EAAE,cAAc,CAAC;MAC1D,MAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,cAAc,EAAE,cAAc,CAAC;IAC5D;EACF,CAAC;EACD,IAAM,iBAAiB,GAAG,SAApB,iBAAiB,CAAA,EAAS;IAC9B,MAAM,CAAC,EAAE,CAAC,mBAAmB,CAAC,cAAc,EAAE,cAAc,CAAC;IAC7D,MAAM,CAAC,EAAE,CAAC,mBAAmB,CAAC,cAAc,EAAE,cAAc,CAAC;EAC/D,CAAC;EACD,IAAM,oBAAoB,GAAG,SAAvB,oBAAoB,CAAA,EAAS;IACjC,IAAM,QAAQ,GAAG,IAAA,sBAAW,EAAC,CAAC;IAC9B,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,kBAAkB,CAAC;EACnE,CAAC;EACD,IAAM,oBAAoB,GAAG,SAAvB,oBAAoB,CAAA,EAAS;IACjC,IAAM,QAAQ,GAAG,IAAA,sBAAW,EAAC,CAAC;IAC9B,QAAQ,CAAC,mBAAmB,CAAC,kBAAkB,EAAE,kBAAkB,CAAC;EACtE,CAAC;EACD,EAAE,CAAC,MAAM,EAAE,YAAM;IACf,IAAI,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE;MAClC,iBAAiB,CAAC,CAAC;MACnB,oBAAoB,CAAC,CAAC;MACtB,iBAAiB,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;MACxC,KAAK,CAAC,CAAC;IACT;EACF,CAAC,CAAC;EACF,EAAE,CAAC,SAAS,EAAE,YAAM;IAClB,iBAAiB,CAAC,CAAC;IACnB,oBAAoB,CAAC,CAAC;IACtB,IAAI,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE;MAC3B,IAAI,CAAC,CAAC;IACR;EACF,CAAC,CAAC;EACF,EAAE,CAAC,uBAAuB,EAAE,UAAC,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAK;IACnD,IAAI,MAAM,CAAC,SAAS,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE;IAClD,IAAI,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,oBAAoB,EAAE;MAC5D,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC;IACnB,CAAC,MAAM;MACL,IAAI,CAAC,CAAC;IACR;EACF,CAAC,CAAC;EACF,EAAE,CAAC,iBAAiB,EAAE,YAAM;IAC1B,IAAI,MAAM,CAAC,SAAS,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE;IAClD,IAAI,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,oBAAoB,EAAE;MAC/C,IAAI,CAAC,CAAC;MACN;IACF;IACA,SAAS,GAAG,IAAI;IAChB,aAAa,GAAG,KAAK;IACrB,mBAAmB,GAAG,KAAK;IAC3B,iBAAiB,GAAG,UAAU,CAAC,YAAM;MACnC,mBAAmB,GAAG,IAAI;MAC1B,aAAa,GAAG,IAAI;MACpB,KAAK,CAAC,IAAI,CAAC;IACb,CAAC,EAAE,GAAG,CAAC;EACT,CAAC,CAAC;EACF,EAAE,CAAC,UAAU,EAAE,YAAM;IACnB,IAAI,MAAM,CAAC,SAAS,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,IAAI,CAAC,SAAS,EAAE;IAChE,YAAY,CAAC,iBAAiB,CAAC;IAC/B,YAAY,CAAC,OAAO,CAAC;IACrB,IAAI,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,oBAAoB,EAAE;MAC/C,aAAa,GAAG,KAAK;MACrB,SAAS,GAAG,KAAK;MACjB;IACF;IACA,IAAI,aAAa,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;IACpD,aAAa,GAAG,KAAK;IACrB,SAAS,GAAG,KAAK;EACnB,CAAC,CAAC;EACF,EAAE,CAAC,aAAa,EAAE,YAAM;IACtB,IAAI,MAAM,CAAC,SAAS,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE;IAClD,YAAY,GAAG,IAAI;EACrB,CAAC,CAAC;EACF,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE;IAC7B,KAAK,EAAL,KAAK;IACL,IAAI,EAAJ,IAAI;IACJ,KAAK,EAAL,KAAK;IACL,MAAM,EAAN;EACF,CAAC,CAAC;AACJ;;;;;;;;;ACrRA,IAAA,MAAA,GAAA,OAAA;AADA;;AAEe,SAAS,UAAU,CAAA,IAAA,EAI/B;EAAA,IAHD,MAAM,GAAA,IAAA,CAAN,MAAM;IACN,YAAY,GAAA,IAAA,CAAZ,YAAY;IACZ,EAAE,GAAA,IAAA,CAAF,EAAE;EAEF,YAAY,CAAC;IACX,UAAU,EAAE;MACV,OAAO,EAAE,SAAS;MAClB,OAAO,EAAE,KAAK;MACd,EAAE,EAAE,OAAO,CAAC;IACd;EACF,CAAC,CAAC;;EAEF,MAAM,CAAC,UAAU,GAAG;IAClB,OAAO,EAAE;EACX,CAAC;EACD,SAAS,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE;IAC1B,IAAM,YAAY,GAAG,SAAS,MAAM,CAAA,EAAG;MACrC,IAAI,QAAQ;MACZ,IAAI,QAAQ;MACZ,IAAI,KAAK;MACT,OAAO,UAAC,KAAK,EAAE,GAAG,EAAK;QACrB,QAAQ,GAAG,CAAC,CAAC;QACb,QAAQ,GAAG,KAAK,CAAC,MAAM;QACvB,OAAO,QAAQ,GAAG,QAAQ,GAAG,CAAC,EAAE;UAC9B,KAAK,GAAG,QAAQ,GAAG,QAAQ,IAAI,CAAC;UAChC,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE;YACvB,QAAQ,GAAG,KAAK;UAClB,CAAC,MAAM;YACL,QAAQ,GAAG,KAAK;UAClB;QACF;QACA,OAAO,QAAQ;MACjB,CAAC;IACH,CAAC,CAAC,CAAC;IACH,IAAI,CAAC,CAAC,GAAG,CAAC;IACV,IAAI,CAAC,CAAC,GAAG,CAAC;IACV,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC;IAC7B;IACA;IACA;IACA,IAAI,EAAE;IACN,IAAI,EAAE;IACN,IAAI,CAAC,WAAW,GAAG,SAAS,WAAW,CAAC,EAAE,EAAE;MAC1C,IAAI,CAAC,EAAE,EAAE,OAAO,CAAC;;MAEjB;MACA,EAAE,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC;MAC7B,EAAE,GAAG,EAAE,GAAG,CAAC;;MAEX;MACA;MACA,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC/F,CAAC;IACD,OAAO,IAAI;EACb;EACA,SAAS,sBAAsB,CAAC,CAAC,EAAE;IACjC,MAAM,CAAC,UAAU,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC,UAAU,CAAC,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,QAAQ,CAAC;EACnJ;EACA,SAAS,YAAY,CAAC,EAAE,EAAE,YAAY,EAAE;IACtC,IAAM,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,OAAO;IAC5C,IAAI,UAAU;IACd,IAAI,mBAAmB;IACvB,IAAM,MAAM,GAAG,MAAM,CAAC,WAAW;IACjC,SAAS,sBAAsB,CAAC,CAAC,EAAE;MACjC,IAAI,CAAC,CAAC,SAAS,EAAE;;MAEjB;MACA;MACA;MACA;MACA,IAAM,SAAS,GAAG,MAAM,CAAC,YAAY,GAAG,CAAC,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS;MAC5E,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,KAAK,OAAO,EAAE;QAC3C,sBAAsB,CAAC,CAAC,CAAC;QACzB;QACA;QACA,mBAAmB,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC;MACzE;MACA,IAAI,CAAC,mBAAmB,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,KAAK,WAAW,EAAE;QACvE,UAAU,GAAG,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC,KAAK,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;QACpG,IAAI,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;UAC5D,UAAU,GAAG,CAAC;QAChB;QACA,mBAAmB,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,UAAU,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC;MAC3F;MACA,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,EAAE;QACpC,mBAAmB,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC,GAAG,mBAAmB;MAC9D;MACA,CAAC,CAAC,cAAc,CAAC,mBAAmB,CAAC;MACrC,CAAC,CAAC,YAAY,CAAC,mBAAmB,EAAE,MAAM,CAAC;MAC3C,CAAC,CAAC,iBAAiB,CAAC,CAAC;MACrB,CAAC,CAAC,mBAAmB,CAAC,CAAC;IACzB;IACA,IAAI,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;MAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;QAC7C,IAAI,UAAU,CAAC,CAAC,CAAC,KAAK,YAAY,IAAI,UAAU,CAAC,CAAC,CAAC,YAAY,MAAM,EAAE;UACrE,sBAAsB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACvC;MACF;IACF,CAAC,MAAM,IAAI,UAAU,YAAY,MAAM,IAAI,YAAY,KAAK,UAAU,EAAE;MACtE,sBAAsB,CAAC,UAAU,CAAC;IACpC;EACF;EACA,SAAS,aAAa,CAAC,QAAQ,EAAE,YAAY,EAAE;IAC7C,IAAM,MAAM,GAAG,MAAM,CAAC,WAAW;IACjC,IAAM,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,OAAO;IAC5C,IAAI,CAAC;IACL,SAAS,uBAAuB,CAAC,CAAC,EAAE;MAClC,IAAI,CAAC,CAAC,SAAS,EAAE;MACjB,CAAC,CAAC,aAAa,CAAC,QAAQ,EAAE,MAAM,CAAC;MACjC,IAAI,QAAQ,KAAK,CAAC,EAAE;QAClB,CAAC,CAAC,eAAe,CAAC,CAAC;QACnB,IAAI,CAAC,CAAC,MAAM,CAAC,UAAU,EAAE;UACvB,IAAA,eAAQ,EAAC,YAAM;YACb,CAAC,CAAC,gBAAgB,CAAC,CAAC;UACtB,CAAC,CAAC;QACJ;QACA,IAAA,2BAAoB,EAAC,CAAC,CAAC,SAAS,EAAE,YAAM;UACtC,IAAI,CAAC,UAAU,EAAE;UACjB,CAAC,CAAC,aAAa,CAAC,CAAC;QACnB,CAAC,CAAC;MACJ;IACF;IACA,IAAI,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;MAC7B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;QACzC,IAAI,UAAU,CAAC,CAAC,CAAC,KAAK,YAAY,IAAI,UAAU,CAAC,CAAC,CAAC,YAAY,MAAM,EAAE;UACrE,uBAAuB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACxC;MACF;IACF,CAAC,MAAM,IAAI,UAAU,YAAY,MAAM,IAAI,YAAY,KAAK,UAAU,EAAE;MACtE,uBAAuB,CAAC,UAAU,CAAC;IACrC;EACF;EACA,SAAS,YAAY,CAAA,EAAG;IACtB,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,EAAE;IAChC,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE;MAC5B,MAAM,CAAC,UAAU,CAAC,MAAM,GAAG,SAAS;MACpC,OAAO,MAAM,CAAC,UAAU,CAAC,MAAM;IACjC;EACF;EACA,EAAE,CAAC,YAAY,EAAE,YAAM;IACrB,IAAI,OAAO,MAAM,KAAK,WAAW;IACjC;IACA,OAAO,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,KAAK,QAAQ,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,YAAY,WAAW,CAAC,EAAE;MAChH,IAAM,cAAc,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC;MAC/E,IAAI,cAAc,IAAI,cAAc,CAAC,MAAM,EAAE;QAC3C,MAAM,CAAC,UAAU,CAAC,OAAO,GAAG,cAAc,CAAC,MAAM;MACnD,CAAC,MAAM,IAAI,cAAc,EAAE;QACzB,IAAM,kBAAkB,GAAG,SAArB,kBAAkB,CAAG,CAAC,EAAI;UAC9B,MAAM,CAAC,UAAU,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;UACvC,MAAM,CAAC,MAAM,CAAC,CAAC;UACf,cAAc,CAAC,mBAAmB,CAAC,MAAM,EAAE,kBAAkB,CAAC;QAChE,CAAC;QACD,cAAc,CAAC,gBAAgB,CAAC,MAAM,EAAE,kBAAkB,CAAC;MAC7D;MACA;IACF;IACA,MAAM,CAAC,UAAU,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO;EAC9D,CAAC,CAAC;EACF,EAAE,CAAC,QAAQ,EAAE,YAAM;IACjB,YAAY,CAAC,CAAC;EAChB,CAAC,CAAC;EACF,EAAE,CAAC,QAAQ,EAAE,YAAM;IACjB,YAAY,CAAC,CAAC;EAChB,CAAC,CAAC;EACF,EAAE,CAAC,gBAAgB,EAAE,YAAM;IACzB,YAAY,CAAC,CAAC;EAChB,CAAC,CAAC;EACF,EAAE,CAAC,cAAc,EAAE,UAAC,EAAE,EAAE,SAAS,EAAE,YAAY,EAAK;IAClD,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,IAAI,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,EAAE;IACvE,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,SAAS,EAAE,YAAY,CAAC;EACzD,CAAC,CAAC;EACF,EAAE,CAAC,eAAe,EAAE,UAAC,EAAE,EAAE,QAAQ,EAAE,YAAY,EAAK;IAClD,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,IAAI,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,EAAE;IACvE,MAAM,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,EAAE,YAAY,CAAC;EACzD,CAAC,CAAC;EACF,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE;IAC/B,YAAY,EAAZ,YAAY;IACZ,aAAa,EAAb;EACF,CAAC,CAAC;AACJ;;;;;;;;;ACtLA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,2BAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,MAAA,GAAA,OAAA;AAA4D,SAAA,uBAAA,GAAA,WAAA,GAAA,IAAA,GAAA,CAAA,UAAA,GAAA,GAAA,gBAAA,GAAA;AAC7C,SAAS,WAAW,CAAA,IAAA,EAIhC;EAAA,IAHD,MAAM,GAAA,IAAA,CAAN,MAAM;IACN,YAAY,GAAA,IAAA,CAAZ,YAAY;IACZ,EAAE,GAAA,IAAA,CAAF,EAAE;EAEF,YAAY,CAAC;IACX,WAAW,EAAE;MACX,YAAY,EAAE,IAAI;MAClB,MAAM,EAAE,IAAI;MACZ,cAAc,EAAE,CAAC;MACjB,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EACF,IAAM,YAAY,GAAG,SAAf,YAAY,CAAA,EAAS;IACzB,IACE,MAAM,GAEJ,MAAM,CAFR,MAAM;MACN,WAAW,GACT,MAAM,CADR,WAAW;IAEb,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW;IACxC,IAAA,qBAAA,GAGI,MAAM,CAAC,eAAe;MAFxB,cAAc,GAAA,qBAAA,CAAd,cAAc;MACd,SAAS,GAAA,qBAAA,CAAT,SAAS;IAEX,IAAM,gBAAgB,GAAG,MAAM,CAAC,SAAS;IACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;MACzC,IAAM,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC;MACzB,IAAM,aAAa,GAAG,OAAO,CAAC,QAAQ;MACtC,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;MACzD,IAAI,MAAM,GAAG,OAAO,CAAC,iBAAiB;MACtC,IAAI,MAAM,CAAC,MAAM,CAAC,cAAc,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE;QAC1D,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,iBAAA,MAAA,CAAiB,MAAM,CAAC,YAAY,CAAC,CAAC,QAAK;MAC7E;MACA,IAAI,MAAM,CAAC,MAAM,CAAC,cAAc,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE;QACzD,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,iBAAiB;MACvC;MACA,IAAI,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,SAAS,GAAG,CAAC,MAAM;MACrE,IAAI,EAAE,GAAG,CAAC;MACV,IAAM,EAAE,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;MACpC,IAAI,KAAK,GAAG,CAAC;MACb,IAAI,MAAM,GAAG,CAAC,MAAM,CAAC,cAAc,GAAG,QAAQ;MAC9C,IAAI,KAAK,GAAG,MAAM,CAAC,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,IAAI;MAC7D,IAAM,UAAU,GAAG,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC;MAChG,IAAM,aAAa,GAAG,CAAC,UAAU,KAAK,WAAW,IAAI,UAAU,KAAK,WAAW,GAAG,CAAC,KAAK,QAAQ,GAAG,CAAC,IAAI,QAAQ,GAAG,CAAC,KAAK,SAAS,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,gBAAgB,GAAG,cAAc;MACjM,IAAM,aAAa,GAAG,CAAC,UAAU,KAAK,WAAW,IAAI,UAAU,KAAK,WAAW,GAAG,CAAC,KAAK,QAAQ,GAAG,CAAC,IAAI,QAAQ,GAAG,CAAC,CAAC,KAAK,SAAS,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,gBAAgB,GAAG,cAAc;MAClM,IAAI,aAAa,IAAI,aAAa,EAAE;QAClC,IAAM,WAAW,GAAA,IAAA,CAAA,GAAA,CAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,EAAK,GAAG;QAC3E,MAAM,IAAI,CAAC,EAAE,GAAG,QAAQ,GAAG,WAAW;QACtC,KAAK,IAAI,CAAC,GAAG,GAAG,WAAW;QAC3B,KAAK,IAAI,EAAE,GAAG,WAAW;QACzB,EAAE,MAAA,MAAA,CAAM,CAAC,EAAE,GAAG,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAG;MACnD;MACA,IAAI,QAAQ,GAAG,CAAC,EAAE;QAChB;QACA,EAAE,WAAA,MAAA,CAAW,EAAE,YAAA,MAAA,CAAS,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAK;MACzD,CAAC,MAAM,IAAI,QAAQ,GAAG,CAAC,EAAE;QACvB;QACA,EAAE,WAAA,MAAA,CAAW,EAAE,aAAA,MAAA,CAAU,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAK;MAC1D,CAAC,MAAM;QACL,EAAE,MAAA,MAAA,CAAM,EAAE,OAAI;MAChB;MACA,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;QAC1B,IAAM,KAAK,GAAG,EAAE;QAChB,EAAE,GAAG,EAAE;QACP,EAAE,GAAG,KAAK;MACZ;MACA,IAAM,WAAW,GAAG,QAAQ,GAAG,CAAC,MAAA,MAAA,CAAM,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,IAAI,QAAQ,OAAA,MAAA,CAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,IAAI,QAAQ,CAAE;MACpG,IAAM,SAAS,4BAAA,MAAA,CACC,EAAE,QAAA,MAAA,CAAK,EAAE,QAAA,MAAA,CAAK,EAAE,2BAAA,MAAA,CACpB,MAAM,CAAC,MAAM,GAAG,MAAM,GAAG,CAAC,0BAAA,MAAA,CAC5B,WAAW,cACpB;MACD,IAAI,MAAM,CAAC,YAAY,EAAE;QACvB;QACA,IAAI,QAAQ,GAAG,OAAO,CAAC,aAAa,CAAC,sBAAsB,CAAC;QAC5D,IAAI,CAAC,QAAQ,EAAE;UACb,QAAQ,GAAG,IAAA,wBAAY,EAAC,MAAM,EAAE,OAAO,CAAC;QAC1C;QACA,IAAI,QAAQ,EAAE,QAAQ,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MACnG;MACA,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM;MAC3E,IAAM,QAAQ,GAAG,IAAA,wBAAY,EAAC,MAAM,EAAE,OAAO,CAAC;MAC9C,QAAQ,CAAC,KAAK,CAAC,SAAS,GAAG,SAAS;IACtC;EACF,CAAC;EACD,IAAM,aAAa,GAAG,SAAhB,aAAa,CAAG,QAAQ,EAAI;IAChC,IAAM,iBAAiB,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,UAAA,OAAO;MAAA,OAAI,IAAA,0BAAmB,EAAC,OAAO,CAAC;IAAA,EAAC;IACpF,iBAAiB,CAAC,OAAO,CAAC,UAAA,EAAE,EAAI;MAC9B,EAAE,CAAC,KAAK,CAAC,kBAAkB,MAAA,MAAA,CAAM,QAAQ,OAAI;MAC7C,EAAE,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,CAAC,OAAO,CAAC,UAAA,QAAQ,EAAI;QAC9D,QAAQ,CAAC,KAAK,CAAC,kBAAkB,MAAA,MAAA,CAAM,QAAQ,OAAI;MACrD,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,IAAA,sCAA0B,EAAC;MACzB,MAAM,EAAN,MAAM;MACN,QAAQ,EAAR,QAAQ;MACR,iBAAiB,EAAjB;IACF,CAAC,CAAC;EACJ,CAAC;EACD,IAAA,sBAAU,EAAC;IACT,MAAM,EAAE,OAAO;IACf,MAAM,EAAN,MAAM;IACN,EAAE,EAAF,EAAE;IACF,YAAY,EAAZ,YAAY;IACZ,aAAa,EAAb,aAAa;IACb,WAAW,EAAE,SAAA,YAAA;MAAA,OAAM,IAAI;IAAA;IACvB,eAAe,EAAE,SAAA,gBAAA;MAAA,OAAO;QACtB,mBAAmB,EAAE,IAAI;QACzB,gBAAgB,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC;MACnC,CAAC;IAAA;EACH,CAAC,CAAC;AACJ;;;;;;;;;ACnHA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,MAAA,GAAA,OAAA;AAA4D,SAAA,uBAAA,GAAA,WAAA,GAAA,IAAA,GAAA,CAAA,UAAA,GAAA,GAAA,gBAAA,GAAA;AAC7C,SAAS,eAAe,CAAA,IAAA,EAIpC;EAAA,IAHD,MAAM,GAAA,IAAA,CAAN,MAAM;IACN,YAAY,GAAA,IAAA,CAAZ,YAAY;IACZ,EAAE,GAAA,IAAA,CAAF,EAAE;EAEF,YAAY,CAAC;IACX,eAAe,EAAE;MACf,MAAM,EAAE,EAAE;MACV,OAAO,EAAE,CAAC;MACV,KAAK,EAAE,GAAG;MACV,KAAK,EAAE,CAAC;MACR,QAAQ,EAAE,CAAC;MACX,YAAY,EAAE;IAChB;EACF,CAAC,CAAC;EACF,IAAM,YAAY,GAAG,SAAf,YAAY,CAAA,EAAS;IACzB,IACS,WAAW,GAIhB,MAAM,CAJR,KAAK;MACG,YAAY,GAGlB,MAAM,CAHR,MAAM;MACN,MAAM,GAEJ,MAAM,CAFR,MAAM;MACN,eAAe,GACb,MAAM,CADR,eAAe;IAEjB,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,eAAe;IAC5C,IAAM,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;IAC1C,IAAM,SAAS,GAAG,MAAM,CAAC,SAAS;IAClC,IAAM,MAAM,GAAG,YAAY,GAAG,CAAC,SAAS,GAAG,WAAW,GAAG,CAAC,GAAG,CAAC,SAAS,GAAG,YAAY,GAAG,CAAC;IAC1F,IAAM,MAAM,GAAG,YAAY,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,MAAM,CAAC,MAAM;IAC5D,IAAM,SAAS,GAAG,MAAM,CAAC,KAAK;IAC9B;IACA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;MAC1D,IAAM,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC;MACzB,IAAM,SAAS,GAAG,eAAe,CAAC,CAAC,CAAC;MACpC,IAAM,WAAW,GAAG,OAAO,CAAC,iBAAiB;MAC7C,IAAM,YAAY,GAAG,CAAC,MAAM,GAAG,WAAW,GAAG,SAAS,GAAG,CAAC,IAAI,SAAS;MACvE,IAAM,gBAAgB,GAAG,OAAO,MAAM,CAAC,QAAQ,KAAK,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,YAAY,GAAG,MAAM,CAAC,QAAQ;MAC/H,IAAI,OAAO,GAAG,YAAY,GAAG,MAAM,GAAG,gBAAgB,GAAG,CAAC;MAC1D,IAAI,OAAO,GAAG,YAAY,GAAG,CAAC,GAAG,MAAM,GAAG,gBAAgB;MAC1D;MACA,IAAI,UAAU,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC;MACxD,IAAI,OAAO,GAAG,MAAM,CAAC,OAAO;MAC5B;MACA,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;QAC9D,OAAO,GAAG,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,GAAG,GAAG,SAAS;MACxD;MACA,IAAI,UAAU,GAAG,YAAY,GAAG,CAAC,GAAG,OAAO,GAAG,gBAAgB;MAC9D,IAAI,UAAU,GAAG,YAAY,GAAG,OAAO,GAAG,gBAAgB,GAAG,CAAC;MAC9D,IAAI,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC;;MAE/D;MACA,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,KAAK,EAAE,UAAU,GAAG,CAAC;MAChD,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,KAAK,EAAE,UAAU,GAAG,CAAC;MAChD,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,KAAK,EAAE,UAAU,GAAG,CAAC;MAChD,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,KAAK,EAAE,OAAO,GAAG,CAAC;MAC1C,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,KAAK,EAAE,OAAO,GAAG,CAAC;MAC1C,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,KAAK,EAAE,KAAK,GAAG,CAAC;MACtC,IAAM,cAAc,kBAAA,MAAA,CAAkB,UAAU,SAAA,MAAA,CAAM,UAAU,SAAA,MAAA,CAAM,UAAU,mBAAA,MAAA,CAAgB,OAAO,mBAAA,MAAA,CAAgB,OAAO,iBAAA,MAAA,CAAc,KAAK,MAAG;MACpJ,IAAM,QAAQ,GAAG,IAAA,wBAAY,EAAC,MAAM,EAAE,OAAO,CAAC;MAC9C,QAAQ,CAAC,KAAK,CAAC,SAAS,GAAG,cAAc;MACzC,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,GAAG,CAAC;MAClE,IAAI,MAAM,CAAC,YAAY,EAAE;QACvB;QACA,IAAI,cAAc,GAAG,YAAY,GAAG,OAAO,CAAC,aAAa,CAAC,2BAA2B,CAAC,GAAG,OAAO,CAAC,aAAa,CAAC,0BAA0B,CAAC;QAC1I,IAAI,aAAa,GAAG,YAAY,GAAG,OAAO,CAAC,aAAa,CAAC,4BAA4B,CAAC,GAAG,OAAO,CAAC,aAAa,CAAC,6BAA6B,CAAC;QAC7I,IAAI,CAAC,cAAc,EAAE;UACnB,cAAc,GAAG,IAAA,wBAAY,EAAC,MAAM,EAAE,OAAO,EAAE,YAAY,GAAG,MAAM,GAAG,KAAK,CAAC;QAC/E;QACA,IAAI,CAAC,aAAa,EAAE;UAClB,aAAa,GAAG,IAAA,wBAAY,EAAC,MAAM,EAAE,OAAO,EAAE,YAAY,GAAG,OAAO,GAAG,QAAQ,CAAC;QAClF;QACA,IAAI,cAAc,EAAE,cAAc,CAAC,KAAK,CAAC,OAAO,GAAG,gBAAgB,GAAG,CAAC,GAAG,gBAAgB,GAAG,CAAC;QAC9F,IAAI,aAAa,EAAE,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,gBAAgB,GAAG,CAAC,GAAG,CAAC,gBAAgB,GAAG,CAAC;MAChG;IACF;EACF,CAAC;EACD,IAAM,aAAa,GAAG,SAAhB,aAAa,CAAG,QAAQ,EAAI;IAChC,IAAM,iBAAiB,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,UAAA,OAAO;MAAA,OAAI,IAAA,0BAAmB,EAAC,OAAO,CAAC;IAAA,EAAC;IACpF,iBAAiB,CAAC,OAAO,CAAC,UAAA,EAAE,EAAI;MAC9B,EAAE,CAAC,KAAK,CAAC,kBAAkB,MAAA,MAAA,CAAM,QAAQ,OAAI;MAC7C,EAAE,CAAC,gBAAgB,CAAC,8GAA8G,CAAC,CAAC,OAAO,CAAC,UAAA,QAAQ,EAAI;QACtJ,QAAQ,CAAC,KAAK,CAAC,kBAAkB,MAAA,MAAA,CAAM,QAAQ,OAAI;MACrD,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;EACD,IAAA,sBAAU,EAAC;IACT,MAAM,EAAE,WAAW;IACnB,MAAM,EAAN,MAAM;IACN,EAAE,EAAF,EAAE;IACF,YAAY,EAAZ,YAAY;IACZ,aAAa,EAAb,aAAa;IACb,WAAW,EAAE,SAAA,YAAA;MAAA,OAAM,IAAI;IAAA;IACvB,eAAe,EAAE,SAAA,gBAAA;MAAA,OAAO;QACtB,mBAAmB,EAAE;MACvB,CAAC;IAAA;EACH,CAAC,CAAC;AACJ;;;;;;;;;AClGA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,2BAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,MAAA,GAAA,OAAA;AAA4D,SAAA,uBAAA,GAAA,WAAA,GAAA,IAAA,GAAA,CAAA,UAAA,GAAA,GAAA,gBAAA,GAAA;AAC7C,SAAS,cAAc,CAAA,IAAA,EAInC;EAAA,IAHD,MAAM,GAAA,IAAA,CAAN,MAAM;IACN,YAAY,GAAA,IAAA,CAAZ,YAAY;IACZ,EAAE,GAAA,IAAA,CAAF,EAAE;EAEF,YAAY,CAAC;IACX,cAAc,EAAE;MACd,aAAa,EAAE,CAAC;MAChB,iBAAiB,EAAE,KAAK;MACxB,kBAAkB,EAAE,CAAC;MACrB,WAAW,EAAE,IAAI;MACjB,IAAI,EAAE;QACJ,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACpB,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACjB,OAAO,EAAE,CAAC;QACV,KAAK,EAAE;MACT,CAAC;MACD,IAAI,EAAE;QACJ,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACpB,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACjB,OAAO,EAAE,CAAC;QACV,KAAK,EAAE;MACT;IACF;EACF,CAAC,CAAC;EACF,IAAM,iBAAiB,GAAG,SAApB,iBAAiB,CAAG,KAAK,EAAI;IACjC,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,OAAO,KAAK;IAC3C,UAAA,MAAA,CAAU,KAAK;EACjB,CAAC;EACD,IAAM,YAAY,GAAG,SAAf,YAAY,CAAA,EAAS;IACzB,IACE,MAAM,GAGJ,MAAM,CAHR,MAAM;MACN,SAAS,GAEP,MAAM,CAFR,SAAS;MACT,eAAe,GACb,MAAM,CADR,eAAe;IAEjB,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,cAAc;IAC3C,IACsB,UAAU,GAC5B,MAAM,CADR,kBAAkB;IAEpB,IAAM,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,cAAc;IACrD,IAAI,gBAAgB,EAAE;MACpB,IAAM,MAAM,GAAG,eAAe,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,kBAAkB,IAAI,CAAC;MAC7E,SAAS,CAAC,KAAK,CAAC,SAAS,4BAAA,MAAA,CAA4B,MAAM,SAAM;IACnE;IAAC,IAAA,KAAA,YAAA,MAAA,EAC0C;MACzC,IAAM,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC;MACzB,IAAM,aAAa,GAAG,OAAO,CAAC,QAAQ;MACtC,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,MAAM,CAAC,aAAa,CAAC;MAClG,IAAI,gBAAgB,GAAG,QAAQ;MAC/B,IAAI,CAAC,gBAAgB,EAAE;QACrB,gBAAgB,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,MAAM,CAAC,aAAa,CAAC;MAC9G;MACA,IAAM,MAAM,GAAG,OAAO,CAAC,iBAAiB;MACxC,IAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,SAAS,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;MAC9E,IAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACnB,IAAI,MAAM,GAAG,KAAK;MAClB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;QAC1B,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;MACV;MACA,IAAI,IAAI,GAAG;QACT,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACpB,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACjB,KAAK,EAAE,CAAC;QACR,OAAO,EAAE;MACX,CAAC;MACD,IAAI,QAAQ,GAAG,CAAC,EAAE;QAChB,IAAI,GAAG,MAAM,CAAC,IAAI;QAClB,MAAM,GAAG,IAAI;MACf,CAAC,MAAM,IAAI,QAAQ,GAAG,CAAC,EAAE;QACvB,IAAI,GAAG,MAAM,CAAC,IAAI;QAClB,MAAM,GAAG,IAAI;MACf;MACA;MACA,CAAC,CAAC,OAAO,CAAC,UAAC,KAAK,EAAE,KAAK,EAAK;QAC1B,CAAC,CAAC,KAAK,CAAC,WAAA,MAAA,CAAW,KAAK,YAAA,MAAA,CAAS,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,SAAA,MAAA,CAAM,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,UAAU,CAAC,OAAI;MACpH,CAAC,CAAC;MACF;MACA,CAAC,CAAC,OAAO,CAAC,UAAC,KAAK,EAAE,KAAK,EAAK;QAC1B,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,UAAU,CAAC;MACjE,CAAC,CAAC;MACF,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM;MAC3E,IAAM,eAAe,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;MACpC,IAAM,YAAY,cAAA,MAAA,CAAc,CAAC,CAAC,CAAC,CAAC,mBAAA,MAAA,CAAgB,CAAC,CAAC,CAAC,CAAC,mBAAA,MAAA,CAAgB,CAAC,CAAC,CAAC,CAAC,SAAM;MAClF,IAAM,WAAW,GAAG,gBAAgB,GAAG,CAAC,YAAA,MAAA,CAAY,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,gBAAgB,GAAG,UAAU,kBAAA,MAAA,CAAe,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,gBAAgB,GAAG,UAAU,MAAG;MAC9K,IAAM,aAAa,GAAG,gBAAgB,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,gBAAgB,GAAG,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,gBAAgB,GAAG,UAAU;MAC5J,IAAM,SAAS,kBAAA,MAAA,CAAkB,eAAe,QAAA,MAAA,CAAK,YAAY,OAAA,MAAA,CAAI,WAAW,CAAE;;MAElF;MACA,IAAI,MAAM,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,EAAE;QACpC,IAAI,QAAQ,GAAG,OAAO,CAAC,aAAa,CAAC,sBAAsB,CAAC;QAC5D,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,EAAE;UAC5B,QAAQ,GAAG,IAAA,wBAAY,EAAC,MAAM,EAAE,OAAO,CAAC;QAC1C;QACA,IAAI,QAAQ,EAAE;UACZ,IAAM,aAAa,GAAG,MAAM,CAAC,iBAAiB,GAAG,QAAQ,IAAI,CAAC,GAAG,MAAM,CAAC,aAAa,CAAC,GAAG,QAAQ;UACjG,QAAQ,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QAC5E;MACF;MACA,IAAM,QAAQ,GAAG,IAAA,wBAAY,EAAC,MAAM,EAAE,OAAO,CAAC;MAC9C,QAAQ,CAAC,KAAK,CAAC,SAAS,GAAG,SAAS;MACpC,QAAQ,CAAC,KAAK,CAAC,OAAO,GAAG,aAAa;MACtC,IAAI,IAAI,CAAC,MAAM,EAAE;QACf,QAAQ,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM;MAC9C;IACF,CAAC;IA7DD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;MAAA,KAAA;IAAA;EA8D3C,CAAC;EACD,IAAM,aAAa,GAAG,SAAhB,aAAa,CAAG,QAAQ,EAAI;IAChC,IAAM,iBAAiB,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,UAAA,OAAO;MAAA,OAAI,IAAA,0BAAmB,EAAC,OAAO,CAAC;IAAA,EAAC;IACpF,iBAAiB,CAAC,OAAO,CAAC,UAAA,EAAE,EAAI;MAC9B,EAAE,CAAC,KAAK,CAAC,kBAAkB,MAAA,MAAA,CAAM,QAAQ,OAAI;MAC7C,EAAE,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,CAAC,OAAO,CAAC,UAAA,QAAQ,EAAI;QAC9D,QAAQ,CAAC,KAAK,CAAC,kBAAkB,MAAA,MAAA,CAAM,QAAQ,OAAI;MACrD,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,IAAA,sCAA0B,EAAC;MACzB,MAAM,EAAN,MAAM;MACN,QAAQ,EAAR,QAAQ;MACR,iBAAiB,EAAjB,iBAAiB;MACjB,SAAS,EAAE;IACb,CAAC,CAAC;EACJ,CAAC;EACD,IAAA,sBAAU,EAAC;IACT,MAAM,EAAE,UAAU;IAClB,MAAM,EAAN,MAAM;IACN,EAAE,EAAF,EAAE;IACF,YAAY,EAAZ,YAAY;IACZ,aAAa,EAAb,aAAa;IACb,WAAW,EAAE,SAAA,YAAA;MAAA,OAAM,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,WAAW;IAAA;IAC3D,eAAe,EAAE,SAAA,gBAAA;MAAA,OAAO;QACtB,mBAAmB,EAAE,IAAI;QACzB,gBAAgB,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC;MACnC,CAAC;IAAA;EACH,CAAC,CAAC;AACJ;;;;;;;;;AC3IA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,MAAA,GAAA,OAAA;AAAsD,SAAA,uBAAA,GAAA,WAAA,GAAA,IAAA,GAAA,CAAA,UAAA,GAAA,GAAA,gBAAA,GAAA;AACvC,SAAS,UAAU,CAAA,IAAA,EAI/B;EAAA,IAHD,MAAM,GAAA,IAAA,CAAN,MAAM;IACN,YAAY,GAAA,IAAA,CAAZ,YAAY;IACZ,EAAE,GAAA,IAAA,CAAF,EAAE;EAEF,YAAY,CAAC;IACX,UAAU,EAAE;MACV,YAAY,EAAE,IAAI;MAClB,MAAM,EAAE,IAAI;MACZ,YAAY,EAAE,EAAE;MAChB,WAAW,EAAE;IACf;EACF,CAAC,CAAC;EACF,IAAM,kBAAkB,GAAG,SAArB,kBAAkB,CAAI,OAAO,EAAE,QAAQ,EAAE,YAAY,EAAK;IAC9D,IAAI,YAAY,GAAG,YAAY,GAAG,OAAO,CAAC,aAAa,CAAC,2BAA2B,CAAC,GAAG,OAAO,CAAC,aAAa,CAAC,0BAA0B,CAAC;IACxI,IAAI,WAAW,GAAG,YAAY,GAAG,OAAO,CAAC,aAAa,CAAC,4BAA4B,CAAC,GAAG,OAAO,CAAC,aAAa,CAAC,6BAA6B,CAAC;IAC3I,IAAI,CAAC,YAAY,EAAE;MACjB,YAAY,GAAG,IAAA,oBAAa,EAAC,KAAK,yBAAA,MAAA,CAAyB,YAAY,GAAG,MAAM,GAAG,KAAK,CAAE,CAAC;MAC3F,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC;IAC9B;IACA,IAAI,CAAC,WAAW,EAAE;MAChB,WAAW,GAAG,IAAA,oBAAa,EAAC,KAAK,yBAAA,MAAA,CAAyB,YAAY,GAAG,OAAO,GAAG,QAAQ,CAAE,CAAC;MAC9F,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC;IAC7B;IACA,IAAI,YAAY,EAAE,YAAY,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;IACrE,IAAI,WAAW,EAAE,WAAW,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;EACpE,CAAC;EACD,IAAM,eAAe,GAAG,SAAlB,eAAe,CAAA,EAAS;IAC5B;IACA,IAAM,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;IAC1C,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,OAAO,EAAI;MAC/B,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC5D,kBAAkB,CAAC,OAAO,EAAE,QAAQ,EAAE,YAAY,CAAC;IACrD,CAAC,CAAC;EACJ,CAAC;EACD,IAAM,YAAY,GAAG,SAAf,YAAY,CAAA,EAAS;IACzB,IACE,EAAE,GAQA,MAAM,CARR,EAAE;MACF,SAAS,GAOP,MAAM,CAPR,SAAS;MACT,MAAM,GAMJ,MAAM,CANR,MAAM;MACC,WAAW,GAKhB,MAAM,CALR,KAAK;MACG,YAAY,GAIlB,MAAM,CAJR,MAAM;MACQ,GAAG,GAGf,MAAM,CAHR,YAAY;MACN,UAAU,GAEd,MAAM,CAFR,IAAI;MACJ,OAAO,GACL,MAAM,CADR,OAAO;IAET,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU;IACvC,IAAM,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;IAC1C,IAAM,SAAS,GAAG,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO;IACjE,IAAI,aAAa,GAAG,CAAC;IACrB,IAAI,YAAY;IAChB,IAAI,MAAM,CAAC,MAAM,EAAE;MACjB,IAAI,YAAY,EAAE;QAChB,YAAY,GAAG,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,qBAAqB,CAAC;QACnE,IAAI,CAAC,YAAY,EAAE;UACjB,YAAY,GAAG,IAAA,oBAAa,EAAC,KAAK,EAAE,oBAAoB,CAAC;UACzD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC;QACtC;QACA,YAAY,CAAC,KAAK,CAAC,MAAM,MAAA,MAAA,CAAM,WAAW,OAAI;MAChD,CAAC,MAAM;QACL,YAAY,GAAG,EAAE,CAAC,aAAa,CAAC,qBAAqB,CAAC;QACtD,IAAI,CAAC,YAAY,EAAE;UACjB,YAAY,GAAG,IAAA,oBAAa,EAAC,KAAK,EAAE,oBAAoB,CAAC;UACzD,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC;QACzB;MACF;IACF;IACA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;MACzC,IAAM,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC;MACzB,IAAI,UAAU,GAAG,CAAC;MAClB,IAAI,SAAS,EAAE;QACb,UAAU,GAAG,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,yBAAyB,CAAC,EAAE,EAAE,CAAC;MAC5E;MACA,IAAI,UAAU,GAAG,UAAU,GAAG,EAAE;MAChC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,GAAG,CAAC;MACxC,IAAI,GAAG,EAAE;QACP,UAAU,GAAG,CAAC,UAAU;QACxB,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,UAAU,GAAG,GAAG,CAAC;MACvC;MACA,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC5D,IAAI,EAAE,GAAG,CAAC;MACV,IAAI,EAAE,GAAG,CAAC;MACV,IAAI,EAAE,GAAG,CAAC;MACV,IAAI,UAAU,GAAG,CAAC,KAAK,CAAC,EAAE;QACxB,EAAE,GAAG,CAAC,KAAK,GAAG,CAAC,GAAG,UAAU;QAC5B,EAAE,GAAG,CAAC;MACR,CAAC,MAAM,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;QACrC,EAAE,GAAG,CAAC;QACN,EAAE,GAAG,CAAC,KAAK,GAAG,CAAC,GAAG,UAAU;MAC9B,CAAC,MAAM,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;QACrC,EAAE,GAAG,UAAU,GAAG,KAAK,GAAG,CAAC,GAAG,UAAU;QACxC,EAAE,GAAG,UAAU;MACjB,CAAC,MAAM,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;QACrC,EAAE,GAAG,CAAC,UAAU;QAChB,EAAE,GAAG,CAAC,GAAG,UAAU,GAAG,UAAU,GAAG,CAAC,GAAG,KAAK;MAC9C;MACA,IAAI,GAAG,EAAE;QACP,EAAE,GAAG,CAAC,EAAE;MACV;MACA,IAAI,CAAC,YAAY,EAAE;QACjB,EAAE,GAAG,EAAE;QACP,EAAE,GAAG,CAAC;MACR;MACA,IAAM,SAAS,cAAA,MAAA,CAAc,YAAY,GAAG,CAAC,GAAG,CAAC,UAAU,mBAAA,MAAA,CAAgB,YAAY,GAAG,UAAU,GAAG,CAAC,uBAAA,MAAA,CAAoB,EAAE,UAAA,MAAA,CAAO,EAAE,UAAA,MAAA,CAAO,EAAE,QAAK;MACrJ,IAAI,QAAQ,IAAI,CAAC,IAAI,QAAQ,GAAG,CAAC,CAAC,EAAE;QAClC,aAAa,GAAG,UAAU,GAAG,EAAE,GAAG,QAAQ,GAAG,EAAE;QAC/C,IAAI,GAAG,EAAE,aAAa,GAAG,CAAC,UAAU,GAAG,EAAE,GAAG,QAAQ,GAAG,EAAE;MAC3D;MACA,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,SAAS;MACnC,IAAI,MAAM,CAAC,YAAY,EAAE;QACvB,kBAAkB,CAAC,OAAO,EAAE,QAAQ,EAAE,YAAY,CAAC;MACrD;IACF;IACA,SAAS,CAAC,KAAK,CAAC,eAAe,eAAA,MAAA,CAAe,UAAU,GAAG,CAAC,OAAI;IAChE,SAAS,CAAC,KAAK,CAAC,0BAA0B,CAAC,eAAA,MAAA,CAAe,UAAU,GAAG,CAAC,OAAI;IAC5E,IAAI,MAAM,CAAC,MAAM,EAAE;MACjB,IAAI,YAAY,EAAE;QAChB,YAAY,CAAC,KAAK,CAAC,SAAS,uBAAA,MAAA,CAAuB,WAAW,GAAG,CAAC,GAAG,MAAM,CAAC,YAAY,UAAA,MAAA,CAAO,CAAC,WAAW,GAAG,CAAC,6CAAA,MAAA,CAA0C,MAAM,CAAC,WAAW,MAAG;MAChL,CAAC,MAAM;QACL,IAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE;QAC3F,IAAM,UAAU,GAAG,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;QACxH,IAAM,MAAM,GAAG,MAAM,CAAC,WAAW;QACjC,IAAM,MAAM,GAAG,MAAM,CAAC,WAAW,GAAG,UAAU;QAC9C,IAAM,MAAM,GAAG,MAAM,CAAC,YAAY;QAClC,YAAY,CAAC,KAAK,CAAC,SAAS,cAAA,MAAA,CAAc,MAAM,WAAA,MAAA,CAAQ,MAAM,yBAAA,MAAA,CAAsB,YAAY,GAAG,CAAC,GAAG,MAAM,UAAA,MAAA,CAAO,CAAC,YAAY,GAAG,CAAC,GAAG,MAAM,wBAAqB;MACrK;IACF;IACA,IAAM,OAAO,GAAG,CAAC,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,SAAS,KAAK,OAAO,CAAC,kBAAkB,GAAG,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC;IAC3G,SAAS,CAAC,KAAK,CAAC,SAAS,wBAAA,MAAA,CAAwB,OAAO,kBAAA,MAAA,CAAe,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,aAAa,mBAAA,MAAA,CAAgB,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,aAAa,GAAG,CAAC,SAAM;IAChL,SAAS,CAAC,KAAK,CAAC,WAAW,CAAC,2BAA2B,KAAA,MAAA,CAAK,OAAO,OAAI,CAAC;EAC1E,CAAC;EACD,IAAM,aAAa,GAAG,SAAhB,aAAa,CAAG,QAAQ,EAAI;IAChC,IACE,EAAE,GAEA,MAAM,CAFR,EAAE;MACF,MAAM,GACJ,MAAM,CADR,MAAM;IAER,MAAM,CAAC,OAAO,CAAC,UAAA,OAAO,EAAI;MACxB,OAAO,CAAC,KAAK,CAAC,kBAAkB,MAAA,MAAA,CAAM,QAAQ,OAAI;MAClD,OAAO,CAAC,gBAAgB,CAAC,8GAA8G,CAAC,CAAC,OAAO,CAAC,UAAA,KAAK,EAAI;QACxJ,KAAK,CAAC,KAAK,CAAC,kBAAkB,MAAA,MAAA,CAAM,QAAQ,OAAI;MAClD,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;MAC7D,IAAM,QAAQ,GAAG,EAAE,CAAC,aAAa,CAAC,qBAAqB,CAAC;MACxD,IAAI,QAAQ,EAAE,QAAQ,CAAC,KAAK,CAAC,kBAAkB,MAAA,MAAA,CAAM,QAAQ,OAAI;IACnE;EACF,CAAC;EACD,IAAA,sBAAU,EAAC;IACT,MAAM,EAAE,MAAM;IACd,MAAM,EAAN,MAAM;IACN,EAAE,EAAF,EAAE;IACF,YAAY,EAAZ,YAAY;IACZ,aAAa,EAAb,aAAa;IACb,eAAe,EAAf,eAAe;IACf,eAAe,EAAE,SAAA,gBAAA;MAAA,OAAM,MAAM,CAAC,MAAM,CAAC,UAAU;IAAA;IAC/C,WAAW,EAAE,SAAA,YAAA;MAAA,OAAM,IAAI;IAAA;IACvB,eAAe,EAAE,SAAA,gBAAA;MAAA,OAAO;QACtB,aAAa,EAAE,CAAC;QAChB,cAAc,EAAE,CAAC;QACjB,mBAAmB,EAAE,IAAI;QACzB,eAAe,EAAE,CAAC;QAClB,YAAY,EAAE,CAAC;QACf,cAAc,EAAE,KAAK;QACrB,gBAAgB,EAAE;MACpB,CAAC;IAAA;EACH,CAAC,CAAC;AACJ;;;;;;;;;ACxKA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,2BAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,MAAA,GAAA,OAAA;AAA4D,SAAA,uBAAA,GAAA,WAAA,GAAA,IAAA,GAAA,CAAA,UAAA,GAAA,GAAA,gBAAA,GAAA;AAC7C,SAAS,UAAU,CAAA,IAAA,EAI/B;EAAA,IAHD,MAAM,GAAA,IAAA,CAAN,MAAM;IACN,YAAY,GAAA,IAAA,CAAZ,YAAY;IACZ,EAAE,GAAA,IAAA,CAAF,EAAE;EAEF,YAAY,CAAC;IACX,UAAU,EAAE;MACV,SAAS,EAAE;IACb;EACF,CAAC,CAAC;EACF,IAAM,YAAY,GAAG,SAAf,YAAY,CAAA,EAAS;IACzB,IACE,MAAM,GACJ,MAAM,CADR,MAAM;IAER,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU;IACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;MACzC,IAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;MAChC,IAAM,MAAM,GAAG,OAAO,CAAC,iBAAiB;MACxC,IAAI,EAAE,GAAG,CAAC,MAAM;MAChB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAgB,EAAE,EAAE,IAAI,MAAM,CAAC,SAAS;MAC3D,IAAI,EAAE,GAAG,CAAC;MACV,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;QAC1B,EAAE,GAAG,EAAE;QACP,EAAE,GAAG,CAAC;MACR;MACA,IAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;MACvJ,IAAM,QAAQ,GAAG,IAAA,wBAAY,EAAC,MAAM,EAAE,OAAO,CAAC;MAC9C,QAAQ,CAAC,KAAK,CAAC,OAAO,GAAG,YAAY;MACrC,QAAQ,CAAC,KAAK,CAAC,SAAS,kBAAA,MAAA,CAAkB,EAAE,UAAA,MAAA,CAAO,EAAE,aAAU;IACjE;EACF,CAAC;EACD,IAAM,aAAa,GAAG,SAAhB,aAAa,CAAG,QAAQ,EAAI;IAChC,IAAM,iBAAiB,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,UAAA,OAAO;MAAA,OAAI,IAAA,0BAAmB,EAAC,OAAO,CAAC;IAAA,EAAC;IACpF,iBAAiB,CAAC,OAAO,CAAC,UAAA,EAAE,EAAI;MAC9B,EAAE,CAAC,KAAK,CAAC,kBAAkB,MAAA,MAAA,CAAM,QAAQ,OAAI;IAC/C,CAAC,CAAC;IACF,IAAA,sCAA0B,EAAC;MACzB,MAAM,EAAN,MAAM;MACN,QAAQ,EAAR,QAAQ;MACR,iBAAiB,EAAjB,iBAAiB;MACjB,SAAS,EAAE;IACb,CAAC,CAAC;EACJ,CAAC;EACD,IAAA,sBAAU,EAAC;IACT,MAAM,EAAE,MAAM;IACd,MAAM,EAAN,MAAM;IACN,EAAE,EAAF,EAAE;IACF,YAAY,EAAZ,YAAY;IACZ,aAAa,EAAb,aAAa;IACb,eAAe,EAAE,SAAA,gBAAA;MAAA,OAAO;QACtB,aAAa,EAAE,CAAC;QAChB,cAAc,EAAE,CAAC;QACjB,mBAAmB,EAAE,IAAI;QACzB,YAAY,EAAE,CAAC;QACf,gBAAgB,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC;MACnC,CAAC;IAAA;EACH,CAAC,CAAC;AACJ;;;;;;;;;AC7DA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,2BAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,MAAA,GAAA,OAAA;AAA4D,SAAA,uBAAA,GAAA,WAAA,GAAA,IAAA,GAAA,CAAA,UAAA,GAAA,GAAA,gBAAA,GAAA;AAC7C,SAAS,UAAU,CAAA,IAAA,EAI/B;EAAA,IAHD,MAAM,GAAA,IAAA,CAAN,MAAM;IACN,YAAY,GAAA,IAAA,CAAZ,YAAY;IACZ,EAAE,GAAA,IAAA,CAAF,EAAE;EAEF,YAAY,CAAC;IACX,UAAU,EAAE;MACV,YAAY,EAAE,IAAI;MAClB,aAAa,EAAE;IACjB;EACF,CAAC,CAAC;EACF,IAAM,kBAAkB,GAAG,SAArB,kBAAkB,CAAI,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAK;IACxD,IAAI,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,OAAO,CAAC,aAAa,CAAC,2BAA2B,CAAC,GAAG,OAAO,CAAC,aAAa,CAAC,0BAA0B,CAAC;IACjJ,IAAI,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,OAAO,CAAC,aAAa,CAAC,4BAA4B,CAAC,GAAG,OAAO,CAAC,aAAa,CAAC,6BAA6B,CAAC;IACpJ,IAAI,CAAC,YAAY,EAAE;MACjB,YAAY,GAAG,IAAA,wBAAY,EAAC,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,MAAM,GAAG,KAAK,CAAC;IACtF;IACA,IAAI,CAAC,WAAW,EAAE;MAChB,WAAW,GAAG,IAAA,wBAAY,EAAC,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,OAAO,GAAG,QAAQ,CAAC;IACzF;IACA,IAAI,YAAY,EAAE,YAAY,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;IACrE,IAAI,WAAW,EAAE,WAAW,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;EACpE,CAAC;EACD,IAAM,eAAe,GAAG,SAAlB,eAAe,CAAA,EAAS;IAC5B;IACA,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU;IACvC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,OAAO,EAAI;MAC/B,IAAI,QAAQ,GAAG,OAAO,CAAC,QAAQ;MAC/B,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,aAAa,EAAE;QAC1C,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MACxD;MACA,kBAAkB,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC;IAC/C,CAAC,CAAC;EACJ,CAAC;EACD,IAAM,YAAY,GAAG,SAAf,YAAY,CAAA,EAAS;IACzB,IACE,MAAM,GAEJ,MAAM,CAFR,MAAM;MACQ,GAAG,GACf,MAAM,CADR,YAAY;IAEd,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU;IACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;MACzC,IAAM,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC;MACzB,IAAI,QAAQ,GAAG,OAAO,CAAC,QAAQ;MAC/B,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,aAAa,EAAE;QAC1C,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MACxD;MACA,IAAM,MAAM,GAAG,OAAO,CAAC,iBAAiB;MACxC,IAAM,MAAM,GAAG,CAAC,GAAG,GAAG,QAAQ;MAC9B,IAAI,OAAO,GAAG,MAAM;MACpB,IAAI,OAAO,GAAG,CAAC;MACf,IAAI,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,SAAS,GAAG,CAAC,MAAM;MACrE,IAAI,EAAE,GAAG,CAAC;MACV,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;QAC1B,EAAE,GAAG,EAAE;QACP,EAAE,GAAG,CAAC;QACN,OAAO,GAAG,CAAC,OAAO;QAClB,OAAO,GAAG,CAAC;MACb,CAAC,MAAM,IAAI,GAAG,EAAE;QACd,OAAO,GAAG,CAAC,OAAO;MACpB;MACA,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM;MACtE,IAAI,MAAM,CAAC,YAAY,EAAE;QACvB,kBAAkB,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC;MAC/C;MACA,IAAM,SAAS,kBAAA,MAAA,CAAkB,EAAE,UAAA,MAAA,CAAO,EAAE,uBAAA,MAAA,CAAoB,OAAO,mBAAA,MAAA,CAAgB,OAAO,SAAM;MACpG,IAAM,QAAQ,GAAG,IAAA,wBAAY,EAAC,MAAM,EAAE,OAAO,CAAC;MAC9C,QAAQ,CAAC,KAAK,CAAC,SAAS,GAAG,SAAS;IACtC;EACF,CAAC;EACD,IAAM,aAAa,GAAG,SAAhB,aAAa,CAAG,QAAQ,EAAI;IAChC,IAAM,iBAAiB,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,UAAA,OAAO;MAAA,OAAI,IAAA,0BAAmB,EAAC,OAAO,CAAC;IAAA,EAAC;IACpF,iBAAiB,CAAC,OAAO,CAAC,UAAA,EAAE,EAAI;MAC9B,EAAE,CAAC,KAAK,CAAC,kBAAkB,MAAA,MAAA,CAAM,QAAQ,OAAI;MAC7C,EAAE,CAAC,gBAAgB,CAAC,8GAA8G,CAAC,CAAC,OAAO,CAAC,UAAA,QAAQ,EAAI;QACtJ,QAAQ,CAAC,KAAK,CAAC,kBAAkB,MAAA,MAAA,CAAM,QAAQ,OAAI;MACrD,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,IAAA,sCAA0B,EAAC;MACzB,MAAM,EAAN,MAAM;MACN,QAAQ,EAAR,QAAQ;MACR,iBAAiB,EAAjB;IACF,CAAC,CAAC;EACJ,CAAC;EACD,IAAA,sBAAU,EAAC;IACT,MAAM,EAAE,MAAM;IACd,MAAM,EAAN,MAAM;IACN,EAAE,EAAF,EAAE;IACF,YAAY,EAAZ,YAAY;IACZ,aAAa,EAAb,aAAa;IACb,eAAe,EAAf,eAAe;IACf,eAAe,EAAE,SAAA,gBAAA;MAAA,OAAM,MAAM,CAAC,MAAM,CAAC,UAAU;IAAA;IAC/C,WAAW,EAAE,SAAA,YAAA;MAAA,OAAM,IAAI;IAAA;IACvB,eAAe,EAAE,SAAA,gBAAA;MAAA,OAAO;QACtB,aAAa,EAAE,CAAC;QAChB,cAAc,EAAE,CAAC;QACjB,mBAAmB,EAAE,IAAI;QACzB,YAAY,EAAE,CAAC;QACf,gBAAgB,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC;MACnC,CAAC;IAAA;EACH,CAAC,CAAC;AACJ;;;;;;;;;ACzGA,IAAA,MAAA,GAAA,OAAA;AACe,SAAS,QAAQ,CAAA,IAAA,EAK7B;EAAA,IAJD,MAAM,GAAA,IAAA,CAAN,MAAM;IACN,YAAY,GAAA,IAAA,CAAZ,YAAY;IACZ,IAAI,GAAA,IAAA,CAAJ,IAAI;IACJ,IAAI,GAAA,IAAA,CAAJ,IAAI;EAEJ,YAAY,CAAC;IACX,QAAQ,EAAE;MACR,OAAO,EAAE,KAAK;MACd,QAAQ,EAAE,IAAI;MACd,aAAa,EAAE,CAAC;MAChB,cAAc,EAAE,IAAI;MACpB,mBAAmB,EAAE,CAAC;MACtB,qBAAqB,EAAE,CAAC;MACxB,MAAM,EAAE,KAAK;MACb,eAAe,EAAE;IACnB;EACF,CAAC,CAAC;EACF,SAAS,YAAY,CAAA,EAAG;IACtB,IAAM,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;IACvC,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC;IAC9B,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;IACvB,MAAM,CAAC,eAAe,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC;IAC5C,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC;MACzB,UAAU,EAAE,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,SAAS,GAAG,CAAC,MAAM,CAAC;IACtD,CAAC,CAAC;EACJ;EACA,SAAS,WAAW,CAAA,EAAG;IACrB,IACmB,IAAI,GAEnB,MAAM,CAFR,eAAe;MACf,OAAO,GACL,MAAM,CADR,OAAO;IAET;IACA,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;MAChC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;QACnB,QAAQ,EAAE,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,QAAQ,GAAG,QAAQ,CAAC;QAC9D,IAAI,EAAE,IAAI,CAAC;MACb,CAAC,CAAC;IACJ;IACA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;MACnB,QAAQ,EAAE,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,UAAU,GAAG,UAAU,CAAC;MAClE,IAAI,EAAE,IAAA,UAAG,EAAC;IACZ,CAAC,CAAC;EACJ;EACA,SAAS,UAAU,CAAA,KAAA,EAEhB;IAAA,IADD,UAAU,GAAA,KAAA,CAAV,UAAU;IAEV,IACE,MAAM,GAKJ,MAAM,CALR,MAAM;MACN,SAAS,GAIP,MAAM,CAJR,SAAS;MACK,GAAG,GAGf,MAAM,CAHR,YAAY;MACZ,QAAQ,GAEN,MAAM,CAFR,QAAQ;MACS,IAAI,GACnB,MAAM,CADR,eAAe;IAEjB;IACA,IAAM,YAAY,GAAG,IAAA,UAAG,EAAC,CAAC;IAC1B,IAAM,QAAQ,GAAG,YAAY,GAAG,IAAI,CAAC,cAAc;IACnD,IAAI,UAAU,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;MACvC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC;MAClC;IACF;IACA,IAAI,UAAU,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;MACvC,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,EAAE;QAC1C,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;MACrC,CAAC,MAAM;QACL,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;MAC1C;MACA;IACF;IACA,IAAI,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE;MAC5B,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;QAC9B,IAAM,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QAC3C,IAAM,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QAC3C,IAAM,QAAQ,GAAG,aAAa,CAAC,QAAQ,GAAG,aAAa,CAAC,QAAQ;QAChE,IAAM,IAAI,GAAG,aAAa,CAAC,IAAI,GAAG,aAAa,CAAC,IAAI;QACpD,MAAM,CAAC,QAAQ,GAAG,QAAQ,GAAG,IAAI;QACjC,MAAM,CAAC,QAAQ,IAAI,CAAC;QACpB,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,eAAe,EAAE;UAC/D,MAAM,CAAC,QAAQ,GAAG,CAAC;QACrB;QACA;QACA;QACA,IAAI,IAAI,GAAG,GAAG,IAAI,IAAA,UAAG,EAAC,CAAC,GAAG,aAAa,CAAC,IAAI,GAAG,GAAG,EAAE;UAClD,MAAM,CAAC,QAAQ,GAAG,CAAC;QACrB;MACF,CAAC,MAAM;QACL,MAAM,CAAC,QAAQ,GAAG,CAAC;MACrB;MACA,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,qBAAqB;MACxD,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC;MAC1B,IAAI,gBAAgB,GAAG,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,aAAa;MAC3D,IAAM,gBAAgB,GAAG,MAAM,CAAC,QAAQ,GAAG,gBAAgB;MAC3D,IAAI,WAAW,GAAG,MAAM,CAAC,SAAS,GAAG,gBAAgB;MACrD,IAAI,GAAG,EAAE,WAAW,GAAG,CAAC,WAAW;MACnC,IAAI,QAAQ,GAAG,KAAK;MACpB,IAAI,mBAAmB;MACvB,IAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,mBAAmB;MACzF,IAAI,YAAY;MAChB,IAAI,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;QACvC,IAAI,MAAM,CAAC,QAAQ,CAAC,cAAc,EAAE;UAClC,IAAI,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,YAAY,EAAE;YACvD,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,YAAY;UACpD;UACA,mBAAmB,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;UAC3C,QAAQ,GAAG,IAAI;UACf,IAAI,CAAC,mBAAmB,GAAG,IAAI;QACjC,CAAC,MAAM;UACL,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;QACrC;QACA,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,cAAc,EAAE,YAAY,GAAG,IAAI;MAC/D,CAAC,MAAM,IAAI,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;QAC9C,IAAI,MAAM,CAAC,QAAQ,CAAC,cAAc,EAAE;UAClC,IAAI,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,YAAY,EAAE;YACtD,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,YAAY;UACpD;UACA,mBAAmB,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;UAC3C,QAAQ,GAAG,IAAI;UACf,IAAI,CAAC,mBAAmB,GAAG,IAAI;QACjC,CAAC,MAAM;UACL,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;QACrC;QACA,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,cAAc,EAAE,YAAY,GAAG,IAAI;MAC/D,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE;QACjC,IAAI,SAAS;QACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;UAC3C,IAAI,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE;YAC9B,SAAS,GAAG,CAAC;YACb;UACF;QACF;QACA,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,WAAW,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC,IAAI,MAAM,CAAC,cAAc,KAAK,MAAM,EAAE;UACrI,WAAW,GAAG,QAAQ,CAAC,SAAS,CAAC;QACnC,CAAC,MAAM;UACL,WAAW,GAAG,QAAQ,CAAC,SAAS,GAAG,CAAC,CAAC;QACvC;QACA,WAAW,GAAG,CAAC,WAAW;MAC5B;MACA,IAAI,YAAY,EAAE;QAChB,IAAI,CAAC,eAAe,EAAE,YAAM;UAC1B,MAAM,CAAC,OAAO,CAAC,CAAC;QAClB,CAAC,CAAC;MACJ;MACA;MACA,IAAI,MAAM,CAAC,QAAQ,KAAK,CAAC,EAAE;QACzB,IAAI,GAAG,EAAE;UACP,gBAAgB,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,QAAQ,CAAC;QAClF,CAAC,MAAM;UACL,gBAAgB,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,QAAQ,CAAC;QACjF;QACA,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE;UAC1B;UACA;UACA;UACA;UACA;UACA;UACA;UACA,IAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,WAAW,GAAG,WAAW,IAAI,MAAM,CAAC,SAAS,CAAC;UACpF,IAAM,gBAAgB,GAAG,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,WAAW,CAAC;UACnE,IAAI,YAAY,GAAG,gBAAgB,EAAE;YACnC,gBAAgB,GAAG,MAAM,CAAC,KAAK;UACjC,CAAC,MAAM,IAAI,YAAY,GAAG,CAAC,GAAG,gBAAgB,EAAE;YAC9C,gBAAgB,GAAG,MAAM,CAAC,KAAK,GAAG,GAAG;UACvC,CAAC,MAAM;YACL,gBAAgB,GAAG,MAAM,CAAC,KAAK,GAAG,GAAG;UACvC;QACF;MACF,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE;QACjC,MAAM,CAAC,cAAc,CAAC,CAAC;QACvB;MACF;MACA,IAAI,MAAM,CAAC,QAAQ,CAAC,cAAc,IAAI,QAAQ,EAAE;QAC9C,MAAM,CAAC,cAAc,CAAC,mBAAmB,CAAC;QAC1C,MAAM,CAAC,aAAa,CAAC,gBAAgB,CAAC;QACtC,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC;QAChC,MAAM,CAAC,eAAe,CAAC,IAAI,EAAE,MAAM,CAAC,cAAc,CAAC;QACnD,MAAM,CAAC,SAAS,GAAG,IAAI;QACvB,IAAA,2BAAoB,EAAC,SAAS,EAAE,YAAM;UACpC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE;UAC9D,IAAI,CAAC,gBAAgB,CAAC;UACtB,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC;UAClC,UAAU,CAAC,YAAM;YACf,MAAM,CAAC,YAAY,CAAC,mBAAmB,CAAC;YACxC,IAAA,2BAAoB,EAAC,SAAS,EAAE,YAAM;cACpC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,EAAE;cACjC,MAAM,CAAC,aAAa,CAAC,CAAC;YACxB,CAAC,CAAC;UACJ,CAAC,EAAE,CAAC,CAAC;QACP,CAAC,CAAC;MACJ,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,EAAE;QAC1B,IAAI,CAAC,4BAA4B,CAAC;QAClC,MAAM,CAAC,cAAc,CAAC,WAAW,CAAC;QAClC,MAAM,CAAC,aAAa,CAAC,gBAAgB,CAAC;QACtC,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC;QAChC,MAAM,CAAC,eAAe,CAAC,IAAI,EAAE,MAAM,CAAC,cAAc,CAAC;QACnD,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;UACrB,MAAM,CAAC,SAAS,GAAG,IAAI;UACvB,IAAA,2BAAoB,EAAC,SAAS,EAAE,YAAM;YACpC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,EAAE;YACjC,MAAM,CAAC,aAAa,CAAC,CAAC;UACxB,CAAC,CAAC;QACJ;MACF,CAAC,MAAM;QACL,MAAM,CAAC,cAAc,CAAC,WAAW,CAAC;MACpC;MACA,MAAM,CAAC,iBAAiB,CAAC,CAAC;MAC1B,MAAM,CAAC,mBAAmB,CAAC,CAAC;IAC9B,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE;MACjC,MAAM,CAAC,cAAc,CAAC,CAAC;MACvB;IACF,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,EAAE;MAC1B,IAAI,CAAC,4BAA4B,CAAC;IACpC;IACA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,IAAI,QAAQ,IAAI,MAAM,CAAC,YAAY,EAAE;MAChE,MAAM,CAAC,cAAc,CAAC,CAAC;MACvB,MAAM,CAAC,iBAAiB,CAAC,CAAC;MAC1B,MAAM,CAAC,mBAAmB,CAAC,CAAC;IAC9B;EACF;EACA,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;IACpB,QAAQ,EAAE;MACR,YAAY,EAAZ,YAAY;MACZ,WAAW,EAAX,WAAW;MACX,UAAU,EAAV;IACF;EACF,CAAC,CAAC;AACJ;;;;;;;;;ACnOe,SAAS,IAAI,CAAA,IAAA,EAGzB;EAAA,IAFD,MAAM,GAAA,IAAA,CAAN,MAAM;IACN,YAAY,GAAA,IAAA,CAAZ,YAAY;EAEZ,YAAY,CAAC;IACX,IAAI,EAAE;MACJ,IAAI,EAAE,CAAC;MACP,IAAI,EAAE;IACR;EACF,CAAC,CAAC;EACF,IAAI,sBAAsB;EAC1B,IAAI,YAAY;EAChB,IAAI,cAAc;EAClB,IAAM,UAAU,GAAG,SAAb,UAAU,CAAG,YAAY,EAAI;IACjC,IACE,aAAa,GACX,MAAM,CAAC,MAAM,CADf,aAAa;IAEf,IAAA,mBAAA,GAGI,MAAM,CAAC,MAAM,CAAC,IAAI;MAFpB,IAAI,GAAA,mBAAA,CAAJ,IAAI;MACJ,IAAI,GAAA,mBAAA,CAAJ,IAAI;IAEN,YAAY,GAAG,sBAAsB,GAAG,IAAI;IAC5C,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC;IAChD,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,YAAY,GAAG,IAAI,EAAE;MAC3D,sBAAsB,GAAG,YAAY;IACvC,CAAC,MAAM;MACL,sBAAsB,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,IAAI;IAChE;IACA,IAAI,aAAa,KAAK,MAAM,IAAI,IAAI,KAAK,KAAK,EAAE;MAC9C,sBAAsB,GAAG,IAAI,CAAC,GAAG,CAAC,sBAAsB,EAAE,aAAa,GAAG,IAAI,CAAC;IACjF;EACF,CAAC;EACD,IAAM,WAAW,GAAG,SAAd,WAAW,CAAI,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE,iBAAiB,EAAK;IACjE,IAAA,cAAA,GAGI,MAAM,CAAC,MAAM;MAFf,cAAc,GAAA,cAAA,CAAd,cAAc;MACd,YAAY,GAAA,cAAA,CAAZ,YAAY;IAEd,IAAA,oBAAA,GAGI,MAAM,CAAC,MAAM,CAAC,IAAI;MAFpB,IAAI,GAAA,oBAAA,CAAJ,IAAI;MACJ,IAAI,GAAA,oBAAA,CAAJ,IAAI;IAEN;IACA,IAAI,kBAAkB;IACtB,IAAI,MAAM;IACV,IAAI,GAAG;IACP,IAAI,IAAI,KAAK,KAAK,IAAI,cAAc,GAAG,CAAC,EAAE;MACxC,IAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,cAAc,GAAG,IAAI,CAAC,CAAC;MAC1D,IAAM,iBAAiB,GAAG,CAAC,GAAG,IAAI,GAAG,cAAc,GAAG,UAAU;MAChE,IAAM,cAAc,GAAG,UAAU,KAAK,CAAC,GAAG,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,YAAY,GAAG,UAAU,GAAG,IAAI,GAAG,cAAc,IAAI,IAAI,CAAC,EAAE,cAAc,CAAC;MAC1J,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,GAAG,cAAc,CAAC;MACpD,MAAM,GAAG,iBAAiB,GAAG,GAAG,GAAG,cAAc,GAAG,UAAU,GAAG,cAAc;MAC/E,kBAAkB,GAAG,MAAM,GAAG,GAAG,GAAG,sBAAsB,GAAG,IAAI;MACjE,KAAK,CAAC,KAAK,CAAC,KAAK,GAAG,kBAAkB;IACxC,CAAC,MAAM,IAAI,IAAI,KAAK,QAAQ,EAAE;MAC5B,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;MAC7B,GAAG,GAAG,CAAC,GAAG,MAAM,GAAG,IAAI;MACvB,IAAI,MAAM,GAAG,cAAc,IAAI,MAAM,KAAK,cAAc,IAAI,GAAG,KAAK,IAAI,GAAG,CAAC,EAAE;QAC5E,GAAG,IAAI,CAAC;QACR,IAAI,GAAG,IAAI,IAAI,EAAE;UACf,GAAG,GAAG,CAAC;UACP,MAAM,IAAI,CAAC;QACb;MACF;IACF,CAAC,MAAM;MACL,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,YAAY,CAAC;MAClC,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,YAAY;IACjC;IACA,KAAK,CAAC,KAAK,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,YAAY,OAAA,MAAA,CAAO,YAAY,OAAI,GAAG,EAAE;EACrG,CAAC;EACD,IAAM,iBAAiB,GAAG,SAApB,iBAAiB,CAAI,SAAS,EAAE,QAAQ,EAAE,iBAAiB,EAAK;IACpE,IAAA,eAAA,GAII,MAAM,CAAC,MAAM;MAHf,YAAY,GAAA,eAAA,CAAZ,YAAY;MACZ,cAAc,GAAA,eAAA,CAAd,cAAc;MACd,YAAY,GAAA,eAAA,CAAZ,YAAY;IAEd,IACE,IAAI,GACF,MAAM,CAAC,MAAM,CAAC,IAAI,CADpB,IAAI;IAEN,MAAM,CAAC,WAAW,GAAG,CAAC,SAAS,GAAG,YAAY,IAAI,sBAAsB;IACxE,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,YAAY;IACxE,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,MAAA,MAAA,CAAM,MAAM,CAAC,WAAW,GAAG,YAAY,OAAI;IAC7F,IAAI,cAAc,EAAE;MAClB,IAAM,aAAa,GAAG,EAAE;MACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;QAC3C,IAAI,cAAc,GAAG,QAAQ,CAAC,CAAC,CAAC;QAChC,IAAI,YAAY,EAAE,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;QAC7D,IAAI,QAAQ,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC;MACxF;MACA,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC;MACnC,QAAQ,CAAC,IAAI,CAAA,KAAA,CAAb,QAAQ,EAAS,aAAa,CAAC;IACjC;EACF,CAAC;EACD,MAAM,CAAC,IAAI,GAAG;IACZ,UAAU,EAAV,UAAU;IACV,WAAW,EAAX,WAAW;IACX,iBAAiB,EAAjB;EACF,CAAC;AACH;;;;;;;;;ACjGA,IAAA,UAAA,GAAA,OAAA;AACA,IAAA,MAAA,GAAA,OAAA;AACe,SAAS,cAAc,CAAA,IAAA,EAKnC;EAAA,IAJD,MAAM,GAAA,IAAA,CAAN,MAAM;IACN,YAAY,GAAA,IAAA,CAAZ,YAAY;IACZ,IAAI,GAAA,IAAA,CAAJ,IAAI;IACJ,EAAE,GAAA,IAAA,CAAF,EAAE;EAEF,IAAI,WAAW,GAAG,KAAK;EACvB,IAAM,QAAQ,GAAG,IAAA,sBAAW,EAAC,CAAC;EAC9B,IAAM,MAAM,GAAG,IAAA,oBAAS,EAAC,CAAC;EAC1B,YAAY,CAAC;IACX,cAAc,EAAE;MACd,OAAO,EAAE,KAAK;MACd,YAAY,EAAE,KAAK;MACnB,UAAU,EAAE,KAAK;MACjB,aAAa,WAAA,cAAC,EAAE,EAAE,IAAI,EAAE;QACtB,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE;UACnD,IAAM,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAA,OAAO;YAAA,OAAI,OAAO,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,IAAI;UAAA,EAAC,CAAC,CAAC,CAAC;UACpG,IAAI,CAAC,aAAa,EAAE,OAAO,CAAC;UAC5B,IAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,yBAAyB,CAAC,EAAE,EAAE,CAAC;UACjF,OAAO,KAAK;QACd;QACA,OAAO,MAAM,CAAC,aAAa,CAAC,IAAA,sBAAe,EAAC,MAAM,CAAC,QAAQ,MAAA,MAAA,CAAM,MAAM,CAAC,MAAM,CAAC,UAAU,mBAAA,MAAA,CAAe,IAAI,oCAAA,MAAA,CAA+B,IAAI,QAAI,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1J;IACF;EACF,CAAC,CAAC;EACF,IAAM,YAAY,GAAG,SAAf,YAAY,CAAA,EAAS;IACzB,IAAI,CAAC,YAAY,CAAC;IAClB,IAAM,OAAO,GAAG,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;IACvD,IAAM,aAAa,GAAG,MAAM,CAAC,QAAQ,CAAC,aAAa,+BAAA,MAAA,CAA8B,MAAM,CAAC,WAAW,QAAI,CAAC;IACxG,IAAM,eAAe,GAAG,aAAa,GAAG,aAAa,CAAC,YAAY,CAAC,WAAW,CAAC,GAAG,EAAE;IACpF,IAAI,OAAO,KAAK,eAAe,EAAE;MAC/B,IAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,aAAa,CAAC,MAAM,EAAE,OAAO,CAAC;MAC5E,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;MACrB,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE;MACrC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC;IAC1B;EACF,CAAC;EACD,IAAM,OAAO,GAAG,SAAV,OAAO,CAAA,EAAS;IACpB,IAAI,CAAC,WAAW,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE;IAC3D,IAAM,aAAa,GAAG,MAAM,CAAC,QAAQ,CAAC,aAAa,+BAAA,MAAA,CAA8B,MAAM,CAAC,WAAW,QAAI,CAAC;IACxG,IAAM,eAAe,GAAG,aAAa,GAAG,aAAa,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,aAAa,CAAC,YAAY,CAAC,cAAc,CAAC,GAAG,EAAE;IAClI,IAAI,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,YAAY,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE;MAC9F,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,IAAA,MAAA,CAAI,eAAe,KAAM,EAAE,CAAC;MACpE,IAAI,CAAC,SAAS,CAAC;IACjB,CAAC,MAAM;MACL,QAAQ,CAAC,QAAQ,CAAC,IAAI,GAAG,eAAe,IAAI,EAAE;MAC9C,IAAI,CAAC,SAAS,CAAC;IACjB;EACF,CAAC;EACD,IAAM,IAAI,GAAG,SAAP,IAAI,CAAA,EAAS;IACjB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE;IACrG,WAAW,GAAG,IAAI;IAClB,IAAM,IAAI,GAAG,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;IACpD,IAAI,IAAI,EAAE;MACR,IAAM,KAAK,GAAG,CAAC;MACf,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC;MACtE,MAAM,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE,IAAI,CAAC;IAC3E;IACA,IAAI,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,UAAU,EAAE;MAC3C,MAAM,CAAC,gBAAgB,CAAC,YAAY,EAAE,YAAY,CAAC;IACrD;EACF,CAAC;EACD,IAAM,OAAO,GAAG,SAAV,OAAO,CAAA,EAAS;IACpB,IAAI,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,UAAU,EAAE;MAC3C,MAAM,CAAC,mBAAmB,CAAC,YAAY,EAAE,YAAY,CAAC;IACxD;EACF,CAAC;EACD,EAAE,CAAC,MAAM,EAAE,YAAM;IACf,IAAI,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE;MACxC,IAAI,CAAC,CAAC;IACR;EACF,CAAC,CAAC;EACF,EAAE,CAAC,SAAS,EAAE,YAAM;IAClB,IAAI,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE;MACxC,OAAO,CAAC,CAAC;IACX;EACF,CAAC,CAAC;EACF,EAAE,CAAC,0CAA0C,EAAE,YAAM;IACnD,IAAI,WAAW,EAAE;MACf,OAAO,CAAC,CAAC;IACX;EACF,CAAC,CAAC;EACF,EAAE,CAAC,aAAa,EAAE,YAAM;IACtB,IAAI,WAAW,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE;MACxC,OAAO,CAAC,CAAC;IACX;EACF,CAAC,CAAC;AACJ;;;;;;;;;ACzFA,IAAA,UAAA,GAAA,OAAA;AACe,SAAS,OAAO,CAAA,IAAA,EAI5B;EAAA,IAHD,MAAM,GAAA,IAAA,CAAN,MAAM;IACN,YAAY,GAAA,IAAA,CAAZ,YAAY;IACZ,EAAE,GAAA,IAAA,CAAF,EAAE;EAEF,YAAY,CAAC;IACX,OAAO,EAAE;MACP,OAAO,EAAE,KAAK;MACd,IAAI,EAAE,EAAE;MACR,YAAY,EAAE,KAAK;MACnB,GAAG,EAAE,QAAQ;MACb,SAAS,EAAE;IACb;EACF,CAAC,CAAC;EACF,IAAI,WAAW,GAAG,KAAK;EACvB,IAAI,KAAK,GAAG,CAAC,CAAC;EACd,IAAM,OAAO,GAAG,SAAV,OAAO,CAAG,IAAI,EAAI;IACtB,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;EAChI,CAAC;EACD,IAAM,aAAa,GAAG,SAAhB,aAAa,CAAG,WAAW,EAAI;IACnC,IAAM,MAAM,GAAG,IAAA,oBAAS,EAAC,CAAC;IAC1B,IAAI,QAAQ;IACZ,IAAI,WAAW,EAAE;MACf,QAAQ,GAAG,IAAI,GAAG,CAAC,WAAW,CAAC;IACjC,CAAC,MAAM;MACL,QAAQ,GAAG,MAAM,CAAC,QAAQ;IAC5B;IACA,IAAM,SAAS,GAAG,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,UAAA,IAAI;MAAA,OAAI,IAAI,KAAK,EAAE;IAAA,EAAC;IACnF,IAAM,KAAK,GAAG,SAAS,CAAC,MAAM;IAC9B,IAAM,GAAG,GAAG,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC;IAChC,IAAM,KAAK,GAAG,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC;IAClC,OAAO;MACL,GAAG,EAAH,GAAG;MACH,KAAK,EAAL;IACF,CAAC;EACH,CAAC;EACD,IAAM,UAAU,GAAG,SAAb,UAAU,CAAI,GAAG,EAAE,KAAK,EAAK;IACjC,IAAM,MAAM,GAAG,IAAA,oBAAS,EAAC,CAAC;IAC1B,IAAI,CAAC,WAAW,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE;IACpD,IAAI,QAAQ;IACZ,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE;MACrB,QAAQ,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC;IACvC,CAAC,MAAM;MACL,QAAQ,GAAG,MAAM,CAAC,QAAQ;IAC5B;IACA,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;IAClC,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;IACvD,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;MACzC,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI;MACrC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;MACxE,KAAK,MAAA,MAAA,CAAM,IAAI,OAAA,MAAA,CAAI,GAAG,MAAA,MAAA,CAAM,GAAG,SAAM,EAAE,EAAA,MAAA,CAAG,KAAK,CAAE;IACnD,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;MAC3C,KAAK,MAAA,MAAA,CAAM,GAAG,MAAA,MAAA,CAAM,GAAG,SAAM,EAAE,EAAA,MAAA,CAAG,KAAK,CAAE;IAC3C;IACA,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE;MACnC,KAAK,IAAI,QAAQ,CAAC,MAAM;IAC1B;IACA,IAAM,YAAY,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK;IACzC,IAAI,YAAY,IAAI,YAAY,CAAC,KAAK,KAAK,KAAK,EAAE;MAChD;IACF;IACA,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE;MACtC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC;QAC1B,KAAK,EAAL;MACF,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC;IACjB,CAAC,MAAM;MACL,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC;QACvB,KAAK,EAAL;MACF,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC;IACjB;EACF,CAAC;EACD,IAAM,aAAa,GAAG,SAAhB,aAAa,CAAI,KAAK,EAAE,KAAK,EAAE,YAAY,EAAK;IACpD,IAAI,KAAK,EAAE;MACT,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;QACjE,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;QAC9B,IAAM,YAAY,GAAG,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;QAChE,IAAI,YAAY,KAAK,KAAK,EAAE;UAC1B,IAAM,KAAK,GAAG,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC;UACzC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,YAAY,CAAC;QAC5C;MACF;IACF,CAAC,MAAM;MACL,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK,EAAE,YAAY,CAAC;IACxC;EACF,CAAC;EACD,IAAM,kBAAkB,GAAG,SAArB,kBAAkB,CAAA,EAAS;IAC/B,KAAK,GAAG,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC;IACxC,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC;EACxD,CAAC;EACD,IAAM,IAAI,GAAG,SAAP,IAAI,CAAA,EAAS;IACjB,IAAM,MAAM,GAAG,IAAA,oBAAS,EAAC,CAAC;IAC1B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE;IAC5B,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE;MAChD,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK;MACrC,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,GAAG,IAAI;MAC3C;IACF;IACA,WAAW,GAAG,IAAI;IAClB,KAAK,GAAG,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC;IACxC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;MAC9B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE;QACvC,MAAM,CAAC,gBAAgB,CAAC,UAAU,EAAE,kBAAkB,CAAC;MACzD;MACA;IACF;IACA,aAAa,CAAC,CAAC,EAAE,KAAK,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC;IAC/D,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE;MACvC,MAAM,CAAC,gBAAgB,CAAC,UAAU,EAAE,kBAAkB,CAAC;IACzD;EACF,CAAC;EACD,IAAM,OAAO,GAAG,SAAV,OAAO,CAAA,EAAS;IACpB,IAAM,MAAM,GAAG,IAAA,oBAAS,EAAC,CAAC;IAC1B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE;MACvC,MAAM,CAAC,mBAAmB,CAAC,UAAU,EAAE,kBAAkB,CAAC;IAC5D;EACF,CAAC;EACD,EAAE,CAAC,MAAM,EAAE,YAAM;IACf,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE;MACjC,IAAI,CAAC,CAAC;IACR;EACF,CAAC,CAAC;EACF,EAAE,CAAC,SAAS,EAAE,YAAM;IAClB,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE;MACjC,OAAO,CAAC,CAAC;IACX;EACF,CAAC,CAAC;EACF,EAAE,CAAC,0CAA0C,EAAE,YAAM;IACnD,IAAI,WAAW,EAAE;MACf,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,MAAM,CAAC,WAAW,CAAC;IAC3D;EACF,CAAC,CAAC;EACF,EAAE,CAAC,aAAa,EAAE,YAAM;IACtB,IAAI,WAAW,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE;MACxC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,MAAM,CAAC,WAAW,CAAC;IAC3D;EACF,CAAC,CAAC;AACJ;;;;;;;;;ACxIA,IAAA,UAAA,GAAA,OAAA;AACA,IAAA,MAAA,GAAA,OAAA;AAFA;;AAGe,SAAS,QAAQ,CAAA,IAAA,EAK7B;EAAA,IAJD,MAAM,GAAA,IAAA,CAAN,MAAM;IACN,YAAY,GAAA,IAAA,CAAZ,YAAY;IACZ,EAAE,GAAA,IAAA,CAAF,EAAE;IACF,IAAI,GAAA,IAAA,CAAJ,IAAI;EAEJ,IAAM,QAAQ,GAAG,IAAA,sBAAW,EAAC,CAAC;EAC9B,IAAM,MAAM,GAAG,IAAA,oBAAS,EAAC,CAAC;EAC1B,MAAM,CAAC,QAAQ,GAAG;IAChB,OAAO,EAAE;EACX,CAAC;EACD,YAAY,CAAC;IACX,QAAQ,EAAE;MACR,OAAO,EAAE,KAAK;MACd,cAAc,EAAE,IAAI;MACpB,UAAU,EAAE;IACd;EACF,CAAC,CAAC;EACF,SAAS,MAAM,CAAC,KAAK,EAAE;IACrB,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;IACrB,IACgB,GAAG,GACf,MAAM,CADR,YAAY;IAEd,IAAI,CAAC,GAAG,KAAK;IACb,IAAI,CAAC,CAAC,aAAa,EAAE,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC;IAC1C,IAAM,EAAE,GAAG,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,QAAQ;IAClC,IAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU;IACpD,IAAM,QAAQ,GAAG,UAAU,IAAI,EAAE,KAAK,EAAE;IACxC,IAAM,UAAU,GAAG,UAAU,IAAI,EAAE,KAAK,EAAE;IAC1C,IAAM,WAAW,GAAG,EAAE,KAAK,EAAE;IAC7B,IAAM,YAAY,GAAG,EAAE,KAAK,EAAE;IAC9B,IAAM,SAAS,GAAG,EAAE,KAAK,EAAE;IAC3B,IAAM,WAAW,GAAG,EAAE,KAAK,EAAE;IAC7B;IACA,IAAI,CAAC,MAAM,CAAC,cAAc,KAAK,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,YAAY,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,WAAW,IAAI,UAAU,CAAC,EAAE;MACzH,OAAO,KAAK;IACd;IACA,IAAI,CAAC,MAAM,CAAC,cAAc,KAAK,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,WAAW,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,SAAS,IAAI,QAAQ,CAAC,EAAE;MACpH,OAAO,KAAK;IACd;IACA,IAAI,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,OAAO,EAAE;MACpD,OAAO,SAAS;IAClB;IACA,IAAI,QAAQ,CAAC,aAAa,IAAI,QAAQ,CAAC,aAAa,CAAC,QAAQ,KAAK,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,OAAO,IAAI,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,UAAU,CAAC,EAAE;MAC5L,OAAO,SAAS;IAClB;IACA,IAAI,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,cAAc,KAAK,QAAQ,IAAI,UAAU,IAAI,WAAW,IAAI,YAAY,IAAI,SAAS,IAAI,WAAW,CAAC,EAAE;MAChI,IAAI,MAAM,GAAG,KAAK;MAClB;MACA,IAAI,IAAA,qBAAc,EAAC,MAAM,CAAC,EAAE,MAAA,MAAA,CAAM,MAAM,CAAC,MAAM,CAAC,UAAU,mBAAgB,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,IAAA,qBAAc,EAAC,MAAM,CAAC,EAAE,MAAA,MAAA,CAAM,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAE,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;QACtK,OAAO,SAAS;MAClB;MACA,IAAM,EAAE,GAAG,MAAM,CAAC,EAAE;MACpB,IAAM,WAAW,GAAG,EAAE,CAAC,WAAW;MAClC,IAAM,YAAY,GAAG,EAAE,CAAC,YAAY;MACpC,IAAM,WAAW,GAAG,MAAM,CAAC,UAAU;MACrC,IAAM,YAAY,GAAG,MAAM,CAAC,WAAW;MACvC,IAAM,YAAY,GAAG,IAAA,oBAAa,EAAC,EAAE,CAAC;MACtC,IAAI,GAAG,EAAE,YAAY,CAAC,IAAI,IAAI,EAAE,CAAC,UAAU;MAC3C,IAAM,WAAW,GAAG,CAAC,CAAC,YAAY,CAAC,IAAI,EAAE,YAAY,CAAC,GAAG,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,GAAG,WAAW,EAAE,YAAY,CAAC,GAAG,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,EAAE,YAAY,CAAC,GAAG,GAAG,YAAY,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,GAAG,WAAW,EAAE,YAAY,CAAC,GAAG,GAAG,YAAY,CAAC,CAAC;MAC1O,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;QAC9C,IAAM,KAAK,GAAG,WAAW,CAAC,CAAC,CAAC;QAC5B,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,WAAW,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,YAAY,EAAE;UACzF,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC;UAChD,MAAM,GAAG,IAAI;QACf;MACF;MACA,IAAI,CAAC,MAAM,EAAE,OAAO,SAAS;IAC/B;IACA,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;MACzB,IAAI,QAAQ,IAAI,UAAU,IAAI,WAAW,IAAI,YAAY,EAAE;QACzD,IAAI,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,WAAW,GAAG,KAAK;MACrE;MACA,IAAI,CAAC,UAAU,IAAI,YAAY,KAAK,CAAC,GAAG,IAAI,CAAC,QAAQ,IAAI,WAAW,KAAK,GAAG,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;MAChG,IAAI,CAAC,QAAQ,IAAI,WAAW,KAAK,CAAC,GAAG,IAAI,CAAC,UAAU,IAAI,YAAY,KAAK,GAAG,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;IAClG,CAAC,MAAM;MACL,IAAI,QAAQ,IAAI,UAAU,IAAI,SAAS,IAAI,WAAW,EAAE;QACtD,IAAI,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,WAAW,GAAG,KAAK;MACrE;MACA,IAAI,UAAU,IAAI,WAAW,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;MACjD,IAAI,QAAQ,IAAI,SAAS,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;IAC/C;IACA,IAAI,CAAC,UAAU,EAAE,EAAE,CAAC;IACpB,OAAO,SAAS;EAClB;EACA,SAAS,MAAM,CAAA,EAAG;IAChB,IAAI,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE;IAC7B,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,MAAM,CAAC;IAC5C,MAAM,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI;EAChC;EACA,SAAS,OAAO,CAAA,EAAG;IACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE;IAC9B,QAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,MAAM,CAAC;IAC/C,MAAM,CAAC,QAAQ,CAAC,OAAO,GAAG,KAAK;EACjC;EACA,EAAE,CAAC,MAAM,EAAE,YAAM;IACf,IAAI,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE;MAClC,MAAM,CAAC,CAAC;IACV;EACF,CAAC,CAAC;EACF,EAAE,CAAC,SAAS,EAAE,YAAM;IAClB,IAAI,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE;MAC3B,OAAO,CAAC,CAAC;IACX;EACF,CAAC,CAAC;EACF,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE;IAC7B,MAAM,EAAN,MAAM;IACN,OAAO,EAAP;EACF,CAAC,CAAC;AACJ;;;;;;;;;AChHA,IAAA,YAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,SAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,YAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,gBAAA,GAAA,sBAAA,CAAA,OAAA;AAA2D,SAAA,uBAAA,GAAA,WAAA,GAAA,IAAA,GAAA,CAAA,UAAA,GAAA,GAAA,gBAAA,GAAA;AAC5C,SAAS,YAAY,CAAA,IAAA,EAEjC;EAAA,IADD,MAAM,GAAA,IAAA,CAAN,MAAM;EAEN,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;IACpB,WAAW,EAAE,uBAAW,CAAC,IAAI,CAAC,MAAM,CAAC;IACrC,YAAY,EAAE,wBAAY,CAAC,IAAI,CAAC,MAAM,CAAC;IACvC,QAAQ,EAAE,oBAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;IAC/B,WAAW,EAAE,uBAAW,CAAC,IAAI,CAAC,MAAM,CAAC;IACrC,eAAe,EAAE,2BAAe,CAAC,IAAI,CAAC,MAAM;EAC9C,CAAC,CAAC;AACJ;;;;;;;;;;ACfe,SAAS,QAAQ,CAAC,KAAK,EAAE,MAAM,EAAE;EAC9C,IAAM,MAAM,GAAG,IAAI;EACnB,IACE,MAAM,GAGJ,MAAM,CAHR,MAAM;IACN,WAAW,GAET,MAAM,CAFR,WAAW;IACX,QAAQ,GACN,MAAM,CADR,QAAQ;EAEV,IAAI,iBAAiB,GAAG,WAAW;EACnC,IAAI,MAAM,CAAC,IAAI,EAAE;IACf,iBAAiB,IAAI,MAAM,CAAC,YAAY;IACxC,MAAM,CAAC,WAAW,CAAC,CAAC;IACpB,MAAM,CAAC,YAAY,CAAC,CAAC;EACvB;EACA,IAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM;EACvC,IAAI,KAAK,IAAI,CAAC,EAAE;IACd,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC;IAC3B;EACF;EACA,IAAI,KAAK,IAAI,UAAU,EAAE;IACvB,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC;IAC1B;EACF;EACA,IAAI,cAAc,GAAG,iBAAiB,GAAG,KAAK,GAAG,iBAAiB,GAAG,CAAC,GAAG,iBAAiB;EAC1F,IAAM,YAAY,GAAG,EAAE;EACvB,KAAK,IAAI,CAAC,GAAG,UAAU,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,CAAC,EAAE;IAC/C,IAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;IACrC,YAAY,CAAC,MAAM,CAAC,CAAC;IACrB,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC;EACpC;EACA,IAAI,OAAA,CAAO,MAAM,MAAK,QAAQ,IAAI,QAAQ,IAAI,MAAM,EAAE;IACpD,KAAK,IAAI,EAAC,GAAG,CAAC,EAAE,EAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAC,IAAI,CAAC,EAAE;MACzC,IAAI,MAAM,CAAC,EAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,EAAC,CAAC,CAAC;IAC3C;IACA,cAAc,GAAG,iBAAiB,GAAG,KAAK,GAAG,iBAAiB,GAAG,MAAM,CAAC,MAAM,GAAG,iBAAiB;EACpG,CAAC,MAAM;IACL,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC;EACzB;EACA,KAAK,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,YAAY,CAAC,MAAM,EAAE,GAAC,IAAI,CAAC,EAAE;IAC/C,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,GAAC,CAAC,CAAC;EAClC;EACA,MAAM,CAAC,YAAY,CAAC,CAAC;EACrB,IAAI,MAAM,CAAC,IAAI,EAAE;IACf,MAAM,CAAC,UAAU,CAAC,CAAC;EACrB;EACA,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,SAAS,EAAE;IACxC,MAAM,CAAC,MAAM,CAAC,CAAC;EACjB;EACA,IAAI,MAAM,CAAC,IAAI,EAAE;IACf,MAAM,CAAC,OAAO,CAAC,cAAc,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC,EAAE,KAAK,CAAC;EAChE,CAAC,MAAM;IACL,MAAM,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,EAAE,KAAK,CAAC;EAC1C;AACF;;;;;;;;;;ACpDe,SAAS,WAAW,CAAC,MAAM,EAAE;EAC1C,IAAM,MAAM,GAAG,IAAI;EACnB,IACE,MAAM,GAEJ,MAAM,CAFR,MAAM;IACN,QAAQ,GACN,MAAM,CADR,QAAQ;EAEV,IAAI,MAAM,CAAC,IAAI,EAAE;IACf,MAAM,CAAC,WAAW,CAAC,CAAC;EACtB;EACA,IAAM,aAAa,GAAG,SAAhB,aAAa,CAAG,OAAO,EAAI;IAC/B,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;MAC/B,IAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;MAC7C,OAAO,CAAC,SAAS,GAAG,OAAO;MAC3B,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;MACpC,OAAO,CAAC,SAAS,GAAG,EAAE;IACxB,CAAC,MAAM;MACL,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC;IAC1B;EACF,CAAC;EACD,IAAI,OAAA,CAAO,MAAM,MAAK,QAAQ,IAAI,QAAQ,IAAI,MAAM,EAAE;IACpD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;MACzC,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACzC;EACF,CAAC,MAAM;IACL,aAAa,CAAC,MAAM,CAAC;EACvB;EACA,MAAM,CAAC,YAAY,CAAC,CAAC;EACrB,IAAI,MAAM,CAAC,IAAI,EAAE;IACf,MAAM,CAAC,UAAU,CAAC,CAAC;EACrB;EACA,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,SAAS,EAAE;IACxC,MAAM,CAAC,MAAM,CAAC,CAAC;EACjB;AACF;;;;;;;;;;ACjCe,SAAS,YAAY,CAAC,MAAM,EAAE;EAC3C,IAAM,MAAM,GAAG,IAAI;EACnB,IACE,MAAM,GAGJ,MAAM,CAHR,MAAM;IACN,WAAW,GAET,MAAM,CAFR,WAAW;IACX,QAAQ,GACN,MAAM,CADR,QAAQ;EAEV,IAAI,MAAM,CAAC,IAAI,EAAE;IACf,MAAM,CAAC,WAAW,CAAC,CAAC;EACtB;EACA,IAAI,cAAc,GAAG,WAAW,GAAG,CAAC;EACpC,IAAM,cAAc,GAAG,SAAjB,cAAc,CAAG,OAAO,EAAI;IAChC,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;MAC/B,IAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;MAC7C,OAAO,CAAC,SAAS,GAAG,OAAO;MAC3B,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;MACrC,OAAO,CAAC,SAAS,GAAG,EAAE;IACxB,CAAC,MAAM;MACL,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC;IAC3B;EACF,CAAC;EACD,IAAI,OAAA,CAAO,MAAM,MAAK,QAAQ,IAAI,QAAQ,IAAI,MAAM,EAAE;IACpD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;MACzC,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1C;IACA,cAAc,GAAG,WAAW,GAAG,MAAM,CAAC,MAAM;EAC9C,CAAC,MAAM;IACL,cAAc,CAAC,MAAM,CAAC;EACxB;EACA,MAAM,CAAC,YAAY,CAAC,CAAC;EACrB,IAAI,MAAM,CAAC,IAAI,EAAE;IACf,MAAM,CAAC,UAAU,CAAC,CAAC;EACrB;EACA,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,SAAS,EAAE;IACxC,MAAM,CAAC,MAAM,CAAC,CAAC;EACjB;EACA,MAAM,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,EAAE,KAAK,CAAC;AAC1C;;;;;;;;;ACrCe,SAAS,eAAe,CAAA,EAAG;EACxC,IAAM,MAAM,GAAG,IAAI;EACnB,IAAM,aAAa,GAAG,EAAE;EACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IAChD,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;EACvB;EACA,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC;AACnC;;;;;;;;;;ACPe,SAAS,WAAW,CAAC,aAAa,EAAE;EACjD,IAAM,MAAM,GAAG,IAAI;EACnB,IACE,MAAM,GAEJ,MAAM,CAFR,MAAM;IACN,WAAW,GACT,MAAM,CADR,WAAW;EAEb,IAAI,iBAAiB,GAAG,WAAW;EACnC,IAAI,MAAM,CAAC,IAAI,EAAE;IACf,iBAAiB,IAAI,MAAM,CAAC,YAAY;IACxC,MAAM,CAAC,WAAW,CAAC,CAAC;EACtB;EACA,IAAI,cAAc,GAAG,iBAAiB;EACtC,IAAI,aAAa;EACjB,IAAI,OAAA,CAAO,aAAa,MAAK,QAAQ,IAAI,QAAQ,IAAI,aAAa,EAAE;IAClE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;MAChD,aAAa,GAAG,aAAa,CAAC,CAAC,CAAC;MAChC,IAAI,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,CAAC;MACvE,IAAI,aAAa,GAAG,cAAc,EAAE,cAAc,IAAI,CAAC;IACzD;IACA,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,CAAC;EAC9C,CAAC,MAAM;IACL,aAAa,GAAG,aAAa;IAC7B,IAAI,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,CAAC;IACvE,IAAI,aAAa,GAAG,cAAc,EAAE,cAAc,IAAI,CAAC;IACvD,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,CAAC;EAC9C;EACA,MAAM,CAAC,YAAY,CAAC,CAAC;EACrB,IAAI,MAAM,CAAC,IAAI,EAAE;IACf,MAAM,CAAC,UAAU,CAAC,CAAC;EACrB;EACA,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,SAAS,EAAE;IACxC,MAAM,CAAC,MAAM,CAAC,CAAC;EACjB;EACA,IAAI,MAAM,CAAC,IAAI,EAAE;IACf,MAAM,CAAC,OAAO,CAAC,cAAc,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC,EAAE,KAAK,CAAC;EAChE,CAAC,MAAM;IACL,MAAM,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,EAAE,KAAK,CAAC;EAC1C;AACF;;;;;;;;;ACrCA,IAAA,UAAA,GAAA,OAAA;AACA,IAAA,MAAA,GAAA,OAAA;AAFA;;AAGe,SAAS,UAAU,CAAA,IAAA,EAK/B;EAAA,IAJD,MAAM,GAAA,IAAA,CAAN,MAAM;IACN,YAAY,GAAA,IAAA,CAAZ,YAAY;IACZ,EAAE,GAAA,IAAA,CAAF,EAAE;IACF,IAAI,GAAA,IAAA,CAAJ,IAAI;EAEJ,IAAM,MAAM,GAAG,IAAA,oBAAS,EAAC,CAAC;EAC1B,YAAY,CAAC;IACX,UAAU,EAAE;MACV,OAAO,EAAE,KAAK;MACd,cAAc,EAAE,KAAK;MACrB,MAAM,EAAE,KAAK;MACb,WAAW,EAAE,KAAK;MAClB,WAAW,EAAE,CAAC;MACd,YAAY,EAAE,WAAW;MACzB,cAAc,EAAE,IAAI;MACpB,aAAa,EAAE;IACjB;EACF,CAAC,CAAC;EACF,MAAM,CAAC,UAAU,GAAG;IAClB,OAAO,EAAE;EACX,CAAC;EACD,IAAI,OAAO;EACX,IAAI,cAAc,GAAG,IAAA,UAAG,EAAC,CAAC;EAC1B,IAAI,mBAAmB;EACvB,IAAM,iBAAiB,GAAG,EAAE;EAC5B,SAAS,SAAS,CAAC,CAAC,EAAE;IACpB;IACA,IAAM,UAAU,GAAG,EAAE;IACrB,IAAM,WAAW,GAAG,EAAE;IACtB,IAAM,WAAW,GAAG,GAAG;IACvB,IAAI,EAAE,GAAG,CAAC;IACV,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;IACZ,IAAI,EAAE,GAAG,CAAC;IACV,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;;IAEZ;IACA,IAAI,QAAQ,IAAI,CAAC,EAAE;MACjB,EAAE,GAAG,CAAC,CAAC,MAAM;IACf;IACA,IAAI,YAAY,IAAI,CAAC,EAAE;MACrB,EAAE,GAAG,CAAC,CAAC,CAAC,UAAU,GAAG,GAAG;IAC1B;IACA,IAAI,aAAa,IAAI,CAAC,EAAE;MACtB,EAAE,GAAG,CAAC,CAAC,CAAC,WAAW,GAAG,GAAG;IAC3B;IACA,IAAI,aAAa,IAAI,CAAC,EAAE;MACtB,EAAE,GAAG,CAAC,CAAC,CAAC,WAAW,GAAG,GAAG;IAC3B;;IAEA;IACA,IAAI,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,eAAe,EAAE;MAC/C,EAAE,GAAG,EAAE;MACP,EAAE,GAAG,CAAC;IACR;IACA,EAAE,GAAG,EAAE,GAAG,UAAU;IACpB,EAAE,GAAG,EAAE,GAAG,UAAU;IACpB,IAAI,QAAQ,IAAI,CAAC,EAAE;MACjB,EAAE,GAAG,CAAC,CAAC,MAAM;IACf;IACA,IAAI,QAAQ,IAAI,CAAC,EAAE;MACjB,EAAE,GAAG,CAAC,CAAC,MAAM;IACf;IACA,IAAI,CAAC,CAAC,QAAQ,IAAI,CAAC,EAAE,EAAE;MACrB;MACA,EAAE,GAAG,EAAE;MACP,EAAE,GAAG,CAAC;IACR;IACA,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,SAAS,EAAE;MAC7B,IAAI,CAAC,CAAC,SAAS,KAAK,CAAC,EAAE;QACrB;QACA,EAAE,IAAI,WAAW;QACjB,EAAE,IAAI,WAAW;MACnB,CAAC,MAAM;QACL;QACA,EAAE,IAAI,WAAW;QACjB,EAAE,IAAI,WAAW;MACnB;IACF;;IAEA;IACA,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE;MACb,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IACtB;IACA,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE;MACb,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IACtB;IACA,OAAO;MACL,KAAK,EAAE,EAAE;MACT,KAAK,EAAE,EAAE;MACT,MAAM,EAAE,EAAE;MACV,MAAM,EAAE;IACV,CAAC;EACH;EACA,SAAS,gBAAgB,CAAA,EAAG;IAC1B,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;IACrB,MAAM,CAAC,YAAY,GAAG,IAAI;EAC5B;EACA,SAAS,gBAAgB,CAAA,EAAG;IAC1B,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;IACrB,MAAM,CAAC,YAAY,GAAG,KAAK;EAC7B;EACA,SAAS,aAAa,CAAC,QAAQ,EAAE;IAC/B,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,cAAc,IAAI,QAAQ,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,cAAc,EAAE;MACvG;MACA,OAAO,KAAK;IACd;IACA,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,aAAa,IAAI,IAAA,UAAG,EAAC,CAAC,GAAG,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,aAAa,EAAE;MAC7G;MACA,OAAO,KAAK;IACd;;IAEA;IACA;IACA;IACA,IAAI,QAAQ,CAAC,KAAK,IAAI,CAAC,IAAI,IAAA,UAAG,EAAC,CAAC,GAAG,cAAc,GAAG,EAAE,EAAE;MACtD;MACA,OAAO,IAAI;IACb;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,QAAQ,CAAC,SAAS,GAAG,CAAC,EAAE;MAC1B,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE;QAC9D,MAAM,CAAC,SAAS,CAAC,CAAC;QAClB,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,GAAG,CAAC;MAC9B;IACF,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,WAAW,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE;MAC3E,MAAM,CAAC,SAAS,CAAC,CAAC;MAClB,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,GAAG,CAAC;IAC9B;IACA;IACA,cAAc,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;IAC5C;IACA,OAAO,KAAK;EACd;EACA,SAAS,aAAa,CAAC,QAAQ,EAAE;IAC/B,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU;IACvC,IAAI,QAAQ,CAAC,SAAS,GAAG,CAAC,EAAE;MAC1B,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,cAAc,EAAE;QAChE;QACA,OAAO,IAAI;MACb;IACF,CAAC,MAAM,IAAI,MAAM,CAAC,WAAW,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,cAAc,EAAE;MAC7E;MACA,OAAO,IAAI;IACb;IACA,OAAO,KAAK;EACd;EACA,SAAS,MAAM,CAAC,KAAK,EAAE;IACrB,IAAI,CAAC,GAAG,KAAK;IACb,IAAI,mBAAmB,GAAG,IAAI;IAC9B,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;IACrB,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU;IACvC,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE;MACzB,CAAC,CAAC,cAAc,CAAC,CAAC;IACpB;IACA,IAAI,QAAQ,GAAG,MAAM,CAAC,EAAE;IACxB,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,KAAK,WAAW,EAAE;MACzD,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC;IAC1E;IACA,IAAM,sBAAsB,GAAG,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC;IACtE,IAAI,CAAC,MAAM,CAAC,YAAY,IAAI,CAAC,sBAAsB,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,OAAO,IAAI;IAC1F,IAAI,CAAC,CAAC,aAAa,EAAE,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC;IAC1C,IAAI,KAAK,GAAG,CAAC;IACb,IAAM,SAAS,GAAG,MAAM,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC;IAC9C,IAAM,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC;IACzB,IAAI,MAAM,CAAC,WAAW,EAAE;MACtB,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;QACzB,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,KAAK,OAAO,IAAI;MACtG,CAAC,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,OAAO,IAAI;IACjG,CAAC,MAAM;MACL,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,SAAS,GAAG,CAAC,IAAI,CAAC,MAAM;IACjG;IACA,IAAI,KAAK,KAAK,CAAC,EAAE,OAAO,IAAI;IAC5B,IAAI,MAAM,CAAC,MAAM,EAAE,KAAK,GAAG,CAAC,KAAK;;IAEjC;IACA,IAAI,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,KAAK,GAAG,MAAM,CAAC,WAAW;IAClE,IAAI,SAAS,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;IACzE,IAAI,SAAS,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;;IAEzE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,mBAAmB,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,GAAG,EAAE,SAAS,KAAK,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,SAAS,KAAK,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;IAC/H,IAAI,mBAAmB,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,eAAe,CAAC,CAAC;IACpE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE;MAC9D;MACA,IAAM,QAAQ,GAAG;QACf,IAAI,EAAE,IAAA,UAAG,EAAC,CAAC;QACX,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;QACtB,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAC3B,GAAG,EAAE;MACP,CAAC;;MAED;MACA,IAAI,iBAAiB,CAAC,MAAM,IAAI,CAAC,EAAE;QACjC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;MAC7B;;MAEA,IAAM,SAAS,GAAG,iBAAiB,CAAC,MAAM,GAAG,iBAAiB,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,SAAS;MACxG,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC;;MAEhC;MACA;MACA;MACA;MACA;MACA;MACA,IAAI,SAAS,EAAE;QACb,IAAI,QAAQ,CAAC,SAAS,KAAK,SAAS,CAAC,SAAS,IAAI,QAAQ,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,IAAI,QAAQ,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,GAAG,GAAG,EAAE;UAC1H,aAAa,CAAC,QAAQ,CAAC;QACzB;MACF,CAAC,MAAM;QACL,aAAa,CAAC,QAAQ,CAAC;MACzB;;MAEA;MACA;MACA,IAAI,aAAa,CAAC,QAAQ,CAAC,EAAE;QAC3B,OAAO,IAAI;MACb;IACF,CAAC,MAAM;MACL;;MAEA;MACA;MACA;MACA;MACA,IAAM,SAAQ,GAAG;QACf,IAAI,EAAE,IAAA,UAAG,EAAC,CAAC;QACX,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;QACtB,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK;MAC5B,CAAC;MACD,IAAM,iBAAiB,GAAG,mBAAmB,IAAI,SAAQ,CAAC,IAAI,GAAG,mBAAmB,CAAC,IAAI,GAAG,GAAG,IAAI,SAAQ,CAAC,KAAK,IAAI,mBAAmB,CAAC,KAAK,IAAI,SAAQ,CAAC,SAAS,KAAK,mBAAmB,CAAC,SAAS;MACtM,IAAI,CAAC,iBAAiB,EAAE;QACtB,mBAAmB,GAAG,SAAS;QAC/B,IAAI,QAAQ,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,KAAK,GAAG,MAAM,CAAC,WAAW;QACjE,IAAM,YAAY,GAAG,MAAM,CAAC,WAAW;QACvC,IAAM,MAAM,GAAG,MAAM,CAAC,KAAK;QAC3B,IAAI,QAAQ,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,QAAQ,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;QACvE,IAAI,QAAQ,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,QAAQ,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;QACvE,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;QACvB,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC;QAC7B,MAAM,CAAC,cAAc,CAAC,CAAC;QACvB,MAAM,CAAC,iBAAiB,CAAC,CAAC;QAC1B,MAAM,CAAC,mBAAmB,CAAC,CAAC;QAC5B,IAAI,CAAC,YAAY,IAAI,MAAM,CAAC,WAAW,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,KAAK,EAAE;UAClE,MAAM,CAAC,mBAAmB,CAAC,CAAC;QAC9B;QACA,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE;UACtB,MAAM,CAAC,OAAO,CAAC;YACb,SAAS,EAAE,SAAQ,CAAC,SAAS,GAAG,CAAC,GAAG,MAAM,GAAG,MAAM;YACnD,YAAY,EAAE;UAChB,CAAC,CAAC;QACJ;QACA,IAAI,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE;UACjC;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA,YAAY,CAAC,OAAO,CAAC;UACrB,OAAO,GAAG,SAAS;UACnB,IAAI,iBAAiB,CAAC,MAAM,IAAI,EAAE,EAAE;YAClC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;UAC7B;;UAEA,IAAM,UAAS,GAAG,iBAAiB,CAAC,MAAM,GAAG,iBAAiB,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,SAAS;UACxG,IAAM,UAAU,GAAG,iBAAiB,CAAC,CAAC,CAAC;UACvC,iBAAiB,CAAC,IAAI,CAAC,SAAQ,CAAC;UAChC,IAAI,UAAS,KAAK,SAAQ,CAAC,KAAK,GAAG,UAAS,CAAC,KAAK,IAAI,SAAQ,CAAC,SAAS,KAAK,UAAS,CAAC,SAAS,CAAC,EAAE;YACjG;YACA,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC;UAC7B,CAAC,MAAM,IAAI,iBAAiB,CAAC,MAAM,IAAI,EAAE,IAAI,SAAQ,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,GAAG,GAAG,IAAI,UAAU,CAAC,KAAK,GAAG,SAAQ,CAAC,KAAK,IAAI,CAAC,IAAI,SAAQ,CAAC,KAAK,IAAI,CAAC,EAAE;YACnJ;YACA;YACA;YACA;YACA;YACA;YACA,IAAM,eAAe,GAAG,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG;YAC7C,mBAAmB,GAAG,SAAQ;YAC9B,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC;YAC3B,OAAO,GAAG,IAAA,eAAQ,EAAC,YAAM;cACvB,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,eAAe,CAAC;YAC9E,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;UACT;;UAEA,IAAI,CAAC,OAAO,EAAE;YACZ;YACA;YACA;YACA,OAAO,GAAG,IAAA,eAAQ,EAAC,YAAM;cACvB,IAAM,eAAe,GAAG,GAAG;cAC3B,mBAAmB,GAAG,SAAQ;cAC9B,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC;cAC3B,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,eAAe,CAAC;YAC9E,CAAC,EAAE,GAAG,CAAC;UACT;QACF;;QAEA;QACA,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;;QAEzC;QACA,IAAI,MAAM,CAAC,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,MAAM,CAAC,4BAA4B,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAChG;QACA,IAAI,QAAQ,KAAK,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,QAAQ,KAAK,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,OAAO,IAAI;MAC3F;IACF;IACA,IAAI,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,WAAW,GAAG,KAAK;IACnE,OAAO,KAAK;EACd;EACA,SAAS,MAAM,CAAC,MAAM,EAAE;IACtB,IAAI,QAAQ,GAAG,MAAM,CAAC,EAAE;IACxB,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,KAAK,WAAW,EAAE;MACzD,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC;IAC1E;IACA,QAAQ,CAAC,MAAM,CAAC,CAAC,YAAY,EAAE,gBAAgB,CAAC;IAChD,QAAQ,CAAC,MAAM,CAAC,CAAC,YAAY,EAAE,gBAAgB,CAAC;IAChD,QAAQ,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC;EACnC;EACA,SAAS,MAAM,CAAA,EAAG;IAChB,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE;MACzB,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,OAAO,EAAE,MAAM,CAAC;MACrD,OAAO,IAAI;IACb;IACA,IAAI,MAAM,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,KAAK;IAC3C,MAAM,CAAC,kBAAkB,CAAC;IAC1B,MAAM,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI;IAChC,OAAO,IAAI;EACb;EACA,SAAS,OAAO,CAAA,EAAG;IACjB,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE;MACzB,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,KAAK,EAAE,MAAM,CAAC;MAChD,OAAO,IAAI;IACb;IACA,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,KAAK;IAC5C,MAAM,CAAC,qBAAqB,CAAC;IAC7B,MAAM,CAAC,UAAU,CAAC,OAAO,GAAG,KAAK;IACjC,OAAO,IAAI;EACb;EACA,EAAE,CAAC,MAAM,EAAE,YAAM;IACf,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE;MAC9D,OAAO,CAAC,CAAC;IACX;IACA,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;EAChD,CAAC,CAAC;EACF,EAAE,CAAC,SAAS,EAAE,YAAM;IAClB,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE;MACzB,MAAM,CAAC,CAAC;IACV;IACA,IAAI,MAAM,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;EAC1C,CAAC,CAAC;EACF,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE;IAC/B,MAAM,EAAN,MAAM;IACN,OAAO,EAAP;EACF,CAAC,CAAC;AACJ;;;;;;;;;AC9XA,IAAA,0BAAA,GAAA,sBAAA,CAAA,OAAA;AAAsF,SAAA,uBAAA,GAAA,WAAA,GAAA,IAAA,GAAA,CAAA,UAAA,GAAA,GAAA,gBAAA,GAAA;AAAA,SAAA,mBAAA,GAAA,WAAA,kBAAA,CAAA,GAAA,KAAA,gBAAA,CAAA,GAAA,KAAA,2BAAA,CAAA,GAAA,KAAA,kBAAA;AAAA,SAAA,mBAAA,cAAA,SAAA;AAAA,SAAA,4BAAA,CAAA,EAAA,MAAA,SAAA,CAAA,qBAAA,CAAA,sBAAA,iBAAA,CAAA,CAAA,EAAA,MAAA,OAAA,CAAA,GAAA,MAAA,CAAA,SAAA,CAAA,QAAA,CAAA,IAAA,CAAA,CAAA,EAAA,KAAA,aAAA,CAAA,iBAAA,CAAA,CAAA,WAAA,EAAA,CAAA,GAAA,CAAA,CAAA,WAAA,CAAA,IAAA,MAAA,CAAA,cAAA,CAAA,mBAAA,KAAA,CAAA,IAAA,CAAA,CAAA,OAAA,CAAA,+DAAA,IAAA,CAAA,CAAA,UAAA,iBAAA,CAAA,CAAA,EAAA,MAAA;AAAA,SAAA,iBAAA,IAAA,eAAA,MAAA,oBAAA,IAAA,CAAA,MAAA,CAAA,QAAA,aAAA,IAAA,+BAAA,KAAA,CAAA,IAAA,CAAA,IAAA;AAAA,SAAA,mBAAA,GAAA,QAAA,KAAA,CAAA,OAAA,CAAA,GAAA,UAAA,iBAAA,CAAA,GAAA;AAAA,SAAA,kBAAA,GAAA,EAAA,GAAA,QAAA,GAAA,YAAA,GAAA,GAAA,GAAA,CAAA,MAAA,EAAA,GAAA,GAAA,GAAA,CAAA,MAAA,WAAA,CAAA,MAAA,IAAA,OAAA,KAAA,CAAA,GAAA,GAAA,CAAA,GAAA,GAAA,EAAA,CAAA,IAAA,IAAA,CAAA,CAAA,IAAA,GAAA,CAAA,CAAA,UAAA,IAAA;AACvE,SAAS,UAAU,CAAA,IAAA,EAK/B;EAAA,IAJD,MAAM,GAAA,IAAA,CAAN,MAAM;IACN,YAAY,GAAA,IAAA,CAAZ,YAAY;IACZ,EAAE,GAAA,IAAA,CAAF,EAAE;IACF,IAAI,GAAA,IAAA,CAAJ,IAAI;EAEJ,YAAY,CAAC;IACX,UAAU,EAAE;MACV,MAAM,EAAE,IAAI;MACZ,MAAM,EAAE,IAAI;MACZ,WAAW,EAAE,KAAK;MAClB,aAAa,EAAE,wBAAwB;MACvC,WAAW,EAAE,sBAAsB;MACnC,SAAS,EAAE,oBAAoB;MAC/B,uBAAuB,EAAE;IAC3B;EACF,CAAC,CAAC;EACF,MAAM,CAAC,UAAU,GAAG;IAClB,MAAM,EAAE,IAAI;IACZ,MAAM,EAAE;EACV,CAAC;EACD,IAAM,iBAAiB,GAAG,SAApB,iBAAiB,CAAG,EAAE,EAAI;IAC9B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,UAAA,CAAC;MAAA,OAAI,CAAC,CAAC,CAAC;IAAA,EAAC;IAClD,OAAO,EAAE;EACX,CAAC;EACD,SAAS,KAAK,CAAC,EAAE,EAAE;IACjB,IAAI,GAAG;IACP,IAAI,EAAE,IAAI,OAAO,EAAE,KAAK,QAAQ,IAAI,MAAM,CAAC,SAAS,EAAE;MACpD,GAAG,GAAG,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE,CAAC;MAC5C,IAAI,GAAG,EAAE,OAAO,GAAG;IACrB;IACA,IAAI,EAAE,EAAE;MACN,IAAI,OAAO,EAAE,KAAK,QAAQ,EAAE,GAAG,GAAA,kBAAA,CAAO,QAAQ,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC;MACpE,IAAI,MAAM,CAAC,MAAM,CAAC,iBAAiB,IAAI,OAAO,EAAE,KAAK,QAAQ,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;QAC9H,GAAG,GAAG,MAAM,CAAC,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC;MACnC;IACF;IACA,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,OAAO,EAAE;IACzB;IACA,OAAO,GAAG;EACZ;EACA,SAAS,QAAQ,CAAC,EAAE,EAAE,QAAQ,EAAE;IAC9B,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU;IACvC,EAAE,GAAG,iBAAiB,CAAC,EAAE,CAAC;IAC1B,EAAE,CAAC,OAAO,CAAC,UAAA,KAAK,EAAI;MAClB,IAAI,KAAK,EAAE;QAAA,IAAA,gBAAA;QACT,CAAA,gBAAA,GAAA,KAAK,CAAC,SAAS,EAAC,QAAQ,GAAG,KAAK,GAAG,QAAQ,CAAC,CAAA,KAAA,CAAA,gBAAA,EAAA,kBAAA,CAAI,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,EAAC;QAChF,IAAI,KAAK,CAAC,OAAO,KAAK,QAAQ,EAAE,KAAK,CAAC,QAAQ,GAAG,QAAQ;QACzD,IAAI,MAAM,CAAC,MAAM,CAAC,aAAa,IAAI,MAAM,CAAC,OAAO,EAAE;UACjD,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,GAAG,KAAK,GAAG,QAAQ,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC;QACvE;MACF;IACF,CAAC,CAAC;EACJ;EACA,SAAS,MAAM,CAAA,EAAG;IAChB;IACA,IAAA,kBAAA,GAGI,MAAM,CAAC,UAAU;MAFnB,MAAM,GAAA,kBAAA,CAAN,MAAM;MACN,MAAM,GAAA,kBAAA,CAAN,MAAM;IAER,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE;MACtB,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC;MACvB,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC;MACvB;IACF;IACA,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,WAAW,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;IAC7D,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;EACzD;EACA,SAAS,WAAW,CAAC,CAAC,EAAE;IACtB,CAAC,CAAC,cAAc,CAAC,CAAC;IAClB,IAAI,MAAM,CAAC,WAAW,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;IACxE,MAAM,CAAC,SAAS,CAAC,CAAC;IAClB,IAAI,CAAC,gBAAgB,CAAC;EACxB;EACA,SAAS,WAAW,CAAC,CAAC,EAAE;IACtB,CAAC,CAAC,cAAc,CAAC,CAAC;IAClB,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;IAClE,MAAM,CAAC,SAAS,CAAC,CAAC;IAClB,IAAI,CAAC,gBAAgB,CAAC;EACxB;EACA,SAAS,IAAI,CAAA,EAAG;IACd,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU;IACvC,MAAM,CAAC,MAAM,CAAC,UAAU,GAAG,IAAA,qCAAyB,EAAC,MAAM,EAAE,MAAM,CAAC,cAAc,CAAC,UAAU,EAAE,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE;MACvH,MAAM,EAAE,oBAAoB;MAC5B,MAAM,EAAE;IACV,CAAC,CAAC;IACF,IAAI,EAAE,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,EAAE;IACvC,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;IACjC,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;IACjC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE;MAC/B,MAAM,EAAN,MAAM;MACN,MAAM,EAAN;IACF,CAAC,CAAC;IACF,MAAM,GAAG,iBAAiB,CAAC,MAAM,CAAC;IAClC,MAAM,GAAG,iBAAiB,CAAC,MAAM,CAAC;IAClC,IAAM,UAAU,GAAG,SAAb,UAAU,CAAI,EAAE,EAAE,GAAG,EAAK;MAC9B,IAAI,EAAE,EAAE;QACN,EAAE,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,KAAK,MAAM,GAAG,WAAW,GAAG,WAAW,CAAC;MAC1E;MACA,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,EAAE,EAAE;QAAA,IAAA,aAAA;QACzB,CAAA,aAAA,GAAA,EAAE,CAAC,SAAS,EAAC,GAAG,CAAA,KAAA,CAAA,aAAA,EAAA,kBAAA,CAAI,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,EAAC;MAClD;IACF,CAAC;IACD,MAAM,CAAC,OAAO,CAAC,UAAA,EAAE;MAAA,OAAI,UAAU,CAAC,EAAE,EAAE,MAAM,CAAC;IAAA,EAAC;IAC5C,MAAM,CAAC,OAAO,CAAC,UAAA,EAAE;MAAA,OAAI,UAAU,CAAC,EAAE,EAAE,MAAM,CAAC;IAAA,EAAC;EAC9C;EACA,SAAS,OAAO,CAAA,EAAG;IACjB,IAAA,mBAAA,GAGI,MAAM,CAAC,UAAU;MAFnB,MAAM,GAAA,mBAAA,CAAN,MAAM;MACN,MAAM,GAAA,mBAAA,CAAN,MAAM;IAER,MAAM,GAAG,iBAAiB,CAAC,MAAM,CAAC;IAClC,MAAM,GAAG,iBAAiB,CAAC,MAAM,CAAC;IAClC,IAAM,aAAa,GAAG,SAAhB,aAAa,CAAI,EAAE,EAAE,GAAG,EAAK;MAAA,IAAA,cAAA;MACjC,EAAE,CAAC,mBAAmB,CAAC,OAAO,EAAE,GAAG,KAAK,MAAM,GAAG,WAAW,GAAG,WAAW,CAAC;MAC3E,CAAA,cAAA,GAAA,EAAE,CAAC,SAAS,EAAC,MAAM,CAAA,KAAA,CAAA,cAAA,EAAA,kBAAA,CAAI,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,EAAC;IAC3E,CAAC;IACD,MAAM,CAAC,OAAO,CAAC,UAAA,EAAE;MAAA,OAAI,aAAa,CAAC,EAAE,EAAE,MAAM,CAAC;IAAA,EAAC;IAC/C,MAAM,CAAC,OAAO,CAAC,UAAA,EAAE;MAAA,OAAI,aAAa,CAAC,EAAE,EAAE,MAAM,CAAC;IAAA,EAAC;EACjD;EACA,EAAE,CAAC,MAAM,EAAE,YAAM;IACf,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,KAAK,KAAK,EAAE;MAC9C;MACA,OAAO,CAAC,CAAC;IACX,CAAC,MAAM;MACL,IAAI,CAAC,CAAC;MACN,MAAM,CAAC,CAAC;IACV;EACF,CAAC,CAAC;EACF,EAAE,CAAC,6BAA6B,EAAE,YAAM;IACtC,MAAM,CAAC,CAAC;EACV,CAAC,CAAC;EACF,EAAE,CAAC,SAAS,EAAE,YAAM;IAClB,OAAO,CAAC,CAAC;EACX,CAAC,CAAC;EACF,EAAE,CAAC,gBAAgB,EAAE,YAAM;IACzB,IAAA,mBAAA,GAGI,MAAM,CAAC,UAAU;MAFnB,MAAM,GAAA,mBAAA,CAAN,MAAM;MACN,MAAM,GAAA,mBAAA,CAAN,MAAM;IAER,MAAM,GAAG,iBAAiB,CAAC,MAAM,CAAC;IAClC,MAAM,GAAG,iBAAiB,CAAC,MAAM,CAAC;IAClC,GAAA,MAAA,CAAA,kBAAA,CAAI,MAAM,GAAA,kBAAA,CAAK,MAAM,GAAE,MAAM,CAAC,UAAA,EAAE;MAAA,OAAI,CAAC,CAAC,EAAE;IAAA,EAAC,CAAC,OAAO,CAAC,UAAA,EAAE;MAAA,OAAI,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,GAAG,QAAQ,GAAG,KAAK,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC;IAAA,EAAC;EAC9I,CAAC,CAAC;EACF,EAAE,CAAC,OAAO,EAAE,UAAC,EAAE,EAAE,CAAC,EAAK;IACrB,IAAA,mBAAA,GAGI,MAAM,CAAC,UAAU;MAFnB,MAAM,GAAA,mBAAA,CAAN,MAAM;MACN,MAAM,GAAA,mBAAA,CAAN,MAAM;IAER,MAAM,GAAG,iBAAiB,CAAC,MAAM,CAAC;IAClC,MAAM,GAAG,iBAAiB,CAAC,MAAM,CAAC;IAClC,IAAM,QAAQ,GAAG,CAAC,CAAC,MAAM;IACzB,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;MACpG,IAAI,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,KAAK,MAAM,CAAC,UAAU,CAAC,EAAE,KAAK,QAAQ,IAAI,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE;MAC3K,IAAI,QAAQ;MACZ,IAAI,MAAM,CAAC,MAAM,EAAE;QACjB,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC;MAC/E,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE;QACxB,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC;MAC/E;MACA,IAAI,QAAQ,KAAK,IAAI,EAAE;QACrB,IAAI,CAAC,gBAAgB,CAAC;MACxB,CAAC,MAAM;QACL,IAAI,CAAC,gBAAgB,CAAC;MACxB;MACA,GAAA,MAAA,CAAA,kBAAA,CAAI,MAAM,GAAA,kBAAA,CAAK,MAAM,GAAE,MAAM,CAAC,UAAA,EAAE;QAAA,OAAI,CAAC,CAAC,EAAE;MAAA,EAAC,CAAC,OAAO,CAAC,UAAA,EAAE;QAAA,OAAI,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC;MAAA,EAAC;IACpH;EACF,CAAC,CAAC;EACF,IAAM,MAAM,GAAG,SAAT,MAAM,CAAA,EAAS;IAAA,IAAA,oBAAA;IACnB,CAAA,oBAAA,GAAA,MAAM,CAAC,EAAE,CAAC,SAAS,EAAC,MAAM,CAAA,KAAA,CAAA,oBAAA,EAAA,kBAAA,CAAI,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,uBAAuB,CAAC,KAAK,CAAC,GAAG,CAAC,EAAC;IAC1F,IAAI,CAAC,CAAC;IACN,MAAM,CAAC,CAAC;EACV,CAAC;EACD,IAAM,OAAO,GAAG,SAAV,OAAO,CAAA,EAAS;IAAA,IAAA,qBAAA;IACpB,CAAA,qBAAA,GAAA,MAAM,CAAC,EAAE,CAAC,SAAS,EAAC,GAAG,CAAA,KAAA,CAAA,qBAAA,EAAA,kBAAA,CAAI,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,uBAAuB,CAAC,KAAK,CAAC,GAAG,CAAC,EAAC;IACvF,OAAO,CAAC,CAAC;EACX,CAAC;EACD,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE;IAC/B,MAAM,EAAN,MAAM;IACN,OAAO,EAAP,OAAO;IACP,MAAM,EAAN,MAAM;IACN,IAAI,EAAJ,IAAI;IACJ,OAAO,EAAP;EACF,CAAC,CAAC;AACJ;;;;;;;;;ACzLA,IAAA,kBAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,0BAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,MAAA,GAAA,OAAA;AAAuF,SAAA,uBAAA,GAAA,WAAA,GAAA,IAAA,GAAA,CAAA,UAAA,GAAA,GAAA,gBAAA,GAAA;AAAA,SAAA,mBAAA,GAAA,WAAA,kBAAA,CAAA,GAAA,KAAA,gBAAA,CAAA,GAAA,KAAA,2BAAA,CAAA,GAAA,KAAA,kBAAA;AAAA,SAAA,mBAAA,cAAA,SAAA;AAAA,SAAA,4BAAA,CAAA,EAAA,MAAA,SAAA,CAAA,qBAAA,CAAA,sBAAA,iBAAA,CAAA,CAAA,EAAA,MAAA,OAAA,CAAA,GAAA,MAAA,CAAA,SAAA,CAAA,QAAA,CAAA,IAAA,CAAA,CAAA,EAAA,KAAA,aAAA,CAAA,iBAAA,CAAA,CAAA,WAAA,EAAA,CAAA,GAAA,CAAA,CAAA,WAAA,CAAA,IAAA,MAAA,CAAA,cAAA,CAAA,mBAAA,KAAA,CAAA,IAAA,CAAA,CAAA,OAAA,CAAA,+DAAA,IAAA,CAAA,CAAA,UAAA,iBAAA,CAAA,CAAA,EAAA,MAAA;AAAA,SAAA,iBAAA,IAAA,eAAA,MAAA,oBAAA,IAAA,CAAA,MAAA,CAAA,QAAA,aAAA,IAAA,+BAAA,KAAA,CAAA,IAAA,CAAA,IAAA;AAAA,SAAA,mBAAA,GAAA,QAAA,KAAA,CAAA,OAAA,CAAA,GAAA,UAAA,iBAAA,CAAA,GAAA;AAAA,SAAA,kBAAA,GAAA,EAAA,GAAA,QAAA,GAAA,YAAA,GAAA,GAAA,GAAA,CAAA,MAAA,EAAA,GAAA,GAAA,GAAA,CAAA,MAAA,WAAA,CAAA,MAAA,IAAA,OAAA,KAAA,CAAA,GAAA,GAAA,CAAA,GAAA,GAAA,EAAA,CAAA,IAAA,IAAA,CAAA,CAAA,IAAA,GAAA,CAAA,CAAA,UAAA,IAAA;AACxE,SAAS,UAAU,CAAA,IAAA,EAK/B;EAAA,IAJD,MAAM,GAAA,IAAA,CAAN,MAAM;IACN,YAAY,GAAA,IAAA,CAAZ,YAAY;IACZ,EAAE,GAAA,IAAA,CAAF,EAAE;IACF,IAAI,GAAA,IAAA,CAAJ,IAAI;EAEJ,IAAM,GAAG,GAAG,mBAAmB;EAC/B,YAAY,CAAC;IACX,UAAU,EAAE;MACV,EAAE,EAAE,IAAI;MACR,aAAa,EAAE,MAAM;MACrB,SAAS,EAAE,KAAK;MAChB,WAAW,EAAE,KAAK;MAClB,YAAY,EAAE,IAAI;MAClB,iBAAiB,EAAE,IAAI;MACvB,cAAc,EAAE,IAAI;MACpB,YAAY,EAAE,IAAI;MAClB,mBAAmB,EAAE,KAAK;MAC1B,IAAI,EAAE,SAAS;MACf;MACA,cAAc,EAAE,KAAK;MACrB,kBAAkB,EAAE,CAAC;MACrB,qBAAqB,EAAE,SAAA,sBAAA,MAAM;QAAA,OAAI,MAAM;MAAA;MACvC,mBAAmB,EAAE,SAAA,oBAAA,MAAM;QAAA,OAAI,MAAM;MAAA;MACrC,WAAW,KAAA,MAAA,CAAK,GAAG,YAAS;MAC5B,iBAAiB,KAAA,MAAA,CAAK,GAAG,mBAAgB;MACzC,aAAa,KAAA,MAAA,CAAK,GAAG,MAAG;MACxB,YAAY,KAAA,MAAA,CAAK,GAAG,aAAU;MAC9B,UAAU,KAAA,MAAA,CAAK,GAAG,WAAQ;MAC1B,WAAW,KAAA,MAAA,CAAK,GAAG,YAAS;MAC5B,oBAAoB,KAAA,MAAA,CAAK,GAAG,sBAAmB;MAC/C,wBAAwB,KAAA,MAAA,CAAK,GAAG,0BAAuB;MACvD,cAAc,KAAA,MAAA,CAAK,GAAG,eAAY;MAClC,SAAS,KAAA,MAAA,CAAK,GAAG,UAAO;MACxB,eAAe,KAAA,MAAA,CAAK,GAAG,gBAAa;MACpC,aAAa,KAAA,MAAA,CAAK,GAAG,cAAW;MAChC,uBAAuB,KAAA,MAAA,CAAK,GAAG;IACjC;EACF,CAAC,CAAC;EACF,MAAM,CAAC,UAAU,GAAG;IAClB,EAAE,EAAE,IAAI;IACR,OAAO,EAAE;EACX,CAAC;EACD,IAAI,UAAU;EACd,IAAI,kBAAkB,GAAG,CAAC;EAC1B,IAAM,iBAAiB,GAAG,SAApB,iBAAiB,CAAG,EAAE,EAAI;IAC9B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,UAAA,CAAC;MAAA,OAAI,CAAC,CAAC,CAAC;IAAA,EAAC;IAClD,OAAO,EAAE;EACX,CAAC;EACD,SAAS,oBAAoB,CAAA,EAAG;IAC9B,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,MAAM,KAAK,CAAC;EAC1I;EACA,SAAS,cAAc,CAAC,QAAQ,EAAE,QAAQ,EAAE;IAC1C,IACE,iBAAiB,GACf,MAAM,CAAC,MAAM,CAAC,UAAU,CAD1B,iBAAiB;IAEnB,IAAI,CAAC,QAAQ,EAAE;IACf,QAAQ,GAAG,QAAQ,IAAA,MAAA,CAAI,QAAQ,KAAK,MAAM,GAAG,UAAU,GAAG,MAAM,oBAAiB;IACjF,IAAI,QAAQ,EAAE;MACZ,QAAQ,CAAC,SAAS,CAAC,GAAG,IAAA,MAAA,CAAI,iBAAiB,OAAA,MAAA,CAAI,QAAQ,CAAE,CAAC;MAC1D,QAAQ,GAAG,QAAQ,IAAA,MAAA,CAAI,QAAQ,KAAK,MAAM,GAAG,UAAU,GAAG,MAAM,oBAAiB;MACjF,IAAI,QAAQ,EAAE;QACZ,QAAQ,CAAC,SAAS,CAAC,GAAG,IAAA,MAAA,CAAI,iBAAiB,OAAA,MAAA,CAAI,QAAQ,OAAA,MAAA,CAAI,QAAQ,CAAE,CAAC;MACxE;IACF;EACF;EACA,SAAS,aAAa,CAAC,CAAC,EAAE;IACxB,IAAM,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,IAAA,6BAAiB,EAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;IAC1F,IAAI,CAAC,QAAQ,EAAE;MACb;IACF;IACA,CAAC,CAAC,cAAc,CAAC,CAAC;IAClB,IAAM,KAAK,GAAG,IAAA,mBAAY,EAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,cAAc;IACnE,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE;MACtB,IAAI,MAAM,CAAC,SAAS,KAAK,KAAK,EAAE;MAChC,IAAM,aAAa,GAAG,MAAM,CAAC,mBAAmB,CAAC,KAAK,CAAC;MACvD,IAAM,iBAAiB,GAAG,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,SAAS,CAAC;MACtE,IAAI,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,YAAY,EAAE;QAC9D,MAAM,CAAC,OAAO,CAAC;UACb,SAAS,EAAE,aAAa,GAAG,iBAAiB,GAAG,MAAM,GAAG,MAAM;UAC9D,gBAAgB,EAAE,aAAa;UAC/B,OAAO,EAAE;QACX,CAAC,CAAC;MACJ;MACA,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC;IAC3B,CAAC,MAAM;MACL,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC;IACvB;EACF;EACA,SAAS,MAAM,CAAA,EAAG;IAChB;IACA,IAAM,GAAG,GAAG,MAAM,CAAC,GAAG;IACtB,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU;IACvC,IAAI,oBAAoB,CAAC,CAAC,EAAE;IAC5B,IAAI,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC,EAAE;IAC7B,EAAE,GAAG,iBAAiB,CAAC,EAAE,CAAC;IAC1B;IACA,IAAI,OAAO;IACX,IAAI,aAAa;IACjB,IAAM,YAAY,GAAG,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM;IAC1H,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM;IAClH,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE;MACtB,aAAa,GAAG,MAAM,CAAC,iBAAiB,IAAI,CAAC;MAC7C,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,cAAc,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,MAAM,CAAC,SAAS;IAC7H,CAAC,MAAM,IAAI,OAAO,MAAM,CAAC,SAAS,KAAK,WAAW,EAAE;MAClD,OAAO,GAAG,MAAM,CAAC,SAAS;MAC1B,aAAa,GAAG,MAAM,CAAC,iBAAiB;IAC1C,CAAC,MAAM;MACL,aAAa,GAAG,MAAM,CAAC,aAAa,IAAI,CAAC;MACzC,OAAO,GAAG,MAAM,CAAC,WAAW,IAAI,CAAC;IACnC;IACA;IACA,IAAI,MAAM,CAAC,IAAI,KAAK,SAAS,IAAI,MAAM,CAAC,UAAU,CAAC,OAAO,IAAI,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;MAClG,IAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,OAAO;MACzC,IAAI,UAAU;MACd,IAAI,SAAS;MACb,IAAI,QAAQ;MACZ,IAAI,MAAM,CAAC,cAAc,EAAE;QACzB,UAAU,GAAG,IAAA,uBAAgB,EAAC,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,OAAO,GAAG,QAAQ,EAAE,IAAI,CAAC;QAC3F,EAAE,CAAC,OAAO,CAAC,UAAA,KAAK,EAAI;UAClB,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,OAAO,GAAG,QAAQ,CAAC,MAAA,MAAA,CAAM,UAAU,IAAI,MAAM,CAAC,kBAAkB,GAAG,CAAC,CAAC,OAAI;QAC/G,CAAC,CAAC;QACF,IAAI,MAAM,CAAC,kBAAkB,GAAG,CAAC,IAAI,aAAa,KAAK,SAAS,EAAE;UAChE,kBAAkB,IAAI,OAAO,IAAI,aAAa,IAAI,CAAC,CAAC;UACpD,IAAI,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,GAAG,CAAC,EAAE;YACtD,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,GAAG,CAAC;UACpD,CAAC,MAAM,IAAI,kBAAkB,GAAG,CAAC,EAAE;YACjC,kBAAkB,GAAG,CAAC;UACxB;QACF;QACA,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,kBAAkB,EAAE,CAAC,CAAC;QACtD,SAAS,GAAG,UAAU,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;QAClF,QAAQ,GAAG,CAAC,SAAS,GAAG,UAAU,IAAI,CAAC;MACzC;MACA,OAAO,CAAC,OAAO,CAAC,UAAA,QAAQ,EAAI;QAAA,IAAA,mBAAA;QAC1B,IAAM,eAAe,GAAG,kBAAA,CAAI,CAAC,EAAE,EAAE,OAAO,EAAE,YAAY,EAAE,OAAO,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,UAAA,MAAM;UAAA,UAAA,MAAA,CAAO,MAAM,CAAC,iBAAiB,EAAA,MAAA,CAAG,MAAM;QAAA,CAAE,CAAC,EAAE,GAAG,CAAC,UAAA,CAAC;UAAA,OAAI,OAAO,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;QAAA,EAAC,CAAC,IAAI,CAAC,CAAC;QAC3N,CAAA,mBAAA,GAAA,QAAQ,CAAC,SAAS,EAAC,MAAM,CAAA,KAAA,CAAA,mBAAA,EAAA,kBAAA,CAAI,eAAe,EAAC;MAC/C,CAAC,CAAC;MACF,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;QACjB,OAAO,CAAC,OAAO,CAAC,UAAA,MAAM,EAAI;UACxB,IAAM,WAAW,GAAG,IAAA,mBAAY,EAAC,MAAM,CAAC;UACxC,IAAI,WAAW,KAAK,OAAO,EAAE;YAAA,IAAA,iBAAA;YAC3B,CAAA,iBAAA,GAAA,MAAM,CAAC,SAAS,EAAC,GAAG,CAAA,KAAA,CAAA,iBAAA,EAAA,kBAAA,CAAI,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,CAAC,EAAC;UAC9D;UACA,IAAI,MAAM,CAAC,cAAc,EAAE;YACzB,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,EAAE;cAAA,IAAA,kBAAA;cACzD,CAAA,kBAAA,GAAA,MAAM,CAAC,SAAS,EAAC,GAAG,CAAA,KAAA,CAAA,kBAAA,EAAA,kBAAA,CAAI,GAAA,MAAA,CAAG,MAAM,CAAC,iBAAiB,WAAQ,KAAK,CAAC,GAAG,CAAC,EAAC;YACxE;YACA,IAAI,WAAW,KAAK,UAAU,EAAE;cAC9B,cAAc,CAAC,MAAM,EAAE,MAAM,CAAC;YAChC;YACA,IAAI,WAAW,KAAK,SAAS,EAAE;cAC7B,cAAc,CAAC,MAAM,EAAE,MAAM,CAAC;YAChC;UACF;QACF,CAAC,CAAC;MACJ,CAAC,MAAM;QACL,IAAM,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC;QAC/B,IAAI,MAAM,EAAE;UAAA,IAAA,kBAAA;UACV,CAAA,kBAAA,GAAA,MAAM,CAAC,SAAS,EAAC,GAAG,CAAA,KAAA,CAAA,kBAAA,EAAA,kBAAA,CAAI,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,CAAC,EAAC;QAC9D;QACA,IAAI,MAAM,CAAC,cAAc,EAAE;UACzB,IAAM,oBAAoB,GAAG,OAAO,CAAC,UAAU,CAAC;UAChD,IAAM,mBAAmB,GAAG,OAAO,CAAC,SAAS,CAAC;UAC9C,KAAK,IAAI,CAAC,GAAG,UAAU,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,IAAI,CAAC,EAAE;YAC/C,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;cAAA,IAAA,oBAAA;cACd,CAAA,oBAAA,GAAA,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,EAAC,GAAG,CAAA,KAAA,CAAA,oBAAA,EAAA,kBAAA,CAAI,GAAA,MAAA,CAAG,MAAM,CAAC,iBAAiB,WAAQ,KAAK,CAAC,GAAG,CAAC,EAAC;YAC5E;UACF;UACA,cAAc,CAAC,oBAAoB,EAAE,MAAM,CAAC;UAC5C,cAAc,CAAC,mBAAmB,EAAE,MAAM,CAAC;QAC7C;MACF;MACA,IAAI,MAAM,CAAC,cAAc,EAAE;QACzB,IAAM,oBAAoB,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,kBAAkB,GAAG,CAAC,CAAC;QACpF,IAAM,aAAa,GAAG,CAAC,UAAU,GAAG,oBAAoB,GAAG,UAAU,IAAI,CAAC,GAAG,QAAQ,GAAG,UAAU;QAClG,IAAM,UAAU,GAAG,GAAG,GAAG,OAAO,GAAG,MAAM;QACzC,OAAO,CAAC,OAAO,CAAC,UAAA,MAAM,EAAI;UACxB,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,UAAU,GAAG,KAAK,CAAC,MAAA,MAAA,CAAM,aAAa,OAAI;QACjF,CAAC,CAAC;MACJ;IACF;IACA,EAAE,CAAC,OAAO,CAAC,UAAC,KAAK,EAAE,UAAU,EAAK;MAChC,IAAI,MAAM,CAAC,IAAI,KAAK,UAAU,EAAE;QAC9B,KAAK,CAAC,gBAAgB,CAAC,IAAA,6BAAiB,EAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,UAAA,UAAU,EAAI;UACnF,UAAU,CAAC,WAAW,GAAG,MAAM,CAAC,qBAAqB,CAAC,OAAO,GAAG,CAAC,CAAC;QACpE,CAAC,CAAC;QACF,KAAK,CAAC,gBAAgB,CAAC,IAAA,6BAAiB,EAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,UAAA,OAAO,EAAI;UAC9E,OAAO,CAAC,WAAW,GAAG,MAAM,CAAC,mBAAmB,CAAC,KAAK,CAAC;QACzD,CAAC,CAAC;MACJ;MACA,IAAI,MAAM,CAAC,IAAI,KAAK,aAAa,EAAE;QACjC,IAAI,oBAAoB;QACxB,IAAI,MAAM,CAAC,mBAAmB,EAAE;UAC9B,oBAAoB,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,UAAU,GAAG,YAAY;QAC1E,CAAC,MAAM;UACL,oBAAoB,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,YAAY,GAAG,UAAU;QAC1E;QACA,IAAM,KAAK,GAAG,CAAC,OAAO,GAAG,CAAC,IAAI,KAAK;QACnC,IAAI,MAAM,GAAG,CAAC;QACd,IAAI,MAAM,GAAG,CAAC;QACd,IAAI,oBAAoB,KAAK,YAAY,EAAE;UACzC,MAAM,GAAG,KAAK;QAChB,CAAC,MAAM;UACL,MAAM,GAAG,KAAK;QAChB;QACA,KAAK,CAAC,gBAAgB,CAAC,IAAA,6BAAiB,EAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC,CAAC,OAAO,CAAC,UAAA,UAAU,EAAI;UAC3F,UAAU,CAAC,KAAK,CAAC,SAAS,gCAAA,MAAA,CAAgC,MAAM,eAAA,MAAA,CAAY,MAAM,MAAG;UACrF,UAAU,CAAC,KAAK,CAAC,kBAAkB,MAAA,MAAA,CAAM,MAAM,CAAC,MAAM,CAAC,KAAK,OAAI;QAClE,CAAC,CAAC;MACJ;MACA,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,IAAI,MAAM,CAAC,YAAY,EAAE;QACnD,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,MAAM,EAAE,OAAO,GAAG,CAAC,EAAE,KAAK,CAAC;QACjE,IAAI,UAAU,KAAK,CAAC,EAAE,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC;MACvD,CAAC,MAAM;QACL,IAAI,UAAU,KAAK,CAAC,EAAE,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC;QACrD,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC;MACjC;MACA,IAAI,MAAM,CAAC,MAAM,CAAC,aAAa,IAAI,MAAM,CAAC,OAAO,EAAE;QACjD,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,GAAG,KAAK,GAAG,QAAQ,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC;MACvE;IACF,CAAC,CAAC;EACJ;EACA,SAAS,MAAM,CAAA,EAAG;IAChB;IACA,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU;IACvC,IAAI,oBAAoB,CAAC,CAAC,EAAE;IAC5B,IAAM,YAAY,GAAG,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM;IAC1H,IAAI,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC,EAAE;IAC7B,EAAE,GAAG,iBAAiB,CAAC,EAAE,CAAC;IAC1B,IAAI,cAAc,GAAG,EAAE;IACvB,IAAI,MAAM,CAAC,IAAI,KAAK,SAAS,EAAE;MAC7B,IAAI,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM;MAC1H,IAAI,MAAM,CAAC,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,IAAI,eAAe,GAAG,YAAY,EAAE;QAC9F,eAAe,GAAG,YAAY;MAChC;MACA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,EAAE,CAAC,IAAI,CAAC,EAAE;QAC3C,IAAI,MAAM,CAAC,YAAY,EAAE;UACvB,cAAc,IAAI,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,CAAC,WAAW,CAAC;QAC3E,CAAC,MAAM;UACL,cAAc,QAAA,MAAA,CAAQ,MAAM,CAAC,aAAa,eAAA,MAAA,CAAW,MAAM,CAAC,WAAW,WAAA,MAAA,CAAO,MAAM,CAAC,aAAa,MAAG;QACvG;MACF;IACF;IACA,IAAI,MAAM,CAAC,IAAI,KAAK,UAAU,EAAE;MAC9B,IAAI,MAAM,CAAC,cAAc,EAAE;QACzB,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,UAAU,CAAC;MAC7F,CAAC,MAAM;QACL,cAAc,GAAG,iBAAA,MAAA,CAAgB,MAAM,CAAC,YAAY,kBAAc,KAAK,oBAAA,MAAA,CAAmB,MAAM,CAAC,UAAU,eAAW;MACxH;IACF;IACA,IAAI,MAAM,CAAC,IAAI,KAAK,aAAa,EAAE;MACjC,IAAI,MAAM,CAAC,iBAAiB,EAAE;QAC5B,cAAc,GAAG,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,oBAAoB,CAAC;MACrF,CAAC,MAAM;QACL,cAAc,oBAAA,MAAA,CAAmB,MAAM,CAAC,oBAAoB,eAAW;MACzE;IACF;IACA,MAAM,CAAC,UAAU,CAAC,OAAO,GAAG,EAAE;IAC9B,EAAE,CAAC,OAAO,CAAC,UAAA,KAAK,EAAI;MAClB,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE;QAC5B,KAAK,CAAC,SAAS,GAAG,cAAc,IAAI,EAAE;MACxC;MACA,IAAI,MAAM,CAAC,IAAI,KAAK,SAAS,EAAE;QAAA,IAAA,qBAAA;QAC7B,CAAA,qBAAA,GAAA,MAAM,CAAC,UAAU,CAAC,OAAO,EAAC,IAAI,CAAA,KAAA,CAAA,qBAAA,EAAA,kBAAA,CAAI,KAAK,CAAC,gBAAgB,CAAC,IAAA,6BAAiB,EAAC,MAAM,CAAC,WAAW,CAAC,CAAC,EAAC;MAClG;IACF,CAAC,CAAC;IACF,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE;MAC5B,IAAI,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACjC;EACF;EACA,SAAS,IAAI,CAAA,EAAG;IACd,MAAM,CAAC,MAAM,CAAC,UAAU,GAAG,IAAA,qCAAyB,EAAC,MAAM,EAAE,MAAM,CAAC,cAAc,CAAC,UAAU,EAAE,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE;MACvH,EAAE,EAAE;IACN,CAAC,CAAC;IACF,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU;IACvC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE;IAChB,IAAI,EAAE;IACN,IAAI,OAAO,MAAM,CAAC,EAAE,KAAK,QAAQ,IAAI,MAAM,CAAC,SAAS,EAAE;MACrD,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC;IACpD;IACA,IAAI,CAAC,EAAE,IAAI,OAAO,MAAM,CAAC,EAAE,KAAK,QAAQ,EAAE;MACxC,EAAE,GAAA,kBAAA,CAAO,QAAQ,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IAChD;IACA,IAAI,CAAC,EAAE,EAAE;MACP,EAAE,GAAG,MAAM,CAAC,EAAE;IAChB;IACA,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE;IAC5B,IAAI,MAAM,CAAC,MAAM,CAAC,iBAAiB,IAAI,OAAO,MAAM,CAAC,EAAE,KAAK,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;MAC1G,EAAE,GAAA,kBAAA,CAAO,MAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;MAC/C;MACA,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;QACjB,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,UAAA,KAAK,EAAI;UACtB,IAAI,IAAA,qBAAc,EAAC,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,EAAE,EAAE,OAAO,KAAK;UACnE,OAAO,IAAI;QACb,CAAC,CAAC,CAAC,CAAC,CAAC;MACP;IACF;IACA,IAAI,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IACpD,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE;MAC/B,EAAE,EAAF;IACF,CAAC,CAAC;IACF,EAAE,GAAG,iBAAiB,CAAC,EAAE,CAAC;IAC1B,EAAE,CAAC,OAAO,CAAC,UAAA,KAAK,EAAI;MAClB,IAAI,MAAM,CAAC,IAAI,KAAK,SAAS,IAAI,MAAM,CAAC,SAAS,EAAE;QACjD,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,cAAc,CAAC;MAC5C;MACA,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC;MACvD,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,MAAM,CAAC,eAAe,GAAG,MAAM,CAAC,aAAa,CAAC;MAC1F,IAAI,MAAM,CAAC,IAAI,KAAK,SAAS,IAAI,MAAM,CAAC,cAAc,EAAE;QACtD,KAAK,CAAC,SAAS,CAAC,GAAG,IAAA,MAAA,CAAI,MAAM,CAAC,aAAa,EAAA,MAAA,CAAG,MAAM,CAAC,IAAI,aAAU,CAAC;QACpE,kBAAkB,GAAG,CAAC;QACtB,IAAI,MAAM,CAAC,kBAAkB,GAAG,CAAC,EAAE;UACjC,MAAM,CAAC,kBAAkB,GAAG,CAAC;QAC/B;MACF;MACA,IAAI,MAAM,CAAC,IAAI,KAAK,aAAa,IAAI,MAAM,CAAC,mBAAmB,EAAE;QAC/D,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,wBAAwB,CAAC;MACtD;MACA,IAAI,MAAM,CAAC,SAAS,EAAE;QACpB,KAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,aAAa,CAAC;MAChD;MACA,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;QACnB,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC;MACvC;IACF,CAAC,CAAC;EACJ;EACA,SAAS,OAAO,CAAA,EAAG;IACjB,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU;IACvC,IAAI,oBAAoB,CAAC,CAAC,EAAE;IAC5B,IAAI,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC,EAAE;IAC7B,IAAI,EAAE,EAAE;MACN,EAAE,GAAG,iBAAiB,CAAC,EAAE,CAAC;MAC1B,EAAE,CAAC,OAAO,CAAC,UAAA,KAAK,EAAI;QAClB,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC;QAC1C,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC;QAC1D,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,MAAM,CAAC,eAAe,GAAG,MAAM,CAAC,aAAa,CAAC;QAC7F,IAAI,MAAM,CAAC,SAAS,EAAE;UACpB,KAAK,CAAC,mBAAmB,CAAC,OAAO,EAAE,aAAa,CAAC;QACnD;MACF,CAAC,CAAC;IACJ;IACA,IAAI,MAAM,CAAC,UAAU,CAAC,OAAO,EAAE,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,UAAA,KAAK;MAAA,IAAA,gBAAA;MAAA,OAAI,CAAA,gBAAA,GAAA,KAAK,CAAC,SAAS,EAAC,MAAM,CAAA,KAAA,CAAA,gBAAA,EAAA,kBAAA,CAAI,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,CAAC,EAAC;IAAA,EAAC;EAC3I;EACA,EAAE,CAAC,iBAAiB,EAAE,YAAM;IAC1B,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,EAAE;IACjD,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU;IACvC,IACE,EAAE,GACA,MAAM,CAAC,UAAU,CADnB,EAAE;IAEJ,EAAE,GAAG,iBAAiB,CAAC,EAAE,CAAC;IAC1B,EAAE,CAAC,OAAO,CAAC,UAAA,KAAK,EAAI;MAClB,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,MAAM,CAAC,aAAa,CAAC;MACpE,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,MAAM,CAAC,eAAe,GAAG,MAAM,CAAC,aAAa,CAAC;IAC5F,CAAC,CAAC;EACJ,CAAC,CAAC;EACF,EAAE,CAAC,MAAM,EAAE,YAAM;IACf,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,KAAK,KAAK,EAAE;MAC9C;MACA,OAAO,CAAC,CAAC;IACX,CAAC,MAAM;MACL,IAAI,CAAC,CAAC;MACN,MAAM,CAAC,CAAC;MACR,MAAM,CAAC,CAAC;IACV;EACF,CAAC,CAAC;EACF,EAAE,CAAC,mBAAmB,EAAE,YAAM;IAC5B,IAAI,OAAO,MAAM,CAAC,SAAS,KAAK,WAAW,EAAE;MAC3C,MAAM,CAAC,CAAC;IACV;EACF,CAAC,CAAC;EACF,EAAE,CAAC,iBAAiB,EAAE,YAAM;IAC1B,MAAM,CAAC,CAAC;EACV,CAAC,CAAC;EACF,EAAE,CAAC,sBAAsB,EAAE,YAAM;IAC/B,MAAM,CAAC,CAAC;IACR,MAAM,CAAC,CAAC;EACV,CAAC,CAAC;EACF,EAAE,CAAC,SAAS,EAAE,YAAM;IAClB,OAAO,CAAC,CAAC;EACX,CAAC,CAAC;EACF,EAAE,CAAC,gBAAgB,EAAE,YAAM;IACzB,IACE,EAAE,GACA,MAAM,CAAC,UAAU,CADnB,EAAE;IAEJ,IAAI,EAAE,EAAE;MACN,EAAE,GAAG,iBAAiB,CAAC,EAAE,CAAC;MAC1B,EAAE,CAAC,OAAO,CAAC,UAAA,KAAK;QAAA,OAAI,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,GAAG,QAAQ,GAAG,KAAK,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC;MAAA,EAAC;IAC7G;EACF,CAAC,CAAC;EACF,EAAE,CAAC,aAAa,EAAE,YAAM;IACtB,MAAM,CAAC,CAAC;EACV,CAAC,CAAC;EACF,EAAE,CAAC,OAAO,EAAE,UAAC,EAAE,EAAE,CAAC,EAAK;IACrB,IAAM,QAAQ,GAAG,CAAC,CAAC,MAAM;IACzB,IACE,EAAE,GACA,MAAM,CAAC,UAAU,CADnB,EAAE;IAEJ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,UAAA,OAAO;MAAA,OAAI,CAAC,CAAC,OAAO;IAAA,EAAC;IAC9D,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,IAAI,EAAE,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,EAAE;MACpK,IAAI,MAAM,CAAC,UAAU,KAAK,MAAM,CAAC,UAAU,CAAC,MAAM,IAAI,QAAQ,KAAK,MAAM,CAAC,UAAU,CAAC,MAAM,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM,IAAI,QAAQ,KAAK,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;MACnK,IAAM,QAAQ,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC;MAC/E,IAAI,QAAQ,KAAK,IAAI,EAAE;QACrB,IAAI,CAAC,gBAAgB,CAAC;MACxB,CAAC,MAAM;QACL,IAAI,CAAC,gBAAgB,CAAC;MACxB;MACA,EAAE,CAAC,OAAO,CAAC,UAAA,KAAK;QAAA,OAAI,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC;MAAA,EAAC;IACnF;EACF,CAAC,CAAC;EACF,IAAM,MAAM,GAAG,SAAT,MAAM,CAAA,EAAS;IACnB,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,uBAAuB,CAAC;IAC5E,IACE,EAAE,GACA,MAAM,CAAC,UAAU,CADnB,EAAE;IAEJ,IAAI,EAAE,EAAE;MACN,EAAE,GAAG,iBAAiB,CAAC,EAAE,CAAC;MAC1B,EAAE,CAAC,OAAO,CAAC,UAAA,KAAK;QAAA,OAAI,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,uBAAuB,CAAC;MAAA,EAAC;IAC/F;IACA,IAAI,CAAC,CAAC;IACN,MAAM,CAAC,CAAC;IACR,MAAM,CAAC,CAAC;EACV,CAAC;EACD,IAAM,OAAO,GAAG,SAAV,OAAO,CAAA,EAAS;IACpB,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,uBAAuB,CAAC;IACzE,IACE,EAAE,GACA,MAAM,CAAC,UAAU,CADnB,EAAE;IAEJ,IAAI,EAAE,EAAE;MACN,EAAE,GAAG,iBAAiB,CAAC,EAAE,CAAC;MAC1B,EAAE,CAAC,OAAO,CAAC,UAAA,KAAK;QAAA,OAAI,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,uBAAuB,CAAC;MAAA,EAAC;IAC5F;IACA,OAAO,CAAC,CAAC;EACX,CAAC;EACD,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE;IAC/B,MAAM,EAAN,MAAM;IACN,OAAO,EAAP,OAAO;IACP,MAAM,EAAN,MAAM;IACN,MAAM,EAAN,MAAM;IACN,IAAI,EAAJ,IAAI;IACJ,OAAO,EAAP;EACF,CAAC,CAAC;AACJ;;;;;;;;;AC7bA,IAAA,MAAA,GAAA,OAAA;AACe,SAAS,QAAQ,CAAA,IAAA,EAI7B;EAAA,IAHD,MAAM,GAAA,IAAA,CAAN,MAAM;IACN,YAAY,GAAA,IAAA,CAAZ,YAAY;IACZ,EAAE,GAAA,IAAA,CAAF,EAAE;EAEF,YAAY,CAAC;IACX,QAAQ,EAAE;MACR,OAAO,EAAE;IACX;EACF,CAAC,CAAC;EACF,IAAM,YAAY,GAAG,SAAf,YAAY,CAAI,EAAE,EAAE,QAAQ,EAAK;IACrC,IACE,GAAG,GACD,MAAM,CADR,GAAG;IAEL,IAAM,SAAS,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;IAC9B,IAAM,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,sBAAsB,CAAC,IAAI,GAAG;IACxD,IAAI,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,wBAAwB,CAAC;IACjD,IAAI,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,wBAAwB,CAAC;IACjD,IAAM,KAAK,GAAG,EAAE,CAAC,YAAY,CAAC,4BAA4B,CAAC;IAC3D,IAAM,OAAO,GAAG,EAAE,CAAC,YAAY,CAAC,8BAA8B,CAAC;IAC/D,IAAM,MAAM,GAAG,EAAE,CAAC,YAAY,CAAC,6BAA6B,CAAC;IAC7D,IAAI,CAAC,IAAI,CAAC,EAAE;MACV,CAAC,GAAG,CAAC,IAAI,GAAG;MACZ,CAAC,GAAG,CAAC,IAAI,GAAG;IACd,CAAC,MAAM,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;MAChC,CAAC,GAAG,CAAC;MACL,CAAC,GAAG,GAAG;IACT,CAAC,MAAM;MACL,CAAC,GAAG,CAAC;MACL,CAAC,GAAG,GAAG;IACT;IACA,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;MACvB,CAAC,MAAA,MAAA,CAAM,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,QAAQ,GAAG,SAAS,MAAG;IAClD,CAAC,MAAM;MACL,CAAC,MAAA,MAAA,CAAM,CAAC,GAAG,QAAQ,GAAG,SAAS,OAAI;IACrC;IACA,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;MACvB,CAAC,MAAA,MAAA,CAAM,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,QAAQ,MAAG;IACtC,CAAC,MAAM;MACL,CAAC,MAAA,MAAA,CAAM,CAAC,GAAG,QAAQ,OAAI;IACzB;IACA,IAAI,OAAO,OAAO,KAAK,WAAW,IAAI,OAAO,KAAK,IAAI,EAAE;MACtD,IAAM,cAAc,GAAG,OAAO,GAAG,CAAC,OAAO,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;MACzE,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG,cAAc;IACnC;IACA,IAAI,SAAS,kBAAA,MAAA,CAAkB,CAAC,QAAA,MAAA,CAAK,CAAC,WAAQ;IAC9C,IAAI,OAAO,KAAK,KAAK,WAAW,IAAI,KAAK,KAAK,IAAI,EAAE;MAClD,IAAM,YAAY,GAAG,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;MACnE,SAAS,cAAA,MAAA,CAAc,YAAY,MAAG;IACxC;IACA,IAAI,MAAM,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,KAAK,IAAI,EAAE;MAC9D,IAAM,aAAa,GAAG,MAAM,GAAG,QAAQ,GAAG,CAAC,CAAC;MAC5C,SAAS,eAAA,MAAA,CAAe,aAAa,SAAM;IAC7C;IACA,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,SAAS;EAChC,CAAC;EACD,IAAM,YAAY,GAAG,SAAf,YAAY,CAAA,EAAS;IACzB,IACE,EAAE,GAIA,MAAM,CAJR,EAAE;MACF,MAAM,GAGJ,MAAM,CAHR,MAAM;MACN,QAAQ,GAEN,MAAM,CAFR,QAAQ;MACR,QAAQ,GACN,MAAM,CADR,QAAQ;IAEV,IAAA,sBAAe,EAAC,EAAE,EAAE,0IAA0I,CAAC,CAAC,OAAO,CAAC,UAAA,KAAK,EAAI;MAC/K,YAAY,CAAC,KAAK,EAAE,QAAQ,CAAC;IAC/B,CAAC,CAAC;IACF,MAAM,CAAC,OAAO,CAAC,UAAC,OAAO,EAAE,UAAU,EAAK;MACtC,IAAI,aAAa,GAAG,OAAO,CAAC,QAAQ;MACpC,IAAI,MAAM,CAAC,MAAM,CAAC,cAAc,GAAG,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,aAAa,KAAK,MAAM,EAAE;QAC9E,aAAa,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;MAC/E;MACA,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;MACxD,OAAO,CAAC,gBAAgB,CAAC,yKAAyK,CAAC,CAAC,OAAO,CAAC,UAAA,KAAK,EAAI;QACnN,YAAY,CAAC,KAAK,EAAE,aAAa,CAAC;MACpC,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;EACD,IAAM,aAAa,GAAG,SAAhB,aAAa,CAAA,EAAuC;IAAA,IAAnC,QAAQ,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,MAAM,CAAC,MAAM,CAAC,KAAK;IACnD,IACE,EAAE,GACA,MAAM,CADR,EAAE;IAEJ,EAAE,CAAC,gBAAgB,CAAC,0IAA0I,CAAC,CAAC,OAAO,CAAC,UAAA,UAAU,EAAI;MACpL,IAAI,gBAAgB,GAAG,QAAQ,CAAC,UAAU,CAAC,YAAY,CAAC,+BAA+B,CAAC,EAAE,EAAE,CAAC,IAAI,QAAQ;MACzG,IAAI,QAAQ,KAAK,CAAC,EAAE,gBAAgB,GAAG,CAAC;MACxC,UAAU,CAAC,KAAK,CAAC,kBAAkB,MAAA,MAAA,CAAM,gBAAgB,OAAI;IAC/D,CAAC,CAAC;EACJ,CAAC;EACD,EAAE,CAAC,YAAY,EAAE,YAAM;IACrB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE;IACrC,MAAM,CAAC,MAAM,CAAC,mBAAmB,GAAG,IAAI;IACxC,MAAM,CAAC,cAAc,CAAC,mBAAmB,GAAG,IAAI;EAClD,CAAC,CAAC;EACF,EAAE,CAAC,MAAM,EAAE,YAAM;IACf,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE;IACrC,YAAY,CAAC,CAAC;EAChB,CAAC,CAAC;EACF,EAAE,CAAC,cAAc,EAAE,YAAM;IACvB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE;IACrC,YAAY,CAAC,CAAC;EAChB,CAAC,CAAC;EACF,EAAE,CAAC,eAAe,EAAE,UAAC,OAAO,EAAE,QAAQ,EAAK;IACzC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE;IACrC,aAAa,CAAC,QAAQ,CAAC;EACzB,CAAC,CAAC;AACJ;;;;;;;;;ACzGA,IAAA,UAAA,GAAA,OAAA;AACA,IAAA,MAAA,GAAA,OAAA;AACA,IAAA,0BAAA,GAAA,sBAAA,CAAA,OAAA;AAAsF,SAAA,uBAAA,GAAA,WAAA,GAAA,IAAA,GAAA,CAAA,UAAA,GAAA,GAAA,gBAAA,GAAA;AACvE,SAAS,SAAS,CAAA,IAAA,EAK9B;EAAA,IAJD,MAAM,GAAA,IAAA,CAAN,MAAM;IACN,YAAY,GAAA,IAAA,CAAZ,YAAY;IACZ,EAAE,GAAA,IAAA,CAAF,EAAE;IACF,IAAI,GAAA,IAAA,CAAJ,IAAI;EAEJ,IAAM,QAAQ,GAAG,IAAA,sBAAW,EAAC,CAAC;EAC9B,IAAI,SAAS,GAAG,KAAK;EACrB,IAAI,OAAO,GAAG,IAAI;EAClB,IAAI,WAAW,GAAG,IAAI;EACtB,IAAI,YAAY;EAChB,IAAI,QAAQ;EACZ,IAAI,SAAS;EACb,IAAI,OAAO;EACX,YAAY,CAAC;IACX,SAAS,EAAE;MACT,EAAE,EAAE,IAAI;MACR,QAAQ,EAAE,MAAM;MAChB,IAAI,EAAE,KAAK;MACX,SAAS,EAAE,KAAK;MAChB,aAAa,EAAE,IAAI;MACnB,SAAS,EAAE,uBAAuB;MAClC,SAAS,EAAE,uBAAuB;MAClC,sBAAsB,EAAE,2BAA2B;MACnD,eAAe,+BAA+B;MAC9C,aAAa;IACf;EACF,CAAC,CAAC;EACF,MAAM,CAAC,SAAS,GAAG;IACjB,EAAE,EAAE,IAAI;IACR,MAAM,EAAE;EACV,CAAC;EACD,SAAS,YAAY,CAAA,EAAG;IACtB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE;IACzD,IACE,SAAS,GAEP,MAAM,CAFR,SAAS;MACK,GAAG,GACf,MAAM,CADR,YAAY;IAEd,IACE,MAAM,GAEJ,SAAS,CAFX,MAAM;MACN,EAAE,GACA,SAAS,CADX,EAAE;IAEJ,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS;IACtC,IAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,QAAQ;IAC3E,IAAI,OAAO,GAAG,QAAQ;IACtB,IAAI,MAAM,GAAG,CAAC,SAAS,GAAG,QAAQ,IAAI,QAAQ;IAC9C,IAAI,GAAG,EAAE;MACP,MAAM,GAAG,CAAC,MAAM;MAChB,IAAI,MAAM,GAAG,CAAC,EAAE;QACd,OAAO,GAAG,QAAQ,GAAG,MAAM;QAC3B,MAAM,GAAG,CAAC;MACZ,CAAC,MAAM,IAAI,CAAC,MAAM,GAAG,QAAQ,GAAG,SAAS,EAAE;QACzC,OAAO,GAAG,SAAS,GAAG,MAAM;MAC9B;IACF,CAAC,MAAM,IAAI,MAAM,GAAG,CAAC,EAAE;MACrB,OAAO,GAAG,QAAQ,GAAG,MAAM;MAC3B,MAAM,GAAG,CAAC;IACZ,CAAC,MAAM,IAAI,MAAM,GAAG,QAAQ,GAAG,SAAS,EAAE;MACxC,OAAO,GAAG,SAAS,GAAG,MAAM;IAC9B;IACA,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;MACzB,MAAM,CAAC,KAAK,CAAC,SAAS,kBAAA,MAAA,CAAkB,MAAM,cAAW;MACzD,MAAM,CAAC,KAAK,CAAC,KAAK,MAAA,MAAA,CAAM,OAAO,OAAI;IACrC,CAAC,MAAM;MACL,MAAM,CAAC,KAAK,CAAC,SAAS,uBAAA,MAAA,CAAuB,MAAM,WAAQ;MAC3D,MAAM,CAAC,KAAK,CAAC,MAAM,MAAA,MAAA,CAAM,OAAO,OAAI;IACtC;IACA,IAAI,MAAM,CAAC,IAAI,EAAE;MACf,YAAY,CAAC,OAAO,CAAC;MACrB,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC;MACpB,OAAO,GAAG,UAAU,CAAC,YAAM;QACzB,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC;QACpB,EAAE,CAAC,KAAK,CAAC,kBAAkB,GAAG,OAAO;MACvC,CAAC,EAAE,IAAI,CAAC;IACV;EACF;EACA,SAAS,aAAa,CAAC,QAAQ,EAAE;IAC/B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE;IACzD,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,MAAA,MAAA,CAAM,QAAQ,OAAI;EACpE;EACA,SAAS,UAAU,CAAA,EAAG;IACpB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE;IACzD,IACE,SAAS,GACP,MAAM,CADR,SAAS;IAEX,IACE,MAAM,GAEJ,SAAS,CAFX,MAAM;MACN,EAAE,GACA,SAAS,CADX,EAAE;IAEJ,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE;IACvB,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE;IACxB,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,EAAE,CAAC,WAAW,GAAG,EAAE,CAAC,YAAY;IACpE,OAAO,GAAG,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,kBAAkB,IAAI,MAAM,CAAC,MAAM,CAAC,cAAc,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACzI,IAAI,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,KAAK,MAAM,EAAE;MAC/C,QAAQ,GAAG,SAAS,GAAG,OAAO;IAChC,CAAC,MAAM;MACL,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,CAAC;IAC3D;IACA,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;MACzB,MAAM,CAAC,KAAK,CAAC,KAAK,MAAA,MAAA,CAAM,QAAQ,OAAI;IACtC,CAAC,MAAM;MACL,MAAM,CAAC,KAAK,CAAC,MAAM,MAAA,MAAA,CAAM,QAAQ,OAAI;IACvC;IACA,IAAI,OAAO,IAAI,CAAC,EAAE;MAChB,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM;IAC3B,CAAC,MAAM;MACL,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE;IACvB;IACA,IAAI,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE;MAChC,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC;IACtB;IACA,IAAI,MAAM,CAAC,MAAM,CAAC,aAAa,IAAI,MAAM,CAAC,OAAO,EAAE;MACjD,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,GAAG,KAAK,GAAG,QAAQ,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC;IAC/F;EACF;EACA,SAAS,kBAAkB,CAAC,CAAC,EAAE;IAC7B,OAAO,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO;EACtD;EACA,SAAS,eAAe,CAAC,CAAC,EAAE;IAC1B,IACE,SAAS,GAEP,MAAM,CAFR,SAAS;MACK,GAAG,GACf,MAAM,CADR,YAAY;IAEd,IACE,EAAE,GACA,SAAS,CADX,EAAE;IAEJ,IAAI,aAAa;IACjB,aAAa,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC,GAAG,IAAA,oBAAa,EAAC,EAAE,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,MAAM,GAAG,KAAK,CAAC,IAAI,YAAY,KAAK,IAAI,GAAG,YAAY,GAAG,QAAQ,GAAG,CAAC,CAAC,KAAK,SAAS,GAAG,QAAQ,CAAC;IACpL,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACvD,IAAI,GAAG,EAAE;MACP,aAAa,GAAG,CAAC,GAAG,aAAa;IACnC;IACA,IAAM,QAAQ,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,aAAa;IACxG,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC;IAC/B,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC;IAC7B,MAAM,CAAC,iBAAiB,CAAC,CAAC;IAC1B,MAAM,CAAC,mBAAmB,CAAC,CAAC;EAC9B;EACA,SAAS,WAAW,CAAC,CAAC,EAAE;IACtB,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS;IACtC,IACE,SAAS,GAEP,MAAM,CAFR,SAAS;MACT,SAAS,GACP,MAAM,CADR,SAAS;IAEX,IACE,EAAE,GAEA,SAAS,CAFX,EAAE;MACF,MAAM,GACJ,SAAS,CADX,MAAM;IAER,SAAS,GAAG,IAAI;IAChB,YAAY,GAAG,CAAC,CAAC,MAAM,KAAK,MAAM,GAAG,kBAAkB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,MAAM,GAAG,KAAK,CAAC,GAAG,IAAI;IAC5I,CAAC,CAAC,cAAc,CAAC,CAAC;IAClB,CAAC,CAAC,eAAe,CAAC,CAAC;IACnB,SAAS,CAAC,KAAK,CAAC,kBAAkB,GAAG,OAAO;IAC5C,MAAM,CAAC,KAAK,CAAC,kBAAkB,GAAG,OAAO;IACzC,eAAe,CAAC,CAAC,CAAC;IAClB,YAAY,CAAC,WAAW,CAAC;IACzB,EAAE,CAAC,KAAK,CAAC,kBAAkB,GAAG,KAAK;IACnC,IAAI,MAAM,CAAC,IAAI,EAAE;MACf,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC;IACtB;IACA,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE;MACzB,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,kBAAkB,CAAC,GAAG,MAAM;IACrD;IACA,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;EAC/B;EACA,SAAS,UAAU,CAAC,CAAC,EAAE;IACrB,IACE,SAAS,GAEP,MAAM,CAFR,SAAS;MACT,SAAS,GACP,MAAM,CADR,SAAS;IAEX,IACE,EAAE,GAEA,SAAS,CAFX,EAAE;MACF,MAAM,GACJ,SAAS,CADX,MAAM;IAER,IAAI,CAAC,SAAS,EAAE;IAChB,IAAI,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,WAAW,GAAG,KAAK;IACnE,eAAe,CAAC,CAAC,CAAC;IAClB,SAAS,CAAC,KAAK,CAAC,kBAAkB,GAAG,KAAK;IAC1C,EAAE,CAAC,KAAK,CAAC,kBAAkB,GAAG,KAAK;IACnC,MAAM,CAAC,KAAK,CAAC,kBAAkB,GAAG,KAAK;IACvC,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;EAC9B;EACA,SAAS,SAAS,CAAC,CAAC,EAAE;IACpB,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS;IACtC,IACE,SAAS,GAEP,MAAM,CAFR,SAAS;MACT,SAAS,GACP,MAAM,CADR,SAAS;IAEX,IACE,EAAE,GACA,SAAS,CADX,EAAE;IAEJ,IAAI,CAAC,SAAS,EAAE;IAChB,SAAS,GAAG,KAAK;IACjB,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE;MACzB,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,kBAAkB,CAAC,GAAG,EAAE;MAC/C,SAAS,CAAC,KAAK,CAAC,kBAAkB,GAAG,EAAE;IACzC;IACA,IAAI,MAAM,CAAC,IAAI,EAAE;MACf,YAAY,CAAC,WAAW,CAAC;MACzB,WAAW,GAAG,IAAA,eAAQ,EAAC,YAAM;QAC3B,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC;QACpB,EAAE,CAAC,KAAK,CAAC,kBAAkB,GAAG,OAAO;MACvC,CAAC,EAAE,IAAI,CAAC;IACV;IACA,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC;IAC3B,IAAI,MAAM,CAAC,aAAa,EAAE;MACxB,MAAM,CAAC,cAAc,CAAC,CAAC;IACzB;EACF;EACA,SAAS,MAAM,CAAC,MAAM,EAAE;IACtB,IACE,SAAS,GAEP,MAAM,CAFR,SAAS;MACT,MAAM,GACJ,MAAM,CADR,MAAM;IAER,IAAM,EAAE,GAAG,SAAS,CAAC,EAAE;IACvB,IAAI,CAAC,EAAE,EAAE;IACT,IAAM,MAAM,GAAG,EAAE;IACjB,IAAM,cAAc,GAAG,MAAM,CAAC,gBAAgB,GAAG;MAC/C,OAAO,EAAE,KAAK;MACd,OAAO,EAAE;IACX,CAAC,GAAG,KAAK;IACT,IAAM,eAAe,GAAG,MAAM,CAAC,gBAAgB,GAAG;MAChD,OAAO,EAAE,IAAI;MACb,OAAO,EAAE;IACX,CAAC,GAAG,KAAK;IACT,IAAI,CAAC,MAAM,EAAE;IACb,IAAM,WAAW,GAAG,MAAM,KAAK,IAAI,GAAG,kBAAkB,GAAG,qBAAqB;IAChF,MAAM,CAAC,WAAW,CAAC,CAAC,aAAa,EAAE,WAAW,EAAE,cAAc,CAAC;IAC/D,QAAQ,CAAC,WAAW,CAAC,CAAC,aAAa,EAAE,UAAU,EAAE,cAAc,CAAC;IAChE,QAAQ,CAAC,WAAW,CAAC,CAAC,WAAW,EAAE,SAAS,EAAE,eAAe,CAAC;EAChE;EACA,SAAS,eAAe,CAAA,EAAG;IACzB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE;IACzD,MAAM,CAAC,IAAI,CAAC;EACd;EACA,SAAS,gBAAgB,CAAA,EAAG;IAC1B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE;IACzD,MAAM,CAAC,KAAK,CAAC;EACf;EACA,SAAS,IAAI,CAAA,EAAG;IACd,IACE,SAAS,GAEP,MAAM,CAFR,SAAS;MACL,QAAQ,GACV,MAAM,CADR,EAAE;IAEJ,MAAM,CAAC,MAAM,CAAC,SAAS,GAAG,IAAA,qCAAyB,EAAC,MAAM,EAAE,MAAM,CAAC,cAAc,CAAC,SAAS,EAAE,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE;MACpH,EAAE,EAAE;IACN,CAAC,CAAC;IACF,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS;IACtC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE;IAChB,IAAI,EAAE;IACN,IAAI,OAAO,MAAM,CAAC,EAAE,KAAK,QAAQ,IAAI,MAAM,CAAC,SAAS,EAAE;MACrD,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC;IACpD;IACA,IAAI,CAAC,EAAE,IAAI,OAAO,MAAM,CAAC,EAAE,KAAK,QAAQ,EAAE;MACxC,EAAE,GAAG,QAAQ,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC;IAC3C,CAAC,MAAM,IAAI,CAAC,EAAE,EAAE;MACd,EAAE,GAAG,MAAM,CAAC,EAAE;IAChB;IACA,IAAI,MAAM,CAAC,MAAM,CAAC,iBAAiB,IAAI,OAAO,MAAM,CAAC,EAAE,KAAK,QAAQ,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,IAAI,QAAQ,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;MAC1I,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC;IACxC;IACA,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IAC7B,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,MAAM,CAAC,eAAe,GAAG,MAAM,CAAC,aAAa,CAAC;IACvF,IAAI,MAAM;IACV,IAAI,EAAE,EAAE;MACN,MAAM,GAAG,EAAE,CAAC,aAAa,KAAA,MAAA,CAAK,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAE,CAAC;MAClE,IAAI,CAAC,MAAM,EAAE;QACX,MAAM,GAAG,IAAA,oBAAa,EAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC;QAChE,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC;MACnB;IACF;IACA,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE;MACvB,EAAE,EAAF,EAAE;MACF,MAAM,EAAN;IACF,CAAC,CAAC;IACF,IAAI,MAAM,CAAC,SAAS,EAAE;MACpB,eAAe,CAAC,CAAC;IACnB;IACA,IAAI,EAAE,EAAE;MACN,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,GAAG,QAAQ,GAAG,KAAK,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC;IACpF;EACF;EACA,SAAS,OAAO,CAAA,EAAG;IACjB,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS;IACtC,IAAM,EAAE,GAAG,MAAM,CAAC,SAAS,CAAC,EAAE;IAC9B,IAAI,EAAE,EAAE;MACN,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,MAAM,CAAC,eAAe,GAAG,MAAM,CAAC,aAAa,CAAC;IAC5F;IACA,gBAAgB,CAAC,CAAC;EACpB;EACA,EAAE,CAAC,MAAM,EAAE,YAAM;IACf,IAAI,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,KAAK,KAAK,EAAE;MAC7C;MACA,OAAO,CAAC,CAAC;IACX,CAAC,MAAM;MACL,IAAI,CAAC,CAAC;MACN,UAAU,CAAC,CAAC;MACZ,YAAY,CAAC,CAAC;IAChB;EACF,CAAC,CAAC;EACF,EAAE,CAAC,0CAA0C,EAAE,YAAM;IACnD,UAAU,CAAC,CAAC;EACd,CAAC,CAAC;EACF,EAAE,CAAC,cAAc,EAAE,YAAM;IACvB,YAAY,CAAC,CAAC;EAChB,CAAC,CAAC;EACF,EAAE,CAAC,eAAe,EAAE,UAAC,EAAE,EAAE,QAAQ,EAAK;IACpC,aAAa,CAAC,QAAQ,CAAC;EACzB,CAAC,CAAC;EACF,EAAE,CAAC,gBAAgB,EAAE,YAAM;IACzB,IACE,EAAE,GACA,MAAM,CAAC,SAAS,CADlB,EAAE;IAEJ,IAAI,EAAE,EAAE;MACN,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,GAAG,QAAQ,GAAG,KAAK,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC;IACpF;EACF,CAAC,CAAC;EACF,EAAE,CAAC,SAAS,EAAE,YAAM;IAClB,OAAO,CAAC,CAAC;EACX,CAAC,CAAC;EACF,IAAM,MAAM,GAAG,SAAT,MAAM,CAAA,EAAS;IACnB,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,sBAAsB,CAAC;IAC1E,IAAI,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE;MACvB,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,sBAAsB,CAAC;IACtF;IACA,IAAI,CAAC,CAAC;IACN,UAAU,CAAC,CAAC;IACZ,YAAY,CAAC,CAAC;EAChB,CAAC;EACD,IAAM,OAAO,GAAG,SAAV,OAAO,CAAA,EAAS;IACpB,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,sBAAsB,CAAC;IACvE,IAAI,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE;MACvB,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,sBAAsB,CAAC;IACnF;IACA,OAAO,CAAC,CAAC;EACX,CAAC;EACD,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE;IAC9B,MAAM,EAAN,MAAM;IACN,OAAO,EAAP,OAAO;IACP,UAAU,EAAV,UAAU;IACV,YAAY,EAAZ,YAAY;IACZ,IAAI,EAAJ,IAAI;IACJ,OAAO,EAAP;EACF,CAAC,CAAC;AACJ;;;;;;;;;AC3VA,IAAA,UAAA,GAAA,OAAA;AACA,IAAA,MAAA,GAAA,OAAA;AACe,SAAS,KAAK,CAAA,IAAA,EAI1B;EAAA,IAHD,MAAM,GAAA,IAAA,CAAN,MAAM;IACN,YAAY,GAAA,IAAA,CAAZ,YAAY;IACZ,EAAE,GAAA,IAAA,CAAF,EAAE;EAEF,YAAY,CAAC;IACX,MAAM,EAAE;MACN,MAAM,EAAE,IAAI;MACZ,oBAAoB,EAAE,IAAI;MAC1B,gBAAgB,EAAE,CAAC;MACnB,qBAAqB,EAAE,2BAA2B;MAClD,oBAAoB,EAAE;IACxB;EACF,CAAC,CAAC;EACF,IAAI,WAAW,GAAG,KAAK;EACvB,IAAI,aAAa,GAAG,KAAK;EACzB,MAAM,CAAC,MAAM,GAAG;IACd,MAAM,EAAE;EACV,CAAC;EACD,SAAS,YAAY,CAAA,EAAG;IACtB,IAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM;IACzC,IAAI,CAAC,YAAY,IAAI,YAAY,CAAC,SAAS,EAAE;IAC7C,IAAM,YAAY,GAAG,YAAY,CAAC,YAAY;IAC9C,IAAM,YAAY,GAAG,YAAY,CAAC,YAAY;IAC9C,IAAI,YAAY,IAAI,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,qBAAqB,CAAC,EAAE;IACjG,IAAI,OAAO,YAAY,KAAK,WAAW,IAAI,YAAY,KAAK,IAAI,EAAE;IAClE,IAAI,YAAY;IAChB,IAAI,YAAY,CAAC,MAAM,CAAC,IAAI,EAAE;MAC5B,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC,YAAY,CAAC,YAAY,CAAC,yBAAyB,CAAC,EAAE,EAAE,CAAC;IAChG,CAAC,MAAM;MACL,YAAY,GAAG,YAAY;IAC7B;IACA,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE;MACtB,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC;IAClC,CAAC,MAAM;MACL,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC;IAC9B;EACF;EACA,SAAS,IAAI,CAAA,EAAG;IACd,IACU,YAAY,GAClB,MAAM,CAAC,MAAM,CADf,MAAM;IAER,IAAI,WAAW,EAAE,OAAO,KAAK;IAC7B,WAAW,GAAG,IAAI;IAClB,IAAM,WAAW,GAAG,MAAM,CAAC,WAAW;IACtC,IAAI,YAAY,CAAC,MAAM,YAAY,WAAW,EAAE;MAC9C,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM;MAC1C,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE;QACjD,mBAAmB,EAAE,IAAI;QACzB,mBAAmB,EAAE;MACvB,CAAC,CAAC;MACF,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;QACzC,mBAAmB,EAAE,IAAI;QACzB,mBAAmB,EAAE;MACvB,CAAC,CAAC;MACF,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC,MAAM,IAAI,IAAA,eAAQ,EAAC,YAAY,CAAC,MAAM,CAAC,EAAE;MACxC,IAAM,kBAAkB,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,MAAM,CAAC;MACjE,MAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE;QAChC,mBAAmB,EAAE,IAAI;QACzB,mBAAmB,EAAE;MACvB,CAAC,CAAC;MACF,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,WAAW,CAAC,kBAAkB,CAAC;MAC1D,aAAa,GAAG,IAAI;IACtB;IACA,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,oBAAoB,CAAC;IAChF,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,YAAY,CAAC;IAC5C,OAAO,IAAI;EACb;EACA,SAAS,MAAM,CAAC,OAAO,EAAE;IACvB,IAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM;IACzC,IAAI,CAAC,YAAY,IAAI,YAAY,CAAC,SAAS,EAAE;IAC7C,IAAM,aAAa,GAAG,YAAY,CAAC,MAAM,CAAC,aAAa,KAAK,MAAM,GAAG,YAAY,CAAC,oBAAoB,CAAC,CAAC,GAAG,YAAY,CAAC,MAAM,CAAC,aAAa;;IAE5I;IACA,IAAI,gBAAgB,GAAG,CAAC;IACxB,IAAM,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,qBAAqB;IACnE,IAAI,MAAM,CAAC,MAAM,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE;MACpE,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,aAAa;IAChD;IACA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,oBAAoB,EAAE;MAC9C,gBAAgB,GAAG,CAAC;IACtB;IACA,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;IAC/C,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,OAAO;MAAA,OAAI,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,gBAAgB,CAAC;IAAA,EAAC;IAClF,IAAI,YAAY,CAAC,MAAM,CAAC,IAAI,IAAI,YAAY,CAAC,MAAM,CAAC,OAAO,IAAI,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE;MAClG,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,EAAE,CAAC,IAAI,CAAC,EAAE;QAC5C,IAAA,sBAAe,EAAC,YAAY,CAAC,QAAQ,gCAAA,MAAA,CAA+B,MAAM,CAAC,SAAS,GAAG,CAAC,QAAI,CAAC,CAAC,OAAO,CAAC,UAAA,OAAO,EAAI;UAC/G,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC;QACzC,CAAC,CAAC;MACJ;IACF,CAAC,MAAM;MACL,KAAK,IAAI,EAAC,GAAG,CAAC,EAAE,EAAC,GAAG,gBAAgB,EAAE,EAAC,IAAI,CAAC,EAAE;QAC5C,IAAI,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,GAAG,EAAC,CAAC,EAAE;UAC7C,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,GAAG,EAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC;QAC3E;MACF;IACF;IACA,IAAM,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAgB;IAC9D,IAAM,SAAS,GAAG,gBAAgB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI;IAC/D,IAAI,MAAM,CAAC,SAAS,KAAK,YAAY,CAAC,SAAS,IAAI,SAAS,EAAE;MAC5D,IAAM,kBAAkB,GAAG,YAAY,CAAC,WAAW;MACnD,IAAI,cAAc;MAClB,IAAI,SAAS;MACb,IAAI,YAAY,CAAC,MAAM,CAAC,IAAI,EAAE;QAC5B,IAAM,cAAc,GAAG,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,UAAA,OAAO;UAAA,OAAI,OAAO,CAAC,YAAY,CAAC,yBAAyB,CAAC,QAAA,MAAA,CAAQ,MAAM,CAAC,SAAS,CAAE;QAAA,EAAC,CAAC,CAAC,CAAC;QAC1I,cAAc,GAAG,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC;QAC5D,SAAS,GAAG,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,aAAa,GAAG,MAAM,GAAG,MAAM;MACzE,CAAC,MAAM;QACL,cAAc,GAAG,MAAM,CAAC,SAAS;QACjC,SAAS,GAAG,cAAc,GAAG,MAAM,CAAC,aAAa,GAAG,MAAM,GAAG,MAAM;MACrE;MACA,IAAI,SAAS,EAAE;QACb,cAAc,IAAI,SAAS,KAAK,MAAM,GAAG,gBAAgB,GAAG,CAAC,CAAC,GAAG,gBAAgB;MACnF;MACA,IAAI,YAAY,CAAC,oBAAoB,IAAI,YAAY,CAAC,oBAAoB,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;QACtG,IAAI,YAAY,CAAC,MAAM,CAAC,cAAc,EAAE;UACtC,IAAI,cAAc,GAAG,kBAAkB,EAAE;YACvC,cAAc,GAAG,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC,GAAG,CAAC;UACrE,CAAC,MAAM;YACL,cAAc,GAAG,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC,GAAG,CAAC;UACrE;QACF,CAAC,MAAM,IAAI,cAAc,GAAG,kBAAkB,IAAI,YAAY,CAAC,MAAM,CAAC,cAAc,KAAK,CAAC,EAAE;UAC1F;QAAA;QAEF,YAAY,CAAC,OAAO,CAAC,cAAc,EAAE,OAAO,GAAG,CAAC,GAAG,SAAS,CAAC;MAC/D;IACF;EACF;EACA,EAAE,CAAC,YAAY,EAAE,YAAM;IACrB,IACE,MAAM,GACJ,MAAM,CAAC,MAAM,CADf,MAAM;IAER,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;IAC/B,IAAI,OAAO,MAAM,CAAC,MAAM,KAAK,QAAQ,IAAI,MAAM,CAAC,MAAM,YAAY,WAAW,EAAE;MAC7E,IAAM,QAAQ,GAAG,IAAA,sBAAW,EAAC,CAAC;MAC9B,IAAM,uBAAuB,GAAG,SAA1B,uBAAuB,CAAA,EAAS;QACpC,IAAM,aAAa,GAAG,OAAO,MAAM,CAAC,MAAM,KAAK,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM;QAC/G,IAAI,aAAa,IAAI,aAAa,CAAC,MAAM,EAAE;UACzC,MAAM,CAAC,MAAM,GAAG,aAAa,CAAC,MAAM;UACpC,IAAI,CAAC,CAAC;UACN,MAAM,CAAC,IAAI,CAAC;QACd,CAAC,MAAM,IAAI,aAAa,EAAE;UACxB,IAAM,cAAc,GAAG,SAAjB,cAAc,CAAG,CAAC,EAAI;YAC1B,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YAC3B,aAAa,CAAC,mBAAmB,CAAC,MAAM,EAAE,cAAc,CAAC;YACzD,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC;YACZ,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACtB,MAAM,CAAC,MAAM,CAAC,CAAC;UACjB,CAAC;UACD,aAAa,CAAC,gBAAgB,CAAC,MAAM,EAAE,cAAc,CAAC;QACxD;QACA,OAAO,aAAa;MACtB,CAAC;MACD,IAAM,sBAAsB,GAAG,SAAzB,sBAAsB,CAAA,EAAS;QACnC,IAAI,MAAM,CAAC,SAAS,EAAE;QACtB,IAAM,aAAa,GAAG,uBAAuB,CAAC,CAAC;QAC/C,IAAI,CAAC,aAAa,EAAE;UAClB,qBAAqB,CAAC,sBAAsB,CAAC;QAC/C;MACF,CAAC;MACD,qBAAqB,CAAC,sBAAsB,CAAC;IAC/C,CAAC,MAAM;MACL,IAAI,CAAC,CAAC;MACN,MAAM,CAAC,IAAI,CAAC;IACd;EACF,CAAC,CAAC;EACF,EAAE,CAAC,0CAA0C,EAAE,YAAM;IACnD,MAAM,CAAC,CAAC;EACV,CAAC,CAAC;EACF,EAAE,CAAC,eAAe,EAAE,UAAC,EAAE,EAAE,QAAQ,EAAK;IACpC,IAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM;IACzC,IAAI,CAAC,YAAY,IAAI,YAAY,CAAC,SAAS,EAAE;IAC7C,YAAY,CAAC,aAAa,CAAC,QAAQ,CAAC;EACtC,CAAC,CAAC;EACF,EAAE,CAAC,eAAe,EAAE,YAAM;IACxB,IAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM;IACzC,IAAI,CAAC,YAAY,IAAI,YAAY,CAAC,SAAS,EAAE;IAC7C,IAAI,aAAa,EAAE;MACjB,YAAY,CAAC,OAAO,CAAC,CAAC;IACxB;EACF,CAAC,CAAC;EACF,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;IAC3B,IAAI,EAAJ,IAAI;IACJ,MAAM,EAAN;EACF,CAAC,CAAC;AACJ;;;;;;;;;AC7LA,IAAA,UAAA,GAAA,OAAA;AACA,IAAA,MAAA,GAAA,OAAA;AAAuF,SAAA,mBAAA,GAAA,WAAA,kBAAA,CAAA,GAAA,KAAA,gBAAA,CAAA,GAAA,KAAA,2BAAA,CAAA,GAAA,KAAA,kBAAA;AAAA,SAAA,mBAAA,cAAA,SAAA;AAAA,SAAA,4BAAA,CAAA,EAAA,MAAA,SAAA,CAAA,qBAAA,CAAA,sBAAA,iBAAA,CAAA,CAAA,EAAA,MAAA,OAAA,CAAA,GAAA,MAAA,CAAA,SAAA,CAAA,QAAA,CAAA,IAAA,CAAA,CAAA,EAAA,KAAA,aAAA,CAAA,iBAAA,CAAA,CAAA,WAAA,EAAA,CAAA,GAAA,CAAA,CAAA,WAAA,CAAA,IAAA,MAAA,CAAA,cAAA,CAAA,mBAAA,KAAA,CAAA,IAAA,CAAA,CAAA,OAAA,CAAA,+DAAA,IAAA,CAAA,CAAA,UAAA,iBAAA,CAAA,CAAA,EAAA,MAAA;AAAA,SAAA,iBAAA,IAAA,eAAA,MAAA,oBAAA,IAAA,CAAA,MAAA,CAAA,QAAA,aAAA,IAAA,+BAAA,KAAA,CAAA,IAAA,CAAA,IAAA;AAAA,SAAA,mBAAA,GAAA,QAAA,KAAA,CAAA,OAAA,CAAA,GAAA,UAAA,iBAAA,CAAA,GAAA;AAAA,SAAA,kBAAA,GAAA,EAAA,GAAA,QAAA,GAAA,YAAA,GAAA,GAAA,GAAA,CAAA,MAAA,EAAA,GAAA,GAAA,GAAA,CAAA,MAAA,WAAA,CAAA,MAAA,IAAA,OAAA,KAAA,CAAA,GAAA,GAAA,CAAA,GAAA,GAAA,EAAA,CAAA,IAAA,IAAA,CAAA,CAAA,IAAA,GAAA,CAAA,CAAA,UAAA,IAAA;AAAA,SAAA,QAAA,GAAA,sCAAA,OAAA,wBAAA,MAAA,uBAAA,MAAA,CAAA,QAAA,aAAA,GAAA,kBAAA,GAAA,gBAAA,GAAA,WAAA,GAAA,yBAAA,MAAA,IAAA,GAAA,CAAA,WAAA,KAAA,MAAA,IAAA,GAAA,KAAA,MAAA,CAAA,SAAA,qBAAA,GAAA,KAAA,OAAA,CAAA,GAAA;AACxE,SAAS,OAAO,CAAA,IAAA,EAK5B;EAAA,IAJD,MAAM,GAAA,IAAA,CAAN,MAAM;IACN,YAAY,GAAA,IAAA,CAAZ,YAAY;IACZ,EAAE,GAAA,IAAA,CAAF,EAAE;IACF,IAAI,GAAA,IAAA,CAAJ,IAAI;EAEJ,YAAY,CAAC;IACX,OAAO,EAAE;MACP,OAAO,EAAE,KAAK;MACd,MAAM,EAAE,EAAE;MACV,KAAK,EAAE,IAAI;MACX,WAAW,EAAE,IAAI;MACjB,cAAc,EAAE,IAAI;MACpB,oBAAoB,EAAE,IAAI;MAC1B,eAAe,EAAE,CAAC;MAClB,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EACF,IAAI,cAAc;EAClB,IAAM,QAAQ,GAAG,IAAA,sBAAW,EAAC,CAAC;EAC9B,MAAM,CAAC,OAAO,GAAG;IACf,KAAK,EAAE,CAAC,CAAC;IACT,IAAI,EAAE,SAAS;IACf,EAAE,EAAE,SAAS;IACb,MAAM,EAAE,EAAE;IACV,MAAM,EAAE,CAAC;IACT,UAAU,EAAE;EACd,CAAC;EACD,IAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;EAC7C,SAAS,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE;IACjC,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO;IACpC,IAAI,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;MAC/C,OAAO,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC;IACpC;IACA;IACA,IAAI,OAAO;IACX,IAAI,MAAM,CAAC,WAAW,EAAE;MACtB,OAAO,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC;MACvD,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;QAC/B,OAAO,CAAC,SAAS,GAAG,OAAO;QAC3B,OAAO,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;MAC/B;IACF,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,EAAE;MAC3B,OAAO,GAAG,IAAA,oBAAa,EAAC,cAAc,CAAC;IACzC,CAAC,MAAM;MACL,OAAO,GAAG,IAAA,oBAAa,EAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC;IAC1D;IACA,OAAO,CAAC,YAAY,CAAC,yBAAyB,EAAE,KAAK,CAAC;IACtD,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;MACvB,OAAO,CAAC,SAAS,GAAG,KAAK;IAC3B;IACA,IAAI,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,OAAO;IACvD,OAAO,OAAO;EAChB;EACA,SAAS,MAAM,CAAC,KAAK,EAAE;IACrB,IAAA,cAAA,GAKI,MAAM,CAAC,MAAM;MAJf,aAAa,GAAA,cAAA,CAAb,aAAa;MACb,cAAc,GAAA,cAAA,CAAd,cAAc;MACd,cAAc,GAAA,cAAA,CAAd,cAAc;MACR,MAAM,GAAA,cAAA,CAAZ,IAAI;IAEN,IAAA,qBAAA,GAGI,MAAM,CAAC,MAAM,CAAC,OAAO;MAFvB,eAAe,GAAA,qBAAA,CAAf,eAAe;MACf,cAAc,GAAA,qBAAA,CAAd,cAAc;IAEhB,IAAA,eAAA,GAMI,MAAM,CAAC,OAAO;MALV,YAAY,GAAA,eAAA,CAAlB,IAAI;MACA,UAAU,GAAA,eAAA,CAAd,EAAE;MACF,MAAM,GAAA,eAAA,CAAN,MAAM;MACM,kBAAkB,GAAA,eAAA,CAA9B,UAAU;MACF,cAAc,GAAA,eAAA,CAAtB,MAAM;IAER,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE;MAC1B,MAAM,CAAC,iBAAiB,CAAC,CAAC;IAC5B;IACA,IAAM,WAAW,GAAG,MAAM,CAAC,WAAW,IAAI,CAAC;IAC3C,IAAI,UAAU;IACd,IAAI,MAAM,CAAC,YAAY,EAAE,UAAU,GAAG,OAAO,CAAC,KAAK,UAAU,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,MAAM,GAAG,KAAK;IACtG,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,cAAc,EAAE;MAClB,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC,GAAG,cAAc,GAAG,cAAc;MAC7E,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC,GAAG,cAAc,GAAG,eAAe;IACjF,CAAC,MAAM;MACL,WAAW,GAAG,aAAa,IAAI,cAAc,GAAG,CAAC,CAAC,GAAG,cAAc;MACnE,YAAY,GAAG,CAAC,MAAM,GAAG,aAAa,GAAG,cAAc,IAAI,eAAe;IAC5E;IACA,IAAI,IAAI,GAAG,WAAW,GAAG,YAAY;IACrC,IAAI,EAAE,GAAG,WAAW,GAAG,WAAW;IAClC,IAAI,CAAC,MAAM,EAAE;MACX,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;MACxB,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;IACtC;IACA,IAAI,MAAM,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IACzE,IAAI,MAAM,IAAI,WAAW,IAAI,YAAY,EAAE;MACzC,IAAI,IAAI,YAAY;MACpB,IAAI,CAAC,cAAc,EAAE,MAAM,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;IACrD,CAAC,MAAM,IAAI,MAAM,IAAI,WAAW,GAAG,YAAY,EAAE;MAC/C,IAAI,GAAG,CAAC,YAAY;MACpB,IAAI,cAAc,EAAE,MAAM,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;IACpD;IACA,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE;MAC5B,IAAI,EAAJ,IAAI;MACJ,EAAE,EAAF,EAAE;MACF,MAAM,EAAN,MAAM;MACN,UAAU,EAAE,MAAM,CAAC,UAAU;MAC7B,YAAY,EAAZ,YAAY;MACZ,WAAW,EAAX;IACF,CAAC,CAAC;IACF,SAAS,UAAU,CAAA,EAAG;MACpB,MAAM,CAAC,YAAY,CAAC,CAAC;MACrB,MAAM,CAAC,cAAc,CAAC,CAAC;MACvB,MAAM,CAAC,mBAAmB,CAAC,CAAC;MAC5B,IAAI,CAAC,eAAe,CAAC;IACvB;IACA,IAAI,YAAY,KAAK,IAAI,IAAI,UAAU,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE;MACxD,IAAI,MAAM,CAAC,UAAU,KAAK,kBAAkB,IAAI,MAAM,KAAK,cAAc,EAAE;QACzE,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,OAAO,EAAI;UAC/B,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,MAAA,MAAA,CAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC,OAAI;QACtF,CAAC,CAAC;MACJ;MACA,MAAM,CAAC,cAAc,CAAC,CAAC;MACvB,IAAI,CAAC,eAAe,CAAC;MACrB;IACF;IACA,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,EAAE;MACxC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE;QAChD,MAAM,EAAN,MAAM;QACN,IAAI,EAAJ,IAAI;QACJ,EAAE,EAAF,EAAE;QACF,MAAM,EAAE,SAAS,SAAS,CAAA,EAAG;UAC3B,IAAM,cAAc,GAAG,EAAE;UACzB,KAAK,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE;YAClC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;UAChC;UACA,OAAO,cAAc;QACvB,CAAC,CAAC;MACJ,CAAC,CAAC;MACF,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,oBAAoB,EAAE;QAC9C,UAAU,CAAC,CAAC;MACd,CAAC,MAAM;QACL,IAAI,CAAC,eAAe,CAAC;MACvB;MACA;IACF;IACA,IAAM,cAAc,GAAG,EAAE;IACzB,IAAM,aAAa,GAAG,EAAE;IACxB,IAAM,aAAa,GAAG,SAAhB,aAAa,CAAG,KAAK,EAAI;MAC7B,IAAI,UAAU,GAAG,KAAK;MACtB,IAAI,KAAK,GAAG,CAAC,EAAE;QACb,UAAU,GAAG,MAAM,CAAC,MAAM,GAAG,KAAK;MACpC,CAAC,MAAM,IAAI,UAAU,IAAI,MAAM,CAAC,MAAM,EAAE;QACtC;QACA,UAAU,GAAG,UAAU,GAAG,MAAM,CAAC,MAAM;MACzC;MACA,OAAO,UAAU;IACnB,CAAC;IACD,IAAI,KAAK,EAAE;MACT,MAAM,CAAC,QAAQ,CAAC,gBAAgB,KAAA,MAAA,CAAK,MAAM,CAAC,MAAM,CAAC,UAAU,mBAAgB,CAAC,CAAC,OAAO,CAAC,UAAA,OAAO,EAAI;QAChG,OAAO,CAAC,MAAM,CAAC,CAAC;MAClB,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,KAAK,IAAI,CAAC,GAAG,YAAY,EAAE,CAAC,IAAI,UAAU,EAAE,CAAC,IAAI,CAAC,EAAE;QAClD,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE;UACtB,IAAM,UAAU,GAAG,aAAa,CAAC,CAAC,CAAC;UACnC,MAAM,CAAC,QAAQ,CAAC,gBAAgB,KAAA,MAAA,CAAK,MAAM,CAAC,MAAM,CAAC,UAAU,iCAAA,MAAA,CAA6B,UAAU,kDAAA,MAAA,CAA6C,UAAU,QAAI,CAAC,CAAC,OAAO,CAAC,UAAA,OAAO,EAAI;YAClL,OAAO,CAAC,MAAM,CAAC,CAAC;UAClB,CAAC,CAAC;QACJ;MACF;IACF;IACA,IAAM,QAAQ,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC;IAC5C,IAAM,MAAM,GAAG,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM;IACzD,KAAK,IAAI,EAAC,GAAG,QAAQ,EAAE,EAAC,GAAG,MAAM,EAAE,EAAC,IAAI,CAAC,EAAE;MACzC,IAAI,EAAC,IAAI,IAAI,IAAI,EAAC,IAAI,EAAE,EAAE;QACxB,IAAM,WAAU,GAAG,aAAa,CAAC,EAAC,CAAC;QACnC,IAAI,OAAO,UAAU,KAAK,WAAW,IAAI,KAAK,EAAE;UAC9C,aAAa,CAAC,IAAI,CAAC,WAAU,CAAC;QAChC,CAAC,MAAM;UACL,IAAI,EAAC,GAAG,UAAU,EAAE,aAAa,CAAC,IAAI,CAAC,WAAU,CAAC;UAClD,IAAI,EAAC,GAAG,YAAY,EAAE,cAAc,CAAC,IAAI,CAAC,WAAU,CAAC;QACvD;MACF;IACF;IACA,aAAa,CAAC,OAAO,CAAC,UAAA,KAAK,EAAI;MAC7B,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;IAC3D,CAAC,CAAC;IACF,IAAI,MAAM,EAAE;MACV,KAAK,IAAI,GAAC,GAAG,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE,GAAC,IAAI,CAAC,EAAE,GAAC,IAAI,CAAC,EAAE;QACtD,IAAM,KAAK,GAAG,cAAc,CAAC,GAAC,CAAC;QAC/B,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;MAC5D;IACF,CAAC,MAAM;MACL,cAAc,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;QAAA,OAAK,CAAC,GAAG,CAAC;MAAA,EAAC;MACpC,cAAc,CAAC,OAAO,CAAC,UAAA,KAAK,EAAI;QAC9B,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;MAC5D,CAAC,CAAC;IACJ;IACA,IAAA,sBAAe,EAAC,MAAM,CAAC,QAAQ,EAAE,6BAA6B,CAAC,CAAC,OAAO,CAAC,UAAA,OAAO,EAAI;MACjF,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,MAAA,MAAA,CAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC,OAAI;IACtF,CAAC,CAAC;IACF,UAAU,CAAC,CAAC;EACd;EACA,SAAS,WAAW,CAAC,MAAM,EAAE;IAC3B,IAAI,OAAA,CAAO,MAAM,MAAK,QAAQ,IAAI,QAAQ,IAAI,MAAM,EAAE;MACpD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;QACzC,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;MACtD;IACF,CAAC,MAAM;MACL,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;IACpC;IACA,MAAM,CAAC,IAAI,CAAC;EACd;EACA,SAAS,YAAY,CAAC,MAAM,EAAE;IAC5B,IAAM,WAAW,GAAG,MAAM,CAAC,WAAW;IACtC,IAAI,cAAc,GAAG,WAAW,GAAG,CAAC;IACpC,IAAI,iBAAiB,GAAG,CAAC;IACzB,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;MACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;QACzC,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;MACzD;MACA,cAAc,GAAG,WAAW,GAAG,MAAM,CAAC,MAAM;MAC5C,iBAAiB,GAAG,MAAM,CAAC,MAAM;IACnC,CAAC,MAAM;MACL,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC;IACvC;IACA,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE;MAC/B,IAAM,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK;MAClC,IAAM,QAAQ,GAAG,CAAC,CAAC;MACnB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,UAAA,WAAW,EAAI;QACxC,IAAM,QAAQ,GAAG,KAAK,CAAC,WAAW,CAAC;QACnC,IAAM,aAAa,GAAG,QAAQ,CAAC,YAAY,CAAC,yBAAyB,CAAC;QACtE,IAAI,aAAa,EAAE;UACjB,QAAQ,CAAC,YAAY,CAAC,yBAAyB,EAAE,QAAQ,CAAC,aAAa,EAAE,EAAE,CAAC,GAAG,iBAAiB,CAAC;QACnG;QACA,QAAQ,CAAC,QAAQ,CAAC,WAAW,EAAE,EAAE,CAAC,GAAG,iBAAiB,CAAC,GAAG,QAAQ;MACpE,CAAC,CAAC;MACF,MAAM,CAAC,OAAO,CAAC,KAAK,GAAG,QAAQ;IACjC;IACA,MAAM,CAAC,IAAI,CAAC;IACZ,MAAM,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,CAAC;EACnC;EACA,SAAS,WAAW,CAAC,aAAa,EAAE;IAClC,IAAI,OAAO,aAAa,KAAK,WAAW,IAAI,aAAa,KAAK,IAAI,EAAE;IACpE,IAAI,WAAW,GAAG,MAAM,CAAC,WAAW;IACpC,IAAI,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;MAChC,KAAK,IAAI,CAAC,GAAG,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;QACrD,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACjD,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE;UAC/B,OAAO,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QAC/C;QACA,IAAI,aAAa,CAAC,CAAC,CAAC,GAAG,WAAW,EAAE,WAAW,IAAI,CAAC;QACpD,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;MACxC;IACF,CAAC,MAAM;MACL,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC;MAC9C,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE;QAC/B,OAAO,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC;MAC5C;MACA,IAAI,aAAa,GAAG,WAAW,EAAE,WAAW,IAAI,CAAC;MACjD,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;IACxC;IACA,MAAM,CAAC,IAAI,CAAC;IACZ,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC;EAChC;EACA,SAAS,eAAe,CAAA,EAAG;IACzB,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE;IAC1B,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE;MAC/B,MAAM,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC;IAC3B;IACA,MAAM,CAAC,IAAI,CAAC;IACZ,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;EACtB;EACA,EAAE,CAAC,YAAY,EAAE,YAAM;IACrB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE;IACpC,IAAI,iBAAiB;IACrB,IAAI,OAAO,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,KAAK,WAAW,EAAE;MAC7D,IAAM,MAAM,GAAG,kBAAA,CAAI,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC,UAAA,EAAE;QAAA,OAAI,EAAE,CAAC,OAAO,KAAA,MAAA,CAAK,MAAM,CAAC,MAAM,CAAC,UAAU,mBAAgB,CAAC;MAAA,EAAC;MACnH,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE;QAC3B,MAAM,CAAC,OAAO,CAAC,MAAM,GAAA,kBAAA,CAAO,MAAM,CAAC;QACnC,iBAAiB,GAAG,IAAI;QACxB,MAAM,CAAC,OAAO,CAAC,UAAC,OAAO,EAAE,UAAU,EAAK;UACtC,OAAO,CAAC,YAAY,CAAC,yBAAyB,EAAE,UAAU,CAAC;UAC3D,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,OAAO;UAC1C,OAAO,CAAC,MAAM,CAAC,CAAC;QAClB,CAAC,CAAC;MACJ;IACF;IACA,IAAI,CAAC,iBAAiB,EAAE;MACtB,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM;IACtD;IACA,MAAM,CAAC,UAAU,CAAC,IAAI,IAAA,MAAA,CAAI,MAAM,CAAC,MAAM,CAAC,sBAAsB,YAAS,CAAC;IACxE,MAAM,CAAC,MAAM,CAAC,mBAAmB,GAAG,IAAI;IACxC,MAAM,CAAC,cAAc,CAAC,mBAAmB,GAAG,IAAI;IAChD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE;MAC/B,MAAM,CAAC,CAAC;IACV;EACF,CAAC,CAAC;EACF,EAAE,CAAC,cAAc,EAAE,YAAM;IACvB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE;IACpC,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE;MACtD,YAAY,CAAC,cAAc,CAAC;MAC5B,cAAc,GAAG,UAAU,CAAC,YAAM;QAChC,MAAM,CAAC,CAAC;MACV,CAAC,EAAE,GAAG,CAAC;IACT,CAAC,MAAM;MACL,MAAM,CAAC,CAAC;IACV;EACF,CAAC,CAAC;EACF,EAAE,CAAC,oBAAoB,EAAE,YAAM;IAC7B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE;IACpC,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE;MACzB,IAAA,qBAAc,EAAC,MAAM,CAAC,SAAS,EAAE,uBAAuB,KAAA,MAAA,CAAK,MAAM,CAAC,WAAW,OAAI,CAAC;IACtF;EACF,CAAC,CAAC;EACF,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE;IAC5B,WAAW,EAAX,WAAW;IACX,YAAY,EAAZ,YAAY;IACZ,WAAW,EAAX,WAAW;IACX,eAAe,EAAf,eAAe;IACf,MAAM,EAAN;EACF,CAAC,CAAC;AACJ;;;;;;;;;ACpUA,IAAA,UAAA,GAAA,OAAA;AACA,IAAA,MAAA,GAAA,OAAA;AAAqG,SAAA,eAAA,GAAA,EAAA,CAAA,WAAA,eAAA,CAAA,GAAA,KAAA,qBAAA,CAAA,GAAA,EAAA,CAAA,KAAA,2BAAA,CAAA,GAAA,EAAA,CAAA,KAAA,gBAAA;AAAA,SAAA,iBAAA,cAAA,SAAA;AAAA,SAAA,sBAAA,GAAA,EAAA,CAAA,QAAA,EAAA,WAAA,GAAA,gCAAA,MAAA,IAAA,GAAA,CAAA,MAAA,CAAA,QAAA,KAAA,GAAA,4BAAA,EAAA,QAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,OAAA,EAAA,OAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,GAAA,EAAA,CAAA,IAAA,CAAA,GAAA,GAAA,IAAA,QAAA,CAAA,QAAA,MAAA,CAAA,EAAA,MAAA,EAAA,UAAA,EAAA,uBAAA,EAAA,IAAA,EAAA,GAAA,EAAA,CAAA,IAAA,CAAA,EAAA,GAAA,IAAA,MAAA,IAAA,CAAA,IAAA,CAAA,EAAA,CAAA,KAAA,GAAA,IAAA,CAAA,MAAA,KAAA,CAAA,GAAA,EAAA,iBAAA,GAAA,IAAA,EAAA,OAAA,EAAA,GAAA,GAAA,yBAAA,EAAA,YAAA,EAAA,eAAA,EAAA,GAAA,EAAA,cAAA,MAAA,CAAA,EAAA,MAAA,EAAA,2BAAA,EAAA,QAAA,EAAA,aAAA,IAAA;AAAA,SAAA,gBAAA,GAAA,QAAA,KAAA,CAAA,OAAA,CAAA,GAAA,UAAA,GAAA;AAAA,SAAA,mBAAA,GAAA,WAAA,kBAAA,CAAA,GAAA,KAAA,gBAAA,CAAA,GAAA,KAAA,2BAAA,CAAA,GAAA,KAAA,kBAAA;AAAA,SAAA,mBAAA,cAAA,SAAA;AAAA,SAAA,4BAAA,CAAA,EAAA,MAAA,SAAA,CAAA,qBAAA,CAAA,sBAAA,iBAAA,CAAA,CAAA,EAAA,MAAA,OAAA,CAAA,GAAA,MAAA,CAAA,SAAA,CAAA,QAAA,CAAA,IAAA,CAAA,CAAA,EAAA,KAAA,aAAA,CAAA,iBAAA,CAAA,CAAA,WAAA,EAAA,CAAA,GAAA,CAAA,CAAA,WAAA,CAAA,IAAA,MAAA,CAAA,cAAA,CAAA,mBAAA,KAAA,CAAA,IAAA,CAAA,CAAA,OAAA,CAAA,+DAAA,IAAA,CAAA,CAAA,UAAA,iBAAA,CAAA,CAAA,EAAA,MAAA;AAAA,SAAA,iBAAA,IAAA,eAAA,MAAA,oBAAA,IAAA,CAAA,MAAA,CAAA,QAAA,aAAA,IAAA,+BAAA,KAAA,CAAA,IAAA,CAAA,IAAA;AAAA,SAAA,mBAAA,GAAA,QAAA,KAAA,CAAA,OAAA,CAAA,GAAA,UAAA,iBAAA,CAAA,GAAA;AAAA,SAAA,kBAAA,GAAA,EAAA,GAAA,QAAA,GAAA,YAAA,GAAA,GAAA,GAAA,CAAA,MAAA,EAAA,GAAA,GAAA,GAAA,CAAA,MAAA,WAAA,CAAA,MAAA,IAAA,OAAA,KAAA,CAAA,GAAA,GAAA,CAAA,GAAA,GAAA,EAAA,CAAA,IAAA,IAAA,CAAA,CAAA,IAAA,GAAA,CAAA,CAAA,UAAA,IAAA;AACtF,SAAS,IAAI,CAAA,IAAA,EAKzB;EAAA,IAJD,MAAM,GAAA,IAAA,CAAN,MAAM;IACN,YAAY,GAAA,IAAA,CAAZ,YAAY;IACZ,EAAE,GAAA,IAAA,CAAF,EAAE;IACF,IAAI,GAAA,IAAA,CAAJ,IAAI;EAEJ,IAAM,MAAM,GAAG,IAAA,oBAAS,EAAC,CAAC;EAC1B,YAAY,CAAC;IACX,IAAI,EAAE;MACJ,OAAO,EAAE,KAAK;MACd,QAAQ,EAAE,CAAC;MACX,QAAQ,EAAE,CAAC;MACX,MAAM,EAAE,IAAI;MACZ,cAAc,EAAE,uBAAuB;MACvC,gBAAgB,EAAE;IACpB;EACF,CAAC,CAAC;EACF,MAAM,CAAC,IAAI,GAAG;IACZ,OAAO,EAAE;EACX,CAAC;EACD,IAAI,YAAY,GAAG,CAAC;EACpB,IAAI,SAAS,GAAG,KAAK;EACrB,IAAI,kBAAkB;EACtB,IAAI,gBAAgB;EACpB,IAAM,OAAO,GAAG,EAAE;EAClB,IAAM,OAAO,GAAG;IACd,OAAO,EAAE,CAAC;IACV,OAAO,EAAE,CAAC;IACV,OAAO,EAAE,SAAS;IAClB,UAAU,EAAE,SAAS;IACrB,WAAW,EAAE,SAAS;IACtB,OAAO,EAAE,SAAS;IAClB,WAAW,EAAE,SAAS;IACtB,QAAQ,EAAE;EACZ,CAAC;EACD,IAAM,KAAK,GAAG;IACZ,SAAS,EAAE,SAAS;IACpB,OAAO,EAAE,SAAS;IAClB,QAAQ,EAAE,SAAS;IACnB,QAAQ,EAAE,SAAS;IACnB,IAAI,EAAE,SAAS;IACf,IAAI,EAAE,SAAS;IACf,IAAI,EAAE,SAAS;IACf,IAAI,EAAE,SAAS;IACf,KAAK,EAAE,SAAS;IAChB,MAAM,EAAE,SAAS;IACjB,MAAM,EAAE,SAAS;IACjB,MAAM,EAAE,SAAS;IACjB,YAAY,EAAE,CAAC,CAAC;IAChB,cAAc,EAAE,CAAC;EACnB,CAAC;EACD,IAAM,QAAQ,GAAG;IACf,CAAC,EAAE,SAAS;IACZ,CAAC,EAAE,SAAS;IACZ,aAAa,EAAE,SAAS;IACxB,aAAa,EAAE,SAAS;IACxB,QAAQ,EAAE;EACZ,CAAC;EACD,IAAI,KAAK,GAAG,CAAC;EACb,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,EAAE;IAC1C,GAAG,WAAA,IAAA,EAAG;MACJ,OAAO,KAAK;IACd,CAAC;IACD,GAAG,WAAA,IAAC,KAAK,EAAE;MACT,IAAI,KAAK,KAAK,KAAK,EAAE;QACnB,IAAM,OAAO,GAAG,OAAO,CAAC,OAAO;QAC/B,IAAM,OAAO,GAAG,OAAO,CAAC,OAAO;QAC/B,IAAI,CAAC,YAAY,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC;MAC7C;MACA,KAAK,GAAG,KAAK;IACf;EACF,CAAC,CAAC;EACF,SAAS,yBAAyB,CAAA,EAAG;IACnC,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,OAAO,CAAC;IAChC,IAAM,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK;IAC3B,IAAM,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK;IAC3B,IAAM,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK;IAC3B,IAAM,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK;IAC3B,IAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAA,CAAA,GAAA,CAAC,EAAE,GAAG,EAAE,EAAK,CAAC,IAAA,IAAA,CAAA,GAAA,CAAI,EAAE,GAAG,EAAE,EAAK,CAAC,EAAC;IAC3D,OAAO,QAAQ;EACjB;EACA,SAAS,cAAc,CAAA,EAAG;IACxB,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,OAAO;MAC7B,CAAC,EAAE,IAAI;MACP,CAAC,EAAE;IACL,CAAC;IACD,IAAM,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC;IACnD,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,YAAY,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,YAAY,CAAC;EACvL;EACA,SAAS,gBAAgB,CAAA,EAAG;IAC1B,OAAO,MAAM,CAAC,SAAS,wBAAA,MAAA,CAAwB,MAAM,CAAC,MAAM,CAAC,UAAU,CAAE;EAC3E;EACA,SAAS,gBAAgB,CAAC,CAAC,EAAE;IAC3B,IAAM,aAAa,GAAG,gBAAgB,CAAC,CAAC;IACxC,IAAI,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE,OAAO,IAAI;IAChD,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAA,OAAO;MAAA,OAAI,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC;IAAA,EAAC,CAAC,MAAM,GAAG,CAAC,EAAE,OAAO,IAAI;IACvF,OAAO,KAAK;EACd;EACA,SAAS,wBAAwB,CAAC,CAAC,EAAE;IACnC,IAAM,QAAQ,OAAA,MAAA,CAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAE;IACxD,IAAI,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,OAAO,IAAI;IAC3C,IAAI,kBAAA,CAAI,MAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAC,UAAA,WAAW;MAAA,OAAI,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC;IAAA,EAAC,CAAC,MAAM,GAAG,CAAC,EAAE,OAAO,IAAI;IAC3H,OAAO,KAAK;EACd;;EAEA;EACA,SAAS,cAAc,CAAC,CAAC,EAAE;IACzB,IAAI,CAAC,CAAC,WAAW,KAAK,OAAO,EAAE;MAC7B,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC;IACnC;IACA,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE;IAC1B,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI;IACjC,kBAAkB,GAAG,KAAK;IAC1B,gBAAgB,GAAG,KAAK;IACxB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;IACf,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;MACtB;IACF;IACA,kBAAkB,GAAG,IAAI;IACzB,OAAO,CAAC,UAAU,GAAG,yBAAyB,CAAC,CAAC;IAChD,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;MACpB,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,KAAA,MAAA,CAAK,MAAM,CAAC,MAAM,CAAC,UAAU,mBAAgB,CAAC;MAChF,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC;MACzE,IAAI,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,aAAa,KAAA,MAAA,CAAK,MAAM,CAAC,cAAc,CAAE,CAAC;MACxE,IAAI,OAAO,EAAE;QACX,OAAO,GAAG,OAAO,CAAC,gBAAgB,CAAC,gDAAgD,CAAC,CAAC,CAAC,CAAC;MACzF;MACA,OAAO,CAAC,OAAO,GAAG,OAAO;MACzB,IAAI,OAAO,EAAE;QACX,OAAO,CAAC,WAAW,GAAG,IAAA,qBAAc,EAAC,OAAO,CAAC,OAAO,MAAA,MAAA,CAAM,MAAM,CAAC,cAAc,CAAE,CAAC,CAAC,CAAC,CAAC;MACvF,CAAC,MAAM;QACL,OAAO,CAAC,WAAW,GAAG,SAAS;MACjC;MACA,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;QACxB,OAAO,CAAC,OAAO,GAAG,SAAS;QAC3B;MACF;MACA,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,WAAW,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,MAAM,CAAC,QAAQ;IAC5F;IACA,IAAI,OAAO,CAAC,OAAO,EAAE;MACnB,IAAA,eAAA,GAA2B,cAAc,CAAC,CAAC;QAAA,gBAAA,GAAA,cAAA,CAAA,eAAA;QAApC,OAAO,GAAA,gBAAA;QAAE,OAAO,GAAA,gBAAA;MACvB,OAAO,CAAC,OAAO,GAAG,OAAO;MACzB,OAAO,CAAC,OAAO,GAAG,OAAO;MACzB,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,kBAAkB,GAAG,KAAK;IAClD;IACA,SAAS,GAAG,IAAI;EAClB;EACA,SAAS,eAAe,CAAC,CAAC,EAAE;IAC1B,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE;IAC1B,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI;IACjC,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI;IACxB,IAAM,YAAY,GAAG,OAAO,CAAC,SAAS,CAAC,UAAA,QAAQ;MAAA,OAAI,QAAQ,CAAC,SAAS,KAAK,CAAC,CAAC,SAAS;IAAA,EAAC;IACtF,IAAI,YAAY,IAAI,CAAC,EAAE,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC;IAChD,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;MACtB;IACF;IACA,gBAAgB,GAAG,IAAI;IACvB,OAAO,CAAC,SAAS,GAAG,yBAAyB,CAAC,CAAC;IAC/C,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;MACpB;IACF;IACA,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,UAAU,GAAG,YAAY;IAClE,IAAI,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,QAAQ,EAAE;MACjC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,QAAQ,GAAG,CAAC,GAAA,IAAA,CAAA,GAAA,CAAI,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,QAAQ,GAAG,CAAC,EAAK,GAAG;IAChF;IACA,IAAI,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE;MAChC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,QAAQ,GAAG,CAAC,GAAA,IAAA,CAAA,GAAA,CAAI,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAK,GAAG;IAC9E;IACA,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,+BAAA,MAAA,CAA+B,IAAI,CAAC,KAAK,MAAG;EAC7E;EACA,SAAS,YAAY,CAAC,CAAC,EAAE;IACvB,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE;IAC1B,IAAI,CAAC,CAAC,WAAW,KAAK,OAAO,IAAI,CAAC,CAAC,IAAI,KAAK,YAAY,EAAE;IAC1D,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI;IACjC,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI;IACxB,IAAM,YAAY,GAAG,OAAO,CAAC,SAAS,CAAC,UAAA,QAAQ;MAAA,OAAI,QAAQ,CAAC,SAAS,KAAK,CAAC,CAAC,SAAS;IAAA,EAAC;IACtF,IAAI,YAAY,IAAI,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC;IACtD,IAAI,CAAC,kBAAkB,IAAI,CAAC,gBAAgB,EAAE;MAC5C;IACF;IACA,kBAAkB,GAAG,KAAK;IAC1B,gBAAgB,GAAG,KAAK;IACxB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;IACtB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC;IAC9E,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,kBAAkB,MAAA,MAAA,CAAM,MAAM,CAAC,MAAM,CAAC,KAAK,OAAI;IACrE,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,+BAAA,MAAA,CAA+B,IAAI,CAAC,KAAK,MAAG;IAC3E,YAAY,GAAG,IAAI,CAAC,KAAK;IACzB,SAAS,GAAG,KAAK;IACjB,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,OAAO,CAAC,OAAO,EAAE;MACrC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,IAAA,MAAA,CAAI,MAAM,CAAC,gBAAgB,CAAE,CAAC;IAC7D,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,OAAO,CAAC,OAAO,EAAE;MAC7C,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,IAAA,MAAA,CAAI,MAAM,CAAC,gBAAgB,CAAE,CAAC;IAChE;IACA,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;MACpB,OAAO,CAAC,OAAO,GAAG,CAAC;MACnB,OAAO,CAAC,OAAO,GAAG,CAAC;MACnB,OAAO,CAAC,OAAO,GAAG,SAAS;IAC7B;EACF;EACA,SAAS,YAAY,CAAC,CAAC,EAAE;IACvB,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM;IAC5B,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;IACtB,IAAI,KAAK,CAAC,SAAS,EAAE;IACrB,IAAI,MAAM,CAAC,OAAO,IAAI,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC;IACtD,KAAK,CAAC,SAAS,GAAG,IAAI;IACtB,IAAM,KAAK,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;IACjD,KAAK,CAAC,YAAY,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK;IAClC,KAAK,CAAC,YAAY,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK;EACpC;EACA,SAAS,WAAW,CAAC,CAAC,EAAE;IACtB,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,EAAE;IAC1D,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI;IACxB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;IACtB,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;IAC1C,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;MAClB,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,WAAW;MACzC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,YAAY;MAC3C,KAAK,CAAC,MAAM,GAAG,IAAA,mBAAY,EAAC,OAAO,CAAC,WAAW,EAAE,GAAG,CAAC,IAAI,CAAC;MAC1D,KAAK,CAAC,MAAM,GAAG,IAAA,mBAAY,EAAC,OAAO,CAAC,WAAW,EAAE,GAAG,CAAC,IAAI,CAAC;MAC1D,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC,WAAW;MAChD,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,YAAY;MAClD,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,kBAAkB,GAAG,KAAK;IACtD;IACA;IACA,IAAM,WAAW,GAAG,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK;IAC5C,IAAM,YAAY,GAAG,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK;IAC9C,IAAI,WAAW,GAAG,OAAO,CAAC,UAAU,IAAI,YAAY,GAAG,OAAO,CAAC,WAAW,EAAE;IAC5E,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,GAAG,CAAC,GAAG,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC;IAClE,KAAK,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,IAAI;IACxB,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,GAAG,CAAC,GAAG,YAAY,GAAG,CAAC,EAAE,CAAC,CAAC;IACpE,KAAK,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,IAAI;IACxB,KAAK,CAAC,cAAc,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK;IACxE,KAAK,CAAC,cAAc,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK;IACxE,IAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,GAAG,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,GAAG,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IAC9I,IAAI,WAAW,GAAG,CAAC,EAAE;MACnB,MAAM,CAAC,UAAU,GAAG,KAAK;IAC3B;IACA,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,CAAC,SAAS,EAAE;MAChC,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC,GAAG,KAAK,CAAC,YAAY,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC,GAAG,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE;QAC3O,KAAK,CAAC,SAAS,GAAG,KAAK;QACvB;MACF;MACA,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC,GAAG,KAAK,CAAC,YAAY,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC,GAAG,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE;QAC5O,KAAK,CAAC,SAAS,GAAG,KAAK;QACvB;MACF;IACF;IACA,IAAI,CAAC,CAAC,UAAU,EAAE;MAChB,CAAC,CAAC,cAAc,CAAC,CAAC;IACpB;IACA,CAAC,CAAC,eAAe,CAAC,CAAC;IACnB,KAAK,CAAC,OAAO,GAAG,IAAI;IACpB,IAAM,UAAU,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,YAAY,KAAK,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACjG,IACE,OAAO,GAEL,OAAO,CAFT,OAAO;MACP,OAAO,GACL,OAAO,CADT,OAAO;IAET,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC,GAAG,KAAK,CAAC,YAAY,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,UAAU,IAAI,KAAK,CAAC,KAAK,GAAG,OAAO,GAAG,CAAC,CAAC;IACxH,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC,GAAG,KAAK,CAAC,YAAY,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,UAAU,IAAI,KAAK,CAAC,MAAM,GAAG,OAAO,GAAG,CAAC,CAAC;IACzH,IAAI,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,EAAE;MAC/B,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,GAAG,CAAC,GAAA,IAAA,CAAA,GAAA,CAAI,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,QAAQ,GAAG,CAAC,EAAK,GAAG;IAC5E;IACA,IAAI,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,EAAE;MAC/B,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,GAAG,CAAC,GAAA,IAAA,CAAA,GAAA,CAAI,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,GAAG,CAAC,EAAK,GAAG;IAC5E;IACA,IAAI,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,EAAE;MAC/B,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,GAAG,CAAC,GAAA,IAAA,CAAA,GAAA,CAAI,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,QAAQ,GAAG,CAAC,EAAK,GAAG;IAC5E;IACA,IAAI,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,EAAE;MAC/B,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,GAAG,CAAC,GAAA,IAAA,CAAA,GAAA,CAAI,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,GAAG,CAAC,EAAK,GAAG;IAC5E;;IAEA;IACA,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,QAAQ,CAAC,aAAa,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC;IAC5E,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,QAAQ,CAAC,aAAa,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC;IAC5E,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IACtD,QAAQ,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,GAAG,QAAQ,CAAC,aAAa,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC;IACrG,QAAQ,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,GAAG,QAAQ,CAAC,aAAa,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC;IACrG,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC;IACjF,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC;IACjF,QAAQ,CAAC,aAAa,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC;IAC/C,QAAQ,CAAC,aAAa,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC;IAC/C,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IAC9B,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,kBAAA,MAAA,CAAkB,KAAK,CAAC,QAAQ,UAAA,MAAA,CAAO,KAAK,CAAC,QAAQ,UAAO;EACjG;EACA,SAAS,UAAU,CAAA,EAAG;IACpB,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI;IACxB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;IACtB,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;MACtC,KAAK,CAAC,SAAS,GAAG,KAAK;MACvB,KAAK,CAAC,OAAO,GAAG,KAAK;MACrB;IACF;IACA,KAAK,CAAC,SAAS,GAAG,KAAK;IACvB,KAAK,CAAC,OAAO,GAAG,KAAK;IACrB,IAAI,iBAAiB,GAAG,GAAG;IAC3B,IAAI,iBAAiB,GAAG,GAAG;IAC3B,IAAM,iBAAiB,GAAG,QAAQ,CAAC,CAAC,GAAG,iBAAiB;IACxD,IAAM,YAAY,GAAG,KAAK,CAAC,QAAQ,GAAG,iBAAiB;IACvD,IAAM,iBAAiB,GAAG,QAAQ,CAAC,CAAC,GAAG,iBAAiB;IACxD,IAAM,YAAY,GAAG,KAAK,CAAC,QAAQ,GAAG,iBAAiB;;IAEvD;IACA,IAAI,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE,iBAAiB,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,YAAY,GAAG,KAAK,CAAC,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC;IAChG,IAAI,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE,iBAAiB,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,YAAY,GAAG,KAAK,CAAC,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC;IAChG,IAAM,gBAAgB,GAAG,IAAI,CAAC,GAAG,CAAC,iBAAiB,EAAE,iBAAiB,CAAC;IACvE,KAAK,CAAC,QAAQ,GAAG,YAAY;IAC7B,KAAK,CAAC,QAAQ,GAAG,YAAY;IAC7B;IACA,IAAM,WAAW,GAAG,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK;IAC5C,IAAM,YAAY,GAAG,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK;IAC9C,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,GAAG,CAAC,GAAG,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC;IAClE,KAAK,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,IAAI;IACxB,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,GAAG,CAAC,GAAG,YAAY,GAAG,CAAC,EAAE,CAAC,CAAC;IACpE,KAAK,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,IAAI;IACxB,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC;IAC3E,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC;IAC3E,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,kBAAkB,MAAA,MAAA,CAAM,gBAAgB,OAAI;IACtE,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,kBAAA,MAAA,CAAkB,KAAK,CAAC,QAAQ,UAAA,MAAA,CAAO,KAAK,CAAC,QAAQ,UAAO;EACjG;EACA,SAAS,eAAe,CAAA,EAAG;IACzB,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI;IACxB,IAAI,OAAO,CAAC,OAAO,IAAI,MAAM,CAAC,WAAW,KAAK,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;MACpF,IAAI,OAAO,CAAC,OAAO,EAAE;QACnB,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,6BAA6B;MACjE;MACA,IAAI,OAAO,CAAC,WAAW,EAAE;QACvB,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,GAAG,oBAAoB;MAC5D;MACA,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,IAAA,MAAA,CAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAE,CAAC;MAC1E,IAAI,CAAC,KAAK,GAAG,CAAC;MACd,YAAY,GAAG,CAAC;MAChB,OAAO,CAAC,OAAO,GAAG,SAAS;MAC3B,OAAO,CAAC,OAAO,GAAG,SAAS;MAC3B,OAAO,CAAC,WAAW,GAAG,SAAS;MAC/B,OAAO,CAAC,OAAO,GAAG,CAAC;MACnB,OAAO,CAAC,OAAO,GAAG,CAAC;IACrB;EACF;EACA,SAAS,MAAM,CAAC,CAAC,EAAE;IACjB,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI;IACxB,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI;IACjC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;MACpB,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE;QACjB,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,KAAA,MAAA,CAAK,MAAM,CAAC,MAAM,CAAC,UAAU,mBAAgB,CAAC;MAClF;MACA,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;QACpB,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,EAAE;UAC5E,OAAO,CAAC,OAAO,GAAG,IAAA,sBAAe,EAAC,MAAM,CAAC,QAAQ,MAAA,MAAA,CAAM,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAE,CAAC,CAAC,CAAC,CAAC;QAC7F,CAAC,MAAM;UACL,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC;QACrD;MACF;MACA,IAAI,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,aAAa,KAAA,MAAA,CAAK,MAAM,CAAC,cAAc,CAAE,CAAC;MACxE,IAAI,OAAO,EAAE;QACX,OAAO,GAAG,OAAO,CAAC,gBAAgB,CAAC,gDAAgD,CAAC,CAAC,CAAC,CAAC;MACzF;MACA,OAAO,CAAC,OAAO,GAAG,OAAO;MACzB,IAAI,OAAO,EAAE;QACX,OAAO,CAAC,WAAW,GAAG,IAAA,qBAAc,EAAC,OAAO,CAAC,OAAO,MAAA,MAAA,CAAM,MAAM,CAAC,cAAc,CAAE,CAAC,CAAC,CAAC,CAAC;MACvF,CAAC,MAAM;QACL,OAAO,CAAC,WAAW,GAAG,SAAS;MACjC;IACF;IACA,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;IAC9C,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE;MACzB,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ;MAC1C,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,MAAM;IAC7C;IACA,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,IAAA,MAAA,CAAI,MAAM,CAAC,gBAAgB,CAAE,CAAC;IAC3D,IAAI,MAAM;IACV,IAAI,MAAM;IACV,IAAI,OAAO;IACX,IAAI,OAAO;IACX,IAAI,KAAK;IACT,IAAI,KAAK;IACT,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,WAAW;IACf,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,UAAU;IACd,IAAI,WAAW;IACf,IAAI,OAAO,KAAK,CAAC,YAAY,CAAC,CAAC,KAAK,WAAW,IAAI,CAAC,EAAE;MACpD,MAAM,GAAG,CAAC,CAAC,KAAK;MAChB,MAAM,GAAG,CAAC,CAAC,KAAK;IAClB,CAAC,MAAM;MACL,MAAM,GAAG,KAAK,CAAC,YAAY,CAAC,CAAC;MAC7B,MAAM,GAAG,KAAK,CAAC,YAAY,CAAC,CAAC;IAC/B;IACA,IAAM,cAAc,GAAG,OAAO,CAAC,KAAK,QAAQ,GAAG,CAAC,GAAG,IAAI;IACvD,IAAI,YAAY,KAAK,CAAC,IAAI,cAAc,EAAE;MACxC,MAAM,GAAG,SAAS;MAClB,MAAM,GAAG,SAAS;IACpB;IACA,IAAI,CAAC,KAAK,GAAG,cAAc,IAAI,OAAO,CAAC,WAAW,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,MAAM,CAAC,QAAQ;IACtG,YAAY,GAAG,cAAc,IAAI,OAAO,CAAC,WAAW,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,MAAM,CAAC,QAAQ;IACxG,IAAI,CAAC,IAAI,EAAE,YAAY,KAAK,CAAC,IAAI,cAAc,CAAC,EAAE;MAChD,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC,WAAW;MACxC,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,YAAY;MAC1C,OAAO,GAAG,IAAA,oBAAa,EAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC,OAAO;MAC9D,OAAO,GAAG,IAAA,oBAAa,EAAC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,GAAG,MAAM,CAAC,OAAO;MAC7D,KAAK,GAAG,OAAO,GAAG,UAAU,GAAG,CAAC,GAAG,MAAM;MACzC,KAAK,GAAG,OAAO,GAAG,WAAW,GAAG,CAAC,GAAG,MAAM;MAC1C,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC,WAAW;MACxC,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,YAAY;MAC1C,WAAW,GAAG,UAAU,GAAG,IAAI,CAAC,KAAK;MACrC,YAAY,GAAG,WAAW,GAAG,IAAI,CAAC,KAAK;MACvC,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,CAAC,GAAG,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC;MAC7D,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,GAAG,YAAY,GAAG,CAAC,EAAE,CAAC,CAAC;MAC/D,aAAa,GAAG,CAAC,aAAa;MAC9B,aAAa,GAAG,CAAC,aAAa;MAC9B,UAAU,GAAG,KAAK,GAAG,IAAI,CAAC,KAAK;MAC/B,UAAU,GAAG,KAAK,GAAG,IAAI,CAAC,KAAK;MAC/B,IAAI,UAAU,GAAG,aAAa,EAAE;QAC9B,UAAU,GAAG,aAAa;MAC5B;MACA,IAAI,UAAU,GAAG,aAAa,EAAE;QAC9B,UAAU,GAAG,aAAa;MAC5B;MACA,IAAI,UAAU,GAAG,aAAa,EAAE;QAC9B,UAAU,GAAG,aAAa;MAC5B;MACA,IAAI,UAAU,GAAG,aAAa,EAAE;QAC9B,UAAU,GAAG,aAAa;MAC5B;IACF,CAAC,MAAM;MACL,UAAU,GAAG,CAAC;MACd,UAAU,GAAG,CAAC;IAChB;IACA,IAAI,cAAc,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;MACtC,OAAO,CAAC,OAAO,GAAG,CAAC;MACnB,OAAO,CAAC,OAAO,GAAG,CAAC;IACrB;IACA,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,kBAAkB,GAAG,OAAO;IACtD,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,kBAAA,MAAA,CAAkB,UAAU,UAAA,MAAA,CAAO,UAAU,UAAO;IACvF,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,kBAAkB,GAAG,OAAO;IAClD,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,+BAAA,MAAA,CAA+B,IAAI,CAAC,KAAK,MAAG;EAC7E;EACA,SAAS,OAAO,CAAA,EAAG;IACjB,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI;IACxB,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI;IACjC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;MACpB,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,EAAE;QAC5E,OAAO,CAAC,OAAO,GAAG,IAAA,sBAAe,EAAC,MAAM,CAAC,QAAQ,MAAA,MAAA,CAAM,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAE,CAAC,CAAC,CAAC,CAAC;MAC7F,CAAC,MAAM;QACL,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC;MACrD;MACA,IAAI,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,aAAa,KAAA,MAAA,CAAK,MAAM,CAAC,cAAc,CAAE,CAAC;MACxE,IAAI,OAAO,EAAE;QACX,OAAO,GAAG,OAAO,CAAC,gBAAgB,CAAC,gDAAgD,CAAC,CAAC,CAAC,CAAC;MACzF;MACA,OAAO,CAAC,OAAO,GAAG,OAAO;MACzB,IAAI,OAAO,EAAE;QACX,OAAO,CAAC,WAAW,GAAG,IAAA,qBAAc,EAAC,OAAO,CAAC,OAAO,MAAA,MAAA,CAAM,MAAM,CAAC,cAAc,CAAE,CAAC,CAAC,CAAC,CAAC;MACvF,CAAC,MAAM;QACL,OAAO,CAAC,WAAW,GAAG,SAAS;MACjC;IACF;IACA,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;IAC9C,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE;MACzB,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE;MACpC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,EAAE;IACzC;IACA,IAAI,CAAC,KAAK,GAAG,CAAC;IACd,YAAY,GAAG,CAAC;IAChB,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,kBAAkB,GAAG,OAAO;IACtD,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,GAAG,oBAAoB;IAC1D,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,kBAAkB,GAAG,OAAO;IAClD,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,6BAA6B;IAC/D,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,IAAA,MAAA,CAAI,MAAM,CAAC,gBAAgB,CAAE,CAAC;IAC9D,OAAO,CAAC,OAAO,GAAG,SAAS;IAC3B,OAAO,CAAC,OAAO,GAAG,CAAC;IACnB,OAAO,CAAC,OAAO,GAAG,CAAC;EACrB;;EAEA;EACA,SAAS,UAAU,CAAC,CAAC,EAAE;IACrB,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI;IACxB,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;MAClC;MACA,OAAO,CAAC,CAAC;IACX,CAAC,MAAM;MACL;MACA,MAAM,CAAC,CAAC,CAAC;IACX;EACF;EACA,SAAS,YAAY,CAAA,EAAG;IACtB,IAAM,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,gBAAgB,GAAG;MACvD,OAAO,EAAE,IAAI;MACb,OAAO,EAAE;IACX,CAAC,GAAG,KAAK;IACT,IAAM,yBAAyB,GAAG,MAAM,CAAC,MAAM,CAAC,gBAAgB,GAAG;MACjE,OAAO,EAAE,KAAK;MACd,OAAO,EAAE;IACX,CAAC,GAAG,IAAI;IACR,OAAO;MACL,eAAe,EAAf,eAAe;MACf,yBAAyB,EAAzB;IACF,CAAC;EACH;;EAEA;EACA,SAAS,MAAM,CAAA,EAAG;IAChB,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI;IACxB,IAAI,IAAI,CAAC,OAAO,EAAE;IAClB,IAAI,CAAC,OAAO,GAAG,IAAI;IACnB,IAAA,aAAA,GAGI,YAAY,CAAC,CAAC;MAFhB,eAAe,GAAA,aAAA,CAAf,eAAe;MACf,yBAAyB,GAAA,aAAA,CAAzB,yBAAyB;;IAG3B;IACA,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,aAAa,EAAE,cAAc,EAAE,eAAe,CAAC;IACjF,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,aAAa,EAAE,eAAe,EAAE,yBAAyB,CAAC;IAC5F,CAAC,WAAW,EAAE,eAAe,EAAE,YAAY,CAAC,CAAC,OAAO,CAAC,UAAA,SAAS,EAAI;MAChE,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,SAAS,EAAE,YAAY,EAAE,eAAe,CAAC;IAC7E,CAAC,CAAC;;IAEF;IACA,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,aAAa,EAAE,WAAW,EAAE,yBAAyB,CAAC;EAC1F;EACA,SAAS,OAAO,CAAA,EAAG;IACjB,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI;IACxB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;IACnB,IAAI,CAAC,OAAO,GAAG,KAAK;IACpB,IAAA,cAAA,GAGI,YAAY,CAAC,CAAC;MAFhB,eAAe,GAAA,cAAA,CAAf,eAAe;MACf,yBAAyB,GAAA,cAAA,CAAzB,yBAAyB;;IAG3B;IACA,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,aAAa,EAAE,cAAc,EAAE,eAAe,CAAC;IACpF,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,aAAa,EAAE,eAAe,EAAE,yBAAyB,CAAC;IAC/F,CAAC,WAAW,EAAE,eAAe,EAAE,YAAY,CAAC,CAAC,OAAO,CAAC,UAAA,SAAS,EAAI;MAChE,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,SAAS,EAAE,YAAY,EAAE,eAAe,CAAC;IAChF,CAAC,CAAC;;IAEF;IACA,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,aAAa,EAAE,WAAW,EAAE,yBAAyB,CAAC;EAC7F;EACA,EAAE,CAAC,MAAM,EAAE,YAAM;IACf,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE;MAC9B,MAAM,CAAC,CAAC;IACV;EACF,CAAC,CAAC;EACF,EAAE,CAAC,SAAS,EAAE,YAAM;IAClB,OAAO,CAAC,CAAC;EACX,CAAC,CAAC;EACF,EAAE,CAAC,YAAY,EAAE,UAAC,EAAE,EAAE,CAAC,EAAK;IAC1B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE;IAC1B,YAAY,CAAC,CAAC,CAAC;EACjB,CAAC,CAAC;EACF,EAAE,CAAC,UAAU,EAAE,UAAC,EAAE,EAAE,CAAC,EAAK;IACxB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE;IAC1B,UAAU,CAAC,CAAC,CAAC;EACf,CAAC,CAAC;EACF,EAAE,CAAC,WAAW,EAAE,UAAC,EAAE,EAAE,CAAC,EAAK;IACzB,IAAI,CAAC,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE;MACvG,UAAU,CAAC,CAAC,CAAC;IACf;EACF,CAAC,CAAC;EACF,EAAE,CAAC,eAAe,EAAE,YAAM;IACxB,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE;MACrD,eAAe,CAAC,CAAC;IACnB;EACF,CAAC,CAAC;EACF,EAAE,CAAC,aAAa,EAAE,YAAM;IACtB,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE;MAC9E,eAAe,CAAC,CAAC;IACnB;EACF,CAAC,CAAC;EACF,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE;IACzB,MAAM,EAAN,MAAM;IACN,OAAO,EAAP,OAAO;IACP,MAAI,MAAM;IACV,GAAG,EAAE,OAAO;IACZ,MAAM,EAAE;EACV,CAAC,CAAC;AACJ;;;;;;;;;AC1kBe,SAAS,iBAAiB,CAAA,EAAe;EAAA,IAAd,OAAO,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,EAAE;EACpD,WAAA,MAAA,CAAW,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;EAAA,CACzD,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;AACrB;;;;;;;;;ACHA,IAAA,MAAA,GAAA,OAAA;AACe,SAAS,yBAAyB,CAAC,MAAM,EAAE,cAAc,EAAE,MAAM,EAAE,UAAU,EAAE;EAC5F,IAAI,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE;IAChC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,UAAA,GAAG,EAAI;MACrC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,IAAI,KAAK,IAAI,EAAE;QACxC,IAAI,OAAO,GAAG,IAAA,sBAAe,EAAC,MAAM,CAAC,EAAE,MAAA,MAAA,CAAM,UAAU,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC,CAAC,CAAC;QAClE,IAAI,CAAC,OAAO,EAAE;UACZ,OAAO,GAAG,IAAA,oBAAa,EAAC,KAAK,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC;UAC/C,OAAO,CAAC,SAAS,GAAG,UAAU,CAAC,GAAG,CAAC;UACnC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC;QAC3B;QACA,MAAM,CAAC,GAAG,CAAC,GAAG,OAAO;QACrB,cAAc,CAAC,GAAG,CAAC,GAAG,OAAO;MAC/B;IACF,CAAC,CAAC;EACJ;EACA,OAAO,MAAM;AACf;;;;;;;;;ACjBA,IAAA,MAAA,GAAA,OAAA;AACe,SAAS,YAAY,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE;EAC1D,IAAM,WAAW,yBAAA,MAAA,CAAyB,IAAI,OAAA,MAAA,CAAO,IAAI,IAAK,EAAE,CAAE;EAClE,IAAM,eAAe,GAAG,IAAA,0BAAmB,EAAC,OAAO,CAAC;EACpD,IAAI,QAAQ,GAAG,eAAe,CAAC,aAAa,KAAA,MAAA,CAAK,WAAW,CAAE,CAAC;EAC/D,IAAI,CAAC,QAAQ,EAAE;IACb,QAAQ,GAAG,IAAA,oBAAa,EAAC,KAAK,wBAAA,MAAA,CAAwB,IAAI,OAAA,MAAA,CAAO,IAAI,IAAK,EAAE,CAAE,CAAC;IAC/E,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC;EAClC;EACA,OAAO,QAAQ;AACjB;;;;;;;;;ACVe,SAAS,UAAU,CAAC,MAAM,EAAE;EACzC,IACE,MAAM,GASJ,MAAM,CATR,MAAM;IACN,MAAM,GAQJ,MAAM,CARR,MAAM;IACN,EAAE,GAOA,MAAM,CAPR,EAAE;IACF,YAAY,GAMV,MAAM,CANR,YAAY;IACZ,aAAa,GAKX,MAAM,CALR,aAAa;IACb,eAAe,GAIb,MAAM,CAJR,eAAe;IACf,WAAW,GAGT,MAAM,CAHR,WAAW;IACX,eAAe,GAEb,MAAM,CAFR,eAAe;IACf,eAAe,GACb,MAAM,CADR,eAAe;EAEjB,EAAE,CAAC,YAAY,EAAE,YAAM;IACrB,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,KAAK,MAAM,EAAE;IACrC,MAAM,CAAC,UAAU,CAAC,IAAI,IAAA,MAAA,CAAI,MAAM,CAAC,MAAM,CAAC,sBAAsB,EAAA,MAAA,CAAG,MAAM,CAAE,CAAC;IAC1E,IAAI,WAAW,IAAI,WAAW,CAAC,CAAC,EAAE;MAChC,MAAM,CAAC,UAAU,CAAC,IAAI,IAAA,MAAA,CAAI,MAAM,CAAC,MAAM,CAAC,sBAAsB,OAAI,CAAC;IACrE;IACA,IAAM,qBAAqB,GAAG,eAAe,GAAG,eAAe,CAAC,CAAC,GAAG,CAAC,CAAC;IACtE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,qBAAqB,CAAC;IACnD,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE,qBAAqB,CAAC;EAC7D,CAAC,CAAC;EACF,EAAE,CAAC,cAAc,EAAE,YAAM;IACvB,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,KAAK,MAAM,EAAE;IACrC,YAAY,CAAC,CAAC;EAChB,CAAC,CAAC;EACF,EAAE,CAAC,eAAe,EAAE,UAAC,EAAE,EAAE,QAAQ,EAAK;IACpC,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,KAAK,MAAM,EAAE;IACrC,aAAa,CAAC,QAAQ,CAAC;EACzB,CAAC,CAAC;EACF,EAAE,CAAC,eAAe,EAAE,YAAM;IACxB,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,KAAK,MAAM,EAAE;IACrC,IAAI,eAAe,EAAE;MACnB,IAAI,CAAC,eAAe,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,YAAY,EAAE;MACzD;MACA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,OAAO,EAAI;QAC/B,OAAO,CAAC,gBAAgB,CAAC,8GAA8G,CAAC,CAAC,OAAO,CAAC,UAAA,QAAQ;UAAA,OAAI,QAAQ,CAAC,MAAM,CAAC,CAAC;QAAA,EAAC;MACjL,CAAC,CAAC;MACF;MACA,eAAe,CAAC,CAAC;IACnB;EACF,CAAC,CAAC;EACF,IAAI,sBAAsB;EAC1B,EAAE,CAAC,eAAe,EAAE,YAAM;IACxB,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,KAAK,MAAM,EAAE;IACrC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;MACzB,sBAAsB,GAAG,IAAI;IAC/B;IACA,qBAAqB,CAAC,YAAM;MAC1B,IAAI,sBAAsB,IAAI,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;QACnE,YAAY,CAAC,CAAC;QACd,sBAAsB,GAAG,KAAK;MAChC;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;;;;;;;;;ACvDA,IAAA,MAAA,GAAA,OAAA;AACe,SAAS,YAAY,CAAC,YAAY,EAAE,OAAO,EAAE;EAC1D,IAAM,WAAW,GAAG,IAAA,0BAAmB,EAAC,OAAO,CAAC;EAChD,IAAI,WAAW,KAAK,OAAO,EAAE;IAC3B,WAAW,CAAC,KAAK,CAAC,kBAAkB,GAAG,QAAQ;IAC/C,WAAW,CAAC,KAAK,CAAC,6BAA6B,CAAC,GAAG,QAAQ;EAC7D;EACA,OAAO,WAAW;AACpB;;;;;;;;;ACRA,IAAA,MAAA,GAAA,OAAA;AACe,SAAS,0BAA0B,CAAA,IAAA,EAK/C;EAAA,IAJD,MAAM,GAAA,IAAA,CAAN,MAAM;IACN,QAAQ,GAAA,IAAA,CAAR,QAAQ;IACR,iBAAiB,GAAA,IAAA,CAAjB,iBAAiB;IACjB,SAAS,GAAA,IAAA,CAAT,SAAS;EAET,IACE,WAAW,GACT,MAAM,CADR,WAAW;EAEb,IAAM,QAAQ,GAAG,SAAX,QAAQ,CAAG,EAAE,EAAI;IACrB,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE;MACrB;MACA,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAA,OAAO;QAAA,OAAI,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,QAAQ,KAAK,EAAE,CAAC,UAAU;MAAA,EAAC,CAAC,CAAC,CAAC;MACxG,OAAO,KAAK;IACd;IACA,OAAO,EAAE,CAAC,aAAa;EACzB,CAAC;EACD,IAAI,MAAM,CAAC,MAAM,CAAC,gBAAgB,IAAI,QAAQ,KAAK,CAAC,EAAE;IACpD,IAAI,cAAc,GAAG,KAAK;IAC1B,IAAI,mBAAmB;IACvB,IAAI,SAAS,EAAE;MACb,mBAAmB,GAAG,iBAAiB;IACzC,CAAC,MAAM;MACL,mBAAmB,GAAG,iBAAiB,CAAC,MAAM,CAAC,UAAA,WAAW,EAAI;QAC5D,IAAM,EAAE,GAAG,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,wBAAwB,CAAC,GAAG,QAAQ,CAAC,WAAW,CAAC,GAAG,WAAW;QACzG,OAAO,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,KAAK,WAAW;MACjD,CAAC,CAAC;IACJ;IACA,mBAAmB,CAAC,OAAO,CAAC,UAAA,EAAE,EAAI;MAChC,IAAA,2BAAoB,EAAC,EAAE,EAAE,YAAM;QAC7B,IAAI,cAAc,EAAE;QACpB,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,EAAE;QACjC,cAAc,GAAG,IAAI;QACrB,MAAM,CAAC,SAAS,GAAG,KAAK;QACxB,IAAM,GAAG,GAAG,IAAI,MAAM,CAAC,WAAW,CAAC,eAAe,EAAE;UAClD,OAAO,EAAE,IAAI;UACb,UAAU,EAAE;QACd,CAAC,CAAC;QACF,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,GAAG,CAAC;MACrC,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;AACF;;;;;;;;;AC3CA,IAAA,UAAA,GAAA,OAAA;AAAuC,SAAA,eAAA,GAAA,EAAA,CAAA,WAAA,eAAA,CAAA,GAAA,KAAA,qBAAA,CAAA,GAAA,EAAA,CAAA,KAAA,2BAAA,CAAA,GAAA,EAAA,CAAA,KAAA,gBAAA;AAAA,SAAA,iBAAA,cAAA,SAAA;AAAA,SAAA,4BAAA,CAAA,EAAA,MAAA,SAAA,CAAA,qBAAA,CAAA,sBAAA,iBAAA,CAAA,CAAA,EAAA,MAAA,OAAA,CAAA,GAAA,MAAA,CAAA,SAAA,CAAA,QAAA,CAAA,IAAA,CAAA,CAAA,EAAA,KAAA,aAAA,CAAA,iBAAA,CAAA,CAAA,WAAA,EAAA,CAAA,GAAA,CAAA,CAAA,WAAA,CAAA,IAAA,MAAA,CAAA,cAAA,CAAA,mBAAA,KAAA,CAAA,IAAA,CAAA,CAAA,OAAA,CAAA,+DAAA,IAAA,CAAA,CAAA,UAAA,iBAAA,CAAA,CAAA,EAAA,MAAA;AAAA,SAAA,kBAAA,GAAA,EAAA,GAAA,QAAA,GAAA,YAAA,GAAA,GAAA,GAAA,CAAA,MAAA,EAAA,GAAA,GAAA,GAAA,CAAA,MAAA,WAAA,CAAA,MAAA,IAAA,OAAA,KAAA,CAAA,GAAA,GAAA,CAAA,GAAA,GAAA,EAAA,CAAA,IAAA,IAAA,CAAA,CAAA,IAAA,GAAA,CAAA,CAAA,UAAA,IAAA;AAAA,SAAA,sBAAA,GAAA,EAAA,CAAA,QAAA,EAAA,WAAA,GAAA,gCAAA,MAAA,IAAA,GAAA,CAAA,MAAA,CAAA,QAAA,KAAA,GAAA,4BAAA,EAAA,QAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,OAAA,EAAA,OAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,GAAA,EAAA,CAAA,IAAA,CAAA,GAAA,GAAA,IAAA,QAAA,CAAA,QAAA,MAAA,CAAA,EAAA,MAAA,EAAA,UAAA,EAAA,uBAAA,EAAA,IAAA,EAAA,GAAA,EAAA,CAAA,IAAA,CAAA,EAAA,GAAA,IAAA,MAAA,IAAA,CAAA,IAAA,CAAA,EAAA,CAAA,KAAA,GAAA,IAAA,CAAA,MAAA,KAAA,CAAA,GAAA,EAAA,iBAAA,GAAA,IAAA,EAAA,OAAA,EAAA,GAAA,GAAA,yBAAA,EAAA,YAAA,EAAA,eAAA,EAAA,GAAA,EAAA,cAAA,MAAA,CAAA,EAAA,MAAA,EAAA,2BAAA,EAAA,QAAA,EAAA,aAAA,IAAA;AAAA,SAAA,gBAAA,GAAA,QAAA,KAAA,CAAA,OAAA,CAAA,GAAA,UAAA,GAAA;AACvC,IAAI,OAAO;AACX,SAAS,WAAW,CAAA,EAAG;EACrB,IAAM,MAAM,GAAG,IAAA,oBAAS,EAAC,CAAC;EAC1B,IAAI,kBAAkB,GAAG,KAAK;EAC9B,SAAS,QAAQ,CAAA,EAAG;IAClB,IAAM,EAAE,GAAG,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;IACnD,OAAO,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;EAC3F;EACA,IAAI,QAAQ,CAAC,CAAC,EAAE;IACd,IAAM,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC;IAC7C,IAAI,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;MAC3B,IAAA,qBAAA,GAAuB,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAA,GAAG;UAAA,OAAI,MAAM,CAAC,GAAG,CAAC;QAAA,EAAC;QAAA,sBAAA,GAAA,cAAA,CAAA,qBAAA;QAAxF,KAAK,GAAA,sBAAA;QAAE,KAAK,GAAA,sBAAA;MACnB,kBAAkB,GAAG,KAAK,GAAG,EAAE,IAAI,KAAK,KAAK,EAAE,IAAI,KAAK,GAAG,CAAC;IAC9D;EACF;EACA,OAAO;IACL,QAAQ,EAAE,kBAAkB,IAAI,QAAQ,CAAC,CAAC;IAC1C,kBAAkB,EAAlB,kBAAkB;IAClB,SAAS,EAAE,8CAA8C,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS;EAC3F,CAAC;AACH;AACA,SAAS,UAAU,CAAA,EAAG;EACpB,IAAI,CAAC,OAAO,EAAE;IACZ,OAAO,GAAG,WAAW,CAAC,CAAC;EACzB;EACA,OAAO,OAAO;AAChB;;;;;;;;;AC3BA,IAAA,UAAA,GAAA,OAAA;AACA,IAAA,WAAA,GAAA,OAAA;AACA,IAAI,YAAY;AAChB,SAAS,UAAU,CAAA,EAEX;EAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAJ,CAAC,CAAC;IADJ,SAAS,GAAA,IAAA,CAAT,SAAS;EAET,IAAM,OAAO,GAAG,IAAA,sBAAU,EAAC,CAAC;EAC5B,IAAM,MAAM,GAAG,IAAA,oBAAS,EAAC,CAAC;EAC1B,IAAM,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ;EAC1C,IAAM,EAAE,GAAG,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC,SAAS;EAClD,IAAM,MAAM,GAAG;IACb,GAAG,EAAE,KAAK;IACV,OAAO,EAAE;EACX,CAAC;EACD,IAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK;EACvC,IAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM;EACzC,IAAM,OAAO,GAAG,EAAE,CAAC,KAAK,CAAC,6BAA6B,CAAC,CAAC,CAAC;EACzD,IAAI,IAAI,GAAG,EAAE,CAAC,KAAK,CAAC,sBAAsB,CAAC;EAC3C,IAAM,IAAI,GAAG,EAAE,CAAC,KAAK,CAAC,yBAAyB,CAAC;EAChD,IAAM,MAAM,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC,KAAK,CAAC,4BAA4B,CAAC;EAC9D,IAAM,OAAO,GAAG,QAAQ,KAAK,OAAO;EACpC,IAAI,KAAK,GAAG,QAAQ,KAAK,UAAU;;EAEnC;EACA,IAAM,WAAW,GAAG,CAAC,WAAW,EAAE,WAAW,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC;EACtK,IAAI,CAAC,IAAI,IAAI,KAAK,IAAI,OAAO,CAAC,KAAK,IAAI,WAAW,CAAC,OAAO,IAAA,MAAA,CAAI,WAAW,OAAA,MAAA,CAAI,YAAY,CAAE,CAAC,IAAI,CAAC,EAAE;IACjG,IAAI,GAAG,EAAE,CAAC,KAAK,CAAC,qBAAqB,CAAC;IACtC,IAAI,CAAC,IAAI,EAAE,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC;IAClC,KAAK,GAAG,KAAK;EACf;;EAEA;EACA,IAAI,OAAO,IAAI,CAAC,OAAO,EAAE;IACvB,MAAM,CAAC,EAAE,GAAG,SAAS;IACrB,MAAM,CAAC,OAAO,GAAG,IAAI;EACvB;EACA,IAAI,IAAI,IAAI,MAAM,IAAI,IAAI,EAAE;IAC1B,MAAM,CAAC,EAAE,GAAG,KAAK;IACjB,MAAM,CAAC,GAAG,GAAG,IAAI;EACnB;;EAEA;EACA,OAAO,MAAM;AACf;AACA,SAAS,SAAS,CAAA,EAAiB;EAAA,IAAhB,SAAS,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,CAAC,CAAC;EAC/B,IAAI,CAAC,YAAY,EAAE;IACjB,YAAY,GAAG,UAAU,CAAC,SAAS,CAAC;EACtC;EACA,OAAO,YAAY;AACrB;;;;;;;;;ACjDA,IAAA,UAAA,GAAA,OAAA;AACA,IAAI,OAAO;AACX,SAAS,WAAW,CAAA,EAAG;EACrB,IAAM,MAAM,GAAG,IAAA,oBAAS,EAAC,CAAC;EAC1B,IAAM,QAAQ,GAAG,IAAA,sBAAW,EAAC,CAAC;EAC9B,OAAO;IACL,YAAY,EAAE,QAAQ,CAAC,eAAe,IAAI,gBAAgB,IAAI,QAAQ,CAAC,eAAe,CAAC,KAAK;IAC5F,KAAK,EAAE,CAAC,EAAE,cAAc,IAAI,MAAM,IAAI,MAAM,CAAC,aAAa,IAAI,QAAQ,YAAY,MAAM,CAAC,aAAa;EACxG,CAAC;AACH;AACA,SAAS,UAAU,CAAA,EAAG;EACpB,IAAI,CAAC,OAAO,EAAE;IACZ,OAAO,GAAG,WAAW,CAAC,CAAC;EACzB;EACA,OAAO,OAAO;AAChB;;;;;;;;;ACfO,IAAM,oBAAoB,GAAG,SAAvB,oBAAoB,CAAI,MAAM,EAAE,OAAO,EAAK;EACvD,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;EACnD,IAAM,aAAa,GAAG,SAAhB,aAAa,CAAA;IAAA,OAAS,MAAM,CAAC,SAAS,wBAAA,MAAA,CAAwB,MAAM,CAAC,MAAM,CAAC,UAAU,CAAE;EAAA;EAC9F,IAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;EAChD,IAAI,OAAO,EAAE;IACX,IAAM,MAAM,GAAG,OAAO,CAAC,aAAa,KAAA,MAAA,CAAK,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAE,CAAC;IAC5E,IAAI,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;EAC7B;AACF,CAAC;AAAC,OAAA,CAAA,oBAAA,GAAA,oBAAA;AACF,IAAM,MAAM,GAAG,SAAT,MAAM,CAAI,MAAM,EAAE,KAAK,EAAK;EAChC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;EAC3B,IAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,kBAAkB,CAAC;EACtE,IAAI,OAAO,EAAE,OAAO,CAAC,eAAe,CAAC,SAAS,CAAC;AACjD,CAAC;AACM,IAAM,OAAO,GAAG,SAAV,OAAO,CAAG,MAAM,EAAI;EAC/B,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;EACnD,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,mBAAmB;EAC9C,IAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM;EAChC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,IAAI,MAAM,GAAG,CAAC,EAAE;EACnC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC;EAC9B,IAAM,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,aAAa,KAAK,MAAM,GAAG,MAAM,CAAC,oBAAoB,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC;EACrI,IAAM,WAAW,GAAG,MAAM,CAAC,WAAW;EACtC,IAAM,oBAAoB,GAAG,WAAW,GAAG,aAAa,GAAG,CAAC;EAC5D,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;IACxB,KAAK,IAAI,CAAC,GAAG,WAAW,GAAG,MAAM,EAAE,CAAC,IAAI,oBAAoB,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;MAC7E,IAAM,SAAS,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG;MACvC,IAAI,SAAS,KAAK,WAAW,IAAI,SAAS,GAAG,oBAAoB,EAAE,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC;IAC9F;EACF,CAAC,MAAM;IACL,KAAK,IAAI,EAAC,GAAG,IAAI,CAAC,GAAG,CAAC,oBAAoB,GAAG,MAAM,EAAE,CAAC,CAAC,EAAE,EAAC,IAAI,IAAI,CAAC,GAAG,CAAC,oBAAoB,GAAG,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,EAAC,IAAI,CAAC,EAAE;MACtH,IAAI,EAAC,KAAK,WAAW,IAAI,EAAC,GAAG,oBAAoB,EAAE,MAAM,CAAC,MAAM,EAAE,EAAC,CAAC;IACtE;EACF;AACF,CAAC;AAAC,OAAA,CAAA,OAAA,GAAA,OAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCF,IAAA,UAAA,GAAA,OAAA;AAAoD,SAAA,mBAAA,GAAA,WAAA,kBAAA,CAAA,GAAA,KAAA,gBAAA,CAAA,GAAA,KAAA,2BAAA,CAAA,GAAA,KAAA,kBAAA;AAAA,SAAA,mBAAA,cAAA,SAAA;AAAA,SAAA,4BAAA,CAAA,EAAA,MAAA,SAAA,CAAA,qBAAA,CAAA,sBAAA,iBAAA,CAAA,CAAA,EAAA,MAAA,OAAA,CAAA,GAAA,MAAA,CAAA,SAAA,CAAA,QAAA,CAAA,IAAA,CAAA,CAAA,EAAA,KAAA,aAAA,CAAA,iBAAA,CAAA,CAAA,WAAA,EAAA,CAAA,GAAA,CAAA,CAAA,WAAA,CAAA,IAAA,MAAA,CAAA,cAAA,CAAA,mBAAA,KAAA,CAAA,IAAA,CAAA,CAAA,OAAA,CAAA,+DAAA,IAAA,CAAA,CAAA,UAAA,iBAAA,CAAA,CAAA,EAAA,MAAA;AAAA,SAAA,iBAAA,IAAA,eAAA,MAAA,oBAAA,IAAA,CAAA,MAAA,CAAA,QAAA,aAAA,IAAA,+BAAA,KAAA,CAAA,IAAA,CAAA,IAAA;AAAA,SAAA,mBAAA,GAAA,QAAA,KAAA,CAAA,OAAA,CAAA,GAAA,UAAA,iBAAA,CAAA,GAAA;AAAA,SAAA,kBAAA,GAAA,EAAA,GAAA,QAAA,GAAA,YAAA,GAAA,GAAA,GAAA,CAAA,MAAA,EAAA,GAAA,GAAA,GAAA,CAAA,MAAA,WAAA,CAAA,MAAA,IAAA,OAAA,KAAA,CAAA,GAAA,GAAA,CAAA,GAAA,GAAA,EAAA,CAAA,IAAA,IAAA,CAAA,CAAA,IAAA,GAAA,CAAA,CAAA,UAAA,IAAA;AAAA,SAAA,gBAAA,GAAA,EAAA,GAAA,EAAA,KAAA,IAAA,GAAA,GAAA,cAAA,CAAA,GAAA,OAAA,GAAA,IAAA,GAAA,IAAA,MAAA,CAAA,cAAA,CAAA,GAAA,EAAA,GAAA,IAAA,KAAA,EAAA,KAAA,EAAA,UAAA,QAAA,YAAA,QAAA,QAAA,oBAAA,GAAA,CAAA,GAAA,IAAA,KAAA,WAAA,GAAA;AAAA,SAAA,eAAA,GAAA,QAAA,GAAA,GAAA,YAAA,CAAA,GAAA,oBAAA,OAAA,CAAA,GAAA,iBAAA,GAAA,GAAA,MAAA,CAAA,GAAA;AAAA,SAAA,aAAA,KAAA,EAAA,IAAA,QAAA,OAAA,CAAA,KAAA,kBAAA,KAAA,kBAAA,KAAA,MAAA,IAAA,GAAA,KAAA,CAAA,MAAA,CAAA,WAAA,OAAA,IAAA,KAAA,SAAA,QAAA,GAAA,GAAA,IAAA,CAAA,IAAA,CAAA,KAAA,EAAA,IAAA,oBAAA,OAAA,CAAA,GAAA,uBAAA,GAAA,YAAA,SAAA,4DAAA,IAAA,gBAAA,MAAA,GAAA,MAAA,EAAA,KAAA;AAAA,SAAA,QAAA,GAAA,sCAAA,OAAA,wBAAA,MAAA,uBAAA,MAAA,CAAA,QAAA,aAAA,GAAA,kBAAA,GAAA,gBAAA,GAAA,WAAA,GAAA,yBAAA,MAAA,IAAA,GAAA,CAAA,WAAA,KAAA,MAAA,IAAA,GAAA,KAAA,MAAA,CAAA,SAAA,qBAAA,GAAA,KAAA,OAAA,CAAA,GAAA;AACpD,SAAS,WAAW,CAAC,GAAG,EAAE;EACxB,IAAM,MAAM,GAAG,GAAG;EAClB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAA,GAAG,EAAI;IACjC,IAAI;MACF,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI;IACpB,CAAC,CAAC,OAAO,CAAC,EAAE;MACV;IAAA;IAEF,IAAI;MACF,OAAO,MAAM,CAAC,GAAG,CAAC;IACpB,CAAC,CAAC,OAAO,CAAC,EAAE;MACV;IAAA;EAEJ,CAAC,CAAC;AACJ;AACA,SAAS,QAAQ,CAAC,QAAQ,EAAa;EAAA,IAAX,KAAK,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,CAAC;EACnC,OAAO,UAAU,CAAC,QAAQ,EAAE,KAAK,CAAC;AACpC;AACA,SAAS,GAAG,CAAA,EAAG;EACb,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;AACnB;AACA,SAAS,gBAAgB,CAAC,EAAE,EAAE;EAC5B,IAAM,MAAM,GAAG,IAAA,oBAAS,EAAC,CAAC;EAC1B,IAAI,KAAK;EACT,IAAI,MAAM,CAAC,gBAAgB,EAAE;IAC3B,KAAK,GAAG,MAAM,CAAC,gBAAgB,CAAC,EAAE,EAAE,IAAI,CAAC;EAC3C;EACA,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,YAAY,EAAE;IAC7B,KAAK,GAAG,EAAE,CAAC,YAAY;EACzB;EACA,IAAI,CAAC,KAAK,EAAE;IACV,KAAK,GAAG,EAAE,CAAC,KAAK;EAClB;EACA,OAAO,KAAK;AACd;AACA,SAAS,YAAY,CAAC,EAAE,EAAc;EAAA,IAAZ,IAAI,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,GAAG;EAClC,IAAM,MAAM,GAAG,IAAA,oBAAS,EAAC,CAAC;EAC1B,IAAI,MAAM;EACV,IAAI,YAAY;EAChB,IAAI,eAAe;EACnB,IAAM,QAAQ,GAAG,gBAAgB,CAAC,EAAE,EAAE,IAAI,CAAC;EAC3C,IAAI,MAAM,CAAC,eAAe,EAAE;IAC1B,YAAY,GAAG,QAAQ,CAAC,SAAS,IAAI,QAAQ,CAAC,eAAe;IAC7D,IAAI,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;MACtC,YAAY,GAAG,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,UAAA,CAAC;QAAA,OAAI,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;MAAA,EAAC,CAAC,IAAI,CAAC,IAAI,CAAC;IAClF;IACA;IACA;IACA,eAAe,GAAG,IAAI,MAAM,CAAC,eAAe,CAAC,YAAY,KAAK,MAAM,GAAG,EAAE,GAAG,YAAY,CAAC;EAC3F,CAAC,MAAM;IACL,eAAe,GAAG,QAAQ,CAAC,YAAY,IAAI,QAAQ,CAAC,UAAU,IAAI,QAAQ,CAAC,WAAW,IAAI,QAAQ,CAAC,WAAW,IAAI,QAAQ,CAAC,SAAS,IAAI,QAAQ,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,oBAAoB,CAAC;IAC1N,MAAM,GAAG,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC;EAChD;EACA,IAAI,IAAI,KAAK,GAAG,EAAE;IAChB;IACA,IAAI,MAAM,CAAC,eAAe,EAAE,YAAY,GAAG,eAAe,CAAC,GAAG;IAC9D;IAAA,KACK,IAAI,MAAM,CAAC,MAAM,KAAK,EAAE,EAAE,YAAY,GAAG,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACpE;IAAA,KACK,YAAY,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;EAC3C;EACA,IAAI,IAAI,KAAK,GAAG,EAAE;IAChB;IACA,IAAI,MAAM,CAAC,eAAe,EAAE,YAAY,GAAG,eAAe,CAAC,GAAG;IAC9D;IAAA,KACK,IAAI,MAAM,CAAC,MAAM,KAAK,EAAE,EAAE,YAAY,GAAG,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACpE;IAAA,KACK,YAAY,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;EAC3C;EACA,OAAO,YAAY,IAAI,CAAC;AAC1B;AACA,SAAS,QAAQ,CAAC,CAAC,EAAE;EACnB,OAAO,OAAA,CAAO,CAAC,MAAK,QAAQ,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,WAAW,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,QAAQ;AAC5H;AACA,SAAS,MAAM,CAAC,IAAI,EAAE;EACpB;EACA,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,OAAO,MAAM,CAAC,WAAW,KAAK,WAAW,EAAE;IAC9E,OAAO,IAAI,YAAY,WAAW;EACpC;EACA,OAAO,IAAI,KAAK,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,KAAK,EAAE,CAAC;AAC9D;AACA,SAAS,MAAM,CAAA,EAAU;EACvB,IAAM,EAAE,GAAG,MAAM,CAAA,SAAA,CAAA,MAAA,QAAA,SAAA,GAAA,SAAA,GAAQ,CAAC;EAC1B,IAAM,QAAQ,GAAG,CAAC,WAAW,EAAE,aAAa,EAAE,WAAW,CAAC;EAC1D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAA,CAAK,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IACvC,IAAM,UAAU,GAAQ,CAAC,QAAA,SAAA,CAAA,MAAA,IAAD,CAAC,GAAA,SAAA,GAAA,SAAA,CAAD,CAAC,CAAC;IAC1B,IAAI,UAAU,KAAK,SAAS,IAAI,UAAU,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE;MAC1E,IAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,UAAA,GAAG;QAAA,OAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;MAAA,EAAC;MAC1F,KAAK,IAAI,SAAS,GAAG,CAAC,EAAE,GAAG,GAAG,SAAS,CAAC,MAAM,EAAE,SAAS,GAAG,GAAG,EAAE,SAAS,IAAI,CAAC,EAAE;QAC/E,IAAM,OAAO,GAAG,SAAS,CAAC,SAAS,CAAC;QACpC,IAAM,IAAI,GAAG,MAAM,CAAC,wBAAwB,CAAC,UAAU,EAAE,OAAO,CAAC;QACjE,IAAI,IAAI,KAAK,SAAS,IAAI,IAAI,CAAC,UAAU,EAAE;UACzC,IAAI,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,IAAI,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,EAAE;YAC1D,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE;cAClC,EAAE,CAAC,OAAO,CAAC,GAAG,UAAU,CAAC,OAAO,CAAC;YACnC,CAAC,MAAM;cACL,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,UAAU,CAAC,OAAO,CAAC,CAAC;YAC1C;UACF,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,IAAI,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,EAAE;YAClE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAChB,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE;cAClC,EAAE,CAAC,OAAO,CAAC,GAAG,UAAU,CAAC,OAAO,CAAC;YACnC,CAAC,MAAM;cACL,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,UAAU,CAAC,OAAO,CAAC,CAAC;YAC1C;UACF,CAAC,MAAM;YACL,EAAE,CAAC,OAAO,CAAC,GAAG,UAAU,CAAC,OAAO,CAAC;UACnC;QACF;MACF;IACF;EACF;EACA,OAAO,EAAE;AACX;AACA,SAAS,cAAc,CAAC,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE;EAC7C,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC;AACzC;AACA,SAAS,oBAAoB,CAAA,IAAA,EAI1B;EAAA,IAHD,MAAM,GAAA,IAAA,CAAN,MAAM;IACN,cAAc,GAAA,IAAA,CAAd,cAAc;IACd,IAAI,GAAA,IAAA,CAAJ,IAAI;EAEJ,IAAM,MAAM,GAAG,IAAA,oBAAS,EAAC,CAAC;EAC1B,IAAM,aAAa,GAAG,CAAC,MAAM,CAAC,SAAS;EACvC,IAAI,SAAS,GAAG,IAAI;EACpB,IAAI,IAAI;EACR,IAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK;EACpC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,cAAc,GAAG,MAAM;EAC9C,MAAM,CAAC,oBAAoB,CAAC,MAAM,CAAC,cAAc,CAAC;EAClD,IAAM,GAAG,GAAG,cAAc,GAAG,aAAa,GAAG,MAAM,GAAG,MAAM;EAC5D,IAAM,YAAY,GAAG,SAAf,YAAY,CAAI,OAAO,EAAE,MAAM,EAAK;IACxC,OAAO,GAAG,KAAK,MAAM,IAAI,OAAO,IAAI,MAAM,IAAI,GAAG,KAAK,MAAM,IAAI,OAAO,IAAI,MAAM;EACnF,CAAC;EACD,IAAM,OAAO,GAAG,SAAV,OAAO,CAAA,EAAS;IACpB,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;IAC3B,IAAI,SAAS,KAAK,IAAI,EAAE;MACtB,SAAS,GAAG,IAAI;IAClB;IACA,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,SAAS,IAAI,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxE,IAAM,YAAY,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC;IAC3D,IAAI,eAAe,GAAG,aAAa,GAAG,YAAY,IAAI,cAAc,GAAG,aAAa,CAAC;IACrF,IAAI,YAAY,CAAC,eAAe,EAAE,cAAc,CAAC,EAAE;MACjD,eAAe,GAAG,cAAc;IAClC;IACA,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAA,eAAA,KACtB,IAAI,EAAG,eAAe,CACxB,CAAC;IACF,IAAI,YAAY,CAAC,eAAe,EAAE,cAAc,CAAC,EAAE;MACjD,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ;MAC1C,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,cAAc,GAAG,EAAE;MAC1C,UAAU,CAAC,YAAM;QACf,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE;QACpC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAA,eAAA,KACtB,IAAI,EAAG,eAAe,CACxB,CAAC;MACJ,CAAC,CAAC;MACF,MAAM,CAAC,oBAAoB,CAAC,MAAM,CAAC,cAAc,CAAC;MAClD;IACF;IACA,MAAM,CAAC,cAAc,GAAG,MAAM,CAAC,qBAAqB,CAAC,OAAO,CAAC;EAC/D,CAAC;EACD,OAAO,CAAC,CAAC;AACX;AACA,SAAS,mBAAmB,CAAC,OAAO,EAAE;EACpC,OAAO,OAAO,CAAC,aAAa,CAAC,yBAAyB,CAAC,IAAI,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,QAAQ,CAAC,aAAa,CAAC,yBAAyB,CAAC,IAAI,OAAO;AACrJ;AACA,SAAS,sBAAsB,CAAA,EAA+B;EAAA,IAA9B,QAAQ,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,EAAE;EAAA,IAAE,QAAQ,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,EAAE;EAC1D,IAAM,KAAK,GAAG,EAAE;EAChB,QAAQ,CAAC,OAAO,CAAC,UAAA,EAAE,EAAI;IACrB,KAAK,CAAC,IAAI,CAAA,KAAA,CAAV,KAAK,EAAA,kBAAA,CAAS,EAAE,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAC;EAC9C,CAAC,CAAC;EACF,OAAO,KAAK;AACd;AACA,SAAS,eAAe,CAAC,OAAO,EAAiB;EAAA,IAAf,QAAQ,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,EAAE;EAC7C,OAAO,kBAAA,CAAI,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC,UAAA,EAAE;IAAA,OAAI,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC;EAAA,EAAC;AACjE;AACA,SAAS,aAAa,CAAC,GAAG,EAAgB;EAAA,IAAA,aAAA;EAAA,IAAd,OAAO,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,EAAE;EACtC,IAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC;EACtC,CAAA,aAAA,GAAA,EAAE,CAAC,SAAS,EAAC,GAAG,CAAA,KAAA,CAAA,aAAA,EAAA,kBAAA,CAAK,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,OAAO,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;EACnE,OAAO,EAAE;AACX;AACA,SAAS,aAAa,CAAC,EAAE,EAAE;EACzB,IAAM,MAAM,GAAG,IAAA,oBAAS,EAAC,CAAC;EAC1B,IAAM,QAAQ,GAAG,IAAA,sBAAW,EAAC,CAAC;EAC9B,IAAM,GAAG,GAAG,EAAE,CAAC,qBAAqB,CAAC,CAAC;EACtC,IAAM,IAAI,GAAG,QAAQ,CAAC,IAAI;EAC1B,IAAM,SAAS,GAAG,EAAE,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC;EACrD,IAAM,UAAU,GAAG,EAAE,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC;EACxD,IAAM,SAAS,GAAG,EAAE,KAAK,MAAM,GAAG,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC,SAAS;EAC/D,IAAM,UAAU,GAAG,EAAE,KAAK,MAAM,GAAG,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC,UAAU;EACjE,OAAO;IACL,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,SAAS,GAAG,SAAS;IACpC,IAAI,EAAE,GAAG,CAAC,IAAI,GAAG,UAAU,GAAG;EAChC,CAAC;AACH;AACA,SAAS,cAAc,CAAC,EAAE,EAAE,QAAQ,EAAE;EACpC,IAAM,OAAO,GAAG,EAAE;EAClB,OAAO,EAAE,CAAC,sBAAsB,EAAE;IAChC,IAAM,IAAI,GAAG,EAAE,CAAC,sBAAsB,CAAC,CAAC;IACxC,IAAI,QAAQ,EAAE;MACZ,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;IAChD,CAAC,MAAM,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;IACzB,EAAE,GAAG,IAAI;EACX;EACA,OAAO,OAAO;AAChB;AACA,SAAS,cAAc,CAAC,EAAE,EAAE,QAAQ,EAAE;EACpC,IAAM,OAAO,GAAG,EAAE;EAClB,OAAO,EAAE,CAAC,kBAAkB,EAAE;IAC5B,IAAM,IAAI,GAAG,EAAE,CAAC,kBAAkB,CAAC,CAAC;IACpC,IAAI,QAAQ,EAAE;MACZ,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;IAChD,CAAC,MAAM,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;IACzB,EAAE,GAAG,IAAI;EACX;EACA,OAAO,OAAO;AAChB;AACA,SAAS,YAAY,CAAC,EAAE,EAAE,IAAI,EAAE;EAC9B,IAAM,MAAM,GAAG,IAAA,oBAAS,EAAC,CAAC;EAC1B,OAAO,MAAM,CAAC,gBAAgB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC;AACjE;AACA,SAAS,YAAY,CAAC,EAAE,EAAE;EACxB,IAAI,KAAK,GAAG,EAAE;EACd,IAAI,CAAC;EACL,IAAI,KAAK,EAAE;IACT,CAAC,GAAG,CAAC;IACL;IACA,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC,eAAe,MAAM,IAAI,EAAE;MAC/C,IAAI,KAAK,CAAC,QAAQ,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC;IAClC;IACA,OAAO,CAAC;EACV;EACA,OAAO,SAAS;AAClB;AACA,SAAS,cAAc,CAAC,EAAE,EAAE,QAAQ,EAAE;EACpC,IAAM,OAAO,GAAG,EAAE,CAAC,CAAC;EACpB,IAAI,MAAM,GAAG,EAAE,CAAC,aAAa,CAAC,CAAC;EAC/B,OAAO,MAAM,EAAE;IACb,IAAI,QAAQ,EAAE;MACZ,IAAI,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;IACpD,CAAC,MAAM;MACL,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;IACtB;IACA,MAAM,GAAG,MAAM,CAAC,aAAa;EAC/B;EACA,OAAO,OAAO;AAChB;AACA,SAAS,oBAAoB,CAAC,EAAE,EAAE,QAAQ,EAAE;EAC1C,SAAS,YAAY,CAAC,CAAC,EAAE;IACvB,IAAI,CAAC,CAAC,MAAM,KAAK,EAAE,EAAE;IACrB,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;IACpB,EAAE,CAAC,mBAAmB,CAAC,eAAe,EAAE,YAAY,CAAC;EACvD;EACA,IAAI,QAAQ,EAAE;IACZ,EAAE,CAAC,gBAAgB,CAAC,eAAe,EAAE,YAAY,CAAC;EACpD;AACF;AACA,SAAS,gBAAgB,CAAC,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE;EAClD,IAAM,MAAM,GAAG,IAAA,oBAAS,EAAC,CAAC;EAC1B,IAAI,cAAc,EAAE;IAClB,OAAO,EAAE,CAAC,IAAI,KAAK,OAAO,GAAG,aAAa,GAAG,cAAc,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,gBAAgB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,gBAAgB,CAAC,IAAI,KAAK,OAAO,GAAG,cAAc,GAAG,YAAY,CAAC,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,gBAAgB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,gBAAgB,CAAC,IAAI,KAAK,OAAO,GAAG,aAAa,GAAG,eAAe,CAAC,CAAC;EACtS;EACA,OAAO,EAAE,CAAC,WAAW;AACvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5PA,IAAA,KAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,QAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,SAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,UAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,SAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,KAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,KAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,QAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,eAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,SAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,SAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,KAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,gBAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,eAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,YAAA,GAAA,sBAAA,CAAA,OAAA;AAAgF,SAAA,uBAAA,GAAA,WAAA,GAAA,IAAA,GAAA,CAAA,UAAA,GAAA,GAAA,gBAAA,GAAA;;;;;;;;;ACnCzE,IAAM,YAAY,GAAG,SAAf,YAAY,CAAA,EAAS;EAC9B,SAAS,SAAS,CAAA,EAAG;IACjB,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC;EACjE;EACA,SAAS,CAAC,CAAC;EACX,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,YAAW;IACzC,SAAS,CAAC,CAAC;EACf,CAAC,CAAC;AACN,CAAC;AAAA,OAAA,CAAA,YAAA,GAAA,YAAA;;;;;;;;;ACRM,IAAM,cAAc,GAAG,SAAjB,cAAc,CAAA,EAAS;EAChC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;AACxF,CAAC;AAAA,OAAA,CAAA,cAAA,GAAA,cAAA;;;;;;;;;ACFD;AACO,IAAM,kBAAkB,GAAG,SAArB,kBAAkB,CAAA,EAAS;EACpC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,YAAW;IACxB,IAAI,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC;IAChC,IAAG,MAAM,GAAG,CAAC,EAAE;MACX,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC;IACnC,CAAC,MAAM;MACH,CAAC,CAAC,SAAS,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC;IACtC;EACJ,CAAC,CAAC;AACN,CAAC;AAAA,OAAA,CAAA,kBAAA,GAAA,kBAAA;;;;;;;;;ACVM,IAAM,UAAU,GAAG,SAAb,UAAU,CAAA,EAAS;EAC5B,CAAC,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,YAAW;IAChC,IAAI,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC;IACpD,IAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,KAAK,EAAC;MAClC,IAAG,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,EAAC;QAC7B,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;MACnB,CAAC,MACG;QACA,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;MAC9C;IACJ,CAAC,MACG;MACA,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC9C;IACA,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC;EAC9B,CAAC,CAAC;AACN,CAAC;AAAA,OAAA,CAAA,UAAA,GAAA,UAAA;;;;;;;;;AChBM,IAAM,OAAO,GAAG,SAAV,OAAO,CAAA,EAAS;EACzB;EACA,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,YAAW;IACnC,CAAC,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,oBAAoB,CAAC;IAC3C,CAAC,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC;IAChC,CAAC,CAAC,YAAY,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC;EACvC,CAAC,CAAC;EACF;EACA,CAAC,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE;IAC3B,IAAG,CAAC,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAC;MACzK,CAAC,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,oBAAoB,CAAC;MAC3C,CAAC,CAAC,YAAY,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC;MACxC,CAAC,CAAC,YAAY,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC;IACvC;EACJ,CAAC,CAAC;AACN,CAAC;AAAA,OAAA,CAAA,OAAA,GAAA,OAAA;;;;;;;;;ACfM,IAAM,UAAU,GAAG,SAAb,UAAU,CAAA,EAAS;EAC5B,CAAC,CAAC,iBAAiB,CAAC,CAAC,aAAa,CAAC;IAC/B,IAAI,EAAE,QAAQ;IACd,SAAS,EAAE,UAAU;IACrB,MAAM,EAAE,SAAS;IACjB,QAAQ,EAAE,UAAU;IACpB,eAAe,EAAE,KAAK;IACtB,YAAY,EAAE,GAAG;IACjB,SAAS,EAAE,KAAK;IAChB,SAAS,EAAE;MACP,IAAI,EAAE,SAAA,KAAA,EAAM;QACR,CAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;MAClC,CAAC;MACD,KAAK,EAAE,SAAA,MAAA,EAAM;QACT,CAAC,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC;MACrC;IACJ;EACJ,CAAC,CAAC;AACN,CAAC;AAAC,OAAA,CAAA,UAAA,GAAA,UAAA;AACK,IAAM,WAAW,GAAG,SAAd,WAAW,CAAA,EAAS;EAC7B,CAAC,CAAC,kBAAkB,CAAC,CAAC,aAAa,CAAC;IAChC,IAAI,EAAE,QAAQ;IACd,SAAS,EAAE,UAAU;IACrB,MAAM,EAAE,SAAS;IACjB,QAAQ,EAAE,UAAU;IACpB,YAAY,EAAE,GAAG;IACjB,cAAc,EAAE,IAAI;IACpB,eAAe,EAAE,IAAI;IACrB,SAAS,EAAE,KAAK;IAChB,SAAS,EAAE;MACP,IAAI,EAAE,SAAA,KAAA,EAAM;QACR,CAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;MAClC,CAAC;MACD,KAAK,EAAE,SAAA,MAAA,EAAM;QACT,CAAC,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC;MACrC;IACJ;EACJ,CAAC,CAAC;AACN,CAAC;AAAC,OAAA,CAAA,WAAA,GAAA,WAAA;AACK,IAAM,YAAY,GAAG,SAAf,YAAY,CAAI,YAAY,EAAK;EAC1C,CAAC,CAAC,YAAY,CAAC,CAAC,aAAa,CAAC;IAC1B,QAAQ,EAAE,GAAG;IACb,IAAI,EAAE,OAAO;IACb,SAAS,EAAE,UAAU;IACrB,MAAM,EAAE,SAAS;IACjB,QAAQ,EAAE,UAAU;IACpB,OAAO,EAAE;MACL,OAAO,EAAE,IAAI;MACb,KAAK,EAAE,OAAO;MACd,KAAK,EAAE,QAAQ;MACf,QAAQ,EAAE;IACd,CAAC;IACD,KAAK,EAAE;MACH,MAAM,EAAE;IACZ;EACJ,CAAC,CAAC;AACN,CAAC;AAAC,OAAA,CAAA,YAAA,GAAA,YAAA;;;;;;;;;ACxDK,IAAM,QAAQ,GAAG,SAAX,QAAQ,CAAI,QAAQ,EAAE,MAAM,EAAK;EAC1C,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,UAAS,CAAC,EAAC;IACvC,CAAC,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC;MAAE,SAAS,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG;IAAO,CAAC,EAAE,IAAI,CAAC;IAC/G,CAAC,CAAC,cAAc,CAAC,CAAC;EACtB,CAAC,CAAC;AACN,CAAC;AAAA,OAAA,CAAA,QAAA,GAAA,QAAA;;;;;;ACJD,OAAA;AACA,OAAA;AAEA,IAAA,OAAA,GAAA,uBAAA,CAAA,OAAA;AAEA,OAAA;AAEA,IAAA,mBAAA,GAAA,OAAA;AACA,IAAA,aAAA,GAAA,OAAA;AACA,IAAA,eAAA,GAAA,OAAA;AACA,IAAA,WAAA,GAAA,OAAA;AACA,IAAA,cAAA,GAAA,OAAA;AACA,IAAA,SAAA,GAAA,OAAA;AACA,IAAA,QAAA,GAAA,OAAA;AAA4C,SAAA,yBAAA,WAAA,eAAA,OAAA,kCAAA,iBAAA,OAAA,OAAA,QAAA,gBAAA,OAAA,OAAA,YAAA,wBAAA,YAAA,yBAAA,WAAA,WAAA,WAAA,GAAA,gBAAA,GAAA,iBAAA,KAAA,WAAA;AAAA,SAAA,wBAAA,GAAA,EAAA,WAAA,SAAA,WAAA,IAAA,GAAA,IAAA,GAAA,CAAA,UAAA,WAAA,GAAA,QAAA,GAAA,aAAA,OAAA,CAAA,GAAA,yBAAA,GAAA,uCAAA,GAAA,UAAA,KAAA,GAAA,wBAAA,CAAA,WAAA,OAAA,KAAA,IAAA,KAAA,CAAA,GAAA,CAAA,GAAA,YAAA,KAAA,CAAA,GAAA,CAAA,GAAA,SAAA,MAAA,WAAA,qBAAA,GAAA,MAAA,CAAA,cAAA,IAAA,MAAA,CAAA,wBAAA,WAAA,GAAA,IAAA,GAAA,QAAA,GAAA,kBAAA,MAAA,CAAA,SAAA,CAAA,cAAA,CAAA,IAAA,CAAA,GAAA,EAAA,GAAA,SAAA,IAAA,GAAA,qBAAA,GAAA,MAAA,CAAA,wBAAA,CAAA,GAAA,EAAA,GAAA,cAAA,IAAA,KAAA,IAAA,CAAA,GAAA,IAAA,IAAA,CAAA,GAAA,KAAA,MAAA,CAAA,cAAA,CAAA,MAAA,EAAA,GAAA,EAAA,IAAA,YAAA,MAAA,CAAA,GAAA,IAAA,GAAA,CAAA,GAAA,SAAA,MAAA,cAAA,GAAA,MAAA,KAAA,IAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA,MAAA,YAAA,MAAA;AAd5C;;AAGA;;AAEA;;AAEA;;AAQA;;AAGA,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,YAAM;EAChD;EACA,IAAA,0BAAY,EAAC,CAAC;EACd,IAAA,8BAAc,EAAC,CAAC;EAChB;EACA,IAAA,sCAAkB,EAAC,CAAC;EACpB;EACA,IAAA,gBAAO,EAAC,CAAC;EACT;EACA,CAAC,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,YAAW;IAChC,IAAG,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAC;MAC1B,CAAC,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC;MAC7B,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC;IACpD,CAAC,MACG;MACA,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC;MAC1B,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC;IACtD;EACJ,CAAC,CAAC;EACF,CAAC,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE;IAC3B,IAAG,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAC;MACrF,CAAC,CAAC,eAAe,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC;MACxC,CAAC,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC;IAC/D;EACJ,CAAC,CAAC;EACF;EACA,UAAU,CAAC,YAAW;IAClB,CAAC,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,CAAC;EAC/B,CAAC,EAAE,GAAG,CAAC;EACP;EACA,IAAA,sBAAU,EAAC,CAAC;;EAEZ;EACA,SAAS,kBAAkB,CAAA,EAAE;IACzB,IAAG,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,EAAC;MACxB,CAAC,CAAC,kBAAkB,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC;IACnD,CAAC,MACG;MACA,CAAC,CAAC,kBAAkB,CAAC,CAAC,WAAW,CAAC,eAAe,CAAC;IACtD;IACA,IAAG,CAAC,CAAC,kBAAkB,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAC;MAC/C,CAAC,CAAC,gCAAgC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,6BAA6B,CAAC,CAAC;MAC/E,CAAC,CAAC,+BAA+B,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,6BAA6B,CAAC,CAAC;MAC7E,IAAG,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,EAAC;QACxB,CAAC,CAAC,8CAA8C,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,8BAA8B,CAAC,CAAC;MAC9F,CAAC,MACG;QACA,CAAC,CAAC,8BAA8B,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,yCAAyC,CAAC,CAAC;MACzF;IACJ,CAAC,MACG;MACA,CAAC,CAAC,6BAA6B,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,2CAA2C,CAAC,CAAC;MACtF,CAAC,CAAC,gCAAgC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,0CAA0C,CAAC,CAAC;IAC5F;EACJ;EACA,kBAAkB,CAAC,CAAC;EACpB,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,YAAU;IACvB,kBAAkB,CAAC,CAAC;EACxB,CAAC,CAAC;;EAEF;EACA;EACA,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC,OAAO,CAAC,UAAA,cAAc,EAAI;IACpE,IAAI,cAAc,GAAG,IAAI,kBAAM,CAAC,cAAc,EAAE;MAC5C,OAAO,EAAE,CAAC,kBAAU,CAAC;MACrB,IAAI,EAAE,IAAI;MACV,KAAK,EAAE,GAAG;MACV,IAAI,EAAE,IAAI;MACV,aAAa,EAAE,CAAC;MAChB,YAAY,EAAE,EAAE;MAChB,aAAa,EAAE,KAAK;MACpB,UAAU,EAAE;QACR,MAAM,EAAE,cAAc,CAAC,aAAa,CAAC,aAAa,CAAC,aAAa,CAAC,sCAAsC,CAAC;QACxG,MAAM,EAAE,cAAc,CAAC,aAAa,CAAC,aAAa,CAAC,aAAa,CAAC,sCAAsC;MAC3G,CAAC;MACD,WAAW,EAAE;QACT,GAAG,EAAE;UACD,aAAa,EAAE;QACnB,CAAC;QACD,GAAG,EAAE;UACD,aAAa,EAAE;QACnB,CAAC;QACD,GAAG,EAAE;UACD,aAAa,EAAE,CAAC;UAChB,YAAY,EAAE;QAClB,CAAC;QACD,GAAG,EAAE;UACD,aAAa,EAAE;QACnB;MACJ;IACJ,CAAC,CAAC;EACN,CAAC,CAAC;EACF;EACA,QAAQ,CAAC,gBAAgB,CAAC,+BAA+B,CAAC,CAAC,OAAO,CAAC,UAAA,aAAa,EAAI;IAChF,IAAI,aAAa,GAAG,IAAI,kBAAM,CAAC,aAAa,EAAE;MAC1C,OAAO,EAAE,CAAC,kBAAU,EAAE,kBAAU,CAAC;MACjC,IAAI,EAAE,IAAI;MACV,KAAK,EAAE,GAAG;MACV,IAAI,EAAE,IAAI;MACV,aAAa,EAAE,CAAC;MAChB,YAAY,EAAE,EAAE;MAChB,UAAU,EAAE;QACR,SAAS,EAAE,IAAI;QACf,EAAE,EAAE,aAAa,CAAC,aAAa,CAAC,aAAa,CAAC,aAAa,CAAC,oBAAoB;MACpF;IACJ,CAAC,CAAC;EACN,CAAC,CAAC;EACF;EACA,IAAI,aAAa,GAAG,IAAI,kBAAM,CAAC,iBAAiB,EAAE;IAC9C,OAAO,EAAE,CAAC,kBAAU,CAAC;IACrB,IAAI,EAAE,IAAI;IACV,KAAK,EAAE,GAAG;IACV,aAAa,EAAE,KAAK;IACpB,IAAI,EAAE,IAAI;IACV,aAAa,EAAE,CAAC;IAChB,YAAY,EAAE,EAAE;IAChB,UAAU,EAAE;MACR,MAAM,EAAE,oDAAoD;MAC5D,MAAM,EAAE;IACZ,CAAC;IACD,WAAW,EAAE;MACT,IAAI,EAAE;QACF,aAAa,EAAE;MACnB,CAAC;MACD,GAAG,EAAE;QACD,aAAa,EAAE;MACnB;IACJ;EACJ,CAAC,CAAC;EACF;EACA,QAAQ,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,UAAA,WAAW,EAAI;IAC7D,IAAG,WAAW,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,IAAI,EAAC;MACjD,WAAW,CAAC,gBAAgB,CAAC,WAAW,EAAE,YAAW;QACjD,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC;QACjD,SAAS,CAAC,IAAI,CAAC,CAAC;MACpB,CAAC,CAAC;MACF,WAAW,CAAC,gBAAgB,CAAC,YAAY,EAAE,YAAW;QAClD,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC;QACjD,SAAS,CAAC,IAAI,CAAC,CAAC;MACpB,CAAC,CAAC;MACF,WAAW,CAAC,gBAAgB,CAAC,UAAU,EAAE,YAAW;QAChD,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC;QACjD,SAAS,CAAC,KAAK,CAAC,CAAC;QACjB;MACJ,CAAC,CAAC;;MACF,WAAW,CAAC,gBAAgB,CAAC,UAAU,EAAE,YAAW;QAChD,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC;QACjD,SAAS,CAAC,KAAK,CAAC,CAAC;QACjB;MACJ,CAAC,CAAC;IACN;EACJ,CAAC,CAAC;EACF;EACA,CAAC,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,YAAW;IAC9B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;IACnB,IAAI,IAAI,GAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,qCAAqC,CAAC,CAAC,GAAG,CAAC,CAAC;MACjE,KAAK,GAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,qCAAqC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;MACzF,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,qCAAqC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;MAC1F,aAAa,GAAG,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,qCAAqC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;MAClG,KAAK,GAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;MAC5D,GAAG,GAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;MACzC,MAAM,GAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAChD,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC;IAC9D,IAAI,MAAM,GAAG,CAAE,GAAG,GAAG,KAAK,GAAG,MAAM,GAAK,KAAK,GAAG,KAAK,GAAG,IAAI,GAAG,EAAE,GAAG,aAAa,GAAG,CAAC,GAAC,MAAO,IAAE,EAAE;IACjG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;EAC/D,CAAC,CAAC;EACF;EACA,CAAC,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,YAAW;IAChC,IAAG,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAC;MAC1B,CAAC,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC;IAC3E,CAAC,MACG;MACA,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC;IAC1E;EACJ,CAAC,CAAC;;EAEF;EACA,IAAG,CAAC,CAAC,eAAe,CAAC,CAAC,MAAM,GAAG,CAAC,EAAC;IAC7B,IAAI,aAAa,GAAG,IAAI,kBAAM,CAAC,iBAAiB,EAAE;MAC9C,OAAO,EAAE,CAAC,cAAM,EAAE,gBAAQ,CAAC;MAC3B,KAAK,EAAE,GAAG;MACV,YAAY,EAAE,EAAE;MAChB,aAAa,EAAE,CAAC;MAChB,SAAS,EAAE,UAAU;MACrB,QAAQ,EAAE,IAAI;MACd,mBAAmB,EAAE;IACzB,CAAC,CAAC;IACF,IAAI,WAAW,GAAG,IAAI,kBAAM,CAAC,kBAAkB,EAAE;MAC7C,OAAO,EAAE,CAAC,cAAM,EAAE,gBAAQ,CAAC;MAC3B,KAAK,EAAE,GAAG;MACV,YAAY,EAAE,EAAE;MAChB,MAAM,EAAE;QACJ,MAAM,EAAE;MACZ;IACJ,CAAC,CAAC;EACN;;EAEA;EACA;EACA,IAAA,kBAAQ,EAAC,iBAAiB,EAAE,CAAC,EAAE,CAAC;EAChC;EACA,IAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,EAAC;IAChC,IAAI,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC;MAC5C,QAAQ,GAAG,QAAQ,CAAC,SAAS,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;MACxD,MAAM,GAAG,QAAQ,CAAC,SAAS,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;IACxD,UAAU,CAAC,MAAM,CAAC,SAAS,EAAE;MACzB,KAAK,EAAE,QAAQ;MACf,OAAO,EAAE,OAAO;MAChB,IAAI,EAAE,GAAG;MACT,QAAQ,EAAE,IAAI;MACd,MAAM,EAAE;QACJ,IAAI,EAAE,SAAA,KAAU,KAAK,EAAE;UACnB,OAAO,QAAQ,CAAC,KAAK,CAAC;QAC1B,CAAC;QACD,EAAE,EAAE,SAAA,GAAU,KAAK,EAAE;UACjB,OAAO,QAAQ,CAAC,KAAK,CAAC;QAC1B;MACJ,CAAC;MACD,KAAK,EAAE;QACH,KAAK,EAAE,QAAQ;QACf,KAAK,EAAE;MACX;IACJ,CAAC,CAAC;IACF,SAAS,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,EAAE,UAAU,MAAM,EAAE,MAAM,EAAC;MAC3D,CAAC,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC;IACrC,CAAC,CAAC;EACF;EACA;EACA,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE,YAAW;IACpC,IAAI,KAAK,GAAG,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;MAC9C,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;MAC1C,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;MAChD,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;MACpE,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;MAC9C,GAAG,GAAG,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IACpC,IAAI,MAAM,GAAI,GAAG,IAAI,KAAK,GAAG,KAAK,CAAE,GAAI,MAAM,GAAG,IAAI,GAAI,KAAK,GAAG,OAAQ;IACzE,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;EAC7E,CAAC,CAAC;;EAEF;EACA,IAAA,yBAAU,EAAC,CAAC;EACZ,IAAA,0BAAW,EAAC,CAAC;AACjB,CAAC,CAAC","file":"common.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/* jQuery Form Styler v2.0.2 | (c) Dimox | https://github.com/Dimox/jQueryFormStyler */\r\n!function(e){\"function\"==typeof define&&define.amd?define([\"jquery\"],e):\"object\"==typeof exports?module.exports=e($||require(\"jquery\")):e(jQuery)}(function(e){\"use strict\";function t(t,s){this.element=t,this.options=e.extend({},l,s);var i=this.options.locale;void 0!==this.options.locales[i]&&e.extend(this.options,this.options.locales[i]),this.init()}function s(t){if(!e(t.target).parents().hasClass(\"jq-selectbox\")&&\"OPTION\"!=t.target.nodeName&&e(\"div.jq-selectbox.opened\").length){var s=e(\"div.jq-selectbox.opened\"),l=e(\"div.jq-selectbox__search input\",s),o=e(\"div.jq-selectbox__dropdown\",s);s.find(\"select\").data(\"_\"+i).options.onSelectClosed.call(s),l.length&&l.val(\"\").keyup(),o.hide().find(\"li.sel\").addClass(\"selected\"),s.removeClass(\"focused opened dropup dropdown\")}}var i=\"styler\",l={idSuffix:\"-styler\",filePlaceholder:\"Файл не выбран\",fileBrowse:\"Обзор...\",fileNumber:\"Выбрано файлов: %s\",selectPlaceholder:\"Выберите...\",selectSearch:!1,selectSearchLimit:10,selectSearchNotFound:\"Совпадений не найдено\",selectSearchPlaceholder:\"Поиск...\",selectVisibleOptions:0,selectSmartPositioning:!0,locale:\"ru\",locales:{en:{filePlaceholder:\"No file selected\",fileBrowse:\"Browse...\",fileNumber:\"Selected files: %s\",selectPlaceholder:\"Select...\",selectSearchNotFound:\"No matches found\",selectSearchPlaceholder:\"Search...\"}},onSelectOpened:function(){},onSelectClosed:function(){},onFormStyled:function(){}};t.prototype={init:function(){function t(){void 0!==i.attr(\"id\")&&\"\"!==i.attr(\"id\")&&(this.id=i.attr(\"id\")+l.idSuffix),this.title=i.attr(\"title\"),this.classes=i.attr(\"class\"),this.data=i.data()}var i=e(this.element),l=this.options,o=!(!navigator.userAgent.match(/(iPad|iPhone|iPod)/i)||navigator.userAgent.match(/(Windows\\sPhone)/i)),a=!(!navigator.userAgent.match(/Android/i)||navigator.userAgent.match(/(Windows\\sPhone)/i));if(i.is(\":checkbox\")){var d=function(){var s=new t,l=e('<div class=\"jq-checkbox\"><div class=\"jq-checkbox__div\"></div></div>').attr({id:s.id,title:s.title}).addClass(s.classes).data(s.data);i.after(l).prependTo(l),i.is(\":checked\")&&l.addClass(\"checked\"),i.is(\":disabled\")&&l.addClass(\"disabled\"),l.click(function(e){e.preventDefault(),i.triggerHandler(\"click\"),l.is(\".disabled\")||(i.is(\":checked\")?(i.prop(\"checked\",!1),l.removeClass(\"checked\")):(i.prop(\"checked\",!0),l.addClass(\"checked\")),i.focus().change())}),i.closest(\"label\").add('label[for=\"'+i.attr(\"id\")+'\"]').on(\"click.styler\",function(t){e(t.target).is(\"a\")||e(t.target).closest(l).length||(l.triggerHandler(\"click\"),t.preventDefault())}),i.on(\"change.styler\",function(){i.is(\":checked\")?l.addClass(\"checked\"):l.removeClass(\"checked\")}).on(\"keydown.styler\",function(e){32==e.which&&l.click()}).on(\"focus.styler\",function(){l.is(\".disabled\")||l.addClass(\"focused\")}).on(\"blur.styler\",function(){l.removeClass(\"focused\")})};d(),i.on(\"refresh\",function(){i.closest(\"label\").add('label[for=\"'+i.attr(\"id\")+'\"]').off(\".styler\"),i.off(\".styler\").parent().before(i).remove(),d()})}else if(i.is(\":radio\")){var r=function(){var s=new t,l=e('<div class=\"jq-radio\"><div class=\"jq-radio__div\"></div></div>').attr({id:s.id,title:s.title}).addClass(s.classes).data(s.data);i.after(l).prependTo(l),i.is(\":checked\")&&l.addClass(\"checked\"),i.is(\":disabled\")&&l.addClass(\"disabled\"),e.fn.commonParents=function(){var t=this;return t.first().parents().filter(function(){return e(this).find(t).length===t.length})},e.fn.commonParent=function(){return e(this).commonParents().first()},l.click(function(t){if(t.preventDefault(),i.triggerHandler(\"click\"),!l.is(\".disabled\")){var s=e('input[name=\"'+i.attr(\"name\")+'\"]');s.commonParent().find(s).prop(\"checked\",!1).parent().removeClass(\"checked\"),i.prop(\"checked\",!0).parent().addClass(\"checked\"),i.focus().change()}}),i.closest(\"label\").add('label[for=\"'+i.attr(\"id\")+'\"]').on(\"click.styler\",function(t){e(t.target).is(\"a\")||e(t.target).closest(l).length||(l.triggerHandler(\"click\"),t.preventDefault())}),i.on(\"change.styler\",function(){i.parent().addClass(\"checked\")}).on(\"focus.styler\",function(){l.is(\".disabled\")||l.addClass(\"focused\")}).on(\"blur.styler\",function(){l.removeClass(\"focused\")})};r(),i.on(\"refresh\",function(){i.closest(\"label\").add('label[for=\"'+i.attr(\"id\")+'\"]').off(\".styler\"),i.off(\".styler\").parent().before(i).remove(),r()})}else if(i.is(\":file\")){var c=function(){var s=new t,o=i.data(\"placeholder\");void 0===o&&(o=l.filePlaceholder);var a=i.data(\"browse\");void 0!==a&&\"\"!==a||(a=l.fileBrowse);var d=e('<div class=\"jq-file\"><div class=\"jq-file__name\">'+o+'</div><div class=\"jq-file__browse\">'+a+\"</div></div>\").attr({id:s.id,title:s.title}).addClass(s.classes).data(s.data);i.after(d).appendTo(d),i.is(\":disabled\")&&d.addClass(\"disabled\");var r=i.val(),c=e(\"div.jq-file__name\",d);r&&c.text(r.replace(/.+[\\\\\\/]/,\"\")),i.on(\"change.styler\",function(){var e=i.val();if(i.is(\"[multiple]\")){e=\"\";var t=i[0].files.length;if(t>0){var s=i.data(\"number\");void 0===s&&(s=l.fileNumber),s=s.replace(\"%s\",t),e=s}}c.text(e.replace(/.+[\\\\\\/]/,\"\")),\"\"===e?(c.text(o),d.removeClass(\"changed\")):d.addClass(\"changed\")}).on(\"focus.styler\",function(){d.addClass(\"focused\")}).on(\"blur.styler\",function(){d.removeClass(\"focused\")}).on(\"click.styler\",function(){d.removeClass(\"focused\")})};c(),i.on(\"refresh\",function(){i.off(\".styler\").parent().before(i).remove(),c()})}else if(i.is('input[type=\"number\"]')){var n=function(){var s=new t,l=e('<div class=\"jq-number\"><div class=\"jq-number__spin minus\"></div><div class=\"jq-number__spin plus\"></div></div>').attr({id:s.id,title:s.title}).addClass(s.classes).data(s.data);i.after(l).prependTo(l).wrap('<div class=\"jq-number__field\"></div>'),i.is(\":disabled\")&&l.addClass(\"disabled\");var o,a,d,r=null,c=null;void 0!==i.attr(\"min\")&&(o=i.attr(\"min\")),void 0!==i.attr(\"max\")&&(a=i.attr(\"max\")),d=void 0!==i.attr(\"step\")&&e.isNumeric(i.attr(\"step\"))?Number(i.attr(\"step\")):Number(1);var n=function(t){var s,l=i.val();e.isNumeric(l)||(l=0,i.val(\"0\")),t.is(\".minus\")?s=Number(l)-d:t.is(\".plus\")&&(s=Number(l)+d);var r=(d.toString().split(\".\")[1]||[]).length;if(r>0){for(var c=\"1\";c.length<=r;)c+=\"0\";s=Math.round(s*c)/c}e.isNumeric(o)&&e.isNumeric(a)?s>=o&&s<=a&&i.val(s):e.isNumeric(o)&&!e.isNumeric(a)?s>=o&&i.val(s):!e.isNumeric(o)&&e.isNumeric(a)?s<=a&&i.val(s):i.val(s)};l.is(\".disabled\")||(l.on(\"mousedown\",\"div.jq-number__spin\",function(){var t=e(this);n(t),r=setTimeout(function(){c=setInterval(function(){n(t)},40)},350)}).on(\"mouseup mouseout\",\"div.jq-number__spin\",function(){clearTimeout(r),clearInterval(c)}).on(\"mouseup\",\"div.jq-number__spin\",function(){i.change().trigger(\"input\")}),i.on(\"focus.styler\",function(){l.addClass(\"focused\")}).on(\"blur.styler\",function(){l.removeClass(\"focused\")}))};n(),i.on(\"refresh\",function(){i.off(\".styler\").closest(\".jq-number\").before(i).remove(),n()})}else if(i.is(\"select\")){var f=function(){function d(e){var t=e.prop(\"scrollHeight\")-e.outerHeight(),s=null,i=null;e.off(\"mousewheel DOMMouseScroll\").on(\"mousewheel DOMMouseScroll\",function(l){s=l.originalEvent.detail<0||l.originalEvent.wheelDelta>0?1:-1,((i=e.scrollTop())>=t&&s<0||i<=0&&s>0)&&(l.stopPropagation(),l.preventDefault())})}function r(){for(var e=0;e<c.length;e++){var t=c.eq(e),s=\"\",i=\"\",o=\"\",a=\"\",d=\"\",r=\"\",f=\"\",h=\"\",u=\"\";t.prop(\"selected\")&&(i=\"selected sel\"),t.is(\":disabled\")&&(i=\"disabled\"),t.is(\":selected:disabled\")&&(i=\"selected sel disabled\"),void 0!==t.attr(\"id\")&&\"\"!==t.attr(\"id\")&&(a=' id=\"'+t.attr(\"id\")+l.idSuffix+'\"'),void 0!==t.attr(\"title\")&&\"\"!==c.attr(\"title\")&&(d=' title=\"'+t.attr(\"title\")+'\"'),void 0!==t.attr(\"class\")&&(f=\" \"+t.attr(\"class\"),u=' data-jqfs-class=\"'+t.attr(\"class\")+'\"');var p=t.data();for(var v in p)\"\"!==p[v]&&(r+=\" data-\"+v+'=\"'+p[v]+'\"');i+f!==\"\"&&(o=' class=\"'+i+f+'\"'),s=\"<li\"+u+r+o+d+a+\">\"+t.html()+\"</li>\",t.parent().is(\"optgroup\")&&(void 0!==t.parent().attr(\"class\")&&(h=\" \"+t.parent().attr(\"class\")),s=\"<li\"+u+r+' class=\"'+i+f+\" option\"+h+'\"'+d+a+\">\"+t.html()+\"</li>\",t.is(\":first-child\")&&(s='<li class=\"optgroup'+h+'\">'+t.parent().attr(\"label\")+\"</li>\"+s)),n+=s}}var c=e(\"option\",i),n=\"\";if(i.is(\"[multiple]\")){if(a||o)return;!function(){var s=new t,l=e('<div class=\"jq-select-multiple jqselect\"></div>').attr({id:s.id,title:s.title}).addClass(s.classes).data(s.data);i.after(l),r(),l.append(\"<ul>\"+n+\"</ul>\");var o=e(\"ul\",l),a=e(\"li\",l),f=i.attr(\"size\"),h=o.outerHeight(),u=a.outerHeight();void 0!==f&&f>0?o.css({height:u*f}):o.css({height:4*u}),h>l.height()&&(o.css(\"overflowY\",\"scroll\"),d(o),a.filter(\".selected\").length&&o.scrollTop(o.scrollTop()+a.filter(\".selected\").position().top)),i.prependTo(l),i.is(\":disabled\")?(l.addClass(\"disabled\"),c.each(function(){e(this).is(\":selected\")&&a.eq(e(this).index()).addClass(\"selected\")})):(a.filter(\":not(.disabled):not(.optgroup)\").click(function(t){i.focus();var s=e(this);if(t.ctrlKey||t.metaKey||s.addClass(\"selected\"),t.shiftKey||s.addClass(\"first\"),t.ctrlKey||t.metaKey||t.shiftKey||s.siblings().removeClass(\"selected first\"),(t.ctrlKey||t.metaKey)&&(s.is(\".selected\")?s.removeClass(\"selected first\"):s.addClass(\"selected first\"),s.siblings().removeClass(\"first\")),t.shiftKey){var l=!1,o=!1;s.siblings().removeClass(\"selected\").siblings(\".first\").addClass(\"selected\"),s.prevAll().each(function(){e(this).is(\".first\")&&(l=!0)}),s.nextAll().each(function(){e(this).is(\".first\")&&(o=!0)}),l&&s.prevAll().each(function(){if(e(this).is(\".selected\"))return!1;e(this).not(\".disabled, .optgroup\").addClass(\"selected\")}),o&&s.nextAll().each(function(){if(e(this).is(\".selected\"))return!1;e(this).not(\".disabled, .optgroup\").addClass(\"selected\")}),1==a.filter(\".selected\").length&&s.addClass(\"first\")}c.prop(\"selected\",!1),a.filter(\".selected\").each(function(){var t=e(this),s=t.index();t.is(\".option\")&&(s-=t.prevAll(\".optgroup\").length),c.eq(s).prop(\"selected\",!0)}),i.change()}),c.each(function(t){e(this).data(\"optionIndex\",t)}),i.on(\"change.styler\",function(){a.removeClass(\"selected\");var t=[];c.filter(\":selected\").each(function(){t.push(e(this).data(\"optionIndex\"))}),a.not(\".optgroup\").filter(function(s){return e.inArray(s,t)>-1}).addClass(\"selected\")}).on(\"focus.styler\",function(){l.addClass(\"focused\")}).on(\"blur.styler\",function(){l.removeClass(\"focused\")}),h>l.height()&&i.on(\"keydown.styler\",function(e){38!=e.which&&37!=e.which&&33!=e.which||o.scrollTop(o.scrollTop()+a.filter(\".selected\").position().top-u),40!=e.which&&39!=e.which&&34!=e.which||o.scrollTop(o.scrollTop()+a.filter(\".selected:last\").position().top-o.innerHeight()+2*u)}))}()}else!function(){var a=new t,f=\"\",h=i.data(\"placeholder\"),u=i.data(\"search\"),p=i.data(\"search-limit\"),v=i.data(\"search-not-found\"),m=i.data(\"search-placeholder\"),g=i.data(\"smart-positioning\");void 0===h&&(h=l.selectPlaceholder),void 0!==u&&\"\"!==u||(u=l.selectSearch),void 0!==p&&\"\"!==p||(p=l.selectSearchLimit),void 0!==v&&\"\"!==v||(v=l.selectSearchNotFound),void 0===m&&(m=l.selectSearchPlaceholder),void 0!==g&&\"\"!==g||(g=l.selectSmartPositioning);var b=e('<div class=\"jq-selectbox jqselect\"><div class=\"jq-selectbox__select\"><div class=\"jq-selectbox__select-text\"></div><div class=\"jq-selectbox__trigger\"><div class=\"jq-selectbox__trigger-arrow\"></div></div></div></div>').attr({id:a.id,title:a.title}).addClass(a.classes).data(a.data);i.after(b).prependTo(b);var C=b.css(\"z-index\");C=C>0?C:1;var x=e(\"div.jq-selectbox__select\",b),y=e(\"div.jq-selectbox__select-text\",b),w=c.filter(\":selected\");r(),u&&(f='<div class=\"jq-selectbox__search\"><input type=\"search\" autocomplete=\"off\" placeholder=\"'+m+'\"></div><div class=\"jq-selectbox__not-found\">'+v+\"</div>\");var q=e('<div class=\"jq-selectbox__dropdown\">'+f+\"<ul>\"+n+\"</ul></div>\");b.append(q);var _=e(\"ul\",q),j=e(\"li\",q),k=e(\"input\",q),S=e(\"div.jq-selectbox__not-found\",q).hide();j.length<p&&k.parent().hide(),\"\"===c.first().text()&&c.first().is(\":selected\")&&!1!==h?y.text(h).addClass(\"placeholder\"):y.text(w.text());var T=0,N=0;if(j.css({display:\"inline-block\"}),j.each(function(){var t=e(this);t.innerWidth()>T&&(T=t.innerWidth(),N=t.width())}),j.css({display:\"\"}),y.is(\".placeholder\")&&y.width()>T)y.width(y.width());else{var P=b.clone().appendTo(\"body\").width(\"auto\"),H=P.outerWidth();P.remove(),H==b.outerWidth()&&y.width(N)}T>b.width()&&q.width(T),\"\"===c.first().text()&&\"\"!==i.data(\"placeholder\")&&j.first().hide();var A=b.outerHeight(!0),D=k.parent().outerHeight(!0)||0,I=_.css(\"max-height\"),K=j.filter(\".selected\");if(K.length<1&&j.first().addClass(\"selected sel\"),void 0===j.data(\"li-height\")){var O=j.outerHeight();!1!==h&&(O=j.eq(1).outerHeight()),j.data(\"li-height\",O)}var M=q.css(\"top\");if(\"auto\"==q.css(\"left\")&&q.css({left:0}),\"auto\"==q.css(\"top\")&&(q.css({top:A}),M=A),q.hide(),K.length&&(c.first().text()!=w.text()&&b.addClass(\"changed\"),b.data(\"jqfs-class\",K.data(\"jqfs-class\")),b.addClass(K.data(\"jqfs-class\"))),i.is(\":disabled\"))return b.addClass(\"disabled\"),!1;x.click(function(){if(e(\"div.jq-selectbox\").filter(\".opened\").length&&l.onSelectClosed.call(e(\"div.jq-selectbox\").filter(\".opened\")),i.focus(),!o){var t=e(window),s=j.data(\"li-height\"),a=b.offset().top,r=t.height()-A-(a-t.scrollTop()),n=i.data(\"visible-options\");void 0!==n&&\"\"!==n||(n=l.selectVisibleOptions);var f=5*s,h=s*n;n>0&&n<6&&(f=h),0===n&&(h=\"auto\");var u=function(){q.height(\"auto\").css({bottom:\"auto\",top:M});var e=function(){_.css(\"max-height\",Math.floor((r-20-D)/s)*s)};e(),_.css(\"max-height\",h),\"none\"!=I&&_.css(\"max-height\",I),r<q.outerHeight()+20&&e()};!0===g||1===g?r>f+D+20?(u(),b.removeClass(\"dropup\").addClass(\"dropdown\")):(function(){q.height(\"auto\").css({top:\"auto\",bottom:M});var e=function(){_.css(\"max-height\",Math.floor((a-t.scrollTop()-20-D)/s)*s)};e(),_.css(\"max-height\",h),\"none\"!=I&&_.css(\"max-height\",I),a-t.scrollTop()-20<q.outerHeight()+20&&e()}(),b.removeClass(\"dropdown\").addClass(\"dropup\")):!1===g||0===g?r>f+D+20&&(u(),b.removeClass(\"dropup\").addClass(\"dropdown\")):(q.height(\"auto\").css({bottom:\"auto\",top:M}),_.css(\"max-height\",h),\"none\"!=I&&_.css(\"max-height\",I)),b.offset().left+q.outerWidth()>t.width()&&q.css({left:\"auto\",right:0}),e(\"div.jqselect\").css({zIndex:C-1}).removeClass(\"opened\"),b.css({zIndex:C}),q.is(\":hidden\")?(e(\"div.jq-selectbox__dropdown:visible\").hide(),q.show(),b.addClass(\"opened focused\"),l.onSelectOpened.call(b)):(q.hide(),b.removeClass(\"opened dropup dropdown\"),e(\"div.jq-selectbox\").filter(\".opened\").length&&l.onSelectClosed.call(b)),k.length&&(k.val(\"\").keyup(),S.hide(),k.keyup(function(){var t=e(this).val();j.each(function(){e(this).html().match(new RegExp(\".*?\"+t+\".*?\",\"i\"))?e(this).show():e(this).hide()}),\"\"===c.first().text()&&\"\"!==i.data(\"placeholder\")&&j.first().hide(),j.filter(\":visible\").length<1?S.show():S.hide()})),j.filter(\".selected\").length&&(\"\"===i.val()?_.scrollTop(0):(_.innerHeight()/s%2!=0&&(s/=2),_.scrollTop(_.scrollTop()+j.filter(\".selected\").position().top-_.innerHeight()/2+s))),d(_)}}),j.hover(function(){e(this).siblings().removeClass(\"selected\")});var W=j.filter(\".selected\").text();j.filter(\":not(.disabled):not(.optgroup)\").click(function(){i.focus();var t=e(this),s=t.text();if(!t.is(\".selected\")){var o=t.index();o-=t.prevAll(\".optgroup\").length,t.addClass(\"selected sel\").siblings().removeClass(\"selected sel\"),c.prop(\"selected\",!1).eq(o).prop(\"selected\",!0),W=s,y.text(s),b.data(\"jqfs-class\")&&b.removeClass(b.data(\"jqfs-class\")),b.data(\"jqfs-class\",t.data(\"jqfs-class\")),b.addClass(t.data(\"jqfs-class\")),i.change()}q.hide(),b.removeClass(\"opened dropup dropdown\"),l.onSelectClosed.call(b)}),q.mouseout(function(){e(\"li.sel\",q).addClass(\"selected\")}),i.on(\"change.styler\",function(){y.text(c.filter(\":selected\").text()).removeClass(\"placeholder\"),j.removeClass(\"selected sel\").not(\".optgroup\").eq(i[0].selectedIndex).addClass(\"selected sel\"),c.first().text()!=j.filter(\".selected\").text()?b.addClass(\"changed\"):b.removeClass(\"changed\")}).on(\"focus.styler\",function(){b.addClass(\"focused\"),e(\"div.jqselect\").not(\".focused\").removeClass(\"opened dropup dropdown\").find(\"div.jq-selectbox__dropdown\").hide()}).on(\"blur.styler\",function(){b.removeClass(\"focused\")}).on(\"keydown.styler keyup.styler\",function(e){var t=j.data(\"li-height\");\"\"===i.val()?y.text(h).addClass(\"placeholder\"):y.text(c.filter(\":selected\").text()),j.removeClass(\"selected sel\").not(\".optgroup\").eq(i[0].selectedIndex).addClass(\"selected sel\"),38!=e.which&&37!=e.which&&33!=e.which&&36!=e.which||(\"\"===i.val()?_.scrollTop(0):_.scrollTop(_.scrollTop()+j.filter(\".selected\").position().top)),40!=e.which&&39!=e.which&&34!=e.which&&35!=e.which||_.scrollTop(_.scrollTop()+j.filter(\".selected\").position().top-_.innerHeight()+t),13==e.which&&(e.preventDefault(),q.hide(),b.removeClass(\"opened dropup dropdown\"),l.onSelectClosed.call(b))}).on(\"keydown.styler\",function(e){32==e.which&&(e.preventDefault(),x.click())}),s.registered||(e(document).on(\"click\",s),s.registered=!0)}()};f(),i.on(\"refresh\",function(){i.off(\".styler\").parent().before(i).remove(),f()})}else i.is(\":reset\")&&i.on(\"click\",function(){setTimeout(function(){i.closest(\"form\").find(\"input, select\").trigger(\"refresh\")},1)})},destroy:function(){var t=e(this.element);t.is(\":checkbox\")||t.is(\":radio\")?(t.removeData(\"_\"+i).off(\".styler refresh\").removeAttr(\"style\").parent().before(t).remove(),t.closest(\"label\").add('label[for=\"'+t.attr(\"id\")+'\"]').off(\".styler\")):t.is('input[type=\"number\"]')?t.removeData(\"_\"+i).off(\".styler refresh\").closest(\".jq-number\").before(t).remove():(t.is(\":file\")||t.is(\"select\"))&&t.removeData(\"_\"+i).off(\".styler refresh\").removeAttr(\"style\").parent().before(t).remove()}},e.fn[i]=function(s){var l=arguments;if(void 0===s||\"object\"==typeof s)return this.each(function(){e.data(this,\"_\"+i)||e.data(this,\"_\"+i,new t(this,s))}).promise().done(function(){var t=e(this[0]).data(\"_\"+i);t&&t.options.onFormStyled.call()}),this;if(\"string\"==typeof s&&\"_\"!==s[0]&&\"init\"!==s){var o;return this.each(function(){var a=e.data(this,\"_\"+i);a instanceof t&&\"function\"==typeof a[s]&&(o=a[s].apply(a,Array.prototype.slice.call(l,1)))}),void 0!==o?o:this}},s.registered=!1});","/*!\n * jQuery JavaScript Library v1.12.4\n * http://jquery.com/\n *\n * Includes Sizzle.js\n * http://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2016-05-20T17:17Z\n */\n\n(function( global, factory ) {\n\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n}(typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Support: Firefox 18+\n// Can't be in strict mode, several libs including ASP.NET trace\n// the stack via arguments.caller.callee and Firefox dies if\n// you try to trace through \"use strict\" call chains. (#13335)\n//\"use strict\";\nvar deletedIds = [];\n\nvar document = window.document;\n\nvar slice = deletedIds.slice;\n\nvar concat = deletedIds.concat;\n\nvar push = deletedIds.push;\n\nvar indexOf = deletedIds.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar support = {};\n\n\n\nvar\n\tversion = \"1.12.4\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t},\n\n\t// Support: Android<4.1, IE<9\n\t// Make sure we trim BOM and NBSP\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n\n\t// Matches dashed string for camelizing\n\trmsPrefix = /^-ms-/,\n\trdashAlpha = /-([\\da-z])/gi,\n\n\t// Used by jQuery.camelCase as callback to replace()\n\tfcamelCase = function( all, letter ) {\n\t\treturn letter.toUpperCase();\n\t};\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// Start with an empty selector\n\tselector: \"\",\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\t\treturn num != null ?\n\n\t\t\t// Return just the one element from the set\n\t\t\t( num < 0 ? this[ num + this.length ] : this[ num ] ) :\n\n\t\t\t// Return all the elements in a clean array\n\t\t\tslice.call( this );\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\t\tret.context = this.context;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: deletedIds.sort,\n\tsplice: deletedIds.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar src, copyIsArray, copy, name, options, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !jQuery.isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = jQuery.isArray( copy ) ) ) ) {\n\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && jQuery.isArray( src ) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject( src ) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\t// See test/unit/core.js for details concerning isFunction.\n\t// Since version 1.3, DOM methods and functions like alert\n\t// aren't supported. They return false on IE (#2968).\n\tisFunction: function( obj ) {\n\t\treturn jQuery.type( obj ) === \"function\";\n\t},\n\n\tisArray: Array.isArray || function( obj ) {\n\t\treturn jQuery.type( obj ) === \"array\";\n\t},\n\n\tisWindow: function( obj ) {\n\t\t/* jshint eqeqeq: false */\n\t\treturn obj != null && obj == obj.window;\n\t},\n\n\tisNumeric: function( obj ) {\n\n\t\t// parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t// adding 1 corrects loss of precision from parseFloat (#15100)\n\t\tvar realStringObj = obj && obj.toString();\n\t\treturn !jQuery.isArray( obj ) && ( realStringObj - parseFloat( realStringObj ) + 1 ) >= 0;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tvar name;\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\tisPlainObject: function( obj ) {\n\t\tvar key;\n\n\t\t// Must be an Object.\n\t\t// Because of IE, we also have to check the presence of the constructor property.\n\t\t// Make sure that DOM nodes and window objects don't pass through, as well\n\t\tif ( !obj || jQuery.type( obj ) !== \"object\" || obj.nodeType || jQuery.isWindow( obj ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\n\t\t\t// Not own constructor property must be Object\n\t\t\tif ( obj.constructor &&\n\t\t\t\t!hasOwn.call( obj, \"constructor\" ) &&\n\t\t\t\t!hasOwn.call( obj.constructor.prototype, \"isPrototypeOf\" ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} catch ( e ) {\n\n\t\t\t// IE8,9 Will throw exceptions on certain host objects #9897\n\t\t\treturn false;\n\t\t}\n\n\t\t// Support: IE<9\n\t\t// Handle iteration over inherited properties before own properties.\n\t\tif ( !support.ownFirst ) {\n\t\t\tfor ( key in obj ) {\n\t\t\t\treturn hasOwn.call( obj, key );\n\t\t\t}\n\t\t}\n\n\t\t// Own properties are enumerated firstly, so to speed up,\n\t\t// if last one is own, then all properties are own.\n\t\tfor ( key in obj ) {}\n\n\t\treturn key === undefined || hasOwn.call( obj, key );\n\t},\n\n\ttype: function( obj ) {\n\t\tif ( obj == null ) {\n\t\t\treturn obj + \"\";\n\t\t}\n\t\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\t\ttypeof obj;\n\t},\n\n\t// Workarounds based on findings by Jim Driscoll\n\t// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context\n\tglobalEval: function( data ) {\n\t\tif ( data && jQuery.trim( data ) ) {\n\n\t\t\t// We use execScript on Internet Explorer\n\t\t\t// We use an anonymous function so that context is window\n\t\t\t// rather than jQuery in Firefox\n\t\t\t( window.execScript || function( data ) {\n\t\t\t\twindow[ \"eval\" ].call( window, data ); // jscs:ignore requireDotNotation\n\t\t\t} )( data );\n\t\t}\n\t},\n\n\t// Convert dashed to camelCase; used by the css and data modules\n\t// Microsoft forgot to hump their vendor prefix (#9572)\n\tcamelCase: function( string ) {\n\t\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n\t},\n\n\tnodeName: function( elem, name ) {\n\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// Support: Android<4.1, IE<9\n\ttrim: function( text ) {\n\t\treturn text == null ?\n\t\t\t\"\" :\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\tvar len;\n\n\t\tif ( arr ) {\n\t\t\tif ( indexOf ) {\n\t\t\t\treturn indexOf.call( arr, elem, i );\n\t\t\t}\n\n\t\t\tlen = arr.length;\n\t\t\ti = i ? i < 0 ? Math.max( 0, len + i ) : i : 0;\n\n\t\t\tfor ( ; i < len; i++ ) {\n\n\t\t\t\t// Skip accessing in sparse arrays\n\t\t\t\tif ( i in arr && arr[ i ] === elem ) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t},\n\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\twhile ( j < len ) {\n\t\t\tfirst[ i++ ] = second[ j++ ];\n\t\t}\n\n\t\t// Support: IE<9\n\t\t// Workaround casting of .length to NaN on otherwise arraylike objects (e.g., NodeLists)\n\t\tif ( len !== len ) {\n\t\t\twhile ( second[ j ] !== undefined ) {\n\t\t\t\tfirst[ i++ ] = second[ j++ ];\n\t\t\t}\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// Bind a function to a context, optionally partially applying any\n\t// arguments.\n\tproxy: function( fn, context ) {\n\t\tvar args, proxy, tmp;\n\n\t\tif ( typeof context === \"string\" ) {\n\t\t\ttmp = fn[ context ];\n\t\t\tcontext = fn;\n\t\t\tfn = tmp;\n\t\t}\n\n\t\t// Quick check to determine if target is callable, in the spec\n\t\t// this throws a TypeError, but we will just return undefined.\n\t\tif ( !jQuery.isFunction( fn ) ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Simulated bind\n\t\targs = slice.call( arguments, 2 );\n\t\tproxy = function() {\n\t\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t\t};\n\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\t\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\t\treturn proxy;\n\t},\n\n\tnow: function() {\n\t\treturn +( new Date() );\n\t},\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\n// JSHint would error on this code due to the Symbol not being defined in ES5.\n// Defining this global in .jshintrc would create a danger of using the global\n// unguarded in another place, it seems safer to just disable JSHint for these\n// three lines.\n/* jshint ignore: start */\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = deletedIds[ Symbol.iterator ];\n}\n/* jshint ignore: end */\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\nfunction( i, name ) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: iOS 8.2 (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = jQuery.type( obj );\n\n\tif ( type === \"function\" || jQuery.isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.2.1\n * http://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2015-10-17\n */\n(function( window ) {\n\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// General-purpose constants\n\tMAX_NEGATIVE = 1 << 31,\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf as it's faster than native\n\t// http://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\trescape = /'|\\\\/g,\n\n\t// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox<24\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\thigh < 0 ?\n\t\t\t\t// BMP codepoint\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t};\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, nidselect, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\n\t\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\t\tsetDocument( context );\n\t\t}\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( (m = match[1]) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( (elem = context.getElementById( m )) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && (elem = newContext.getElementById( m )) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[2] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!compilerCache[ selector + \" \" ] &&\n\t\t\t\t(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n\n\t\t\t\tif ( nodeType !== 1 ) {\n\t\t\t\t\tnewContext = context;\n\t\t\t\t\tnewSelector = selector;\n\n\t\t\t\t// qSA looks outside Element context, which is not what we want\n\t\t\t\t// Thanks to Andrew Dupont for this workaround technique\n\t\t\t\t// Support: IE <=8\n\t\t\t\t// Exclude object elements\n\t\t\t\t} else if ( context.nodeName.toLowerCase() !== \"object\" ) {\n\n\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\tif ( (nid = context.getAttribute( \"id\" )) ) {\n\t\t\t\t\t\tnid = nid.replace( rescape, \"\\\\$&\" );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.setAttribute( \"id\", (nid = expando) );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\tnidselect = ridentifier.test( nid ) ? \"#\" + nid : \"[id='\" + nid + \"']\";\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[i] = nidselect + \" \" + toSelector( groups[i] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\t\t\t\t}\n\n\t\t\t\tif ( newSelector ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key + \" \" ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created div and expects a boolean result\n */\nfunction assert( fn ) {\n\tvar div = document.createElement(\"div\");\n\n\ttry {\n\t\treturn !!fn( div );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( div.parentNode ) {\n\t\t\tdiv.parentNode.removeChild( div );\n\t\t}\n\t\t// release memory in IE\n\t\tdiv = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\t( ~b.sourceIndex || MAX_NEGATIVE ) -\n\t\t\t( ~a.sourceIndex || MAX_NEGATIVE );\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\t// documentElement is verified for cases where it doesn't yet exist\n\t// (such as loading iframes in IE - #4833)\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, parent,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9-11, Edge\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\tif ( (parent = document.defaultView) && parent.top !== parent ) {\n\t\t// Support: IE 11\n\t\tif ( parent.addEventListener ) {\n\t\t\tparent.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( parent.attachEvent ) {\n\t\t\tparent.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert(function( div ) {\n\t\tdiv.className = \"i\";\n\t\treturn !div.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( div ) {\n\t\tdiv.appendChild( document.createComment(\"\") );\n\t\treturn !div.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( div ) {\n\t\tdocElem.appendChild( div ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t});\n\n\t// ID find and filter\n\tif ( support.getById ) {\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar m = context.getElementById( id );\n\t\t\t\treturn m ? [ m ] : [];\n\t\t\t}\n\t\t};\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t} else {\n\t\t// Support: IE6/7\n\t\t// getElementById is not reliable as a find shortcut\n\t\tdelete Expr.find[\"ID\"];\n\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See http://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( div ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// http://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( div ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( div.querySelectorAll(\"[msallowcapture^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !div.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !div.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push(\"~=\");\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibing-combinator selector` fails\n\t\t\tif ( !div.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( div ) {\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tdiv.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( div.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":enabled\").length ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tdiv.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( div ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( div, \"div\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( div, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\t\t\treturn a === document ? -1 :\n\t\t\t\tb === document ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\t// Make sure that attribute selectors are quoted\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!compilerCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch (e) {}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( (node = elem[i++]) ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[6] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] ) {\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[0] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": function( elem ) {\n\t\t\treturn elem.disabled === false;\n\t\t},\n\n\t\t\"disabled\": function( elem ) {\n\t\t\treturn elem.disabled === true;\n\t\t},\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( (tokens = []) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tcheckNonElements = base && dir === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\n\n\t\t\t\t\t\tif ( (oldCache = uniqueCache[ dir ]) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ dir ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context === document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\tif ( !context && elem.ownerDocument !== document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[0] = match[0].slice( 0 );\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\tsupport.getById && context.nodeType === 9 && documentIsHTML &&\n\t\t\t\tExpr.relative[ tokens[1].type ] ) {\n\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[i];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( (seed = find(\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t)) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( div1 ) {\n\t// Should return 1, but returns 4 (following)\n\treturn div1.compareDocumentPosition( document.createElement(\"div\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( div ) {\n\tdiv.innerHTML = \"<a href='#'></a>\";\n\treturn div.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( div ) {\n\tdiv.innerHTML = \"<input/>\";\n\tdiv.firstChild.setAttribute( \"value\", \"\" );\n\treturn div.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( div ) {\n\treturn div.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\tnull;\n\t\t}\n\t});\n}\n\nreturn Sizzle;\n\n})( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\nvar rsingleTag = ( /^<([\\w-]+)\\s*\\/?>(?:<\\/\\1>|)$/ );\n\n\n\nvar risSimple = /^.[^:#\\[\\.,]*$/;\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( jQuery.isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\t/* jshint -W018 */\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\n\t}\n\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\n\t}\n\n\tif ( typeof qualifier === \"string\" ) {\n\t\tif ( risSimple.test( qualifier ) ) {\n\t\t\treturn jQuery.filter( qualifier, elements, not );\n\t\t}\n\n\t\tqualifier = jQuery.filter( qualifier, elements );\n\t}\n\n\treturn jQuery.grep( elements, function( elem ) {\n\t\treturn ( jQuery.inArray( elem, qualifier ) > -1 ) !== not;\n\t} );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\treturn elems.length === 1 && elem.nodeType === 1 ?\n\t\tjQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :\n\t\tjQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\t\treturn elem.nodeType === 1;\n\t\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i,\n\t\t\tret = [],\n\t\t\tself = this,\n\t\t\tlen = self.length;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\t// Needed because $( selector, context ) becomes $( context ).find( selector )\n\t\tret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );\n\t\tret.selector = this.selector ? this.selector + \" \" + selector : selector;\n\t\treturn ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// init accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector.charAt( 0 ) === \"<\" &&\n\t\t\t\tselector.charAt( selector.length - 1 ) === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( jQuery.isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n\t\t\t\t\t// nodes that are no longer in the document #6963\n\t\t\t\t\tif ( elem && elem.parentNode ) {\n\n\t\t\t\t\t\t// Handle the case where IE and Opera return items\n\t\t\t\t\t\t// by name instead of ID\n\t\t\t\t\t\tif ( elem.id !== match[ 2 ] ) {\n\t\t\t\t\t\t\treturn rootjQuery.find( selector );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Otherwise, we inject the element directly into the jQuery object\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.context = document;\n\t\t\t\t\tthis.selector = selector;\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis.context = this[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( jQuery.isFunction( selector ) ) {\n\t\t\treturn typeof root.ready !== \"undefined\" ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\tif ( selector.selector !== undefined ) {\n\t\t\tthis.selector = selector.selector;\n\t\t\tthis.context = selector.context;\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar i,\n\t\t\ttargets = jQuery( target, this ),\n\t\t\tlen = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\tpos = rneedsContext.test( selectors ) || typeof selectors !== \"string\" ?\n\t\t\t\tjQuery( selectors, context || this.context ) :\n\t\t\t\t0;\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t// Always skip document fragments\n\t\t\t\tif ( cur.nodeType < 11 && ( pos ?\n\t\t\t\t\tpos.index( cur ) > -1 :\n\n\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within\n\t// the matched set of elements\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn jQuery.inArray( this[ 0 ], jQuery( elem ) );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn jQuery.inArray(\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem, this );\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\tdo {\n\t\tcur = cur[ dir ];\n\t} while ( cur && cur.nodeType !== 1 );\n\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\treturn jQuery.nodeName( elem, \"iframe\" ) ?\n\t\t\telem.contentDocument || elem.contentWindow.document :\n\t\t\tjQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar ret = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tret = jQuery.filter( selector, ret );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tret = jQuery.uniqueSort( ret );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tret = ret.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\nvar rnotwhite = ( /\\S+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( jQuery.isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && jQuery.type( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = true;\n\t\t\t\tif ( !memory ) {\n\t\t\t\t\tself.disable();\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, listener list, final state\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ), \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ), \"rejected\" ],\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ) ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tthen: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\t\t\t\t\tvar fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];\n\n\t\t\t\t\t\t\t// deferred[ done | fail | progress ] for forwarding actions to newDefer\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && jQuery.isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis === promise ? newDefer.promise() : this,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Keep pipe for back-compat\n\t\tpromise.pipe = promise.then;\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 3 ];\n\n\t\t\t// promise[ done | fail | progress ] = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add( function() {\n\n\t\t\t\t\t// state = [ resolved | rejected ]\n\t\t\t\t\tstate = stateString;\n\n\t\t\t\t// [ reject_list | resolve_list ].disable; progress_list.lock\n\t\t\t\t}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );\n\t\t\t}\n\n\t\t\t// deferred[ resolve | reject | notify ]\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? promise : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( subordinate /* , ..., subordinateN */ ) {\n\t\tvar i = 0,\n\t\t\tresolveValues = slice.call( arguments ),\n\t\t\tlength = resolveValues.length,\n\n\t\t\t// the count of uncompleted subordinates\n\t\t\tremaining = length !== 1 ||\n\t\t\t\t( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,\n\n\t\t\t// the master Deferred.\n\t\t\t// If resolveValues consist of only a single Deferred, just use that.\n\t\t\tdeferred = remaining === 1 ? subordinate : jQuery.Deferred(),\n\n\t\t\t// Update function for both resolve and progress values\n\t\t\tupdateFunc = function( i, contexts, values ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tcontexts[ i ] = this;\n\t\t\t\t\tvalues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( values === progressValues ) {\n\t\t\t\t\t\tdeferred.notifyWith( contexts, values );\n\n\t\t\t\t\t} else if ( !( --remaining ) ) {\n\t\t\t\t\t\tdeferred.resolveWith( contexts, values );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tprogressValues, progressContexts, resolveContexts;\n\n\t\t// add listeners to Deferred subordinates; treat others as resolved\n\t\tif ( length > 1 ) {\n\t\t\tprogressValues = new Array( length );\n\t\t\tprogressContexts = new Array( length );\n\t\t\tresolveContexts = new Array( length );\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {\n\t\t\t\t\tresolveValues[ i ].promise()\n\t\t\t\t\t\t.progress( updateFunc( i, progressContexts, progressValues ) )\n\t\t\t\t\t\t.done( updateFunc( i, resolveContexts, resolveValues ) )\n\t\t\t\t\t\t.fail( deferred.reject );\n\t\t\t\t} else {\n\t\t\t\t\t--remaining;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// if we're not waiting on anything, resolve the master\n\t\tif ( !remaining ) {\n\t\t\tdeferred.resolveWith( resolveContexts, resolveValues );\n\t\t}\n\n\t\treturn deferred.promise();\n\t}\n} );\n\n\n// The deferred used on DOM ready\nvar readyList;\n\njQuery.fn.ready = function( fn ) {\n\n\t// Add the callback\n\tjQuery.ready.promise().done( fn );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Hold (or release) the ready event\n\tholdReady: function( hold ) {\n\t\tif ( hold ) {\n\t\t\tjQuery.readyWait++;\n\t\t} else {\n\t\t\tjQuery.ready( true );\n\t\t}\n\t},\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\n\t\t// Trigger any bound ready events\n\t\tif ( jQuery.fn.triggerHandler ) {\n\t\t\tjQuery( document ).triggerHandler( \"ready\" );\n\t\t\tjQuery( document ).off( \"ready\" );\n\t\t}\n\t}\n} );\n\n/**\n * Clean-up method for dom ready events\n */\nfunction detach() {\n\tif ( document.addEventListener ) {\n\t\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\t\twindow.removeEventListener( \"load\", completed );\n\n\t} else {\n\t\tdocument.detachEvent( \"onreadystatechange\", completed );\n\t\twindow.detachEvent( \"onload\", completed );\n\t}\n}\n\n/**\n * The ready event handler and self cleanup method\n */\nfunction completed() {\n\n\t// readyState === \"complete\" is good enough for us to call the dom ready in oldIE\n\tif ( document.addEventListener ||\n\t\twindow.event.type === \"load\" ||\n\t\tdocument.readyState === \"complete\" ) {\n\n\t\tdetach();\n\t\tjQuery.ready();\n\t}\n}\n\njQuery.ready.promise = function( obj ) {\n\tif ( !readyList ) {\n\n\t\treadyList = jQuery.Deferred();\n\n\t\t// Catch cases where $(document).ready() is called\n\t\t// after the browser event has already occurred.\n\t\t// Support: IE6-10\n\t\t// Older IE sometimes signals \"interactive\" too soon\n\t\tif ( document.readyState === \"complete\" ||\n\t\t\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\t\t\twindow.setTimeout( jQuery.ready );\n\n\t\t// Standards-based browsers support DOMContentLoaded\n\t\t} else if ( document.addEventListener ) {\n\n\t\t\t// Use the handy event callback\n\t\t\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t\t\t// A fallback to window.onload, that will always work\n\t\t\twindow.addEventListener( \"load\", completed );\n\n\t\t// If IE event model is used\n\t\t} else {\n\n\t\t\t// Ensure firing before onload, maybe late but safe also for iframes\n\t\t\tdocument.attachEvent( \"onreadystatechange\", completed );\n\n\t\t\t// A fallback to window.onload, that will always work\n\t\t\twindow.attachEvent( \"onload\", completed );\n\n\t\t\t// If IE and not a frame\n\t\t\t// continually check to see if the document is ready\n\t\t\tvar top = false;\n\n\t\t\ttry {\n\t\t\t\ttop = window.frameElement == null && document.documentElement;\n\t\t\t} catch ( e ) {}\n\n\t\t\tif ( top && top.doScroll ) {\n\t\t\t\t( function doScrollCheck() {\n\t\t\t\t\tif ( !jQuery.isReady ) {\n\n\t\t\t\t\t\ttry {\n\n\t\t\t\t\t\t\t// Use the trick by Diego Perini\n\t\t\t\t\t\t\t// http://javascript.nwbox.com/IEContentLoaded/\n\t\t\t\t\t\t\ttop.doScroll( \"left\" );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn window.setTimeout( doScrollCheck, 50 );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// detach all dom ready events\n\t\t\t\t\t\tdetach();\n\n\t\t\t\t\t\t// and execute any waiting functions\n\t\t\t\t\t\tjQuery.ready();\n\t\t\t\t\t}\n\t\t\t\t} )();\n\t\t\t}\n\t\t}\n\t}\n\treturn readyList.promise( obj );\n};\n\n// Kick off the DOM ready check even if the user does not\njQuery.ready.promise();\n\n\n\n\n// Support: IE<9\n// Iteration over object's inherited properties before its own\nvar i;\nfor ( i in jQuery( support ) ) {\n\tbreak;\n}\nsupport.ownFirst = i === \"0\";\n\n// Note: most support tests are defined in their respective modules.\n// false until the test is run\nsupport.inlineBlockNeedsLayout = false;\n\n// Execute ASAP in case we need to set body.style.zoom\njQuery( function() {\n\n\t// Minified: var a,b,c,d\n\tvar val, div, body, container;\n\n\tbody = document.getElementsByTagName( \"body\" )[ 0 ];\n\tif ( !body || !body.style ) {\n\n\t\t// Return for frameset docs that don't have a body\n\t\treturn;\n\t}\n\n\t// Setup\n\tdiv = document.createElement( \"div\" );\n\tcontainer = document.createElement( \"div\" );\n\tcontainer.style.cssText = \"position:absolute;border:0;width:0;height:0;top:0;left:-9999px\";\n\tbody.appendChild( container ).appendChild( div );\n\n\tif ( typeof div.style.zoom !== \"undefined\" ) {\n\n\t\t// Support: IE<8\n\t\t// Check if natively block-level elements act like inline-block\n\t\t// elements when setting their display to 'inline' and giving\n\t\t// them layout\n\t\tdiv.style.cssText = \"display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1\";\n\n\t\tsupport.inlineBlockNeedsLayout = val = div.offsetWidth === 3;\n\t\tif ( val ) {\n\n\t\t\t// Prevent IE 6 from affecting layout for positioned elements #11048\n\t\t\t// Prevent IE from shrinking the body in IE 7 mode #12869\n\t\t\t// Support: IE<8\n\t\t\tbody.style.zoom = 1;\n\t\t}\n\t}\n\n\tbody.removeChild( container );\n} );\n\n\n( function() {\n\tvar div = document.createElement( \"div\" );\n\n\t// Support: IE<9\n\tsupport.deleteExpando = true;\n\ttry {\n\t\tdelete div.test;\n\t} catch ( e ) {\n\t\tsupport.deleteExpando = false;\n\t}\n\n\t// Null elements to avoid leaks in IE.\n\tdiv = null;\n} )();\nvar acceptData = function( elem ) {\n\tvar noData = jQuery.noData[ ( elem.nodeName + \" \" ).toLowerCase() ],\n\t\tnodeType = +elem.nodeType || 1;\n\n\t// Do not set data on non-element DOM nodes because it will not be cleared (#8335).\n\treturn nodeType !== 1 && nodeType !== 9 ?\n\t\tfalse :\n\n\t\t// Nodes accept data unless otherwise specified; rejection can be conditional\n\t\t!noData || noData !== true && elem.getAttribute( \"classid\" ) === noData;\n};\n\n\n\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /([A-Z])/g;\n\nfunction dataAttr( elem, key, data ) {\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\n\t\tvar name = \"data-\" + key.replace( rmultiDash, \"-$1\" ).toLowerCase();\n\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = data === \"true\" ? true :\n\t\t\t\t\tdata === \"false\" ? false :\n\t\t\t\t\tdata === \"null\" ? null :\n\n\t\t\t\t\t// Only convert to a number if it doesn't change the string\n\t\t\t\t\t+data + \"\" === data ? +data :\n\t\t\t\t\trbrace.test( data ) ? jQuery.parseJSON( data ) :\n\t\t\t\t\tdata;\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tjQuery.data( elem, key, data );\n\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\n\treturn data;\n}\n\n// checks a cache object for emptiness\nfunction isEmptyDataObject( obj ) {\n\tvar name;\n\tfor ( name in obj ) {\n\n\t\t// if the public data object is empty, the private is still empty\n\t\tif ( name === \"data\" && jQuery.isEmptyObject( obj[ name ] ) ) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ( name !== \"toJSON\" ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction internalData( elem, name, data, pvt /* Internal Use Only */ ) {\n\tif ( !acceptData( elem ) ) {\n\t\treturn;\n\t}\n\n\tvar ret, thisCache,\n\t\tinternalKey = jQuery.expando,\n\n\t\t// We have to handle DOM nodes and JS objects differently because IE6-7\n\t\t// can't GC object references properly across the DOM-JS boundary\n\t\tisNode = elem.nodeType,\n\n\t\t// Only DOM nodes need the global jQuery cache; JS object data is\n\t\t// attached directly to the object so GC can occur automatically\n\t\tcache = isNode ? jQuery.cache : elem,\n\n\t\t// Only defining an ID for JS objects if its cache already exists allows\n\t\t// the code to shortcut on the same path as a DOM node with no cache\n\t\tid = isNode ? elem[ internalKey ] : elem[ internalKey ] && internalKey;\n\n\t// Avoid doing any more work than we need to when trying to get data on an\n\t// object that has no data at all\n\tif ( ( !id || !cache[ id ] || ( !pvt && !cache[ id ].data ) ) &&\n\t\tdata === undefined && typeof name === \"string\" ) {\n\t\treturn;\n\t}\n\n\tif ( !id ) {\n\n\t\t// Only DOM nodes need a new unique ID for each element since their data\n\t\t// ends up in the global cache\n\t\tif ( isNode ) {\n\t\t\tid = elem[ internalKey ] = deletedIds.pop() || jQuery.guid++;\n\t\t} else {\n\t\t\tid = internalKey;\n\t\t}\n\t}\n\n\tif ( !cache[ id ] ) {\n\n\t\t// Avoid exposing jQuery metadata on plain JS objects when the object\n\t\t// is serialized using JSON.stringify\n\t\tcache[ id ] = isNode ? {} : { toJSON: jQuery.noop };\n\t}\n\n\t// An object can be passed to jQuery.data instead of a key/value pair; this gets\n\t// shallow copied over onto the existing cache\n\tif ( typeof name === \"object\" || typeof name === \"function\" ) {\n\t\tif ( pvt ) {\n\t\t\tcache[ id ] = jQuery.extend( cache[ id ], name );\n\t\t} else {\n\t\t\tcache[ id ].data = jQuery.extend( cache[ id ].data, name );\n\t\t}\n\t}\n\n\tthisCache = cache[ id ];\n\n\t// jQuery data() is stored in a separate object inside the object's internal data\n\t// cache in order to avoid key collisions between internal data and user-defined\n\t// data.\n\tif ( !pvt ) {\n\t\tif ( !thisCache.data ) {\n\t\t\tthisCache.data = {};\n\t\t}\n\n\t\tthisCache = thisCache.data;\n\t}\n\n\tif ( data !== undefined ) {\n\t\tthisCache[ jQuery.camelCase( name ) ] = data;\n\t}\n\n\t// Check for both converted-to-camel and non-converted data property names\n\t// If a data property was specified\n\tif ( typeof name === \"string\" ) {\n\n\t\t// First Try to find as-is property data\n\t\tret = thisCache[ name ];\n\n\t\t// Test for null|undefined property data\n\t\tif ( ret == null ) {\n\n\t\t\t// Try to find the camelCased property\n\t\t\tret = thisCache[ jQuery.camelCase( name ) ];\n\t\t}\n\t} else {\n\t\tret = thisCache;\n\t}\n\n\treturn ret;\n}\n\nfunction internalRemoveData( elem, name, pvt ) {\n\tif ( !acceptData( elem ) ) {\n\t\treturn;\n\t}\n\n\tvar thisCache, i,\n\t\tisNode = elem.nodeType,\n\n\t\t// See jQuery.data for more information\n\t\tcache = isNode ? jQuery.cache : elem,\n\t\tid = isNode ? elem[ jQuery.expando ] : jQuery.expando;\n\n\t// If there is already no cache entry for this object, there is no\n\t// purpose in continuing\n\tif ( !cache[ id ] ) {\n\t\treturn;\n\t}\n\n\tif ( name ) {\n\n\t\tthisCache = pvt ? cache[ id ] : cache[ id ].data;\n\n\t\tif ( thisCache ) {\n\n\t\t\t// Support array or space separated string names for data keys\n\t\t\tif ( !jQuery.isArray( name ) ) {\n\n\t\t\t\t// try the string as a key before any manipulation\n\t\t\t\tif ( name in thisCache ) {\n\t\t\t\t\tname = [ name ];\n\t\t\t\t} else {\n\n\t\t\t\t\t// split the camel cased version by spaces unless a key with the spaces exists\n\t\t\t\t\tname = jQuery.camelCase( name );\n\t\t\t\t\tif ( name in thisCache ) {\n\t\t\t\t\t\tname = [ name ];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tname = name.split( \" \" );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// If \"name\" is an array of keys...\n\t\t\t\t// When data is initially created, via (\"key\", \"val\") signature,\n\t\t\t\t// keys will be converted to camelCase.\n\t\t\t\t// Since there is no way to tell _how_ a key was added, remove\n\t\t\t\t// both plain key and camelCase key. #12786\n\t\t\t\t// This will only penalize the array argument path.\n\t\t\t\tname = name.concat( jQuery.map( name, jQuery.camelCase ) );\n\t\t\t}\n\n\t\t\ti = name.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete thisCache[ name[ i ] ];\n\t\t\t}\n\n\t\t\t// If there is no data left in the cache, we want to continue\n\t\t\t// and let the cache object itself get destroyed\n\t\t\tif ( pvt ? !isEmptyDataObject( thisCache ) : !jQuery.isEmptyObject( thisCache ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\t// See jQuery.data for more information\n\tif ( !pvt ) {\n\t\tdelete cache[ id ].data;\n\n\t\t// Don't destroy the parent cache unless the internal data object\n\t\t// had been the only thing left in it\n\t\tif ( !isEmptyDataObject( cache[ id ] ) ) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Destroy the cache\n\tif ( isNode ) {\n\t\tjQuery.cleanData( [ elem ], true );\n\n\t// Use delete when supported for expandos or `cache` is not a window per isWindow (#10080)\n\t/* jshint eqeqeq: false */\n\t} else if ( support.deleteExpando || cache != cache.window ) {\n\t\t/* jshint eqeqeq: true */\n\t\tdelete cache[ id ];\n\n\t// When all else fails, undefined\n\t} else {\n\t\tcache[ id ] = undefined;\n\t}\n}\n\njQuery.extend( {\n\tcache: {},\n\n\t// The following elements (space-suffixed to avoid Object.prototype collisions)\n\t// throw uncatchable exceptions if you attempt to set expando properties\n\tnoData: {\n\t\t\"applet \": true,\n\t\t\"embed \": true,\n\n\t\t// ...but Flash objects (which have this classid) *can* handle expandos\n\t\t\"object \": \"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\"\n\t},\n\n\thasData: function( elem ) {\n\t\telem = elem.nodeType ? jQuery.cache[ elem[ jQuery.expando ] ] : elem[ jQuery.expando ];\n\t\treturn !!elem && !isEmptyDataObject( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn internalData( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\treturn internalRemoveData( elem, name );\n\t},\n\n\t// For internal use only.\n\t_data: function( elem, name, data ) {\n\t\treturn internalData( elem, name, data, true );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\treturn internalRemoveData( elem, name, true );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Special expections of .data basically thwart jQuery.access,\n\t\t// so implement the relevant behavior ourselves\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = jQuery.data( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !jQuery._data( elem, \"parsedAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE11+\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = jQuery.camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tjQuery._data( elem, \"parsedAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tjQuery.data( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn arguments.length > 1 ?\n\n\t\t\t// Sets one value\n\t\t\tthis.each( function() {\n\t\t\t\tjQuery.data( this, key, value );\n\t\t\t} ) :\n\n\t\t\t// Gets one value\n\t\t\t// Try to fetch any internally stored data first\n\t\t\telem ? dataAttr( elem, key, jQuery.data( elem, key ) ) : undefined;\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeData( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = jQuery._data( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || jQuery.isArray( data ) ) {\n\t\t\t\t\tqueue = jQuery._data( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// not intended for public consumption - generates a queueHooks object,\n\t// or returns the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn jQuery._data( elem, key ) || jQuery._data( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tjQuery._removeData( elem, type + \"queue\" );\n\t\t\t\tjQuery._removeData( elem, key );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = jQuery._data( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\n\n\n( function() {\n\tvar shrinkWrapBlocksVal;\n\n\tsupport.shrinkWrapBlocks = function() {\n\t\tif ( shrinkWrapBlocksVal != null ) {\n\t\t\treturn shrinkWrapBlocksVal;\n\t\t}\n\n\t\t// Will be changed later if needed.\n\t\tshrinkWrapBlocksVal = false;\n\n\t\t// Minified: var b,c,d\n\t\tvar div, body, container;\n\n\t\tbody = document.getElementsByTagName( \"body\" )[ 0 ];\n\t\tif ( !body || !body.style ) {\n\n\t\t\t// Test fired too early or in an unsupported environment, exit.\n\t\t\treturn;\n\t\t}\n\n\t\t// Setup\n\t\tdiv = document.createElement( \"div\" );\n\t\tcontainer = document.createElement( \"div\" );\n\t\tcontainer.style.cssText = \"position:absolute;border:0;width:0;height:0;top:0;left:-9999px\";\n\t\tbody.appendChild( container ).appendChild( div );\n\n\t\t// Support: IE6\n\t\t// Check if elements with layout shrink-wrap their children\n\t\tif ( typeof div.style.zoom !== \"undefined\" ) {\n\n\t\t\t// Reset CSS: box-sizing; display; margin; border\n\t\t\tdiv.style.cssText =\n\n\t\t\t\t// Support: Firefox<29, Android 2.3\n\t\t\t\t// Vendor-prefix box-sizing\n\t\t\t\t\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;\" +\n\t\t\t\t\"box-sizing:content-box;display:block;margin:0;border:0;\" +\n\t\t\t\t\"padding:1px;width:1px;zoom:1\";\n\t\t\tdiv.appendChild( document.createElement( \"div\" ) ).style.width = \"5px\";\n\t\t\tshrinkWrapBlocksVal = div.offsetWidth !== 3;\n\t\t}\n\n\t\tbody.removeChild( container );\n\n\t\treturn shrinkWrapBlocksVal;\n\t};\n\n} )();\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar isHidden = function( elem, el ) {\n\n\t\t// isHidden might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\t\treturn jQuery.css( elem, \"display\" ) === \"none\" ||\n\t\t\t!jQuery.contains( elem.ownerDocument, elem );\n\t};\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted,\n\t\tscale = 1,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() { return tween.cur(); } :\n\t\t\tfunction() { return jQuery.css( elem, prop, \"\" ); },\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\tdo {\n\n\t\t\t// If previous iteration zeroed out, double until we get *something*.\n\t\t\t// Use string for doubling so we don't accidentally see scale as unchanged below\n\t\t\tscale = scale || \".5\";\n\n\t\t\t// Adjust and apply\n\t\t\tinitialInUnit = initialInUnit / scale;\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Update scale, tolerating zero or NaN from tween.cur()\n\t\t// Break the loop if scale is unchanged or perfect, or if we've just had enough.\n\t\t} while (\n\t\t\tscale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations\n\t\t);\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlength = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( jQuery.type( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !jQuery.isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ],\n\t\t\t\t\tkey,\n\t\t\t\t\traw ? value : value.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn chainable ?\n\t\telems :\n\n\t\t// Gets\n\t\tbulk ?\n\t\t\tfn.call( elems ) :\n\t\t\tlength ? fn( elems[ 0 ], key ) : emptyGet;\n};\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([\\w:-]+)/ );\n\nvar rscriptType = ( /^$|\\/(?:java|ecma)script/i );\n\nvar rleadingWhitespace = ( /^\\s+/ );\n\nvar nodeNames = \"abbr|article|aside|audio|bdi|canvas|data|datalist|\" +\n\t\t\"details|dialog|figcaption|figure|footer|header|hgroup|main|\" +\n\t\t\"mark|meter|nav|output|picture|progress|section|summary|template|time|video\";\n\n\n\nfunction createSafeFragment( document ) {\n\tvar list = nodeNames.split( \"|\" ),\n\t\tsafeFrag = document.createDocumentFragment();\n\n\tif ( safeFrag.createElement ) {\n\t\twhile ( list.length ) {\n\t\t\tsafeFrag.createElement(\n\t\t\t\tlist.pop()\n\t\t\t);\n\t\t}\n\t}\n\treturn safeFrag;\n}\n\n\n( function() {\n\tvar div = document.createElement( \"div\" ),\n\t\tfragment = document.createDocumentFragment(),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Setup\n\tdiv.innerHTML = \"  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>\";\n\n\t// IE strips leading whitespace when .innerHTML is used\n\tsupport.leadingWhitespace = div.firstChild.nodeType === 3;\n\n\t// Make sure that tbody elements aren't automatically inserted\n\t// IE will insert them into empty tables\n\tsupport.tbody = !div.getElementsByTagName( \"tbody\" ).length;\n\n\t// Make sure that link elements get serialized correctly by innerHTML\n\t// This requires a wrapper element in IE\n\tsupport.htmlSerialize = !!div.getElementsByTagName( \"link\" ).length;\n\n\t// Makes sure cloning an html5 element does not cause problems\n\t// Where outerHTML is undefined, this still works\n\tsupport.html5Clone =\n\t\tdocument.createElement( \"nav\" ).cloneNode( true ).outerHTML !== \"<:nav></:nav>\";\n\n\t// Check if a disconnected checkbox will retain its checked\n\t// value of true after appended to the DOM (IE6/7)\n\tinput.type = \"checkbox\";\n\tinput.checked = true;\n\tfragment.appendChild( input );\n\tsupport.appendChecked = input.checked;\n\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\t// Support: IE6-IE11+\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n\n\t// #11217 - WebKit loses check when the name is after the checked attribute\n\tfragment.appendChild( div );\n\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput = document.createElement( \"input\" );\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Safari 5.1, iOS 5.1, Android 4.x, Android 2.3\n\t// old WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE<9\n\t// Cloned elements keep attachEvent handlers, we use addEventListener on IE9+\n\tsupport.noCloneEvent = !!div.addEventListener;\n\n\t// Support: IE<9\n\t// Since attributes and properties are the same in IE,\n\t// cleanData must set properties to undefined rather than use removeAttribute\n\tdiv[ jQuery.expando ] = 1;\n\tsupport.attributes = !div.getAttribute( jQuery.expando );\n} )();\n\n\n// We have to close these tags to support XHTML (#13200)\nvar wrapMap = {\n\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\tlegend: [ 1, \"<fieldset>\", \"</fieldset>\" ],\n\tarea: [ 1, \"<map>\", \"</map>\" ],\n\n\t// Support: IE8\n\tparam: [ 1, \"<object>\", \"</object>\" ],\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\tcol: [ 2, \"<table><tbody></tbody><colgroup>\", \"</colgroup></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t// IE6-8 can't serialize link, script, style, or any html5 (NoScope) tags,\n\t// unless wrapped in a div with non-breaking characters in front of it.\n\t_default: support.htmlSerialize ? [ 0, \"\", \"\" ] : [ 1, \"X<div>\", \"</div>\" ]\n};\n\n// Support: IE8-IE9\nwrapMap.optgroup = wrapMap.option;\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n\nfunction getAll( context, tag ) {\n\tvar elems, elem,\n\t\ti = 0,\n\t\tfound = typeof context.getElementsByTagName !== \"undefined\" ?\n\t\t\tcontext.getElementsByTagName( tag || \"*\" ) :\n\t\t\ttypeof context.querySelectorAll !== \"undefined\" ?\n\t\t\t\tcontext.querySelectorAll( tag || \"*\" ) :\n\t\t\t\tundefined;\n\n\tif ( !found ) {\n\t\tfor ( found = [], elems = context.childNodes || context;\n\t\t\t( elem = elems[ i ] ) != null;\n\t\t\ti++\n\t\t) {\n\t\t\tif ( !tag || jQuery.nodeName( elem, tag ) ) {\n\t\t\t\tfound.push( elem );\n\t\t\t} else {\n\t\t\t\tjQuery.merge( found, getAll( elem, tag ) );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn tag === undefined || tag && jQuery.nodeName( context, tag ) ?\n\t\tjQuery.merge( [ context ], found ) :\n\t\tfound;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar elem,\n\t\ti = 0;\n\tfor ( ; ( elem = elems[ i ] ) != null; i++ ) {\n\t\tjQuery._data(\n\t\t\telem,\n\t\t\t\"globalEval\",\n\t\t\t!refElements || jQuery._data( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/,\n\trtbody = /<tbody/i;\n\nfunction fixDefaultChecked( elem ) {\n\tif ( rcheckableType.test( elem.type ) ) {\n\t\telem.defaultChecked = elem.checked;\n\t}\n}\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar j, elem, contains,\n\t\ttmp, tag, tbody, wrap,\n\t\tl = elems.length,\n\n\t\t// Ensure a safe fragment\n\t\tsafe = createSafeFragment( context ),\n\n\t\tnodes = [],\n\t\ti = 0;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( jQuery.type( elem ) === \"object\" ) {\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || safe.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Manually add leading whitespace removed by IE\n\t\t\t\tif ( !support.leadingWhitespace && rleadingWhitespace.test( elem ) ) {\n\t\t\t\t\tnodes.push( context.createTextNode( rleadingWhitespace.exec( elem )[ 0 ] ) );\n\t\t\t\t}\n\n\t\t\t\t// Remove IE's autoinserted <tbody> from table fragments\n\t\t\t\tif ( !support.tbody ) {\n\n\t\t\t\t\t// String was a <table>, *may* have spurious <tbody>\n\t\t\t\t\telem = tag === \"table\" && !rtbody.test( elem ) ?\n\t\t\t\t\t\ttmp.firstChild :\n\n\t\t\t\t\t\t// String was a bare <thead> or <tfoot>\n\t\t\t\t\t\twrap[ 1 ] === \"<table>\" && !rtbody.test( elem ) ?\n\t\t\t\t\t\t\ttmp :\n\t\t\t\t\t\t\t0;\n\n\t\t\t\t\tj = elem && elem.childNodes.length;\n\t\t\t\t\twhile ( j-- ) {\n\t\t\t\t\t\tif ( jQuery.nodeName( ( tbody = elem.childNodes[ j ] ), \"tbody\" ) &&\n\t\t\t\t\t\t\t!tbody.childNodes.length ) {\n\n\t\t\t\t\t\t\telem.removeChild( tbody );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Fix #12392 for WebKit and IE > 9\n\t\t\t\ttmp.textContent = \"\";\n\n\t\t\t\t// Fix #12392 for oldIE\n\t\t\t\twhile ( tmp.firstChild ) {\n\t\t\t\t\ttmp.removeChild( tmp.firstChild );\n\t\t\t\t}\n\n\t\t\t\t// Remember the top-level container for proper cleanup\n\t\t\t\ttmp = safe.lastChild;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Fix #11356: Clear elements from fragment\n\tif ( tmp ) {\n\t\tsafe.removeChild( tmp );\n\t}\n\n\t// Reset defaultChecked for any radios and checkboxes\n\t// about to be appended to the DOM in IE 6/7 (#8060)\n\tif ( !support.appendChecked ) {\n\t\tjQuery.grep( getAll( nodes, \"input\" ), fixDefaultChecked );\n\t}\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( safe.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( contains ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\ttmp = null;\n\n\treturn safe;\n}\n\n\n( function() {\n\tvar i, eventName,\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Support: IE<9 (lack submit/change bubble), Firefox (lack focus(in | out) events)\n\tfor ( i in { submit: true, change: true, focusin: true } ) {\n\t\teventName = \"on\" + i;\n\n\t\tif ( !( support[ i ] = eventName in window ) ) {\n\n\t\t\t// Beware of CSP restrictions (https://developer.mozilla.org/en/Security/CSP)\n\t\t\tdiv.setAttribute( eventName, \"t\" );\n\t\t\tsupport[ i ] = div.attributes[ eventName ].expando === false;\n\t\t}\n\t}\n\n\t// Null elements to avoid leaks in IE.\n\tdiv = null;\n} )();\n\n\nvar rformElems = /^(?:input|select|textarea)$/i,\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n\trfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE9\n// See #13393 for more info\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn elem;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\t\tvar tmp, events, t, handleObjIn,\n\t\t\tspecial, eventHandle, handleObj,\n\t\t\thandlers, type, namespaces, origType,\n\t\t\telemData = jQuery._data( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" &&\n\t\t\t\t\t( !e || jQuery.event.triggered !== e.type ) ?\n\t\t\t\t\tjQuery.event.dispatch.apply( eventHandle.elem, arguments ) :\n\t\t\t\t\tundefined;\n\t\t\t};\n\n\t\t\t// Add elem as a property of the handle fn to prevent a memory leak\n\t\t\t// with IE non-native events\n\t\t\teventHandle.elem = elem;\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener/attachEvent if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\t// Bind the global event handler to the element\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle, false );\n\n\t\t\t\t\t} else if ( elem.attachEvent ) {\n\t\t\t\t\t\telem.attachEvent( \"on\" + type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t\t// Nullify elem to prevent memory leaks in IE\n\t\telem = null;\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\t\tvar j, handleObj, tmp,\n\t\t\torigCount, t, events,\n\t\t\tspecial, handlers, type,\n\t\t\tnamespaces, origType,\n\t\t\telemData = jQuery.hasData( elem ) && jQuery._data( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdelete elemData.handle;\n\n\t\t\t// removeData also checks for emptiness and clears the expando if empty\n\t\t\t// so use it instead of delete\n\t\t\tjQuery._removeData( elem, \"events\" );\n\t\t}\n\t},\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\t\tvar handle, ontype, cur,\n\t\t\tbubbleType, special, tmp, i,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( jQuery._data( cur, \"events\" ) || {} )[ event.type ] &&\n\t\t\t\tjQuery._data( cur, \"handle\" );\n\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif (\n\t\t\t\t( !special._default ||\n\t\t\t\t special._default.apply( eventPath.pop(), data ) === false\n\t\t\t\t) && acceptData( elem )\n\t\t\t) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name name as the event.\n\t\t\t\t// Can't use an .isFunction() check here because IE6/7 fails that test.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && elem[ type ] && !jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\t\t\t\t\ttry {\n\t\t\t\t\t\telem[ type ]();\n\t\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t\t// IE<9 dies on focus/blur to hidden element (#1486,#12518)\n\t\t\t\t\t\t// only reproducible on winXP IE8 native, not IE9 in IE8 mode\n\t\t\t\t\t}\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\tdispatch: function( event ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tevent = jQuery.event.fix( event );\n\n\t\tvar i, j, ret, matched, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\targs = slice.call( arguments ),\n\t\t\thandlers = ( jQuery._data( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\n\t\t\t\t// a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\tif ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, matches, sel, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Support (at least): Chrome, IE9\n\t\t// Find delegate handlers\n\t\t// Black-hole SVG <use> instance trees (#13180)\n\t\t//\n\t\t// Support: Firefox<=42+\n\t\t// Avoid non-left-click in FF but don't block IE radio events (#3861, gh-2343)\n\t\tif ( delegateCount && cur.nodeType &&\n\t\t\t( event.type !== \"click\" || isNaN( event.button ) || event.button < 1 ) ) {\n\n\t\t\t/* jshint eqeqeq: false */\n\t\t\tfor ( ; cur != this; cur = cur.parentNode || this ) {\n\t\t\t\t/* jshint eqeqeq: true */\n\n\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.nodeType === 1 && ( cur.disabled !== true || event.type !== \"click\" ) ) {\n\t\t\t\t\tmatches = [];\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matches[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatches[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matches[ sel ] ) {\n\t\t\t\t\t\t\tmatches.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matches.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matches } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: this, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\tfix: function( event ) {\n\t\tif ( event[ jQuery.expando ] ) {\n\t\t\treturn event;\n\t\t}\n\n\t\t// Create a writable copy of the event object and normalize some properties\n\t\tvar i, prop, copy,\n\t\t\ttype = event.type,\n\t\t\toriginalEvent = event,\n\t\t\tfixHook = this.fixHooks[ type ];\n\n\t\tif ( !fixHook ) {\n\t\t\tthis.fixHooks[ type ] = fixHook =\n\t\t\t\trmouseEvent.test( type ) ? this.mouseHooks :\n\t\t\t\trkeyEvent.test( type ) ? this.keyHooks :\n\t\t\t\t{};\n\t\t}\n\t\tcopy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;\n\n\t\tevent = new jQuery.Event( originalEvent );\n\n\t\ti = copy.length;\n\t\twhile ( i-- ) {\n\t\t\tprop = copy[ i ];\n\t\t\tevent[ prop ] = originalEvent[ prop ];\n\t\t}\n\n\t\t// Support: IE<9\n\t\t// Fix target property (#1925)\n\t\tif ( !event.target ) {\n\t\t\tevent.target = originalEvent.srcElement || document;\n\t\t}\n\n\t\t// Support: Safari 6-8+\n\t\t// Target should not be a text node (#504, #13143)\n\t\tif ( event.target.nodeType === 3 ) {\n\t\t\tevent.target = event.target.parentNode;\n\t\t}\n\n\t\t// Support: IE<9\n\t\t// For mouse/key events, metaKey==false if it's undefined (#3368, #11328)\n\t\tevent.metaKey = !!event.metaKey;\n\n\t\treturn fixHook.filter ? fixHook.filter( event, originalEvent ) : event;\n\t},\n\n\t// Includes some event props shared by KeyEvent and MouseEvent\n\tprops: ( \"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase \" +\n\t\t\"metaKey relatedTarget shiftKey target timeStamp view which\" ).split( \" \" ),\n\n\tfixHooks: {},\n\n\tkeyHooks: {\n\t\tprops: \"char charCode key keyCode\".split( \" \" ),\n\t\tfilter: function( event, original ) {\n\n\t\t\t// Add which for key events\n\t\t\tif ( event.which == null ) {\n\t\t\t\tevent.which = original.charCode != null ? original.charCode : original.keyCode;\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tmouseHooks: {\n\t\tprops: ( \"button buttons clientX clientY fromElement offsetX offsetY \" +\n\t\t\t\"pageX pageY screenX screenY toElement\" ).split( \" \" ),\n\t\tfilter: function( event, original ) {\n\t\t\tvar body, eventDoc, doc,\n\t\t\t\tbutton = original.button,\n\t\t\t\tfromElement = original.fromElement;\n\n\t\t\t// Calculate pageX/Y if missing and clientX/Y available\n\t\t\tif ( event.pageX == null && original.clientX != null ) {\n\t\t\t\teventDoc = event.target.ownerDocument || document;\n\t\t\t\tdoc = eventDoc.documentElement;\n\t\t\t\tbody = eventDoc.body;\n\n\t\t\t\tevent.pageX = original.clientX +\n\t\t\t\t\t( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) -\n\t\t\t\t\t( doc && doc.clientLeft || body && body.clientLeft || 0 );\n\t\t\t\tevent.pageY = original.clientY +\n\t\t\t\t\t( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) -\n\t\t\t\t\t( doc && doc.clientTop  || body && body.clientTop  || 0 );\n\t\t\t}\n\n\t\t\t// Add relatedTarget, if necessary\n\t\t\tif ( !event.relatedTarget && fromElement ) {\n\t\t\t\tevent.relatedTarget = fromElement === event.target ?\n\t\t\t\t\toriginal.toElement :\n\t\t\t\t\tfromElement;\n\t\t\t}\n\n\t\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\t\t// Note: button is not normalized, so don't use it\n\t\t\tif ( !event.which && button !== undefined ) {\n\t\t\t\tevent.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tfocus: {\n\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.focus();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t\t// Support: IE<9\n\t\t\t\t\t\t// If we error on focus to hidden element (#1486, #12518),\n\t\t\t\t\t\t// let .trigger() run the handlers\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusin\"\n\t\t},\n\t\tblur: {\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n\t\t\t\t\tthis.blur();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusout\"\n\t\t},\n\t\tclick: {\n\n\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\ttrigger: function() {\n\t\t\t\tif ( jQuery.nodeName( this, \"input\" ) && this.type === \"checkbox\" && this.click ) {\n\t\t\t\t\tthis.click();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\n\t\t\t_default: function( event ) {\n\t\t\t\treturn jQuery.nodeName( event.target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\n\t\t\t\t// Previously, `originalEvent: {}` was set here, so stopPropagation call\n\t\t\t\t// would not be triggered on donor event, since in our own\n\t\t\t\t// jQuery.event.stopPropagation function we had a check for existence of\n\t\t\t\t// originalEvent.stopPropagation method, so, consequently it would be a noop.\n\t\t\t\t//\n\t\t\t\t// Guard for simulated events was moved to jQuery.event.stopPropagation function\n\t\t\t\t// since `originalEvent` should point to the original event for the\n\t\t\t\t// constancy with other events and for more focused logic\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\n\t\tif ( e.isDefaultPrevented() ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n};\n\njQuery.removeEvent = document.removeEventListener ?\n\tfunction( elem, type, handle ) {\n\n\t\t// This \"if\" is needed for plain objects\n\t\tif ( elem.removeEventListener ) {\n\t\t\telem.removeEventListener( type, handle );\n\t\t}\n\t} :\n\tfunction( elem, type, handle ) {\n\t\tvar name = \"on\" + type;\n\n\t\tif ( elem.detachEvent ) {\n\n\t\t\t// #8545, #7054, preventing memory leaks for custom events in IE6-8\n\t\t\t// detachEvent needed property on element, by name of that event,\n\t\t\t// to properly expose it to GC\n\t\t\tif ( typeof elem[ name ] === \"undefined\" ) {\n\t\t\t\telem[ name ] = null;\n\t\t\t}\n\n\t\t\telem.detachEvent( name, handle );\n\t\t}\n\t};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: IE < 9, Android < 4.0\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || jQuery.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\t\tif ( !e ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If preventDefault exists, run it on the original event\n\t\tif ( e.preventDefault ) {\n\t\t\te.preventDefault();\n\n\t\t// Support: IE\n\t\t// Otherwise set the returnValue property of the original event to false\n\t\t} else {\n\t\t\te.returnValue = false;\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( !e || this.isSimulated ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If stopPropagation exists, run it on the original event\n\t\tif ( e.stopPropagation ) {\n\t\t\te.stopPropagation();\n\t\t}\n\n\t\t// Support: IE\n\t\t// Set the cancelBubble property of the original event to true\n\t\te.cancelBubble = true;\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && e.stopImmediatePropagation ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://code.google.com/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\n// IE submit delegation\nif ( !support.submit ) {\n\n\tjQuery.event.special.submit = {\n\t\tsetup: function() {\n\n\t\t\t// Only need this for delegated form submit events\n\t\t\tif ( jQuery.nodeName( this, \"form\" ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Lazy-add a submit handler when a descendant form may potentially be submitted\n\t\t\tjQuery.event.add( this, \"click._submit keypress._submit\", function( e ) {\n\n\t\t\t\t// Node name check avoids a VML-related crash in IE (#9807)\n\t\t\t\tvar elem = e.target,\n\t\t\t\t\tform = jQuery.nodeName( elem, \"input\" ) || jQuery.nodeName( elem, \"button\" ) ?\n\n\t\t\t\t\t\t// Support: IE <=8\n\t\t\t\t\t\t// We use jQuery.prop instead of elem.form\n\t\t\t\t\t\t// to allow fixing the IE8 delegated submit issue (gh-2332)\n\t\t\t\t\t\t// by 3rd party polyfills/workarounds.\n\t\t\t\t\t\tjQuery.prop( elem, \"form\" ) :\n\t\t\t\t\t\tundefined;\n\n\t\t\t\tif ( form && !jQuery._data( form, \"submit\" ) ) {\n\t\t\t\t\tjQuery.event.add( form, \"submit._submit\", function( event ) {\n\t\t\t\t\t\tevent._submitBubble = true;\n\t\t\t\t\t} );\n\t\t\t\t\tjQuery._data( form, \"submit\", true );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// return undefined since we don't need an event listener\n\t\t},\n\n\t\tpostDispatch: function( event ) {\n\n\t\t\t// If form was submitted by the user, bubble the event up the tree\n\t\t\tif ( event._submitBubble ) {\n\t\t\t\tdelete event._submitBubble;\n\t\t\t\tif ( this.parentNode && !event.isTrigger ) {\n\t\t\t\t\tjQuery.event.simulate( \"submit\", this.parentNode, event );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tteardown: function() {\n\n\t\t\t// Only need this for delegated form submit events\n\t\t\tif ( jQuery.nodeName( this, \"form\" ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Remove delegated handlers; cleanData eventually reaps submit handlers attached above\n\t\t\tjQuery.event.remove( this, \"._submit\" );\n\t\t}\n\t};\n}\n\n// IE change delegation and checkbox/radio fix\nif ( !support.change ) {\n\n\tjQuery.event.special.change = {\n\n\t\tsetup: function() {\n\n\t\t\tif ( rformElems.test( this.nodeName ) ) {\n\n\t\t\t\t// IE doesn't fire change on a check/radio until blur; trigger it on click\n\t\t\t\t// after a propertychange. Eat the blur-change in special.change.handle.\n\t\t\t\t// This still fires onchange a second time for check/radio after blur.\n\t\t\t\tif ( this.type === \"checkbox\" || this.type === \"radio\" ) {\n\t\t\t\t\tjQuery.event.add( this, \"propertychange._change\", function( event ) {\n\t\t\t\t\t\tif ( event.originalEvent.propertyName === \"checked\" ) {\n\t\t\t\t\t\t\tthis._justChanged = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t\tjQuery.event.add( this, \"click._change\", function( event ) {\n\t\t\t\t\t\tif ( this._justChanged && !event.isTrigger ) {\n\t\t\t\t\t\t\tthis._justChanged = false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Allow triggered, simulated change events (#11500)\n\t\t\t\t\t\tjQuery.event.simulate( \"change\", this, event );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Delegated event; lazy-add a change handler on descendant inputs\n\t\t\tjQuery.event.add( this, \"beforeactivate._change\", function( e ) {\n\t\t\t\tvar elem = e.target;\n\n\t\t\t\tif ( rformElems.test( elem.nodeName ) && !jQuery._data( elem, \"change\" ) ) {\n\t\t\t\t\tjQuery.event.add( elem, \"change._change\", function( event ) {\n\t\t\t\t\t\tif ( this.parentNode && !event.isSimulated && !event.isTrigger ) {\n\t\t\t\t\t\t\tjQuery.event.simulate( \"change\", this.parentNode, event );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t\tjQuery._data( elem, \"change\", true );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\thandle: function( event ) {\n\t\t\tvar elem = event.target;\n\n\t\t\t// Swallow native change events from checkbox/radio, we already triggered them above\n\t\t\tif ( this !== elem || event.isSimulated || event.isTrigger ||\n\t\t\t\t( elem.type !== \"radio\" && elem.type !== \"checkbox\" ) ) {\n\n\t\t\t\treturn event.handleObj.handler.apply( this, arguments );\n\t\t\t}\n\t\t},\n\n\t\tteardown: function() {\n\t\t\tjQuery.event.remove( this, \"._change\" );\n\n\t\t\treturn !rformElems.test( this.nodeName );\n\t\t}\n\t};\n}\n\n// Support: Firefox\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome, Safari\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://code.google.com/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = jQuery._data( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tjQuery._data( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = jQuery._data( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tjQuery._removeData( doc, fix );\n\t\t\t\t} else {\n\t\t\t\t\tjQuery._data( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\n\njQuery.fn.extend( {\n\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t},\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\nvar rinlinejQuery = / jQuery\\d+=\"(?:null|\\d+)\"/g,\n\trnoshimcache = new RegExp( \"<(?:\" + nodeNames + \")[\\\\s/>]\", \"i\" ),\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:-]+)[^>]*)\\/>/gi,\n\n\t// Support: IE 10-11, Edge 10240+\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trscriptTypeMasked = /^true\\/(.*)/,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,\n\tsafeFragment = createSafeFragment( document ),\n\tfragmentDiv = safeFragment.appendChild( document.createElement( \"div\" ) );\n\n// Support: IE<8\n// Manipulating tables requires a tbody\nfunction manipulationTarget( elem, content ) {\n\treturn jQuery.nodeName( elem, \"table\" ) &&\n\t\tjQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ?\n\n\t\telem.getElementsByTagName( \"tbody\" )[ 0 ] ||\n\t\t\telem.appendChild( elem.ownerDocument.createElement( \"tbody\" ) ) :\n\t\telem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( jQuery.find.attr( elem, \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tvar match = rscriptTypeMasked.exec( elem.type );\n\tif ( match ) {\n\t\telem.type = match[ 1 ];\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tif ( dest.nodeType !== 1 || !jQuery.hasData( src ) ) {\n\t\treturn;\n\t}\n\n\tvar type, i, l,\n\t\toldData = jQuery._data( src ),\n\t\tcurData = jQuery._data( dest, oldData ),\n\t\tevents = oldData.events;\n\n\tif ( events ) {\n\t\tdelete curData.handle;\n\t\tcurData.events = {};\n\n\t\tfor ( type in events ) {\n\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t}\n\t\t}\n\t}\n\n\t// make the cloned public data object a copy from the original\n\tif ( curData.data ) {\n\t\tcurData.data = jQuery.extend( {}, curData.data );\n\t}\n}\n\nfunction fixCloneNodeIssues( src, dest ) {\n\tvar nodeName, e, data;\n\n\t// We do not need to do anything for non-Elements\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\tnodeName = dest.nodeName.toLowerCase();\n\n\t// IE6-8 copies events bound via attachEvent when using cloneNode.\n\tif ( !support.noCloneEvent && dest[ jQuery.expando ] ) {\n\t\tdata = jQuery._data( dest );\n\n\t\tfor ( e in data.events ) {\n\t\t\tjQuery.removeEvent( dest, e, data.handle );\n\t\t}\n\n\t\t// Event data gets referenced instead of copied if the expando gets copied too\n\t\tdest.removeAttribute( jQuery.expando );\n\t}\n\n\t// IE blanks contents when cloning scripts, and tries to evaluate newly-set text\n\tif ( nodeName === \"script\" && dest.text !== src.text ) {\n\t\tdisableScript( dest ).text = src.text;\n\t\trestoreScript( dest );\n\n\t// IE6-10 improperly clones children of object elements using classid.\n\t// IE10 throws NoModificationAllowedError if parent is null, #12132.\n\t} else if ( nodeName === \"object\" ) {\n\t\tif ( dest.parentNode ) {\n\t\t\tdest.outerHTML = src.outerHTML;\n\t\t}\n\n\t\t// This path appears unavoidable for IE9. When cloning an object\n\t\t// element in IE9, the outerHTML strategy above is not sufficient.\n\t\t// If the src has innerHTML and the destination does not,\n\t\t// copy the src.innerHTML into the dest.innerHTML. #10324\n\t\tif ( support.html5Clone && ( src.innerHTML && !jQuery.trim( dest.innerHTML ) ) ) {\n\t\t\tdest.innerHTML = src.innerHTML;\n\t\t}\n\n\t} else if ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\n\t\t// IE6-8 fails to persist the checked state of a cloned checkbox\n\t\t// or radio button. Worse, IE6-7 fail to give the cloned element\n\t\t// a checked appearance if the defaultChecked value isn't also set\n\n\t\tdest.defaultChecked = dest.checked = src.checked;\n\n\t\t// IE6-7 get confused and end up setting the value of a cloned\n\t\t// checkbox/radio button to an empty string instead of \"on\"\n\t\tif ( dest.value !== src.value ) {\n\t\t\tdest.value = src.value;\n\t\t}\n\n\t// IE6-8 fails to return the selected option to the default selected\n\t// state when cloning options\n\t} else if ( nodeName === \"option\" ) {\n\t\tdest.defaultSelected = dest.selected = src.defaultSelected;\n\n\t// IE6-8 fails to set the defaultValue to the correct value when\n\t// cloning other types of input fields\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = concat.apply( [], args );\n\n\tvar first, node, hasScripts,\n\t\tscripts, doc, fragment,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tisFunction = jQuery.isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( isFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( isFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android<4.1, PhantomJS<2\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!jQuery._data( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tjQuery.globalEval(\n\t\t\t\t\t\t\t\t( node.text || node.textContent || node.innerHTML || \"\" )\n\t\t\t\t\t\t\t\t\t.replace( rcleanScript, \"\" )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Fix #11809: Avoid leaking memory\n\t\t\tfragment = first = null;\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\telems = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = elems[ i ] ) != null; i++ ) {\n\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && jQuery.contains( node.ownerDocument, node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html.replace( rxhtmlTag, \"<$1></$2>\" );\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar destElements, node, clone, i, srcElements,\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\n\t\tif ( support.html5Clone || jQuery.isXMLDoc( elem ) ||\n\t\t\t!rnoshimcache.test( \"<\" + elem.nodeName + \">\" ) ) {\n\n\t\t\tclone = elem.cloneNode( true );\n\n\t\t// IE<=8 does not properly clone detached, unknown element nodes\n\t\t} else {\n\t\t\tfragmentDiv.innerHTML = elem.outerHTML;\n\t\t\tfragmentDiv.removeChild( clone = fragmentDiv.firstChild );\n\t\t}\n\n\t\tif ( ( !support.noCloneEvent || !support.noCloneChecked ) &&\n\t\t\t\t( elem.nodeType === 1 || elem.nodeType === 11 ) && !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\t// Fix all IE cloning issues\n\t\t\tfor ( i = 0; ( node = srcElements[ i ] ) != null; ++i ) {\n\n\t\t\t\t// Ensure that the destination node is not null; Fixes #9587\n\t\t\t\tif ( destElements[ i ] ) {\n\t\t\t\t\tfixCloneNodeIssues( node, destElements[ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0; ( node = srcElements[ i ] ) != null; i++ ) {\n\t\t\t\t\tcloneCopyEvent( node, destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\tdestElements = srcElements = node = null;\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems, /* internal */ forceAcceptData ) {\n\t\tvar elem, type, id, data,\n\t\t\ti = 0,\n\t\t\tinternalKey = jQuery.expando,\n\t\t\tcache = jQuery.cache,\n\t\t\tattributes = support.attributes,\n\t\t\tspecial = jQuery.event.special;\n\n\t\tfor ( ; ( elem = elems[ i ] ) != null; i++ ) {\n\t\t\tif ( forceAcceptData || acceptData( elem ) ) {\n\n\t\t\t\tid = elem[ internalKey ];\n\t\t\t\tdata = id && cache[ id ];\n\n\t\t\t\tif ( data ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Remove cache only if it was not already removed by jQuery.event.remove\n\t\t\t\t\tif ( cache[ id ] ) {\n\n\t\t\t\t\t\tdelete cache[ id ];\n\n\t\t\t\t\t\t// Support: IE<9\n\t\t\t\t\t\t// IE does not allow us to delete expando properties from nodes\n\t\t\t\t\t\t// IE creates expando attributes along with the property\n\t\t\t\t\t\t// IE does not have a removeAttribute function on Document nodes\n\t\t\t\t\t\tif ( !attributes && typeof elem.removeAttribute !== \"undefined\" ) {\n\t\t\t\t\t\t\telem.removeAttribute( internalKey );\n\n\t\t\t\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t\t\t\t// https://code.google.com/p/chromium/issues/detail?id=378607\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\telem[ internalKey ] = undefined;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdeletedIds.push( id );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\n\t// Keep domManip exposed until 3.0 (gh-2225)\n\tdomManip: domManip,\n\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().append(\n\t\t\t\t\t( this[ 0 ] && this[ 0 ].ownerDocument || document ).createTextNode( value )\n\t\t\t\t);\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\n\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t}\n\n\t\t\t// Remove any remaining nodes\n\t\t\twhile ( elem.firstChild ) {\n\t\t\t\telem.removeChild( elem.firstChild );\n\t\t\t}\n\n\t\t\t// If this is a select, ensure that it displays empty (#12336)\n\t\t\t// Support: IE<9\n\t\t\tif ( elem.options && jQuery.nodeName( elem, \"select\" ) ) {\n\t\t\t\telem.options.length = 0;\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined ) {\n\t\t\t\treturn elem.nodeType === 1 ?\n\t\t\t\t\telem.innerHTML.replace( rinlinejQuery, \"\" ) :\n\t\t\t\t\tundefined;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t( support.htmlSerialize || !rnoshimcache.test( value )  ) &&\n\t\t\t\t( support.leadingWhitespace || !rleadingWhitespace.test( value ) ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\telem = this[ i ] || {};\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\ti = 0,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Modern browsers can apply jQuery collections as arrays, but oldIE needs a .get()\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\n\n\nvar iframe,\n\telemdisplay = {\n\n\t\t// Support: Firefox\n\t\t// We have to pre-define these values for FF (#10227)\n\t\tHTML: \"block\",\n\t\tBODY: \"block\"\n\t};\n\n/**\n * Retrieve the actual display of a element\n * @param {String} name nodeName of the element\n * @param {Object} doc Document object\n */\n\n// Called only from within defaultDisplay\nfunction actualDisplay( name, doc ) {\n\tvar elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),\n\n\t\tdisplay = jQuery.css( elem[ 0 ], \"display\" );\n\n\t// We don't have any data stored on the element,\n\t// so use \"detach\" method as fast way to get rid of the element\n\telem.detach();\n\n\treturn display;\n}\n\n/**\n * Try to determine the default display value of an element\n * @param {String} nodeName\n */\nfunction defaultDisplay( nodeName ) {\n\tvar doc = document,\n\t\tdisplay = elemdisplay[ nodeName ];\n\n\tif ( !display ) {\n\t\tdisplay = actualDisplay( nodeName, doc );\n\n\t\t// If the simple way fails, read from inside an iframe\n\t\tif ( display === \"none\" || !display ) {\n\n\t\t\t// Use the already-created iframe if possible\n\t\t\tiframe = ( iframe || jQuery( \"<iframe frameborder='0' width='0' height='0'/>\" ) )\n\t\t\t\t.appendTo( doc.documentElement );\n\n\t\t\t// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\n\t\t\tdoc = ( iframe[ 0 ].contentWindow || iframe[ 0 ].contentDocument ).document;\n\n\t\t\t// Support: IE\n\t\t\tdoc.write();\n\t\t\tdoc.close();\n\n\t\t\tdisplay = actualDisplay( nodeName, doc );\n\t\t\tiframe.detach();\n\t\t}\n\n\t\t// Store the correct default display\n\t\telemdisplay[ nodeName ] = display;\n\t}\n\n\treturn display;\n}\nvar rmargin = ( /^margin/ );\n\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar swap = function( elem, options, callback, args ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.apply( elem, args || [] );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\nvar documentElement = document.documentElement;\n\n\n\n( function() {\n\tvar pixelPositionVal, pixelMarginRightVal, boxSizingReliableVal,\n\t\treliableHiddenOffsetsVal, reliableMarginRightVal, reliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\tdiv.style.cssText = \"float:left;opacity:.5\";\n\n\t// Support: IE<9\n\t// Make sure that element opacity exists (as opposed to filter)\n\tsupport.opacity = div.style.opacity === \"0.5\";\n\n\t// Verify style float existence\n\t// (IE uses styleFloat instead of cssFloat)\n\tsupport.cssFloat = !!div.style.cssFloat;\n\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tcontainer = document.createElement( \"div\" );\n\tcontainer.style.cssText = \"border:0;width:8px;height:0;top:0;left:-9999px;\" +\n\t\t\"padding:0;margin-top:1px;position:absolute\";\n\tdiv.innerHTML = \"\";\n\tcontainer.appendChild( div );\n\n\t// Support: Firefox<29, Android 2.3\n\t// Vendor-prefix box-sizing\n\tsupport.boxSizing = div.style.boxSizing === \"\" || div.style.MozBoxSizing === \"\" ||\n\t\tdiv.style.WebkitBoxSizing === \"\";\n\n\tjQuery.extend( support, {\n\t\treliableHiddenOffsets: function() {\n\t\t\tif ( pixelPositionVal == null ) {\n\t\t\t\tcomputeStyleTests();\n\t\t\t}\n\t\t\treturn reliableHiddenOffsetsVal;\n\t\t},\n\n\t\tboxSizingReliable: function() {\n\n\t\t\t// We're checking for pixelPositionVal here instead of boxSizingReliableVal\n\t\t\t// since that compresses better and they're computed together anyway.\n\t\t\tif ( pixelPositionVal == null ) {\n\t\t\t\tcomputeStyleTests();\n\t\t\t}\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\n\t\tpixelMarginRight: function() {\n\n\t\t\t// Support: Android 4.0-4.3\n\t\t\tif ( pixelPositionVal == null ) {\n\t\t\t\tcomputeStyleTests();\n\t\t\t}\n\t\t\treturn pixelMarginRightVal;\n\t\t},\n\n\t\tpixelPosition: function() {\n\t\t\tif ( pixelPositionVal == null ) {\n\t\t\t\tcomputeStyleTests();\n\t\t\t}\n\t\t\treturn pixelPositionVal;\n\t\t},\n\n\t\treliableMarginRight: function() {\n\n\t\t\t// Support: Android 2.3\n\t\t\tif ( pixelPositionVal == null ) {\n\t\t\t\tcomputeStyleTests();\n\t\t\t}\n\t\t\treturn reliableMarginRightVal;\n\t\t},\n\n\t\treliableMarginLeft: function() {\n\n\t\t\t// Support: IE <=8 only, Android 4.0 - 4.3 only, Firefox <=3 - 37\n\t\t\tif ( pixelPositionVal == null ) {\n\t\t\t\tcomputeStyleTests();\n\t\t\t}\n\t\t\treturn reliableMarginLeftVal;\n\t\t}\n\t} );\n\n\tfunction computeStyleTests() {\n\t\tvar contents, divStyle,\n\t\t\tdocumentElement = document.documentElement;\n\n\t\t// Setup\n\t\tdocumentElement.appendChild( container );\n\n\t\tdiv.style.cssText =\n\n\t\t\t// Support: Android 2.3\n\t\t\t// Vendor-prefix box-sizing\n\t\t\t\"-webkit-box-sizing:border-box;box-sizing:border-box;\" +\n\t\t\t\"position:relative;display:block;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"top:1%;width:50%\";\n\n\t\t// Support: IE<9\n\t\t// Assume reasonable values in the absence of getComputedStyle\n\t\tpixelPositionVal = boxSizingReliableVal = reliableMarginLeftVal = false;\n\t\tpixelMarginRightVal = reliableMarginRightVal = true;\n\n\t\t// Check for getComputedStyle so that this code is not run in IE<9.\n\t\tif ( window.getComputedStyle ) {\n\t\t\tdivStyle = window.getComputedStyle( div );\n\t\t\tpixelPositionVal = ( divStyle || {} ).top !== \"1%\";\n\t\t\treliableMarginLeftVal = ( divStyle || {} ).marginLeft === \"2px\";\n\t\t\tboxSizingReliableVal = ( divStyle || { width: \"4px\" } ).width === \"4px\";\n\n\t\t\t// Support: Android 4.0 - 4.3 only\n\t\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\t\tdiv.style.marginRight = \"50%\";\n\t\t\tpixelMarginRightVal = ( divStyle || { marginRight: \"4px\" } ).marginRight === \"4px\";\n\n\t\t\t// Support: Android 2.3 only\n\t\t\t// Div with explicit width and no margin-right incorrectly\n\t\t\t// gets computed margin-right based on width of container (#3333)\n\t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n\t\t\tcontents = div.appendChild( document.createElement( \"div\" ) );\n\n\t\t\t// Reset CSS: box-sizing; display; margin; border; padding\n\t\t\tcontents.style.cssText = div.style.cssText =\n\n\t\t\t\t// Support: Android 2.3\n\t\t\t\t// Vendor-prefix box-sizing\n\t\t\t\t\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;\" +\n\t\t\t\t\"box-sizing:content-box;display:block;margin:0;border:0;padding:0\";\n\t\t\tcontents.style.marginRight = contents.style.width = \"0\";\n\t\t\tdiv.style.width = \"1px\";\n\n\t\t\treliableMarginRightVal =\n\t\t\t\t!parseFloat( ( window.getComputedStyle( contents ) || {} ).marginRight );\n\n\t\t\tdiv.removeChild( contents );\n\t\t}\n\n\t\t// Support: IE6-8\n\t\t// First check that getClientRects works as expected\n\t\t// Check if table cells still have offsetWidth/Height when they are set\n\t\t// to display:none and there are still other visible table cells in a\n\t\t// table row; if so, offsetWidth/Height are not reliable for use when\n\t\t// determining if an element has been hidden directly using\n\t\t// display:none (it is still safe to use offsets if a parent element is\n\t\t// hidden; don safety goggles and see bug #4512 for more information).\n\t\tdiv.style.display = \"none\";\n\t\treliableHiddenOffsetsVal = div.getClientRects().length === 0;\n\t\tif ( reliableHiddenOffsetsVal ) {\n\t\t\tdiv.style.display = \"\";\n\t\t\tdiv.innerHTML = \"<table><tr><td></td><td>t</td></tr></table>\";\n\t\t\tdiv.childNodes[ 0 ].style.borderCollapse = \"separate\";\n\t\t\tcontents = div.getElementsByTagName( \"td\" );\n\t\t\tcontents[ 0 ].style.cssText = \"margin:0;border:0;padding:0;display:none\";\n\t\t\treliableHiddenOffsetsVal = contents[ 0 ].offsetHeight === 0;\n\t\t\tif ( reliableHiddenOffsetsVal ) {\n\t\t\t\tcontents[ 0 ].style.display = \"\";\n\t\t\t\tcontents[ 1 ].style.display = \"none\";\n\t\t\t\treliableHiddenOffsetsVal = contents[ 0 ].offsetHeight === 0;\n\t\t\t}\n\t\t}\n\n\t\t// Teardown\n\t\tdocumentElement.removeChild( container );\n\t}\n\n} )();\n\n\nvar getStyles, curCSS,\n\trposition = /^(top|right|bottom|left)$/;\n\nif ( window.getComputedStyle ) {\n\tgetStyles = function( elem ) {\n\n\t\t// Support: IE<=11+, Firefox<=30+ (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view || !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\n\tcurCSS = function( elem, name, computed ) {\n\t\tvar width, minWidth, maxWidth, ret,\n\t\t\tstyle = elem.style;\n\n\t\tcomputed = computed || getStyles( elem );\n\n\t\t// getPropertyValue is only needed for .css('filter') in IE9, see #12537\n\t\tret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined;\n\n\t\t// Support: Opera 12.1x only\n\t\t// Fall back to style even without computed\n\t\t// computed is undefined for elems on document fragments\n\t\tif ( ( ret === \"\" || ret === undefined ) && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\tif ( computed ) {\n\n\t\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t\t// Chrome < 17 and Safari 5.0 uses \"computed value\"\n\t\t\t// instead of \"used value\" for margin-right\n\t\t\t// Safari 5.1.7 (at least) returns percentage for a larger set of values,\n\t\t\t// but width seems to be reliably pixels\n\t\t\t// this is against the CSSOM draft spec:\n\t\t\t// http://dev.w3.org/csswg/cssom/#resolved-values\n\t\t\tif ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {\n\n\t\t\t\t// Remember the original values\n\t\t\t\twidth = style.width;\n\t\t\t\tminWidth = style.minWidth;\n\t\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t\t// Put in the new values to get a computed value out\n\t\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\t\tret = computed.width;\n\n\t\t\t\t// Revert the changed values\n\t\t\t\tstyle.width = width;\n\t\t\t\tstyle.minWidth = minWidth;\n\t\t\t\tstyle.maxWidth = maxWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Support: IE\n\t\t// IE returns zIndex value as an integer.\n\t\treturn ret === undefined ?\n\t\t\tret :\n\t\t\tret + \"\";\n\t};\n} else if ( documentElement.currentStyle ) {\n\tgetStyles = function( elem ) {\n\t\treturn elem.currentStyle;\n\t};\n\n\tcurCSS = function( elem, name, computed ) {\n\t\tvar left, rs, rsLeft, ret,\n\t\t\tstyle = elem.style;\n\n\t\tcomputed = computed || getStyles( elem );\n\t\tret = computed ? computed[ name ] : undefined;\n\n\t\t// Avoid setting ret to empty string here\n\t\t// so we don't default to auto\n\t\tif ( ret == null && style && style[ name ] ) {\n\t\t\tret = style[ name ];\n\t\t}\n\n\t\t// From the awesome hack by Dean Edwards\n\t\t// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291\n\n\t\t// If we're not dealing with a regular pixel number\n\t\t// but a number that has a weird ending, we need to convert it to pixels\n\t\t// but not position css attributes, as those are\n\t\t// proportional to the parent element instead\n\t\t// and we can't measure the parent instead because it\n\t\t// might trigger a \"stacking dolls\" problem\n\t\tif ( rnumnonpx.test( ret ) && !rposition.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\tleft = style.left;\n\t\t\trs = elem.runtimeStyle;\n\t\t\trsLeft = rs && rs.left;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tif ( rsLeft ) {\n\t\t\t\trs.left = elem.currentStyle.left;\n\t\t\t}\n\t\t\tstyle.left = name === \"fontSize\" ? \"1em\" : ret;\n\t\t\tret = style.pixelLeft + \"px\";\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.left = left;\n\t\t\tif ( rsLeft ) {\n\t\t\t\trs.left = rsLeft;\n\t\t\t}\n\t\t}\n\n\t\t// Support: IE\n\t\t// IE returns zIndex value as an integer.\n\t\treturn ret === undefined ?\n\t\t\tret :\n\t\t\tret + \"\" || \"auto\";\n\t};\n}\n\n\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar\n\n\t\tralpha = /alpha\\([^)]*\\)/i,\n\tropacity = /opacity\\s*=\\s*([^)]*)/i,\n\n\t// swappable if display is none or starts with table except\n\t// \"table\", \"table-cell\", or \"table-caption\"\n\t// see here for display values:\n\t// https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\trnumsplit = new RegExp( \"^(\" + pnum + \")(.*)$\", \"i\" ),\n\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t},\n\n\tcssPrefixes = [ \"Webkit\", \"O\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style;\n\n\n// return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName( name ) {\n\n\t// shortcut for names that are not vendor prefixed\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\n\t// check for vendor prefixed names\n\tvar capName = name.charAt( 0 ).toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem, hidden,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvalues[ index ] = jQuery._data( elem, \"olddisplay\" );\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Reset the inline display of this element to learn if it is\n\t\t\t// being hidden by cascaded rules or not\n\t\t\tif ( !values[ index ] && display === \"none\" ) {\n\t\t\t\telem.style.display = \"\";\n\t\t\t}\n\n\t\t\t// Set elements which have been overridden with display: none\n\t\t\t// in a stylesheet to whatever the default browser style is\n\t\t\t// for such an element\n\t\t\tif ( elem.style.display === \"\" && isHidden( elem ) ) {\n\t\t\t\tvalues[ index ] =\n\t\t\t\t\tjQuery._data( elem, \"olddisplay\", defaultDisplay( elem.nodeName ) );\n\t\t\t}\n\t\t} else {\n\t\t\thidden = isHidden( elem );\n\n\t\t\tif ( display && display !== \"none\" || !hidden ) {\n\t\t\t\tjQuery._data(\n\t\t\t\t\telem,\n\t\t\t\t\t\"olddisplay\",\n\t\t\t\t\thidden ? display : jQuery.css( elem, \"display\" )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of most of the elements in a second loop\n\t// to avoid the constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ( !show || elem.style.display === \"none\" || elem.style.display === \"\" ) {\n\t\t\telem.style.display = show ? values[ index ] || \"\" : \"none\";\n\t\t}\n\t}\n\n\treturn elements;\n}\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\tvar matches = rnumsplit.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\n\tvar i = extra === ( isBorderBox ? \"border\" : \"content\" ) ?\n\n\t\t// If we already have the right measurement, avoid augmentation\n\t\t4 :\n\n\t\t// Otherwise initialize for horizontal or vertical properties\n\t\tname === \"width\" ? 1 : 0,\n\n\t\tval = 0;\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// both box models exclude margin, so add it if we want it\n\t\tif ( extra === \"margin\" ) {\n\t\t\tval += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\tif ( isBorderBox ) {\n\n\t\t\t// border-box includes padding, so remove it if we want content\n\t\t\tif ( extra === \"content\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// at this point, extra isn't border nor margin, so remove border\n\t\t\tif ( extra !== \"margin\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t} else {\n\n\t\t\t// at this point, extra isn't content, so add padding\n\t\t\tval += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// at this point, extra isn't content nor padding, so add border\n\t\t\tif ( extra !== \"padding\" ) {\n\t\t\t\tval += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn val;\n}\n\nfunction getWidthOrHeight( elem, name, extra ) {\n\n\t// Start with offset property, which is equivalent to the border-box value\n\tvar valueIsBorderBox = true,\n\t\tval = name === \"width\" ? elem.offsetWidth : elem.offsetHeight,\n\t\tstyles = getStyles( elem ),\n\t\tisBorderBox = support.boxSizing &&\n\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t// some non-html elements return undefined for offsetWidth, so check for null/undefined\n\t// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n\t// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\n\tif ( val <= 0 || val == null ) {\n\n\t\t// Fall back to computed then uncomputed css if necessary\n\t\tval = curCSS( elem, name, styles );\n\t\tif ( val < 0 || val == null ) {\n\t\t\tval = elem.style[ name ];\n\t\t}\n\n\t\t// Computed unit is not pixels. Stop here and return.\n\t\tif ( rnumnonpx.test( val ) ) {\n\t\t\treturn val;\n\t\t}\n\n\t\t// we need the check for style in case a browser which returns unreliable values\n\t\t// for getComputedStyle silently falls back to the reliable elem.style\n\t\tvalueIsBorderBox = isBorderBox &&\n\t\t\t( support.boxSizingReliable() || val === elem.style[ name ] );\n\n\t\t// Normalize \"\", auto, and prepare for extra\n\t\tval = parseFloat( val ) || 0;\n\t}\n\n\t// use the active box-sizing model to add/subtract irrelevant styles\n\treturn ( val +\n\t\taugmentWidthOrHeight(\n\t\t\telem,\n\t\t\tname,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles\n\t\t)\n\t) + \"px\";\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {\n\n\t\t// normalize float css property\n\t\t\"float\": support.cssFloat ? \"cssFloat\" : \"styleFloat\"\n\t},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = jQuery.camelCase( name ),\n\t\t\tstyle = elem.style;\n\n\t\tname = jQuery.cssProps[ origName ] ||\n\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\n\n\t\t// gets hook for the prefixed version\n\t\t// followed by the unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set. See: #7116\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\tif ( type === \"number\" ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// Fixes #8908, it can be done more correctly by specifing setters in cssHooks,\n\t\t\t// but it would mean to define eight\n\t\t\t// (for every problematic property) identical functions\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\t// Support: IE\n\t\t\t\t// Swallow errors from 'invalid' CSS values (#5509)\n\t\t\t\ttry {\n\t\t\t\t\tstyle[ name ] = value;\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar num, val, hooks,\n\t\t\torigName = jQuery.camelCase( name );\n\n\t\t// Make sure that we're working with the right name\n\t\tname = jQuery.cssProps[ origName ] ||\n\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\n\n\t\t// gets hook for the prefixed version\n\t\t// followed by the unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t//convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Return, converting to number if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( i, name ) {\n\tjQuery.cssHooks[ name ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// certain elements can have dimension info if we invisibly show them\n\t\t\t\t// however, it must have a current display style that would benefit from this\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\t\t\t\t\telem.offsetWidth === 0 ?\n\t\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\t\treturn getWidthOrHeight( elem, name, extra );\n\t\t\t\t\t\t} ) :\n\t\t\t\t\t\tgetWidthOrHeight( elem, name, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar styles = extra && getStyles( elem );\n\t\t\treturn setPositiveNumber( elem, value, extra ?\n\t\t\t\taugmentWidthOrHeight(\n\t\t\t\t\telem,\n\t\t\t\t\tname,\n\t\t\t\t\textra,\n\t\t\t\t\tsupport.boxSizing &&\n\t\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\t\tstyles\n\t\t\t\t) : 0\n\t\t\t);\n\t\t}\n\t};\n} );\n\nif ( !support.opacity ) {\n\tjQuery.cssHooks.opacity = {\n\t\tget: function( elem, computed ) {\n\n\t\t\t// IE uses filters for opacity\n\t\t\treturn ropacity.test( ( computed && elem.currentStyle ?\n\t\t\t\telem.currentStyle.filter :\n\t\t\t\telem.style.filter ) || \"\" ) ?\n\t\t\t\t\t( 0.01 * parseFloat( RegExp.$1 ) ) + \"\" :\n\t\t\t\t\tcomputed ? \"1\" : \"\";\n\t\t},\n\n\t\tset: function( elem, value ) {\n\t\t\tvar style = elem.style,\n\t\t\t\tcurrentStyle = elem.currentStyle,\n\t\t\t\topacity = jQuery.isNumeric( value ) ? \"alpha(opacity=\" + value * 100 + \")\" : \"\",\n\t\t\t\tfilter = currentStyle && currentStyle.filter || style.filter || \"\";\n\n\t\t\t// IE has trouble with opacity if it does not have layout\n\t\t\t// Force it by setting the zoom level\n\t\t\tstyle.zoom = 1;\n\n\t\t\t// if setting opacity to 1, and no other filters exist -\n\t\t\t// attempt to remove filter attribute #6652\n\t\t\t// if value === \"\", then remove inline opacity #12685\n\t\t\tif ( ( value >= 1 || value === \"\" ) &&\n\t\t\t\t\tjQuery.trim( filter.replace( ralpha, \"\" ) ) === \"\" &&\n\t\t\t\t\tstyle.removeAttribute ) {\n\n\t\t\t\t// Setting style.filter to null, \"\" & \" \" still leave \"filter:\" in the cssText\n\t\t\t\t// if \"filter:\" is present at all, clearType is disabled, we want to avoid this\n\t\t\t\t// style.removeAttribute is IE Only, but so apparently is this code path...\n\t\t\t\tstyle.removeAttribute( \"filter\" );\n\n\t\t\t\t// if there is no filter style applied in a css rule\n\t\t\t\t// or unset inline opacity, we are done\n\t\t\t\tif ( value === \"\" || currentStyle && !currentStyle.filter ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// otherwise, set new filter values\n\t\t\tstyle.filter = ralpha.test( filter ) ?\n\t\t\t\tfilter.replace( ralpha, opacity ) :\n\t\t\t\tfilter + \" \" + opacity;\n\t\t}\n\t};\n}\n\njQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn swap( elem, { \"display\": \"inline-block\" },\n\t\t\t\tcurCSS, [ elem, \"marginRight\" ] );\n\t\t}\n\t}\n);\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn (\n\t\t\t\tparseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\n\t\t\t\t// Support: IE<=11+\n\t\t\t\t// Running getBoundingClientRect on a disconnected node in IE throws an error\n\t\t\t\t// Support: IE8 only\n\t\t\t\t// getClientRects() errors on disconnected elems\n\t\t\t\t( jQuery.contains( elem.ownerDocument, elem ) ?\n\t\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t\t} ) :\n\t\t\t\t\t0\n\t\t\t\t)\n\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( !rmargin.test( prefix ) ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( jQuery.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t},\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHidden( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || jQuery.easing._default;\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails\n\t\t\t// so, simple values such as \"10px\" are parsed to Float.\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\n\t\t\t// use step hook for back compat - use cssHook if its there - use .style if its\n\t\t\t// available and use plain properties where available\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.nodeType === 1 &&\n\t\t\t\t( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||\n\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE <=9\n// Panic based approach to setting things on disconnected nodes\n\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t},\n\t_default: \"swing\"\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back Compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, timerId,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trrun = /queueHooks$/;\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\twindow.setTimeout( function() {\n\t\tfxNow = undefined;\n\t} );\n\treturn ( fxNow = jQuery.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\tattrs = { height: type },\n\t\ti = 0;\n\n\t// if we include width, step value is 1 to do all cssExpand values,\n\t// if we don't include width, step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4 ; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\n\t\t\t// we're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\t/* jshint validthis: true */\n\tvar prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHidden( elem ),\n\t\tdataShow = jQuery._data( elem, \"fxshow\" );\n\n\t// handle queue: false promises\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always( function() {\n\n\t\t\t// doing this makes sure that the complete handler will be called\n\t\t\t// before this completes\n\t\t\tanim.always( function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// height/width overflow pass\n\tif ( elem.nodeType === 1 && ( \"height\" in props || \"width\" in props ) ) {\n\n\t\t// Make sure that nothing sneaks out\n\t\t// Record all 3 overflow attributes because IE does not\n\t\t// change the overflow attribute when overflowX and\n\t\t// overflowY are set to the same value\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Set display property to inline-block for height/width\n\t\t// animations on inline elements that are having width/height animated\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\n\t\t// Test default display if display is currently \"none\"\n\t\tcheckDisplay = display === \"none\" ?\n\t\t\tjQuery._data( elem, \"olddisplay\" ) || defaultDisplay( elem.nodeName ) : display;\n\n\t\tif ( checkDisplay === \"inline\" && jQuery.css( elem, \"float\" ) === \"none\" ) {\n\n\t\t\t// inline-level elements accept inline-block;\n\t\t\t// block-level elements need to be inline with layout\n\t\t\tif ( !support.inlineBlockNeedsLayout || defaultDisplay( elem.nodeName ) === \"inline\" ) {\n\t\t\t\tstyle.display = \"inline-block\";\n\t\t\t} else {\n\t\t\t\tstyle.zoom = 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tif ( !support.shrinkWrapBlocks() ) {\n\t\t\tanim.always( function() {\n\t\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t\t} );\n\t\t}\n\t}\n\n\t// show/hide pass\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.exec( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// If there is dataShow left over from a stopped hide or show\n\t\t\t\t// and we are going to proceed with show, we should pretend to be hidden\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\n\t\t// Any non-fx value stops us from restoring the original display value\n\t\t} else {\n\t\t\tdisplay = undefined;\n\t\t}\n\t}\n\n\tif ( !jQuery.isEmptyObject( orig ) ) {\n\t\tif ( dataShow ) {\n\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\thidden = dataShow.hidden;\n\t\t\t}\n\t\t} else {\n\t\t\tdataShow = jQuery._data( elem, \"fxshow\", {} );\n\t\t}\n\n\t\t// store state if its toggle - enables .stop().toggle() to \"reverse\"\n\t\tif ( toggle ) {\n\t\t\tdataShow.hidden = !hidden;\n\t\t}\n\t\tif ( hidden ) {\n\t\t\tjQuery( elem ).show();\n\t\t} else {\n\t\t\tanim.done( function() {\n\t\t\t\tjQuery( elem ).hide();\n\t\t\t} );\n\t\t}\n\t\tanim.done( function() {\n\t\t\tvar prop;\n\t\t\tjQuery._removeData( elem, \"fxshow\" );\n\t\t\tfor ( prop in orig ) {\n\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t}\n\t\t} );\n\t\tfor ( prop in orig ) {\n\t\t\ttween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\n\t\t\tif ( !( prop in dataShow ) ) {\n\t\t\t\tdataShow[ prop ] = tween.start;\n\t\t\t\tif ( hidden ) {\n\t\t\t\t\ttween.end = tween.start;\n\t\t\t\t\ttween.start = prop === \"width\" || prop === \"height\" ? 1 : 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t// If this is a noop like .hide().hide(), restore an overwritten display value\n\t} else if ( ( display === \"none\" ? defaultDisplay( elem.nodeName ) : display ) === \"inline\" ) {\n\t\tstyle.display = display;\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = jQuery.camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( jQuery.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// not quite $.extend, this wont overwrite keys already present.\n\t\t\t// also - reusing 'index' from above because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = Animation.prefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\n\t\t\t// don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t} ),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t\t\t// Support: Android 2.3\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t} else {\n\t\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tanimation = deferred.promise( {\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, {\n\t\t\t\tspecialEasing: {},\n\t\t\t\teasing: jQuery.easing._default\n\t\t\t}, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\n\t\t\t\t\t// if we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// resolve when we played the last frame\n\t\t\t\t// otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} ),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length ; index++ ) {\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\tif ( jQuery.isFunction( result.stop ) ) {\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\tjQuery.proxy( result.stop, result );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( jQuery.isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t} )\n\t);\n\n\t// attach callbacks from options\n\treturn animation.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweeners: {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value );\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\treturn tween;\n\t\t} ]\n\t},\n\n\ttweener: function( props, callback ) {\n\t\tif ( jQuery.isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.match( rnotwhite );\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length ; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilters: [ defaultPrefilter ],\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tAnimation.prefilters.unshift( callback );\n\t\t} else {\n\t\t\tAnimation.prefilters.push( callback );\n\t\t}\n\t}\n} );\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tjQuery.isFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\n\t};\n\n\topt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \"number\" ? opt.duration :\n\t\topt.duration in jQuery.fx.speeds ?\n\t\t\tjQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;\n\n\t// normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( jQuery.isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHidden ).css( \"opacity\", 0 ).show()\n\n\t\t\t// animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || jQuery._data( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = jQuery._data( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// start the next in the queue if the last step wasn't forced\n\t\t\t// timers currently will call their complete callbacks, which will dequeue\n\t\t\t// but only if they were gotoEnd\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = jQuery._data( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {\n\tslideDown: genFx( \"show\" ),\n\tslideUp: genFx( \"hide\" ),\n\tslideToggle: genFx( \"toggle\" ),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n} );\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ttimers = jQuery.timers,\n\t\ti = 0;\n\n\tfxNow = jQuery.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\n\t\t// Checks the timer has not already been removed\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tif ( timer() ) {\n\t\tjQuery.fx.start();\n\t} else {\n\t\tjQuery.timers.pop();\n\t}\n};\n\njQuery.fx.interval = 13;\n\njQuery.fx.start = function() {\n\tif ( !timerId ) {\n\t\ttimerId = window.setInterval( jQuery.fx.tick, jQuery.fx.interval );\n\t}\n};\n\njQuery.fx.stop = function() {\n\twindow.clearInterval( timerId );\n\ttimerId = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// http://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar a,\n\t\tinput = document.createElement( \"input\" ),\n\t\tdiv = document.createElement( \"div\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\t// Setup\n\tdiv = document.createElement( \"div\" );\n\tdiv.setAttribute( \"className\", \"t\" );\n\tdiv.innerHTML = \"  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>\";\n\ta = div.getElementsByTagName( \"a\" )[ 0 ];\n\n\t// Support: Windows Web Apps (WWA)\n\t// `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"checkbox\" );\n\tdiv.appendChild( input );\n\n\ta = div.getElementsByTagName( \"a\" )[ 0 ];\n\n\t// First batch of tests.\n\ta.style.cssText = \"top:1px\";\n\n\t// Test setAttribute on camelCase class.\n\t// If it works, we need attrFixes when doing get/setAttribute (ie6/7)\n\tsupport.getSetAttribute = div.className !== \"t\";\n\n\t// Get the style information from getAttribute\n\t// (IE uses .cssText instead)\n\tsupport.style = /top/.test( a.getAttribute( \"style\" ) );\n\n\t// Make sure that URLs aren't manipulated\n\t// (IE normalizes it by default)\n\tsupport.hrefNormalized = a.getAttribute( \"href\" ) === \"/a\";\n\n\t// Check the default checkbox/radio value (\"\" on WebKit; \"on\" elsewhere)\n\tsupport.checkOn = !!input.value;\n\n\t// Make sure that a selected-by-default option has a working selected property.\n\t// (WebKit defaults to false instead of true, IE too, if it's in an optgroup)\n\tsupport.optSelected = opt.selected;\n\n\t// Tests for enctype support on a form (#6743)\n\tsupport.enctype = !!document.createElement( \"form\" ).enctype;\n\n\t// Make sure that the options inside disabled selects aren't marked as disabled\n\t// (WebKit marks them as disabled)\n\tselect.disabled = true;\n\tsupport.optDisabled = !opt.disabled;\n\n\t// Support: IE8 only\n\t// Check if we can trust getAttribute(\"value\")\n\tinput = document.createElement( \"input\" );\n\tinput.setAttribute( \"value\", \"\" );\n\tsupport.input = input.getAttribute( \"value\" ) === \"\";\n\n\t// Check if an input maintains its value after becoming a radio\n\tinput.value = \"t\";\n\tinput.setAttribute( \"type\", \"radio\" );\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar rreturn = /\\r/g,\n\trspaces = /[\\x20\\t\\r\\n\\f]+/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, isFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif (\n\t\t\t\t\thooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\treturn typeof ret === \"string\" ?\n\n\t\t\t\t\t// handle most common string cases\n\t\t\t\t\tret.replace( rreturn, \"\" ) :\n\n\t\t\t\t\t// handle cases where value is null/undef or number\n\t\t\t\t\tret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tisFunction = jQuery.isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( isFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\t\t\t} else if ( jQuery.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\n\t\t\t\t\t// Support: IE10-11+\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\tjQuery.trim( jQuery.text( elem ) ).replace( rspaces, \" \" );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\" || index < 0,\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length,\n\t\t\t\t\ti = index < 0 ?\n\t\t\t\t\t\tmax :\n\t\t\t\t\t\tone ? index : 0;\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// oldIE doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t( support.optDisabled ?\n\t\t\t\t\t\t\t\t!option.disabled :\n\t\t\t\t\t\t\t\toption.getAttribute( \"disabled\" ) === null ) &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!jQuery.nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\tif ( jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1 ) {\n\n\t\t\t\t\t\t// Support: IE6\n\t\t\t\t\t\t// When new option element is added to select box we need to\n\t\t\t\t\t\t// force reflow of newly added node in order to workaround delay\n\t\t\t\t\t\t// of initialization properties\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\toption.selected = optionSet = true;\n\n\t\t\t\t\t\t} catch ( _ ) {\n\n\t\t\t\t\t\t\t// Will be executed only in IE6\n\t\t\t\t\t\t\toption.scrollHeight;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\toption.selected = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\n\t\t\t\treturn options;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( jQuery.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\nvar nodeHook, boolHook,\n\tattrHandle = jQuery.expr.attrHandle,\n\truseDefault = /^(?:checked|selected)$/i,\n\tgetSetAttribute = support.getSetAttribute,\n\tgetSetInput = support.input;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// All attributes are lowercase\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\tname = name.toLowerCase();\n\t\t\thooks = jQuery.attrHooks[ name ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tjQuery.nodeName( elem, \"input\" ) ) {\n\n\t\t\t\t\t// Setting the type on a radio button after the value resets the value in IE8-9\n\t\t\t\t\t// Reset value to default in case type is set after value during creation\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name, propName,\n\t\t\ti = 0,\n\t\t\tattrNames = value && value.match( rnotwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\tpropName = jQuery.propFix[ name ] || name;\n\n\t\t\t\t// Boolean attributes get special treatment (#10870)\n\t\t\t\tif ( jQuery.expr.match.bool.test( name ) ) {\n\n\t\t\t\t\t// Set corresponding property to false\n\t\t\t\t\tif ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {\n\t\t\t\t\t\telem[ propName ] = false;\n\n\t\t\t\t\t// Support: IE<9\n\t\t\t\t\t// Also clear defaultChecked/defaultSelected (if appropriate)\n\t\t\t\t\t} else {\n\t\t\t\t\t\telem[ jQuery.camelCase( \"default-\" + name ) ] =\n\t\t\t\t\t\t\telem[ propName ] = false;\n\t\t\t\t\t}\n\n\t\t\t\t// See #9699 for explanation of this approach (setting first, then removal)\n\t\t\t\t} else {\n\t\t\t\t\tjQuery.attr( elem, name, \"\" );\n\t\t\t\t}\n\n\t\t\t\telem.removeAttribute( getSetAttribute ? name : propName );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else if ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {\n\n\t\t\t// IE<8 needs the *property* name\n\t\t\telem.setAttribute( !getSetAttribute && jQuery.propFix[ name ] || name, name );\n\n\t\t} else {\n\n\t\t\t// Support: IE<9\n\t\t\t// Use defaultChecked and defaultSelected for oldIE\n\t\t\telem[ jQuery.camelCase( \"default-\" + name ) ] = elem[ name ] = true;\n\t\t}\n\t\treturn name;\n\t}\n};\n\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tif ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {\n\t\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\t\tvar ret, handle;\n\t\t\tif ( !isXML ) {\n\n\t\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\t\thandle = attrHandle[ name ];\n\t\t\t\tattrHandle[ name ] = ret;\n\t\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\t\tname.toLowerCase() :\n\t\t\t\t\tnull;\n\t\t\t\tattrHandle[ name ] = handle;\n\t\t\t}\n\t\t\treturn ret;\n\t\t};\n\t} else {\n\t\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\t\tif ( !isXML ) {\n\t\t\t\treturn elem[ jQuery.camelCase( \"default-\" + name ) ] ?\n\t\t\t\t\tname.toLowerCase() :\n\t\t\t\t\tnull;\n\t\t\t}\n\t\t};\n\t}\n} );\n\n// fix oldIE attroperties\nif ( !getSetInput || !getSetAttribute ) {\n\tjQuery.attrHooks.value = {\n\t\tset: function( elem, value, name ) {\n\t\t\tif ( jQuery.nodeName( elem, \"input\" ) ) {\n\n\t\t\t\t// Does not return so that setAttribute is also used\n\t\t\t\telem.defaultValue = value;\n\t\t\t} else {\n\n\t\t\t\t// Use nodeHook if defined (#1954); otherwise setAttribute is fine\n\t\t\t\treturn nodeHook && nodeHook.set( elem, value, name );\n\t\t\t}\n\t\t}\n\t};\n}\n\n// IE6/7 do not support getting/setting some attributes with get/setAttribute\nif ( !getSetAttribute ) {\n\n\t// Use this for any attribute in IE6/7\n\t// This fixes almost every IE6/7 issue\n\tnodeHook = {\n\t\tset: function( elem, value, name ) {\n\n\t\t\t// Set the existing or create a new attribute node\n\t\t\tvar ret = elem.getAttributeNode( name );\n\t\t\tif ( !ret ) {\n\t\t\t\telem.setAttributeNode(\n\t\t\t\t\t( ret = elem.ownerDocument.createAttribute( name ) )\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tret.value = value += \"\";\n\n\t\t\t// Break association with cloned elements by also using setAttribute (#9646)\n\t\t\tif ( name === \"value\" || value === elem.getAttribute( name ) ) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t};\n\n\t// Some attributes are constructed with empty-string values when not defined\n\tattrHandle.id = attrHandle.name = attrHandle.coords =\n\t\tfunction( elem, name, isXML ) {\n\t\t\tvar ret;\n\t\t\tif ( !isXML ) {\n\t\t\t\treturn ( ret = elem.getAttributeNode( name ) ) && ret.value !== \"\" ?\n\t\t\t\t\tret.value :\n\t\t\t\t\tnull;\n\t\t\t}\n\t\t};\n\n\t// Fixing value retrieval on a button requires this module\n\tjQuery.valHooks.button = {\n\t\tget: function( elem, name ) {\n\t\t\tvar ret = elem.getAttributeNode( name );\n\t\t\tif ( ret && ret.specified ) {\n\t\t\t\treturn ret.value;\n\t\t\t}\n\t\t},\n\t\tset: nodeHook.set\n\t};\n\n\t// Set contenteditable to false on removals(#10429)\n\t// Setting to empty string throws an error as an invalid value\n\tjQuery.attrHooks.contenteditable = {\n\t\tset: function( elem, value, name ) {\n\t\t\tnodeHook.set( elem, value === \"\" ? false : value, name );\n\t\t}\n\t};\n\n\t// Set width and height to auto instead of 0 on empty string( Bug #8150 )\n\t// This is for removals\n\tjQuery.each( [ \"width\", \"height\" ], function( i, name ) {\n\t\tjQuery.attrHooks[ name ] = {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( value === \"\" ) {\n\t\t\t\t\telem.setAttribute( name, \"auto\" );\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\n\nif ( !support.style ) {\n\tjQuery.attrHooks.style = {\n\t\tget: function( elem ) {\n\n\t\t\t// Return undefined in the case of empty string\n\t\t\t// Note: IE uppercases css property names, but if we were to .toLowerCase()\n\t\t\t// .cssText, that would destroy case sensitivity in URL's, like in \"background\"\n\t\t\treturn elem.style.cssText || undefined;\n\t\t},\n\t\tset: function( elem, value ) {\n\t\t\treturn ( elem.style.cssText = value + \"\" );\n\t\t}\n\t};\n}\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button|object)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\tname = jQuery.propFix[ name ] || name;\n\t\treturn this.each( function() {\n\n\t\t\t// try/catch handles cases where IE balks (such as removing a property on window)\n\t\t\ttry {\n\t\t\t\tthis[ name ] = undefined;\n\t\t\t\tdelete this[ name ];\n\t\t\t} catch ( e ) {}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\treturn tabindex ?\n\t\t\t\t\tparseInt( tabindex, 10 ) :\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\t\trclickable.test( elem.nodeName ) && elem.href ?\n\t\t\t\t\t\t\t0 :\n\t\t\t\t\t\t\t-1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Some attributes require a special call on IE\n// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !support.hrefNormalized ) {\n\n\t// href/src property should get the full normalized URL (#10299/#12915)\n\tjQuery.each( [ \"href\", \"src\" ], function( i, name ) {\n\t\tjQuery.propHooks[ name ] = {\n\t\t\tget: function( elem ) {\n\t\t\t\treturn elem.getAttribute( name, 4 );\n\t\t\t}\n\t\t};\n\t} );\n}\n\n// Support: Safari, IE9+\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\t\t\tvar parent = elem.parentNode;\n\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\t// Make sure that it also works with optgroups, see #5701\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n// IE6/7 call enctype encoding\nif ( !support.enctype ) {\n\tjQuery.propFix.enctype = \"encoding\";\n}\n\n\n\n\nvar rclass = /[\\t\\r\\n\\f]/g;\n\nfunction getClass( elem ) {\n\treturn jQuery.attr( elem, \"class\" ) || \"\";\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( typeof value === \"string\" && value ) {\n\t\t\tclasses = value.match( rnotwhite ) || [];\n\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\t\t\t\tcur = elem.nodeType === 1 &&\n\t\t\t\t\t( \" \" + curValue + \" \" ).replace( rclass, \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = jQuery.trim( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\tjQuery.attr( elem, \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tif ( typeof value === \"string\" && value ) {\n\t\t\tclasses = value.match( rnotwhite ) || [];\n\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 &&\n\t\t\t\t\t( \" \" + curValue + \" \" ).replace( rclass, \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = jQuery.trim( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\tjQuery.attr( elem, \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value;\n\n\t\tif ( typeof stateVal === \"boolean\" && type === \"string\" ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar className, i, self, classNames;\n\n\t\t\tif ( type === \"string\" ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\ti = 0;\n\t\t\t\tself = jQuery( this );\n\t\t\t\tclassNames = value.match( rnotwhite ) || [];\n\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// store className if set\n\t\t\t\t\tjQuery._data( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed \"false\",\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tjQuery.attr( this, \"class\",\n\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\"\" :\n\t\t\t\t\tjQuery._data( this, \"__className__\" ) || \"\"\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + getClass( elem ) + \" \" ).replace( rclass, \" \" )\n\t\t\t\t\t.indexOf( className ) > -1\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\njQuery.each( ( \"blur focus focusin focusout load resize scroll unload click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup error contextmenu\" ).split( \" \" ),\n\tfunction( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n} );\n\njQuery.fn.extend( {\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\n\nvar location = window.location;\n\nvar nonce = jQuery.now();\n\nvar rquery = ( /\\?/ );\n\n\n\nvar rvalidtokens = /(,)|(\\[|{)|(}|])|\"(?:[^\"\\\\\\r\\n]|\\\\[\"\\\\\\/bfnrt]|\\\\u[\\da-fA-F]{4})*\"\\s*:?|true|false|null|-?(?!0\\d)\\d+(?:\\.\\d+|)(?:[eE][+-]?\\d+|)/g;\n\njQuery.parseJSON = function( data ) {\n\n\t// Attempt to parse using the native JSON parser first\n\tif ( window.JSON && window.JSON.parse ) {\n\n\t\t// Support: Android 2.3\n\t\t// Workaround failure to string-cast null input\n\t\treturn window.JSON.parse( data + \"\" );\n\t}\n\n\tvar requireNonComma,\n\t\tdepth = null,\n\t\tstr = jQuery.trim( data + \"\" );\n\n\t// Guard against invalid (and possibly dangerous) input by ensuring that nothing remains\n\t// after removing valid tokens\n\treturn str && !jQuery.trim( str.replace( rvalidtokens, function( token, comma, open, close ) {\n\n\t\t// Force termination if we see a misplaced comma\n\t\tif ( requireNonComma && comma ) {\n\t\t\tdepth = 0;\n\t\t}\n\n\t\t// Perform no more replacements after returning to outermost depth\n\t\tif ( depth === 0 ) {\n\t\t\treturn token;\n\t\t}\n\n\t\t// Commas must not follow \"[\", \"{\", or \",\"\n\t\trequireNonComma = open || comma;\n\n\t\t// Determine new depth\n\t\t// array/object open (\"[\" or \"{\"): depth += true - false (increment)\n\t\t// array/object close (\"]\" or \"}\"): depth += false - true (decrement)\n\t\t// other cases (\",\" or primitive): depth += true - true (numeric cast)\n\t\tdepth += !close - !open;\n\n\t\t// Remove this token\n\t\treturn \"\";\n\t} ) ) ?\n\t\t( Function( \"return \" + str ) )() :\n\t\tjQuery.error( \"Invalid JSON: \" + data );\n};\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml, tmp;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\ttry {\n\t\tif ( window.DOMParser ) { // Standard\n\t\t\ttmp = new window.DOMParser();\n\t\t\txml = tmp.parseFromString( data, \"text/xml\" );\n\t\t} else { // IE\n\t\t\txml = new window.ActiveXObject( \"Microsoft.XMLDOM\" );\n\t\t\txml.async = \"false\";\n\t\t\txml.loadXML( data );\n\t\t}\n\t} catch ( e ) {\n\t\txml = undefined;\n\t}\n\tif ( !xml || !xml.documentElement || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trhash = /#.*$/,\n\trts = /([?&])_=[^&]*/,\n\n\t// IE leaves an \\r character at EOL\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)\\r?$/mg,\n\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\trurl = /^([\\w.+-]+:)(?:\\/\\/(?:[^\\/?#]*@|)([^\\/?#:]*)(?::(\\d+)|)|)/,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Document location\n\tajaxLocation = location.href,\n\n\t// Segment location into parts\n\tajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];\n\n\t\tif ( jQuery.isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType.charAt( 0 ) === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar deep, key,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\tvar firstDataType, ct, finalDataType, type,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s[ \"throws\" ] ) { // jscs:ignore requireDotNotation\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend( {\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: ajaxLocation,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /\\bxml\\b/,\n\t\t\thtml: /\\bhtml/,\n\t\t\tjson: /\\bjson\\b/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": jQuery.parseJSON,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar\n\n\t\t\t// Cross-domain detection vars\n\t\t\tparts,\n\n\t\t\t// Loop variable\n\t\t\ti,\n\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\n\t\t\t// Response headers as string\n\t\t\tresponseHeadersString,\n\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\ttransport,\n\n\t\t\t// Response headers\n\t\t\tresponseHeaders,\n\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context &&\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\t\tjQuery.event,\n\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\n\t\t\t// The jqXHR state\n\t\t\tstate = 0,\n\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( state === 2 ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match;\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn state === 2 ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tvar lname = name.toLowerCase();\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\tname = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\t\t\tfor ( code in map ) {\n\n\t\t\t\t\t\t\t\t// Lazy-add the new callback in a way that preserves old ones\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR ).complete = completeDeferred.add;\n\t\tjqXHR.success = jqXHR.done;\n\t\tjqXHR.error = jqXHR.fail;\n\n\t\t// Remove hash character (#7531: and string promotion)\n\t\t// Add protocol if not provided (#5866: IE7 issue with protocol-less urls)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || ajaxLocation ) + \"\" )\n\t\t\t.replace( rhash, \"\" )\n\t\t\t.replace( rprotocol, ajaxLocParts[ 1 ] + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = jQuery.trim( s.dataType || \"*\" ).toLowerCase().match( rnotwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when we have a protocol:host:port mismatch\n\t\tif ( s.crossDomain == null ) {\n\t\t\tparts = rurl.exec( s.url.toLowerCase() );\n\t\t\ts.crossDomain = !!( parts &&\n\t\t\t\t( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||\n\t\t\t\t\t( parts[ 3 ] || ( parts[ 1 ] === \"http:\" ? \"80\" : \"443\" ) ) !==\n\t\t\t\t\t\t( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === \"http:\" ? \"80\" : \"443\" ) ) )\n\t\t\t);\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( state === 2 ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\tcacheURL = s.url;\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// If data is available, append data to url\n\t\t\tif ( s.data ) {\n\t\t\t\tcacheURL = ( s.url += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data );\n\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add anti-cache in url if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\ts.url = rts.test( cacheURL ) ?\n\n\t\t\t\t\t// If there is already a '_' parameter, set its value\n\t\t\t\t\tcacheURL.replace( rts, \"$1_=\" + nonce++ ) :\n\n\t\t\t\t\t// Otherwise add one to the end\n\t\t\t\t\tcacheURL + ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + nonce++;\n\t\t\t}\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend &&\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {\n\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tfor ( i in { success: 1, error: 1, complete: 1 } ) {\n\t\t\tjqXHR[ i ]( s[ i ] );\n\t\t}\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\n\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\tif ( state === 2 ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tstate = 1;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// Propagate exception as error if not done\n\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\tdone( -1, e );\n\n\t\t\t\t// Simply rethrow otherwise\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Called once\n\t\t\tif ( state === 2 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// State is \"done\" now\n\t\t\tstate = 2;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// We extract error from statusText\n\t\t\t\t// then normalize statusText and status for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n} );\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\n\t\t// shift arguments if data argument was omitted\n\t\tif ( jQuery.isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// The url can be an options object (which then must have .url)\n\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t};\n} );\n\n\njQuery._evalUrl = function( url ) {\n\treturn jQuery.ajax( {\n\t\turl: url,\n\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tcache: true,\n\t\tasync: false,\n\t\tglobal: false,\n\t\t\"throws\": true\n\t} );\n};\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapAll( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( this[ 0 ] ) {\n\n\t\t\t// The elements to wrap the target around\n\t\t\tvar wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstChild && elem.firstChild.nodeType === 1 ) {\n\t\t\t\t\telem = elem.firstChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar isFunction = jQuery.isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function() {\n\t\treturn this.parent().each( function() {\n\t\t\tif ( !jQuery.nodeName( this, \"body\" ) ) {\n\t\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t\t}\n\t\t} ).end();\n\t}\n} );\n\n\nfunction getDisplay( elem ) {\n\treturn elem.style && elem.style.display || jQuery.css( elem, \"display\" );\n}\n\nfunction filterHidden( elem ) {\n\n\t// Disconnected elements are considered hidden\n\tif ( !jQuery.contains( elem.ownerDocument || document, elem ) ) {\n\t\treturn true;\n\t}\n\twhile ( elem && elem.nodeType === 1 ) {\n\t\tif ( getDisplay( elem ) === \"none\" || elem.type === \"hidden\" ) {\n\t\t\treturn true;\n\t\t}\n\t\telem = elem.parentNode;\n\t}\n\treturn false;\n}\n\njQuery.expr.filters.hidden = function( elem ) {\n\n\t// Support: Opera <= 12.12\n\t// Opera reports offsetWidths and offsetHeights less than zero on some elements\n\treturn support.reliableHiddenOffsets() ?\n\t\t( elem.offsetWidth <= 0 && elem.offsetHeight <= 0 &&\n\t\t\t!elem.getClientRects().length ) :\n\t\t\tfilterHidden( elem );\n};\n\njQuery.expr.filters.visible = function( elem ) {\n\treturn !jQuery.expr.filters.hidden( elem );\n};\n\n\n\n\nvar r20 = /%20/g,\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( jQuery.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, value ) {\n\n\t\t\t// If value is a function, invoke it and return its value\n\t\t\tvalue = jQuery.isFunction( value ) ? value() : ( value == null ? \"\" : value );\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" + encodeURIComponent( value );\n\t\t};\n\n\t// Set traditional to true for jQuery <= 1.3.2 behavior.\n\tif ( traditional === undefined ) {\n\t\ttraditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" ).replace( r20, \"+\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} )\n\t\t.filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is(\":disabled\") so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} )\n\t\t.map( function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\treturn val == null ?\n\t\t\t\tnull :\n\t\t\t\tjQuery.isArray( val ) ?\n\t\t\t\t\tjQuery.map( val, function( val ) {\n\t\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t\t} ) :\n\t\t\t\t\t{ name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\n// Create the request object\n// (This is still attached to ajaxSettings for backward compatibility)\njQuery.ajaxSettings.xhr = window.ActiveXObject !== undefined ?\n\n\t// Support: IE6-IE8\n\tfunction() {\n\n\t\t// XHR cannot access local files, always use ActiveX for that case\n\t\tif ( this.isLocal ) {\n\t\t\treturn createActiveXHR();\n\t\t}\n\n\t\t// Support: IE 9-11\n\t\t// IE seems to error on cross-domain PATCH requests when ActiveX XHR\n\t\t// is used. In IE 9+ always use the native XHR.\n\t\t// Note: this condition won't catch Edge as it doesn't define\n\t\t// document.documentMode but it also doesn't support ActiveX so it won't\n\t\t// reach this code.\n\t\tif ( document.documentMode > 8 ) {\n\t\t\treturn createStandardXHR();\n\t\t}\n\n\t\t// Support: IE<9\n\t\t// oldIE XHR does not support non-RFC2616 methods (#13240)\n\t\t// See http://msdn.microsoft.com/en-us/library/ie/ms536648(v=vs.85).aspx\n\t\t// and http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9\n\t\t// Although this check for six methods instead of eight\n\t\t// since IE also does not support \"trace\" and \"connect\"\n\t\treturn /^(get|post|head|put|delete|options)$/i.test( this.type ) &&\n\t\t\tcreateStandardXHR() || createActiveXHR();\n\t} :\n\n\t// For all other browsers, use the standard XMLHttpRequest object\n\tcreateStandardXHR;\n\nvar xhrId = 0,\n\txhrCallbacks = {},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\n// Support: IE<10\n// Open requests must be manually aborted on unload (#5280)\n// See https://support.microsoft.com/kb/2856746 for more info\nif ( window.attachEvent ) {\n\twindow.attachEvent( \"onunload\", function() {\n\t\tfor ( var key in xhrCallbacks ) {\n\t\t\txhrCallbacks[ key ]( undefined, true );\n\t\t}\n\t} );\n}\n\n// Determine support properties\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nxhrSupported = support.ajax = !!xhrSupported;\n\n// Create transport if the browser can provide an xhr\nif ( xhrSupported ) {\n\n\tjQuery.ajaxTransport( function( options ) {\n\n\t\t// Cross domain only allowed if supported through XMLHttpRequest\n\t\tif ( !options.crossDomain || support.cors ) {\n\n\t\t\tvar callback;\n\n\t\t\treturn {\n\t\t\t\tsend: function( headers, complete ) {\n\t\t\t\t\tvar i,\n\t\t\t\t\t\txhr = options.xhr(),\n\t\t\t\t\t\tid = ++xhrId;\n\n\t\t\t\t\t// Open the socket\n\t\t\t\t\txhr.open(\n\t\t\t\t\t\toptions.type,\n\t\t\t\t\t\toptions.url,\n\t\t\t\t\t\toptions.async,\n\t\t\t\t\t\toptions.username,\n\t\t\t\t\t\toptions.password\n\t\t\t\t\t);\n\n\t\t\t\t\t// Apply custom fields if provided\n\t\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Override mime type if needed\n\t\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t\t}\n\n\t\t\t\t\t// X-Requested-With header\n\t\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t\t}\n\n\t\t\t\t\t// Set headers\n\t\t\t\t\tfor ( i in headers ) {\n\n\t\t\t\t\t\t// Support: IE<9\n\t\t\t\t\t\t// IE's ActiveXObject throws a 'Type Mismatch' exception when setting\n\t\t\t\t\t\t// request header to a null-value.\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// To keep consistent with other XHR implementations, cast the value\n\t\t\t\t\t\t// to string and ignore `undefined`.\n\t\t\t\t\t\tif ( headers[ i ] !== undefined ) {\n\t\t\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] + \"\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do send the request\n\t\t\t\t\t// This may raise an exception which is actually\n\t\t\t\t\t// handled in jQuery.ajax (so no try/catch here)\n\t\t\t\t\txhr.send( ( options.hasContent && options.data ) || null );\n\n\t\t\t\t\t// Listener\n\t\t\t\t\tcallback = function( _, isAbort ) {\n\t\t\t\t\t\tvar status, statusText, responses;\n\n\t\t\t\t\t\t// Was never called and is aborted or complete\n\t\t\t\t\t\tif ( callback && ( isAbort || xhr.readyState === 4 ) ) {\n\n\t\t\t\t\t\t\t// Clean up\n\t\t\t\t\t\t\tdelete xhrCallbacks[ id ];\n\t\t\t\t\t\t\tcallback = undefined;\n\t\t\t\t\t\t\txhr.onreadystatechange = jQuery.noop;\n\n\t\t\t\t\t\t\t// Abort manually if needed\n\t\t\t\t\t\t\tif ( isAbort ) {\n\t\t\t\t\t\t\t\tif ( xhr.readyState !== 4 ) {\n\t\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresponses = {};\n\t\t\t\t\t\t\t\tstatus = xhr.status;\n\n\t\t\t\t\t\t\t\t// Support: IE<10\n\t\t\t\t\t\t\t\t// Accessing binary-data responseText throws an exception\n\t\t\t\t\t\t\t\t// (#11426)\n\t\t\t\t\t\t\t\tif ( typeof xhr.responseText === \"string\" ) {\n\t\t\t\t\t\t\t\t\tresponses.text = xhr.responseText;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Firefox throws an exception when accessing\n\t\t\t\t\t\t\t\t// statusText for faulty cross-domain requests\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tstatusText = xhr.statusText;\n\t\t\t\t\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t\t\t\t\t// We normalize with Webkit giving an empty statusText\n\t\t\t\t\t\t\t\t\tstatusText = \"\";\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Filter status for non standard behaviors\n\n\t\t\t\t\t\t\t\t// If the request is local and we have data: assume a success\n\t\t\t\t\t\t\t\t// (success with no data won't get notified, that's the best we\n\t\t\t\t\t\t\t\t// can do given current implementations)\n\t\t\t\t\t\t\t\tif ( !status && options.isLocal && !options.crossDomain ) {\n\t\t\t\t\t\t\t\t\tstatus = responses.text ? 200 : 404;\n\n\t\t\t\t\t\t\t\t// IE - #1450: sometimes returns 1223 when it should be 204\n\t\t\t\t\t\t\t\t} else if ( status === 1223 ) {\n\t\t\t\t\t\t\t\t\tstatus = 204;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Call complete if needed\n\t\t\t\t\t\tif ( responses ) {\n\t\t\t\t\t\t\tcomplete( status, statusText, responses, xhr.getAllResponseHeaders() );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\t// Do send the request\n\t\t\t\t\t// `xhr.send` may raise an exception, but it will be\n\t\t\t\t\t// handled in jQuery.ajax (so no try/catch here)\n\t\t\t\t\tif ( !options.async ) {\n\n\t\t\t\t\t\t// If we're in sync mode we fire the callback\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t} else if ( xhr.readyState === 4 ) {\n\n\t\t\t\t\t\t// (IE6 & IE7) if it's in cache and has been\n\t\t\t\t\t\t// retrieved directly we need to fire the callback\n\t\t\t\t\t\twindow.setTimeout( callback );\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Register the callback, but delay it in case `xhr.send` throws\n\t\t\t\t\t\t// Add to the list of active xhr callbacks\n\t\t\t\t\t\txhr.onreadystatechange = xhrCallbacks[ id ] = callback;\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tabort: function() {\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tcallback( undefined, true );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} );\n}\n\n// Functions to create xhrs\nfunction createStandardXHR() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch ( e ) {}\n}\n\nfunction createActiveXHR() {\n\ttry {\n\t\treturn new window.ActiveXObject( \"Microsoft.XMLHTTP\" );\n\t} catch ( e ) {}\n}\n\n\n\n\n// Install script dataType\njQuery.ajaxSetup( {\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /\\b(?:java|ecma)script\\b/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n} );\n\n// Handle cache's special case and global\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t\ts.global = false;\n\t}\n} );\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\n\t// This transport only deals with cross domain requests\n\tif ( s.crossDomain ) {\n\n\t\tvar script,\n\t\t\thead = document.head || jQuery( \"head\" )[ 0 ] || document.documentElement;\n\n\t\treturn {\n\n\t\t\tsend: function( _, callback ) {\n\n\t\t\t\tscript = document.createElement( \"script\" );\n\n\t\t\t\tscript.async = true;\n\n\t\t\t\tif ( s.scriptCharset ) {\n\t\t\t\t\tscript.charset = s.scriptCharset;\n\t\t\t\t}\n\n\t\t\t\tscript.src = s.url;\n\n\t\t\t\t// Attach handlers for all browsers\n\t\t\t\tscript.onload = script.onreadystatechange = function( _, isAbort ) {\n\n\t\t\t\t\tif ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {\n\n\t\t\t\t\t\t// Handle memory leak in IE\n\t\t\t\t\t\tscript.onload = script.onreadystatechange = null;\n\n\t\t\t\t\t\t// Remove the script\n\t\t\t\t\t\tif ( script.parentNode ) {\n\t\t\t\t\t\t\tscript.parentNode.removeChild( script );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Dereference the script\n\t\t\t\t\t\tscript = null;\n\n\t\t\t\t\t\t// Callback if not abort\n\t\t\t\t\t\tif ( !isAbort ) {\n\t\t\t\t\t\t\tcallback( 200, \"success\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Circumvent IE6 bugs with base elements (#2709 and #4378) by prepending\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\thead.insertBefore( script, head.firstChild );\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( script ) {\n\t\t\t\t\tscript.onload( undefined, true );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && jQuery.isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n\n\n\n// data: string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\tcontext = context || document;\n\n\tvar parsed = rsingleTag.exec( data ),\n\t\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n// Keep a copy of the old load method\nvar _load = jQuery.fn.load;\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tif ( typeof url !== \"string\" && _load ) {\n\t\treturn _load.apply( this, arguments );\n\t}\n\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = jQuery.trim( url.slice( off, url.length ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( jQuery.isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n\n\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [\n\t\"ajaxStart\",\n\t\"ajaxStop\",\n\t\"ajaxComplete\",\n\t\"ajaxError\",\n\t\"ajaxSuccess\",\n\t\"ajaxSend\"\n], function( i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n} );\n\n\n\n\njQuery.expr.filters.animated = function( elem ) {\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t} ).length;\n};\n\n\n\n\n\n/**\n * Gets a window from an element\n */\nfunction getWindow( elem ) {\n\treturn jQuery.isWindow( elem ) ?\n\t\telem :\n\t\telem.nodeType === 9 ?\n\t\t\telem.defaultView || elem.parentWindow :\n\t\t\tfalse;\n}\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\tjQuery.inArray( \"auto\", [ curCSSTop, curCSSLeft ] ) > -1;\n\n\t\t// need to be able to calculate position if either top or left\n\t\t// is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( jQuery.isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\toffset: function( options ) {\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar docElem, win,\n\t\t\tbox = { top: 0, left: 0 },\n\t\t\telem = this[ 0 ],\n\t\t\tdoc = elem && elem.ownerDocument;\n\n\t\tif ( !doc ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdocElem = doc.documentElement;\n\n\t\t// Make sure it's not a disconnected DOM node\n\t\tif ( !jQuery.contains( docElem, elem ) ) {\n\t\t\treturn box;\n\t\t}\n\n\t\t// If we don't have gBCR, just use 0,0 rather than error\n\t\t// BlackBerry 5, iOS 3 (original iPhone)\n\t\tif ( typeof elem.getBoundingClientRect !== \"undefined\" ) {\n\t\t\tbox = elem.getBoundingClientRect();\n\t\t}\n\t\twin = getWindow( doc );\n\t\treturn {\n\t\t\ttop: box.top  + ( win.pageYOffset || docElem.scrollTop )  - ( docElem.clientTop  || 0 ),\n\t\t\tleft: box.left + ( win.pageXOffset || docElem.scrollLeft ) - ( docElem.clientLeft || 0 )\n\t\t};\n\t},\n\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset,\n\t\t\tparentOffset = { top: 0, left: 0 },\n\t\t\telem = this[ 0 ];\n\n\t\t// Fixed elements are offset from window (parentOffset = {top:0, left: 0},\n\t\t// because it is its only offset parent\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// we assume that getBoundingClientRect is available when computed position is fixed\n\t\t\toffset = elem.getBoundingClientRect();\n\t\t} else {\n\n\t\t\t// Get *real* offsetParent\n\t\t\toffsetParent = this.offsetParent();\n\n\t\t\t// Get correct offsets\n\t\t\toffset = this.offset();\n\t\t\tif ( !jQuery.nodeName( offsetParent[ 0 ], \"html\" ) ) {\n\t\t\t\tparentOffset = offsetParent.offset();\n\t\t\t}\n\n\t\t\t// Add offsetParent borders\n\t\t\tparentOffset.top  += jQuery.css( offsetParent[ 0 ], \"borderTopWidth\", true );\n\t\t\tparentOffset.left += jQuery.css( offsetParent[ 0 ], \"borderLeftWidth\", true );\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\t// note: when an element has margin: auto the offsetLeft and marginLeft\n\t\t// are the same in Safari causing offset.left to incorrectly be 0\n\t\treturn {\n\t\t\ttop:  offset.top  - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && ( !jQuery.nodeName( offsetParent, \"html\" ) &&\n\t\t\t\tjQuery.css( offsetParent, \"position\" ) === \"static\" ) ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = /Y/.test( prop );\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\t\t\tvar win = getWindow( elem );\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? ( prop in win ) ? win[ prop ] :\n\t\t\t\t\twin.document.documentElement[ method ] :\n\t\t\t\t\telem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : jQuery( win ).scrollLeft(),\n\t\t\t\t\ttop ? val : jQuery( win ).scrollTop()\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length, null );\n\t};\n} );\n\n// Support: Safari<7-8+, Chrome<37-44+\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// getComputedStyle returns percent when specified for top/left/bottom/right\n// rather than make the css module depend on the offset module, we just check for it here\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// if curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\n\tfunction( defaultExtra, funcName ) {\n\n\t\t// margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\n\t\t\t\t\t// isn't a whole lot we can do. See pull request at this URL for discussion:\n\t\t\t\t\t// https://github.com/jquery/jquery/pull/764\n\t\t\t\t\treturn elem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\t// unfortunately, this causes bug #3838 in IE6/8 only,\n\t\t\t\t\t// but there is currently no good, small way to fix it.\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable, null );\n\t\t};\n\t} );\n} );\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t}\n} );\n\n// The number of elements contained in the matched element set\njQuery.fn.size = function() {\n\treturn this.length;\n};\n\njQuery.fn.andSelf = jQuery.fn.addBack;\n\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( typeof define === \"function\" && define.amd ) {\n\tdefine( \"jquery\", [], function() {\n\t\treturn jQuery;\n\t} );\n}\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in\n// AMD (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( !noGlobal ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\nreturn jQuery;\n}));\n","(function(window, factory) {\n\tvar lazySizes = factory(window, window.document, Date);\n\twindow.lazySizes = lazySizes;\n\tif(typeof module == 'object' && module.exports){\n\t\tmodule.exports = lazySizes;\n\t}\n}(typeof window != 'undefined' ?\n      window : {}, \n/**\n * import(\"./types/global\")\n * @typedef { import(\"./types/lazysizes-config\").LazySizesConfigPartial } LazySizesConfigPartial\n */\nfunction l(window, document, Date) { // Pass in the window Date function also for SSR because the Date class can be lost\n\t'use strict';\n\t/*jshint eqnull:true */\n\n\tvar lazysizes,\n\t\t/**\n\t\t * @type { LazySizesConfigPartial }\n\t\t */\n\t\tlazySizesCfg;\n\n\t(function(){\n\t\tvar prop;\n\n\t\tvar lazySizesDefaults = {\n\t\t\tlazyClass: 'lazyload',\n\t\t\tloadedClass: 'lazyloaded',\n\t\t\tloadingClass: 'lazyloading',\n\t\t\tpreloadClass: 'lazypreload',\n\t\t\terrorClass: 'lazyerror',\n\t\t\t//strictClass: 'lazystrict',\n\t\t\tautosizesClass: 'lazyautosizes',\n\t\t\tfastLoadedClass: 'ls-is-cached',\n\t\t\tiframeLoadMode: 0,\n\t\t\tsrcAttr: 'data-src',\n\t\t\tsrcsetAttr: 'data-srcset',\n\t\t\tsizesAttr: 'data-sizes',\n\t\t\t//preloadAfterLoad: false,\n\t\t\tminSize: 40,\n\t\t\tcustomMedia: {},\n\t\t\tinit: true,\n\t\t\texpFactor: 1.5,\n\t\t\thFac: 0.8,\n\t\t\tloadMode: 2,\n\t\t\tloadHidden: true,\n\t\t\tricTimeout: 0,\n\t\t\tthrottleDelay: 125,\n\t\t};\n\n\t\tlazySizesCfg = window.lazySizesConfig || window.lazysizesConfig || {};\n\n\t\tfor(prop in lazySizesDefaults){\n\t\t\tif(!(prop in lazySizesCfg)){\n\t\t\t\tlazySizesCfg[prop] = lazySizesDefaults[prop];\n\t\t\t}\n\t\t}\n\t})();\n\n\tif (!document || !document.getElementsByClassName) {\n\t\treturn {\n\t\t\tinit: function () {},\n\t\t\t/**\n\t\t\t * @type { LazySizesConfigPartial }\n\t\t\t */\n\t\t\tcfg: lazySizesCfg,\n\t\t\t/**\n\t\t\t * @type { true }\n\t\t\t */\n\t\t\tnoSupport: true,\n\t\t};\n\t}\n\n\tvar docElem = document.documentElement;\n\n\tvar supportPicture = window.HTMLPictureElement;\n\n\tvar _addEventListener = 'addEventListener';\n\n\tvar _getAttribute = 'getAttribute';\n\n\t/**\n\t * Update to bind to window because 'this' becomes null during SSR\n\t * builds.\n\t */\n\tvar addEventListener = window[_addEventListener].bind(window);\n\n\tvar setTimeout = window.setTimeout;\n\n\tvar requestAnimationFrame = window.requestAnimationFrame || setTimeout;\n\n\tvar requestIdleCallback = window.requestIdleCallback;\n\n\tvar regPicture = /^picture$/i;\n\n\tvar loadEvents = ['load', 'error', 'lazyincluded', '_lazyloaded'];\n\n\tvar regClassCache = {};\n\n\tvar forEach = Array.prototype.forEach;\n\n\t/**\n\t * @param ele {Element}\n\t * @param cls {string}\n\t */\n\tvar hasClass = function(ele, cls) {\n\t\tif(!regClassCache[cls]){\n\t\t\tregClassCache[cls] = new RegExp('(\\\\s|^)'+cls+'(\\\\s|$)');\n\t\t}\n\t\treturn regClassCache[cls].test(ele[_getAttribute]('class') || '') && regClassCache[cls];\n\t};\n\n\t/**\n\t * @param ele {Element}\n\t * @param cls {string}\n\t */\n\tvar addClass = function(ele, cls) {\n\t\tif (!hasClass(ele, cls)){\n\t\t\tele.setAttribute('class', (ele[_getAttribute]('class') || '').trim() + ' ' + cls);\n\t\t}\n\t};\n\n\t/**\n\t * @param ele {Element}\n\t * @param cls {string}\n\t */\n\tvar removeClass = function(ele, cls) {\n\t\tvar reg;\n\t\tif ((reg = hasClass(ele,cls))) {\n\t\t\tele.setAttribute('class', (ele[_getAttribute]('class') || '').replace(reg, ' '));\n\t\t}\n\t};\n\n\tvar addRemoveLoadEvents = function(dom, fn, add){\n\t\tvar action = add ? _addEventListener : 'removeEventListener';\n\t\tif(add){\n\t\t\taddRemoveLoadEvents(dom, fn);\n\t\t}\n\t\tloadEvents.forEach(function(evt){\n\t\t\tdom[action](evt, fn);\n\t\t});\n\t};\n\n\t/**\n\t * @param elem { Element }\n\t * @param name { string }\n\t * @param detail { any }\n\t * @param noBubbles { boolean }\n\t * @param noCancelable { boolean }\n\t * @returns { CustomEvent }\n\t */\n\tvar triggerEvent = function(elem, name, detail, noBubbles, noCancelable){\n\t\tvar event = document.createEvent('Event');\n\n\t\tif(!detail){\n\t\t\tdetail = {};\n\t\t}\n\n\t\tdetail.instance = lazysizes;\n\n\t\tevent.initEvent(name, !noBubbles, !noCancelable);\n\n\t\tevent.detail = detail;\n\n\t\telem.dispatchEvent(event);\n\t\treturn event;\n\t};\n\n\tvar updatePolyfill = function (el, full){\n\t\tvar polyfill;\n\t\tif( !supportPicture && ( polyfill = (window.picturefill || lazySizesCfg.pf) ) ){\n\t\t\tif(full && full.src && !el[_getAttribute]('srcset')){\n\t\t\t\tel.setAttribute('srcset', full.src);\n\t\t\t}\n\t\t\tpolyfill({reevaluate: true, elements: [el]});\n\t\t} else if(full && full.src){\n\t\t\tel.src = full.src;\n\t\t}\n\t};\n\n\tvar getCSS = function (elem, style){\n\t\treturn (getComputedStyle(elem, null) || {})[style];\n\t};\n\n\t/**\n\t *\n\t * @param elem { Element }\n\t * @param parent { Element }\n\t * @param [width] {number}\n\t * @returns {number}\n\t */\n\tvar getWidth = function(elem, parent, width){\n\t\twidth = width || elem.offsetWidth;\n\n\t\twhile(width < lazySizesCfg.minSize && parent && !elem._lazysizesWidth){\n\t\t\twidth =  parent.offsetWidth;\n\t\t\tparent = parent.parentNode;\n\t\t}\n\n\t\treturn width;\n\t};\n\n\tvar rAF = (function(){\n\t\tvar running, waiting;\n\t\tvar firstFns = [];\n\t\tvar secondFns = [];\n\t\tvar fns = firstFns;\n\n\t\tvar run = function(){\n\t\t\tvar runFns = fns;\n\n\t\t\tfns = firstFns.length ? secondFns : firstFns;\n\n\t\t\trunning = true;\n\t\t\twaiting = false;\n\n\t\t\twhile(runFns.length){\n\t\t\t\trunFns.shift()();\n\t\t\t}\n\n\t\t\trunning = false;\n\t\t};\n\n\t\tvar rafBatch = function(fn, queue){\n\t\t\tif(running && !queue){\n\t\t\t\tfn.apply(this, arguments);\n\t\t\t} else {\n\t\t\t\tfns.push(fn);\n\n\t\t\t\tif(!waiting){\n\t\t\t\t\twaiting = true;\n\t\t\t\t\t(document.hidden ? setTimeout : requestAnimationFrame)(run);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\trafBatch._lsFlush = run;\n\n\t\treturn rafBatch;\n\t})();\n\n\tvar rAFIt = function(fn, simple){\n\t\treturn simple ?\n\t\t\tfunction() {\n\t\t\t\trAF(fn);\n\t\t\t} :\n\t\t\tfunction(){\n\t\t\t\tvar that = this;\n\t\t\t\tvar args = arguments;\n\t\t\t\trAF(function(){\n\t\t\t\t\tfn.apply(that, args);\n\t\t\t\t});\n\t\t\t}\n\t\t;\n\t};\n\n\tvar throttle = function(fn){\n\t\tvar running;\n\t\tvar lastTime = 0;\n\t\tvar gDelay = lazySizesCfg.throttleDelay;\n\t\tvar rICTimeout = lazySizesCfg.ricTimeout;\n\t\tvar run = function(){\n\t\t\trunning = false;\n\t\t\tlastTime = Date.now();\n\t\t\tfn();\n\t\t};\n\t\tvar idleCallback = requestIdleCallback && rICTimeout > 49 ?\n\t\t\tfunction(){\n\t\t\t\trequestIdleCallback(run, {timeout: rICTimeout});\n\n\t\t\t\tif(rICTimeout !== lazySizesCfg.ricTimeout){\n\t\t\t\t\trICTimeout = lazySizesCfg.ricTimeout;\n\t\t\t\t}\n\t\t\t} :\n\t\t\trAFIt(function(){\n\t\t\t\tsetTimeout(run);\n\t\t\t}, true)\n\t\t;\n\n\t\treturn function(isPriority){\n\t\t\tvar delay;\n\n\t\t\tif((isPriority = isPriority === true)){\n\t\t\t\trICTimeout = 33;\n\t\t\t}\n\n\t\t\tif(running){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\trunning =  true;\n\n\t\t\tdelay = gDelay - (Date.now() - lastTime);\n\n\t\t\tif(delay < 0){\n\t\t\t\tdelay = 0;\n\t\t\t}\n\n\t\t\tif(isPriority || delay < 9){\n\t\t\t\tidleCallback();\n\t\t\t} else {\n\t\t\t\tsetTimeout(idleCallback, delay);\n\t\t\t}\n\t\t};\n\t};\n\n\t//based on http://modernjavascript.blogspot.de/2013/08/building-better-debounce.html\n\tvar debounce = function(func) {\n\t\tvar timeout, timestamp;\n\t\tvar wait = 99;\n\t\tvar run = function(){\n\t\t\ttimeout = null;\n\t\t\tfunc();\n\t\t};\n\t\tvar later = function() {\n\t\t\tvar last = Date.now() - timestamp;\n\n\t\t\tif (last < wait) {\n\t\t\t\tsetTimeout(later, wait - last);\n\t\t\t} else {\n\t\t\t\t(requestIdleCallback || run)(run);\n\t\t\t}\n\t\t};\n\n\t\treturn function() {\n\t\t\ttimestamp = Date.now();\n\n\t\t\tif (!timeout) {\n\t\t\t\ttimeout = setTimeout(later, wait);\n\t\t\t}\n\t\t};\n\t};\n\n\tvar loader = (function(){\n\t\tvar preloadElems, isCompleted, resetPreloadingTimer, loadMode, started;\n\n\t\tvar eLvW, elvH, eLtop, eLleft, eLright, eLbottom, isBodyHidden;\n\n\t\tvar regImg = /^img$/i;\n\t\tvar regIframe = /^iframe$/i;\n\n\t\tvar supportScroll = ('onscroll' in window) && !(/(gle|ing)bot/.test(navigator.userAgent));\n\n\t\tvar shrinkExpand = 0;\n\t\tvar currentExpand = 0;\n\n\t\tvar isLoading = 0;\n\t\tvar lowRuns = -1;\n\n\t\tvar resetPreloading = function(e){\n\t\t\tisLoading--;\n\t\t\tif(!e || isLoading < 0 || !e.target){\n\t\t\t\tisLoading = 0;\n\t\t\t}\n\t\t};\n\n\t\tvar isVisible = function (elem) {\n\t\t\tif (isBodyHidden == null) {\n\t\t\t\tisBodyHidden = getCSS(document.body, 'visibility') == 'hidden';\n\t\t\t}\n\n\t\t\treturn isBodyHidden || !(getCSS(elem.parentNode, 'visibility') == 'hidden' && getCSS(elem, 'visibility') == 'hidden');\n\t\t};\n\n\t\tvar isNestedVisible = function(elem, elemExpand){\n\t\t\tvar outerRect;\n\t\t\tvar parent = elem;\n\t\t\tvar visible = isVisible(elem);\n\n\t\t\teLtop -= elemExpand;\n\t\t\teLbottom += elemExpand;\n\t\t\teLleft -= elemExpand;\n\t\t\teLright += elemExpand;\n\n\t\t\twhile(visible && (parent = parent.offsetParent) && parent != document.body && parent != docElem){\n\t\t\t\tvisible = ((getCSS(parent, 'opacity') || 1) > 0);\n\n\t\t\t\tif(visible && getCSS(parent, 'overflow') != 'visible'){\n\t\t\t\t\touterRect = parent.getBoundingClientRect();\n\t\t\t\t\tvisible = eLright > outerRect.left &&\n\t\t\t\t\t\teLleft < outerRect.right &&\n\t\t\t\t\t\teLbottom > outerRect.top - 1 &&\n\t\t\t\t\t\teLtop < outerRect.bottom + 1\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn visible;\n\t\t};\n\n\t\tvar checkElements = function() {\n\t\t\tvar eLlen, i, rect, autoLoadElem, loadedSomething, elemExpand, elemNegativeExpand, elemExpandVal,\n\t\t\t\tbeforeExpandVal, defaultExpand, preloadExpand, hFac;\n\t\t\tvar lazyloadElems = lazysizes.elements;\n\n\t\t\tif((loadMode = lazySizesCfg.loadMode) && isLoading < 8 && (eLlen = lazyloadElems.length)){\n\n\t\t\t\ti = 0;\n\n\t\t\t\tlowRuns++;\n\n\t\t\t\tfor(; i < eLlen; i++){\n\n\t\t\t\t\tif(!lazyloadElems[i] || lazyloadElems[i]._lazyRace){continue;}\n\n\t\t\t\t\tif(!supportScroll || (lazysizes.prematureUnveil && lazysizes.prematureUnveil(lazyloadElems[i]))){unveilElement(lazyloadElems[i]);continue;}\n\n\t\t\t\t\tif(!(elemExpandVal = lazyloadElems[i][_getAttribute]('data-expand')) || !(elemExpand = elemExpandVal * 1)){\n\t\t\t\t\t\telemExpand = currentExpand;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!defaultExpand) {\n\t\t\t\t\t\tdefaultExpand = (!lazySizesCfg.expand || lazySizesCfg.expand < 1) ?\n\t\t\t\t\t\t\tdocElem.clientHeight > 500 && docElem.clientWidth > 500 ? 500 : 370 :\n\t\t\t\t\t\t\tlazySizesCfg.expand;\n\n\t\t\t\t\t\tlazysizes._defEx = defaultExpand;\n\n\t\t\t\t\t\tpreloadExpand = defaultExpand * lazySizesCfg.expFactor;\n\t\t\t\t\t\thFac = lazySizesCfg.hFac;\n\t\t\t\t\t\tisBodyHidden = null;\n\n\t\t\t\t\t\tif(currentExpand < preloadExpand && isLoading < 1 && lowRuns > 2 && loadMode > 2 && !document.hidden){\n\t\t\t\t\t\t\tcurrentExpand = preloadExpand;\n\t\t\t\t\t\t\tlowRuns = 0;\n\t\t\t\t\t\t} else if(loadMode > 1 && lowRuns > 1 && isLoading < 6){\n\t\t\t\t\t\t\tcurrentExpand = defaultExpand;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcurrentExpand = shrinkExpand;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(beforeExpandVal !== elemExpand){\n\t\t\t\t\t\teLvW = innerWidth + (elemExpand * hFac);\n\t\t\t\t\t\telvH = innerHeight + elemExpand;\n\t\t\t\t\t\telemNegativeExpand = elemExpand * -1;\n\t\t\t\t\t\tbeforeExpandVal = elemExpand;\n\t\t\t\t\t}\n\n\t\t\t\t\trect = lazyloadElems[i].getBoundingClientRect();\n\n\t\t\t\t\tif ((eLbottom = rect.bottom) >= elemNegativeExpand &&\n\t\t\t\t\t\t(eLtop = rect.top) <= elvH &&\n\t\t\t\t\t\t(eLright = rect.right) >= elemNegativeExpand * hFac &&\n\t\t\t\t\t\t(eLleft = rect.left) <= eLvW &&\n\t\t\t\t\t\t(eLbottom || eLright || eLleft || eLtop) &&\n\t\t\t\t\t\t(lazySizesCfg.loadHidden || isVisible(lazyloadElems[i])) &&\n\t\t\t\t\t\t((isCompleted && isLoading < 3 && !elemExpandVal && (loadMode < 3 || lowRuns < 4)) || isNestedVisible(lazyloadElems[i], elemExpand))){\n\t\t\t\t\t\tunveilElement(lazyloadElems[i]);\n\t\t\t\t\t\tloadedSomething = true;\n\t\t\t\t\t\tif(isLoading > 9){break;}\n\t\t\t\t\t} else if(!loadedSomething && isCompleted && !autoLoadElem &&\n\t\t\t\t\t\tisLoading < 4 && lowRuns < 4 && loadMode > 2 &&\n\t\t\t\t\t\t(preloadElems[0] || lazySizesCfg.preloadAfterLoad) &&\n\t\t\t\t\t\t(preloadElems[0] || (!elemExpandVal && ((eLbottom || eLright || eLleft || eLtop) || lazyloadElems[i][_getAttribute](lazySizesCfg.sizesAttr) != 'auto')))){\n\t\t\t\t\t\tautoLoadElem = preloadElems[0] || lazyloadElems[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(autoLoadElem && !loadedSomething){\n\t\t\t\t\tunveilElement(autoLoadElem);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tvar throttledCheckElements = throttle(checkElements);\n\n\t\tvar switchLoadingClass = function(e){\n\t\t\tvar elem = e.target;\n\n\t\t\tif (elem._lazyCache) {\n\t\t\t\tdelete elem._lazyCache;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresetPreloading(e);\n\t\t\taddClass(elem, lazySizesCfg.loadedClass);\n\t\t\tremoveClass(elem, lazySizesCfg.loadingClass);\n\t\t\taddRemoveLoadEvents(elem, rafSwitchLoadingClass);\n\t\t\ttriggerEvent(elem, 'lazyloaded');\n\t\t};\n\t\tvar rafedSwitchLoadingClass = rAFIt(switchLoadingClass);\n\t\tvar rafSwitchLoadingClass = function(e){\n\t\t\trafedSwitchLoadingClass({target: e.target});\n\t\t};\n\n\t\tvar changeIframeSrc = function(elem, src){\n\t\t\tvar loadMode = elem.getAttribute('data-load-mode') || lazySizesCfg.iframeLoadMode;\n\n\t\t\t// loadMode can be also a string!\n\t\t\tif (loadMode == 0) {\n\t\t\t\telem.contentWindow.location.replace(src);\n\t\t\t} else if (loadMode == 1) {\n\t\t\t\telem.src = src;\n\t\t\t}\n\t\t};\n\n\t\tvar handleSources = function(source){\n\t\t\tvar customMedia;\n\n\t\t\tvar sourceSrcset = source[_getAttribute](lazySizesCfg.srcsetAttr);\n\n\t\t\tif( (customMedia = lazySizesCfg.customMedia[source[_getAttribute]('data-media') || source[_getAttribute]('media')]) ){\n\t\t\t\tsource.setAttribute('media', customMedia);\n\t\t\t}\n\n\t\t\tif(sourceSrcset){\n\t\t\t\tsource.setAttribute('srcset', sourceSrcset);\n\t\t\t}\n\t\t};\n\n\t\tvar lazyUnveil = rAFIt(function (elem, detail, isAuto, sizes, isImg){\n\t\t\tvar src, srcset, parent, isPicture, event, firesLoad;\n\n\t\t\tif(!(event = triggerEvent(elem, 'lazybeforeunveil', detail)).defaultPrevented){\n\n\t\t\t\tif(sizes){\n\t\t\t\t\tif(isAuto){\n\t\t\t\t\t\taddClass(elem, lazySizesCfg.autosizesClass);\n\t\t\t\t\t} else {\n\t\t\t\t\t\telem.setAttribute('sizes', sizes);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsrcset = elem[_getAttribute](lazySizesCfg.srcsetAttr);\n\t\t\t\tsrc = elem[_getAttribute](lazySizesCfg.srcAttr);\n\n\t\t\t\tif(isImg) {\n\t\t\t\t\tparent = elem.parentNode;\n\t\t\t\t\tisPicture = parent && regPicture.test(parent.nodeName || '');\n\t\t\t\t}\n\n\t\t\t\tfiresLoad = detail.firesLoad || (('src' in elem) && (srcset || src || isPicture));\n\n\t\t\t\tevent = {target: elem};\n\n\t\t\t\taddClass(elem, lazySizesCfg.loadingClass);\n\n\t\t\t\tif(firesLoad){\n\t\t\t\t\tclearTimeout(resetPreloadingTimer);\n\t\t\t\t\tresetPreloadingTimer = setTimeout(resetPreloading, 2500);\n\t\t\t\t\taddRemoveLoadEvents(elem, rafSwitchLoadingClass, true);\n\t\t\t\t}\n\n\t\t\t\tif(isPicture){\n\t\t\t\t\tforEach.call(parent.getElementsByTagName('source'), handleSources);\n\t\t\t\t}\n\n\t\t\t\tif(srcset){\n\t\t\t\t\telem.setAttribute('srcset', srcset);\n\t\t\t\t} else if(src && !isPicture){\n\t\t\t\t\tif(regIframe.test(elem.nodeName)){\n\t\t\t\t\t\tchangeIframeSrc(elem, src);\n\t\t\t\t\t} else {\n\t\t\t\t\t\telem.src = src;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(isImg && (srcset || isPicture)){\n\t\t\t\t\tupdatePolyfill(elem, {src: src});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(elem._lazyRace){\n\t\t\t\tdelete elem._lazyRace;\n\t\t\t}\n\t\t\tremoveClass(elem, lazySizesCfg.lazyClass);\n\n\t\t\trAF(function(){\n\t\t\t\t// Part of this can be removed as soon as this fix is older: https://bugs.chromium.org/p/chromium/issues/detail?id=7731 (2015)\n\t\t\t\tvar isLoaded = elem.complete && elem.naturalWidth > 1;\n\n\t\t\t\tif( !firesLoad || isLoaded){\n\t\t\t\t\tif (isLoaded) {\n\t\t\t\t\t\taddClass(elem, lazySizesCfg.fastLoadedClass);\n\t\t\t\t\t}\n\t\t\t\t\tswitchLoadingClass(event);\n\t\t\t\t\telem._lazyCache = true;\n\t\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t\tif ('_lazyCache' in elem) {\n\t\t\t\t\t\t\tdelete elem._lazyCache;\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 9);\n\t\t\t\t}\n\t\t\t\tif (elem.loading == 'lazy') {\n\t\t\t\t\tisLoading--;\n\t\t\t\t}\n\t\t\t}, true);\n\t\t});\n\n\t\t/**\n\t\t *\n\t\t * @param elem { Element }\n\t\t */\n\t\tvar unveilElement = function (elem){\n\t\t\tif (elem._lazyRace) {return;}\n\t\t\tvar detail;\n\n\t\t\tvar isImg = regImg.test(elem.nodeName);\n\n\t\t\t//allow using sizes=\"auto\", but don't use. it's invalid. Use data-sizes=\"auto\" or a valid value for sizes instead (i.e.: sizes=\"80vw\")\n\t\t\tvar sizes = isImg && (elem[_getAttribute](lazySizesCfg.sizesAttr) || elem[_getAttribute]('sizes'));\n\t\t\tvar isAuto = sizes == 'auto';\n\n\t\t\tif( (isAuto || !isCompleted) && isImg && (elem[_getAttribute]('src') || elem.srcset) && !elem.complete && !hasClass(elem, lazySizesCfg.errorClass) && hasClass(elem, lazySizesCfg.lazyClass)){return;}\n\n\t\t\tdetail = triggerEvent(elem, 'lazyunveilread').detail;\n\n\t\t\tif(isAuto){\n\t\t\t\t autoSizer.updateElem(elem, true, elem.offsetWidth);\n\t\t\t}\n\n\t\t\telem._lazyRace = true;\n\t\t\tisLoading++;\n\n\t\t\tlazyUnveil(elem, detail, isAuto, sizes, isImg);\n\t\t};\n\n\t\tvar afterScroll = debounce(function(){\n\t\t\tlazySizesCfg.loadMode = 3;\n\t\t\tthrottledCheckElements();\n\t\t});\n\n\t\tvar altLoadmodeScrollListner = function(){\n\t\t\tif(lazySizesCfg.loadMode == 3){\n\t\t\t\tlazySizesCfg.loadMode = 2;\n\t\t\t}\n\t\t\tafterScroll();\n\t\t};\n\n\t\tvar onload = function(){\n\t\t\tif(isCompleted){return;}\n\t\t\tif(Date.now() - started < 999){\n\t\t\t\tsetTimeout(onload, 999);\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\tisCompleted = true;\n\n\t\t\tlazySizesCfg.loadMode = 3;\n\n\t\t\tthrottledCheckElements();\n\n\t\t\taddEventListener('scroll', altLoadmodeScrollListner, true);\n\t\t};\n\n\t\treturn {\n\t\t\t_: function(){\n\t\t\t\tstarted = Date.now();\n\n\t\t\t\tlazysizes.elements = document.getElementsByClassName(lazySizesCfg.lazyClass);\n\t\t\t\tpreloadElems = document.getElementsByClassName(lazySizesCfg.lazyClass + ' ' + lazySizesCfg.preloadClass);\n\n\t\t\t\taddEventListener('scroll', throttledCheckElements, true);\n\n\t\t\t\taddEventListener('resize', throttledCheckElements, true);\n\n\t\t\t\taddEventListener('pageshow', function (e) {\n\t\t\t\t\tif (e.persisted) {\n\t\t\t\t\t\tvar loadingElements = document.querySelectorAll('.' + lazySizesCfg.loadingClass);\n\n\t\t\t\t\t\tif (loadingElements.length && loadingElements.forEach) {\n\t\t\t\t\t\t\trequestAnimationFrame(function () {\n\t\t\t\t\t\t\t\tloadingElements.forEach( function (img) {\n\t\t\t\t\t\t\t\t\tif (img.complete) {\n\t\t\t\t\t\t\t\t\t\tunveilElement(img);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif(window.MutationObserver){\n\t\t\t\t\tnew MutationObserver( throttledCheckElements ).observe( docElem, {childList: true, subtree: true, attributes: true} );\n\t\t\t\t} else {\n\t\t\t\t\tdocElem[_addEventListener]('DOMNodeInserted', throttledCheckElements, true);\n\t\t\t\t\tdocElem[_addEventListener]('DOMAttrModified', throttledCheckElements, true);\n\t\t\t\t\tsetInterval(throttledCheckElements, 999);\n\t\t\t\t}\n\n\t\t\t\taddEventListener('hashchange', throttledCheckElements, true);\n\n\t\t\t\t//, 'fullscreenchange'\n\t\t\t\t['focus', 'mouseover', 'click', 'load', 'transitionend', 'animationend'].forEach(function(name){\n\t\t\t\t\tdocument[_addEventListener](name, throttledCheckElements, true);\n\t\t\t\t});\n\n\t\t\t\tif((/d$|^c/.test(document.readyState))){\n\t\t\t\t\tonload();\n\t\t\t\t} else {\n\t\t\t\t\taddEventListener('load', onload);\n\t\t\t\t\tdocument[_addEventListener]('DOMContentLoaded', throttledCheckElements);\n\t\t\t\t\tsetTimeout(onload, 20000);\n\t\t\t\t}\n\n\t\t\t\tif(lazysizes.elements.length){\n\t\t\t\t\tcheckElements();\n\t\t\t\t\trAF._lsFlush();\n\t\t\t\t} else {\n\t\t\t\t\tthrottledCheckElements();\n\t\t\t\t}\n\t\t\t},\n\t\t\tcheckElems: throttledCheckElements,\n\t\t\tunveil: unveilElement,\n\t\t\t_aLSL: altLoadmodeScrollListner,\n\t\t};\n\t})();\n\n\n\tvar autoSizer = (function(){\n\t\tvar autosizesElems;\n\n\t\tvar sizeElement = rAFIt(function(elem, parent, event, width){\n\t\t\tvar sources, i, len;\n\t\t\telem._lazysizesWidth = width;\n\t\t\twidth += 'px';\n\n\t\t\telem.setAttribute('sizes', width);\n\n\t\t\tif(regPicture.test(parent.nodeName || '')){\n\t\t\t\tsources = parent.getElementsByTagName('source');\n\t\t\t\tfor(i = 0, len = sources.length; i < len; i++){\n\t\t\t\t\tsources[i].setAttribute('sizes', width);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(!event.detail.dataAttr){\n\t\t\t\tupdatePolyfill(elem, event.detail);\n\t\t\t}\n\t\t});\n\t\t/**\n\t\t *\n\t\t * @param elem {Element}\n\t\t * @param dataAttr\n\t\t * @param [width] { number }\n\t\t */\n\t\tvar getSizeElement = function (elem, dataAttr, width){\n\t\t\tvar event;\n\t\t\tvar parent = elem.parentNode;\n\n\t\t\tif(parent){\n\t\t\t\twidth = getWidth(elem, parent, width);\n\t\t\t\tevent = triggerEvent(elem, 'lazybeforesizes', {width: width, dataAttr: !!dataAttr});\n\n\t\t\t\tif(!event.defaultPrevented){\n\t\t\t\t\twidth = event.detail.width;\n\n\t\t\t\t\tif(width && width !== elem._lazysizesWidth){\n\t\t\t\t\t\tsizeElement(elem, parent, event, width);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tvar updateElementsSizes = function(){\n\t\t\tvar i;\n\t\t\tvar len = autosizesElems.length;\n\t\t\tif(len){\n\t\t\t\ti = 0;\n\n\t\t\t\tfor(; i < len; i++){\n\t\t\t\t\tgetSizeElement(autosizesElems[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tvar debouncedUpdateElementsSizes = debounce(updateElementsSizes);\n\n\t\treturn {\n\t\t\t_: function(){\n\t\t\t\tautosizesElems = document.getElementsByClassName(lazySizesCfg.autosizesClass);\n\t\t\t\taddEventListener('resize', debouncedUpdateElementsSizes);\n\t\t\t},\n\t\t\tcheckElems: debouncedUpdateElementsSizes,\n\t\t\tupdateElem: getSizeElement\n\t\t};\n\t})();\n\n\tvar init = function(){\n\t\tif(!init.i && document.getElementsByClassName){\n\t\t\tinit.i = true;\n\t\t\tautoSizer._();\n\t\t\tloader._();\n\t\t}\n\t};\n\n\tsetTimeout(function(){\n\t\tif(lazySizesCfg.init){\n\t\t\tinit();\n\t\t}\n\t});\n\n\tlazysizes = {\n\t\t/**\n\t\t * @type { LazySizesConfigPartial }\n\t\t */\n\t\tcfg: lazySizesCfg,\n\t\tautoSizer: autoSizer,\n\t\tloader: loader,\n\t\tinit: init,\n\t\tuP: updatePolyfill,\n\t\taC: addClass,\n\t\trC: removeClass,\n\t\thC: hasClass,\n\t\tfire: triggerEvent,\n\t\tgW: getWidth,\n\t\trAF: rAF,\n\t};\n\n\treturn lazysizes;\n}\n));\n","(function(window, factory) {\n\tvar globalInstall = function(){\n\t\tfactory(window.lazySizes);\n\t\twindow.removeEventListener('lazyunveilread', globalInstall, true);\n\t};\n\n\tfactory = factory.bind(null, window, window.document);\n\n\tif(typeof module == 'object' && module.exports){\n\t\tfactory(require('lazysizes'));\n\t} else if (typeof define == 'function' && define.amd) {\n\t\tdefine(['lazysizes'], factory);\n\t} else if(window.lazySizes) {\n\t\tglobalInstall();\n\t} else {\n\t\twindow.addEventListener('lazyunveilread', globalInstall, true);\n\t}\n}(window, function(window, document, lazySizes) {\n\t'use strict';\n\tif(!window.addEventListener){return;}\n\n\tvar lazySizesCfg = lazySizes.cfg;\n\tvar regWhite = /\\s+/g;\n\tvar regSplitSet = /\\s*\\|\\s+|\\s+\\|\\s*/g;\n\tvar regSource = /^(.+?)(?:\\s+\\[\\s*(.+?)\\s*\\])(?:\\s+\\[\\s*(.+?)\\s*\\])?$/;\n\tvar regType = /^\\s*\\(*\\s*type\\s*:\\s*(.+?)\\s*\\)*\\s*$/;\n\tvar regBgUrlEscape = /\\(|\\)|'/;\n\tvar allowedBackgroundSize = {contain: 1, cover: 1};\n\tvar proxyWidth = function(elem){\n\t\tvar width = lazySizes.gW(elem, elem.parentNode);\n\n\t\tif(!elem._lazysizesWidth || width > elem._lazysizesWidth){\n\t\t\telem._lazysizesWidth = width;\n\t\t}\n\t\treturn elem._lazysizesWidth;\n\t};\n\tvar getBgSize = function(elem){\n\t\tvar bgSize;\n\n\t\tbgSize = (getComputedStyle(elem) || {getPropertyValue: function(){}}).getPropertyValue('background-size');\n\n\t\tif(!allowedBackgroundSize[bgSize] && allowedBackgroundSize[elem.style.backgroundSize]){\n\t\t\tbgSize = elem.style.backgroundSize;\n\t\t}\n\n\t\treturn bgSize;\n\t};\n\tvar setTypeOrMedia = function(source, match){\n\t\tif(match){\n\t\t\tvar typeMatch = match.match(regType);\n\t\t\tif(typeMatch && typeMatch[1]){\n\t\t\t\tsource.setAttribute('type', typeMatch[1]);\n\t\t\t} else {\n\t\t\t\tsource.setAttribute('media', lazySizesCfg.customMedia[match] || match);\n\t\t\t}\n\t\t}\n\t};\n\tvar createPicture = function(sets, elem, img){\n\t\tvar picture = document.createElement('picture');\n\t\tvar sizes = elem.getAttribute(lazySizesCfg.sizesAttr);\n\t\tvar ratio = elem.getAttribute('data-ratio');\n\t\tvar optimumx = elem.getAttribute('data-optimumx');\n\n\t\tif(elem._lazybgset && elem._lazybgset.parentNode == elem){\n\t\t\telem.removeChild(elem._lazybgset);\n\t\t}\n\n\t\tObject.defineProperty(img, '_lazybgset', {\n\t\t\tvalue: elem,\n\t\t\twritable: true\n\t\t});\n\t\tObject.defineProperty(elem, '_lazybgset', {\n\t\t\tvalue: picture,\n\t\t\twritable: true\n\t\t});\n\n\t\tsets = sets.replace(regWhite, ' ').split(regSplitSet);\n\n\t\tpicture.style.display = 'none';\n\t\timg.className = lazySizesCfg.lazyClass;\n\n\t\tif(sets.length == 1 && !sizes){\n\t\t\tsizes = 'auto';\n\t\t}\n\n\t\tsets.forEach(function(set){\n\t\t\tvar match;\n\t\t\tvar source = document.createElement('source');\n\n\t\t\tif(sizes && sizes != 'auto'){\n\t\t\t\tsource.setAttribute('sizes', sizes);\n\t\t\t}\n\n\t\t\tif((match = set.match(regSource))){\n\t\t\t\tsource.setAttribute(lazySizesCfg.srcsetAttr, match[1]);\n\n\t\t\t\tsetTypeOrMedia(source, match[2]);\n\t\t\t\tsetTypeOrMedia(source, match[3]);\n\t\t\t} else {\n\t\t\t\tsource.setAttribute(lazySizesCfg.srcsetAttr, set);\n\t\t\t}\n\n\t\t\tpicture.appendChild(source);\n\t\t});\n\n\t\tif(sizes){\n\t\t\timg.setAttribute(lazySizesCfg.sizesAttr, sizes);\n\t\t\telem.removeAttribute(lazySizesCfg.sizesAttr);\n\t\t\telem.removeAttribute('sizes');\n\t\t}\n\t\tif(optimumx){\n\t\t\timg.setAttribute('data-optimumx', optimumx);\n\t\t}\n\t\tif(ratio) {\n\t\t\timg.setAttribute('data-ratio', ratio);\n\t\t}\n\n\t\tpicture.appendChild(img);\n\n\t\telem.appendChild(picture);\n\t};\n\n\tvar proxyLoad = function(e){\n\t\tif(!e.target._lazybgset){return;}\n\n\t\tvar image = e.target;\n\t\tvar elem = image._lazybgset;\n\t\tvar bg = image.currentSrc || image.src;\n\n\n\t\tif(bg){\n\t\t\tvar useSrc = regBgUrlEscape.test(bg) ? JSON.stringify(bg) : bg;\n\t\t\tvar event = lazySizes.fire(elem, 'bgsetproxy', {\n\t\t\t\tsrc: bg,\n\t\t\t\tuseSrc: useSrc,\n\t\t\t\tfullSrc: null,\n\t\t\t});\n\n\t\t\tif(!event.defaultPrevented){\n\t\t\t\telem.style.backgroundImage = event.detail.fullSrc || 'url(' + event.detail.useSrc + ')';\n\t\t\t}\n\t\t}\n\n\t\tif(image._lazybgsetLoading){\n\t\t\tlazySizes.fire(elem, '_lazyloaded', {}, false, true);\n\t\t\tdelete image._lazybgsetLoading;\n\t\t}\n\t};\n\n\taddEventListener('lazybeforeunveil', function(e){\n\t\tvar set, image, elem;\n\n\t\tif(e.defaultPrevented || !(set = e.target.getAttribute('data-bgset'))){return;}\n\n\t\telem = e.target;\n\t\timage = document.createElement('img');\n\n\t\timage.alt = '';\n\n\t\timage._lazybgsetLoading = true;\n\t\te.detail.firesLoad = true;\n\n\t\tcreatePicture(set, elem, image);\n\n\t\tsetTimeout(function(){\n\t\t\tlazySizes.loader.unveil(image);\n\n\t\t\tlazySizes.rAF(function(){\n\t\t\t\tlazySizes.fire(image, '_lazyloaded', {}, true, true);\n\t\t\t\tif(image.complete) {\n\t\t\t\t\tproxyLoad({target: image});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t});\n\n\tdocument.addEventListener('load', proxyLoad, true);\n\n\twindow.addEventListener('lazybeforesizes', function(e){\n\t\tif(e.detail.instance != lazySizes){return;}\n\t\tif(e.target._lazybgset && e.detail.dataAttr){\n\t\t\tvar elem = e.target._lazybgset;\n\t\t\tvar bgSize = getBgSize(elem);\n\n\t\t\tif(allowedBackgroundSize[bgSize]){\n\t\t\t\te.target._lazysizesParentFit = bgSize;\n\n\t\t\t\tlazySizes.rAF(function(){\n\t\t\t\t\te.target.setAttribute('data-parent-fit', bgSize);\n\t\t\t\t\tif(e.target._lazysizesParentFit){\n\t\t\t\t\t\tdelete e.target._lazysizesParentFit;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, true);\n\n\tdocument.documentElement.addEventListener('lazybeforesizes', function(e){\n\t\tif(e.defaultPrevented || !e.target._lazybgset || e.detail.instance != lazySizes){return;}\n\t\te.detail.width = proxyWidth(e.target._lazybgset);\n\t});\n}));\n","(function(window, factory) {\n\tif(!window) {return;}\n\tvar globalInstall = function(){\n\t\tfactory(window.lazySizes);\n\t\twindow.removeEventListener('lazyunveilread', globalInstall, true);\n\t};\n\n\tfactory = factory.bind(null, window, window.document);\n\n\tif(typeof module == 'object' && module.exports){\n\t\tfactory(require('lazysizes'));\n\t} else if (typeof define == 'function' && define.amd) {\n\t\tdefine(['lazysizes'], factory);\n\t} else if(window.lazySizes) {\n\t\tglobalInstall();\n\t} else {\n\t\twindow.addEventListener('lazyunveilread', globalInstall, true);\n\t}\n}(typeof window != 'undefined' ?\n\twindow : 0, function(window, document, lazySizes) {\n\t'use strict';\n\n\tif(!window.addEventListener){return;}\n\n\tvar regDescriptors = /\\s+(\\d+)(w|h)\\s+(\\d+)(w|h)/;\n\tvar regCssFit = /parent-fit[\"']*\\s*:\\s*[\"']*(contain|cover|width)/;\n\tvar regCssObject = /parent-container[\"']*\\s*:\\s*[\"']*(.+?)(?=(\\s|$|,|'|\"|;))/;\n\tvar regPicture = /^picture$/i;\n\tvar cfg = lazySizes.cfg;\n\n\tvar getCSS = function (elem){\n\t\treturn (getComputedStyle(elem, null) || {});\n\t};\n\n\tvar parentFit = {\n\n\t\tgetParent: function(element, parentSel){\n\t\t\tvar parent = element;\n\t\t\tvar parentNode = element.parentNode;\n\n\t\t\tif((!parentSel || parentSel == 'prev') && parentNode && regPicture.test(parentNode.nodeName || '')){\n\t\t\t\tparentNode = parentNode.parentNode;\n\t\t\t}\n\n\t\t\tif(parentSel != 'self'){\n\t\t\t\tif(parentSel == 'prev'){\n\t\t\t\t\tparent = element.previousElementSibling;\n\t\t\t\t} else if(parentSel && (parentNode.closest || window.jQuery)){\n\t\t\t\t\tparent = (parentNode.closest ?\n\t\t\t\t\t\t\tparentNode.closest(parentSel) :\n\t\t\t\t\t\t\tjQuery(parentNode).closest(parentSel)[0]) ||\n\t\t\t\t\t\tparentNode\n\t\t\t\t\t;\n\t\t\t\t} else {\n\t\t\t\t\tparent = parentNode;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn parent;\n\t\t},\n\n\t\tgetFit: function(element){\n\t\t\tvar tmpMatch, parentObj;\n\t\t\tvar css = getCSS(element);\n\t\t\tvar content = css.content || css.fontFamily;\n\t\t\tvar obj = {\n\t\t\t\tfit: element._lazysizesParentFit || element.getAttribute('data-parent-fit')\n\t\t\t};\n\n\t\t\tif(!obj.fit && content && (tmpMatch = content.match(regCssFit))){\n\t\t\t\tobj.fit = tmpMatch[1];\n\t\t\t}\n\n\t\t\tif(obj.fit){\n\t\t\t\tparentObj = element._lazysizesParentContainer || element.getAttribute('data-parent-container');\n\n\t\t\t\tif(!parentObj && content && (tmpMatch = content.match(regCssObject))){\n\t\t\t\t\tparentObj = tmpMatch[1];\n\t\t\t\t}\n\n\t\t\t\tobj.parent = parentFit.getParent(element, parentObj);\n\n\n\t\t\t} else {\n\t\t\t\tobj.fit = css.objectFit;\n\t\t\t}\n\n\t\t\treturn obj;\n\t\t},\n\n\t\tgetImageRatio: function(element){\n\t\t\tvar i, srcset, media, ratio, match, width, height;\n\t\t\tvar parent = element.parentNode;\n\t\t\tvar elements = parent && regPicture.test(parent.nodeName || '') ?\n\t\t\t\t\tparent.querySelectorAll('source, img') :\n\t\t\t\t\t[element]\n\t\t\t\t;\n\n\t\t\tfor(i = 0; i < elements.length; i++){\n\t\t\t\telement = elements[i];\n\t\t\t\tsrcset = element.getAttribute(cfg.srcsetAttr) || element.getAttribute('srcset') || element.getAttribute('data-pfsrcset') || element.getAttribute('data-risrcset') || '';\n\t\t\t\tmedia = element._lsMedia || element.getAttribute('media');\n\t\t\t\tmedia = cfg.customMedia[element.getAttribute('data-media') || media] || media;\n\n\t\t\t\tif(srcset && (!media || (window.matchMedia && matchMedia(media) || {}).matches )){\n\t\t\t\t\tratio = parseFloat(element.getAttribute('data-aspectratio'));\n\n\t\t\t\t\tif (!ratio) {\n\t\t\t\t\t\tmatch = srcset.match(regDescriptors);\n\n\t\t\t\t\t\tif (match) {\n\t\t\t\t\t\t\tif(match[2] == 'w'){\n\t\t\t\t\t\t\t\twidth = match[1];\n\t\t\t\t\t\t\t\theight = match[3];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\twidth = match[3];\n\t\t\t\t\t\t\t\theight = match[1];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twidth = element.getAttribute('width');\n\t\t\t\t\t\t\theight = element.getAttribute('height');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tratio = width / height;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ratio;\n\t\t},\n\n\t\tcalculateSize: function(element, width){\n\t\t\tvar displayRatio, height, imageRatio, retWidth;\n\t\t\tvar fitObj = this.getFit(element);\n\t\t\tvar fit = fitObj.fit;\n\t\t\tvar fitElem = fitObj.parent;\n\n\t\t\tif(fit != 'width' && ((fit != 'contain' && fit != 'cover') || !(imageRatio = this.getImageRatio(element)))){\n\t\t\t\treturn width;\n\t\t\t}\n\n\t\t\tif(fitElem){\n\t\t\t\twidth = fitElem.clientWidth;\n\t\t\t} else {\n\t\t\t\tfitElem = element;\n\t\t\t}\n\n\t\t\tretWidth = width;\n\n\t\t\tif(fit == 'width'){\n\t\t\t\tretWidth = width;\n\t\t\t} else {\n\t\t\t\theight = fitElem.clientHeight;\n\n\t\t\t\tif((displayRatio =  width / height) && ((fit == 'cover' && displayRatio < imageRatio) || (fit == 'contain' && displayRatio > imageRatio))){\n\t\t\t\t\tretWidth = width * (imageRatio / displayRatio);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn retWidth;\n\t\t}\n\t};\n\n\tlazySizes.parentFit = parentFit;\n\n\tdocument.addEventListener('lazybeforesizes', function(e){\n\t\tif(e.defaultPrevented || e.detail.instance != lazySizes){return;}\n\n\t\tvar element = e.target;\n\t\te.detail.width = parentFit.calculateSize(element, e.detail.width);\n\t});\n}));\n","/**\n * SSR Window 4.0.2\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: December 13, 2021\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        'constructor' in obj &&\n        obj.constructor === Object);\n}\nfunction extend(target = {}, src = {}) {\n    Object.keys(src).forEach((key) => {\n        if (typeof target[key] === 'undefined')\n            target[key] = src[key];\n        else if (isObject(src[key]) &&\n            isObject(target[key]) &&\n            Object.keys(src[key]).length > 0) {\n            extend(target[key], src[key]);\n        }\n    });\n}\n\nconst ssrDocument = {\n    body: {},\n    addEventListener() { },\n    removeEventListener() { },\n    activeElement: {\n        blur() { },\n        nodeName: '',\n    },\n    querySelector() {\n        return null;\n    },\n    querySelectorAll() {\n        return [];\n    },\n    getElementById() {\n        return null;\n    },\n    createEvent() {\n        return {\n            initEvent() { },\n        };\n    },\n    createElement() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute() { },\n            getElementsByTagName() {\n                return [];\n            },\n        };\n    },\n    createElementNS() {\n        return {};\n    },\n    importNode() {\n        return null;\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n};\nfunction getDocument() {\n    const doc = typeof document !== 'undefined' ? document : {};\n    extend(doc, ssrDocument);\n    return doc;\n}\n\nconst ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n        userAgent: '',\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n    history: {\n        replaceState() { },\n        pushState() { },\n        go() { },\n        back() { },\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener() { },\n    removeEventListener() { },\n    getComputedStyle() {\n        return {\n            getPropertyValue() {\n                return '';\n            },\n        };\n    },\n    Image() { },\n    Date() { },\n    screen: {},\n    setTimeout() { },\n    clearTimeout() { },\n    matchMedia() {\n        return {};\n    },\n    requestAnimationFrame(callback) {\n        if (typeof setTimeout === 'undefined') {\n            callback();\n            return null;\n        }\n        return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame(id) {\n        if (typeof setTimeout === 'undefined') {\n            return;\n        }\n        clearTimeout(id);\n    },\n};\nfunction getWindow() {\n    const win = typeof window !== 'undefined' ? window : {};\n    extend(win, ssrWindow);\n    return win;\n}\n\nexport { extend, getDocument, getWindow, ssrDocument, ssrWindow };\n","import { getWindow } from 'ssr-window';\nexport default function getBreakpoint(breakpoints, base = 'window', containerEl) {\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}","import setBreakpoint from './setBreakpoint.js';\nimport getBreakpoint from './getBreakpoint.js';\nexport default {\n  setBreakpoint,\n  getBreakpoint\n};","import { extend } from '../../shared/utils.js';\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate(realIndex);\n    swiper.updateSlides();\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}","function checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\nexport default {\n  checkOverflow\n};","function prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\nexport default function addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    el,\n    device\n  } = swiper;\n  // prettier-ignore\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  el.classList.add(...classNames);\n  swiper.emitContainerClasses();\n}","import addClasses from './addClasses.js';\nimport removeClasses from './removeClasses.js';\nexport default {\n  addClasses,\n  removeClasses\n};","export default function removeClasses() {\n  const swiper = this;\n  const {\n    el,\n    classNames\n  } = swiper;\n  el.classList.remove(...classNames);\n  swiper.emitContainerClasses();\n}","/* eslint no-param-reassign: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport { extend, deleteProps, createElement, elementChildren, elementStyle, elementIndex } from '../shared/utils.js';\nimport { getSupport } from '../shared/get-support.js';\nimport { getDevice } from '../shared/get-device.js';\nimport { getBrowser } from '../shared/get-browser.js';\nimport Resize from './modules/resize/resize.js';\nimport Observer from './modules/observer/observer.js';\nimport eventsEmitter from './events-emitter.js';\nimport update from './update/index.js';\nimport translate from './translate/index.js';\nimport transition from './transition/index.js';\nimport slide from './slide/index.js';\nimport loop from './loop/index.js';\nimport grabCursor from './grab-cursor/index.js';\nimport events from './events/index.js';\nimport breakpoints from './breakpoints/index.js';\nimport classes from './classes/index.js';\nimport checkOverflow from './check-overflow/index.js';\nimport defaults from './defaults.js';\nimport moduleExtendParams from './moduleExtendParams.js';\nimport { processLazyPreloader, preload } from '../shared/process-lazy-preloader.js';\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events,\n  breakpoints,\n  checkOverflow,\n  classes\n};\nconst extendedDefaults = {};\nclass Swiper {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n    const document = getDocument();\n    if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n      const swipers = [];\n      document.querySelectorAll(params.el).forEach(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      // eslint-disable-next-line no-constructor-return\n      return swipers;\n    }\n\n    // Swiper Instance\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        params,\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = extend({}, defaults, allModulesParams);\n\n    // Extend defaults with passed params\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params);\n\n    // add event listeners\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    }\n\n    // Extend Swiper\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: [],\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      cssOverflowAdjustment() {\n        // Returns 0 unless `translate` is > 2**23\n        // Should be subtracted from css values to prevent overflow\n        return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\n      },\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: 0,\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        startMoving: undefined,\n        evCache: []\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper');\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    // eslint-disable-next-line no-constructor-return\n    return swiper;\n  }\n  getSlideIndex(slideEl) {\n    const {\n      slidesEl,\n      params\n    } = this;\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    const firstSlideIndex = elementIndex(slides[0]);\n    return elementIndex(slideEl) - firstSlideIndex;\n  }\n  getSlideIndexByData(index) {\n    return this.getSlideIndex(this.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index)[0]);\n  }\n  recalcSlides() {\n    const swiper = this;\n    const {\n      slidesEl,\n      params\n    } = swiper;\n    swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  }\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n    swiper.emit('enable');\n  }\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n    swiper.emit('disable');\n  }\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.forEach(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n  slidesPerViewDynamic(view = 'current', exact = false) {\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      }\n    });\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        const slides = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides : swiper.slides;\n        translated = swiper.slideTo(slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n    swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n    swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.forEach(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n    if (swiper.rtl) {\n      swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n    swiper.update();\n  }\n  mount(element) {\n    const swiper = this;\n    if (swiper.mounted) return true;\n\n    // Find el\n    let el = element || swiper.params.el;\n    if (typeof el === 'string') {\n      el = document.querySelector(el);\n    }\n    if (!el) {\n      return false;\n    }\n    el.swiper = swiper;\n    if (el.shadowEl) {\n      swiper.isElement = true;\n    }\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = el.shadowRoot.querySelector(getWrapperSelector());\n        // Children needs to return slot items\n        return res;\n      }\n      return elementChildren(el, getWrapperSelector())[0];\n    };\n    // Find Wrapper\n    let wrapperEl = getWrapper();\n    if (!wrapperEl && swiper.params.createElements) {\n      wrapperEl = createElement('div', swiper.params.wrapperClass);\n      el.append(wrapperEl);\n      elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n        wrapperEl.append(slideEl);\n      });\n    }\n    Object.assign(swiper, {\n      el,\n      wrapperEl,\n      slidesEl: swiper.isElement ? el : wrapperEl,\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n      wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n    });\n    return true;\n  }\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    }\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Attach events\n    swiper.attachEvents();\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      } else {\n        imageEl.addEventListener('load', e => {\n          processLazyPreloader(swiper, e.target);\n        });\n      }\n    });\n    preload(swiper);\n\n    // Init Flag\n    swiper.initialized = true;\n    preload(swiper);\n\n    // Emit\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params,\n      el,\n      wrapperEl,\n      slides\n    } = swiper;\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      el.removeAttribute('style');\n      wrapperEl.removeAttribute('style');\n      if (slides && slides.length) {\n        slides.forEach(slideEl => {\n          slideEl.classList.remove(params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n          slideEl.removeAttribute('style');\n          slideEl.removeAttribute('data-swiper-slide-index');\n        });\n      }\n    }\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n    if (deleteInstance !== false) {\n      swiper.el.swiper = null;\n      deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n    Swiper.installModule(module);\n    return Swiper;\n  }\n}\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\nexport default Swiper;","export default {\n  init: true,\n  direction: 'horizontal',\n  oneWayMovement: false,\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 5,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // loop\n  loop: false,\n  loopedSlides: null,\n  loopPreventsSliding: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideActiveClass: 'swiper-slide-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideNextClass: 'swiper-slide-next',\n  slidePrevClass: 'swiper-slide-prev',\n  wrapperClass: 'swiper-wrapper',\n  lazyPreloaderClass: 'swiper-lazy-preloader',\n  lazyPreloadPrevNext: 0,\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};","/* eslint-disable no-underscore-dangle */\n\nexport default {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n    return self;\n  },\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n    return self;\n  },\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n};","import { getDocument } from 'ssr-window';\nimport onTouchStart from './onTouchStart.js';\nimport onTouchMove from './onTouchMove.js';\nimport onTouchEnd from './onTouchEnd.js';\nimport onResize from './onResize.js';\nimport onClick from './onClick.js';\nimport onScroll from './onScroll.js';\nimport onLoad from './onLoad.js';\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    el,\n    wrapperEl,\n    device\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method;\n\n  // Touch Events\n  el[domMethod]('pointerdown', swiper.onTouchStart, {\n    passive: false\n  });\n  document[domMethod]('pointermove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('pointerup', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointercancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerout', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerleave', swiper.onTouchEnd, {\n    passive: true\n  });\n\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n\n  // Images loader\n  el[domMethod]('load', swiper.onLoad, {\n    capture: true\n  });\n};\nfunction attachEvents() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n  swiper.onClick = onClick.bind(swiper);\n  swiper.onLoad = onLoad.bind(swiper);\n  if (!dummyEventAttached) {\n    document.addEventListener('touchstart', dummyEventListener);\n    dummyEventAttached = true;\n  }\n  events(swiper, 'on');\n}\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\nexport default {\n  attachEvents,\n  detachEvents\n};","export default function onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}","import { processLazyPreloader } from '../../shared/process-lazy-preloader.js';\nexport default function onLoad(e) {\n  const swiper = this;\n  processLazyPreloader(swiper, e.target);\n  swiper.update();\n}","export default function onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper;\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n  const isVirtualLoop = isVirtual && params.loop;\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    if (swiper.params.loop && !isVirtual) {\n      swiper.slideToLoop(swiper.realIndex, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    clearTimeout(swiper.autoplay.resizeTimeout);\n    swiper.autoplay.resizeTimeout = setTimeout(() => {\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.resume();\n      }\n    }, 500);\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}","export default function onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, false);\n}","import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === event.pointerId);\n  if (pointerIndex >= 0) {\n    data.evCache.splice(pointerIndex, 1);\n  }\n  if (['pointercancel', 'pointerout', 'pointerleave'].includes(event.type)) {\n    const proceed = event.type === 'pointercancel' && (swiper.browser.isSafari || swiper.browser.isWebView);\n    if (!proceed) {\n      return;\n    }\n  }\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  }\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}","import { getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\nexport default function onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n  if (pointerIndex >= 0) data.evCache[pointerIndex] = e;\n  const targetTouch = data.evCache.length > 1 ? data.evCache[0] : e;\n  const pageX = targetTouch.pageX;\n  const pageY = targetTouch.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    if (!e.target.matches(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        prevX: swiper.touches.currentX,\n        prevY: swiper.touches.currentY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n    return;\n  }\n  if (params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n      return;\n    }\n  }\n  if (document.activeElement) {\n    if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling || swiper.zoom && swiper.params.zoom && swiper.params.zoom.enabled && data.evCache.length > 1) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n  if (params.oneWayMovement) {\n    diff = Math.abs(diff) * (rtl ? 1 : -1);\n    touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n  }\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) {\n    diff = -diff;\n    touchesDiff = -touchesDiff;\n  }\n  const prevTouchesDirection = swiper.touchesDirection;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n  const isLoop = swiper.params.loop && !params.cssMode;\n  if (!data.isMoved) {\n    if (isLoop) {\n      swiper.loopFix({\n        direction: swiper.swipeDirection\n      });\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      const evt = new window.CustomEvent('transitionend', {\n        bubbles: true,\n        cancelable: true\n      });\n      swiper.wrapperEl.dispatchEvent(evt);\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  let loopFixed;\n  if (data.isMoved && prevTouchesDirection !== swiper.touchesDirection && isLoop && Math.abs(diff) >= 1) {\n    // need another loop fix\n    swiper.loopFix({\n      direction: swiper.swipeDirection,\n      setTranslate: true\n    });\n    loopFixed = true;\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if (diff > 0) {\n    if (isLoop && !loopFixed && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.size / 2 : swiper.minTranslate())) {\n      swiper.loopFix({\n        direction: 'prev',\n        setTranslate: true,\n        activeSlideIndex: 0\n      });\n    }\n    if (data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n      }\n    }\n  } else if (diff < 0) {\n    if (isLoop && !loopFixed && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.size / 2 : swiper.maxTranslate())) {\n      swiper.loopFix({\n        direction: 'next',\n        setTranslate: true,\n        activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n      });\n    }\n    if (data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n      }\n    }\n  }\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}","import { getWindow, getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\nexport default function onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n  const data = swiper.touchEventsData;\n  data.evCache.push(event);\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetEl = e.target;\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!swiper.wrapperEl.contains(targetEl)) return;\n  }\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  // eslint-disable-next-line\n  const eventPath = event.composedPath ? event.composedPath() : event.path;\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\n    document.activeElement.blur();\n  }\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n  if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n  swiper.emit('touchStart', e);\n}","import setGrabCursor from './setGrabCursor.js';\nimport unsetGrabCursor from './unsetGrabCursor.js';\nexport default {\n  setGrabCursor,\n  unsetGrabCursor\n};","export default function setGrabCursor(moving) {\n  const swiper = this;\n  if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","export default function unsetGrabCursor() {\n  const swiper = this;\n  if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","import loopCreate from './loopCreate.js';\nimport loopFix from './loopFix.js';\nimport loopDestroy from './loopDestroy.js';\nexport default {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};","import { elementChildren } from '../../shared/utils.js';\nexport default function loopCreate(slideRealIndex) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  slides.forEach((el, index) => {\n    el.setAttribute('data-swiper-slide-index', index);\n  });\n  swiper.loopFix({\n    slideRealIndex,\n    direction: params.centeredSlides ? undefined : 'next'\n  });\n}","export default function loopDestroy() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  swiper.recalcSlides();\n  const newSlidesOrder = [];\n  swiper.slides.forEach(slideEl => {\n    const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n    newSlidesOrder[index] = slideEl;\n  });\n  swiper.slides.forEach(slideEl => {\n    slideEl.removeAttribute('data-swiper-slide-index');\n  });\n  newSlidesOrder.forEach(slideEl => {\n    slidesEl.append(slideEl);\n  });\n  swiper.recalcSlides();\n  swiper.slideTo(swiper.realIndex, 0);\n}","export default function loopFix({\n  slideRealIndex,\n  slideTo = true,\n  direction,\n  setTranslate,\n  activeSlideIndex,\n  byController,\n  byMousewheel\n} = {}) {\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!params.centeredSlides && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10));\n  let loopedSlides = params.loopedSlides || slidesPerView;\n  if (loopedSlides % params.slidesPerGroup !== 0) {\n    loopedSlides += params.slidesPerGroup - loopedSlides % params.slidesPerGroup;\n  }\n  swiper.loopedSlides = loopedSlides;\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  let activeIndex = swiper.activeIndex;\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(swiper.slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0;\n  // prepend last slides before start\n  if (activeSlideIndex < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeSlideIndex, params.slidesPerGroup);\n    for (let i = 0; i < loopedSlides - activeSlideIndex; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      prependSlidesIndexes.push(slides.length - index - 1);\n    }\n  } else if (activeSlideIndex /* + slidesPerView */ > swiper.slides.length - loopedSlides * 2) {\n    slidesAppended = Math.max(activeSlideIndex - (swiper.slides.length - loopedSlides * 2), params.slidesPerGroup);\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      appendSlidesIndexes.push(index);\n    }\n  }\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      slidesEl.prepend(swiper.slides[index]);\n    });\n  }\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      slidesEl.append(swiper.slides[index]);\n    });\n  }\n  swiper.recalcSlides();\n  if (params.slidesPerView === 'auto') {\n    swiper.updateSlides();\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          swiper.slideToLoop(slideRealIndex, 0, false, true);\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        swiper.slideToLoop(slideRealIndex, 0, false, true);\n      }\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      slideTo: false,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix(loopParams);\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix(loopParams);\n    }\n  }\n  swiper.emit('loopFix');\n}","import { extend } from '../shared/utils.js';\nexport default function moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj = {}) {\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        auto: true\n      };\n    }\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}","import { getWindow } from 'ssr-window';\nimport { elementParents } from '../../../shared/utils.js';\nexport default function Observer({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const observers = [];\n  const window = getWindow();\n  const attach = (target, options = {}) => {\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (swiper.__preventObserver__) return;\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n  const init = () => {\n    if (!swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = elementParents(swiper.el);\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    attach(swiper.el, {\n      childList: swiper.params.observeSlideChildren\n    });\n\n    // Observe wrapper\n    attach(swiper.wrapperEl, {\n      attributes: false\n    });\n  };\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}","import { getWindow } from 'ssr-window';\nexport default function Resize({\n  swiper,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}","import slideTo from './slideTo.js';\nimport slideToLoop from './slideToLoop.js';\nimport slideNext from './slideNext.js';\nimport slidePrev from './slidePrev.js';\nimport slideReset from './slideReset.js';\nimport slideToClosest from './slideToClosest.js';\nimport slideToClickedSlide from './slideToClickedSlide.js';\nexport default {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};","/* eslint no-unused-vars: \"off\" */\nexport default function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    enabled,\n    params,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  let perGroup = params.slidesPerGroup;\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'next'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'prev'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n  let prevIndex = 0;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideReset(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function slideTo(index = 0, speed = this.params.speed, runCallbacks = true, internal, initial) {\n  if (typeof index === 'string') {\n    index = parseInt(index, 10);\n  }\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n    return false;\n  }\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex];\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) {\n        return false;\n      }\n    }\n  }\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  // Update progress\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n  // Update Index\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n      if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n        swiper._cssModeVirtualInitialSet = true;\n        requestAnimationFrame(() => {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._immediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n    swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n  }\n  return true;\n}","import { elementChildren, nextTick } from '../../shared/utils.js';\nexport default function slideToClickedSlide() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n        swiper.loopFix();\n        slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideToClosest(speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}","export default function slideToLoop(index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      newIndex = swiper.getSlideIndexByData(newIndex);\n    }\n  }\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}","import setTransition from './setTransition.js';\nimport transitionStart from './transitionStart.js';\nimport transitionEnd from './transitionEnd.js';\nexport default {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};","export default function setTransition(duration, byController) {\n  const swiper = this;\n  if (!swiper.params.cssMode) {\n    swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n  }\n  swiper.emit('setTransition', duration, byController);\n}","export default function transitionEmit({\n  swiper,\n  runCallbacks,\n  direction,\n  step\n}) {\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n  swiper.emit(`transition${step}`);\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n    swiper.emit(`slideChangeTransition${step}`);\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionEnd(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionStart(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}","import { getTranslate } from '../../shared/utils.js';\nexport default function getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    wrapperEl\n  } = swiper;\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n  let currentTranslate = getTranslate(wrapperEl, axis);\n  currentTranslate += swiper.cssOverflowAdjustment();\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}","import getTranslate from './getTranslate.js';\nimport setTranslate from './setTranslate.js';\nimport minTranslate from './minTranslate.js';\nimport maxTranslate from './maxTranslate.js';\nimport translateTo from './translateTo.js';\nexport default {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};","export default function maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}","export default function minTranslate() {\n  return -this.snapGrid[0];\n}","export default function setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    if (swiper.isHorizontal()) {\n      x -= swiper.cssOverflowAdjustment();\n    } else {\n      y -= swiper.cssOverflowAdjustment();\n    }\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  }\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, byController);\n}","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n  return true;\n}","import updateSize from './updateSize.js';\nimport updateSlides from './updateSlides.js';\nimport updateAutoHeight from './updateAutoHeight.js';\nimport updateSlidesOffset from './updateSlidesOffset.js';\nimport updateSlidesProgress from './updateSlidesProgress.js';\nimport updateProgress from './updateProgress.js';\nimport updateSlidesClasses from './updateSlidesClasses.js';\nimport updateActiveIndex from './updateActiveIndex.js';\nimport updateClickedSlide from './updateClickedSlide.js';\nexport default {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};","import { preload } from '../../shared/process-lazy-preloader.js';\nexport function getActiveIndexByTranslate(swiper) {\n  const {\n    slidesGrid,\n    params\n  } = swiper;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  let activeIndex;\n  for (let i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  }\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n  return activeIndex;\n}\nexport default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  const getVirtualRealIndex = aIndex => {\n    let realIndex = aIndex - swiper.virtual.slidesBefore;\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n    return realIndex;\n  };\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.realIndex = getVirtualRealIndex(activeIndex);\n    }\n    return;\n  }\n  // Get real index\n  let realIndex;\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (swiper.slides[activeIndex]) {\n    realIndex = parseInt(swiper.slides[activeIndex].getAttribute('data-swiper-slide-index') || activeIndex, 10);\n  } else {\n    realIndex = activeIndex;\n  }\n  Object.assign(swiper, {\n    previousSnapIndex,\n    snapIndex,\n    previousRealIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}","export default function updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides[swiper.getSlideIndexByData(index)];\n    }\n    return swiper.slides[index];\n  };\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || []).forEach(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n}","export default function updateClickedSlide(e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = e.closest(`.${params.slideClass}, swiper-slide`);\n  let slideFound = false;\n  let slideIndex;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}","export default function updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}","import { elementStyle } from '../../shared/utils.js';\nexport default function updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const el = swiper.el;\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = el.clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = el.clientHeight;\n  }\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n  height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}","import { elementChildren, elementOuterSize, elementStyle, setCSSProperty } from '../../shared/utils.js';\nexport default function updateSlides() {\n  const swiper = this;\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  }\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slidesLength);\n  }\n\n  // Calc slides\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    let slide;\n    if (slides[i]) slide = slides[i];\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n    }\n    if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + params.spaceBetween}px`;\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + params.spaceBetween}px`;\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (params.spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}","import { elementChildren, elementNextAll, elementPrevAll } from '../../shared/utils.js';\nexport default function updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    slidesEl,\n    activeIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const getFilteredSlide = selector => {\n    return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n  };\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n  });\n  let activeSlide;\n  if (isVirtual) {\n    if (params.loop) {\n      let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n      if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n      if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n    } else {\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n    }\n  } else {\n    activeSlide = slides[activeIndex];\n  }\n  if (activeSlide) {\n    // Active classes\n    activeSlide.classList.add(params.slideActiveClass);\n\n    // Next Slide\n    let nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !nextSlide) {\n      nextSlide = slides[0];\n    }\n    if (nextSlide) {\n      nextSlide.classList.add(params.slideNextClass);\n    }\n    // Prev Slide\n    let prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !prevSlide === 0) {\n      prevSlide = slides[slides.length - 1];\n    }\n    if (prevSlide) {\n      prevSlide.classList.add(params.slidePrevClass);\n    }\n  }\n  swiper.emitSlidesClasses();\n}","export default function updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n  // eslint-disable-next-line\n  const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n  }\n}","export default function updateSlidesProgress(translate = this && this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideVisibleClass);\n  });\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n      slides[i].classList.add(params.slideVisibleClass);\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport { createElement, elementIndex } from '../../shared/utils.js';\nexport default function A11y({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n      slideLabelMessage: '{{index}} / {{slidesLength}}',\n      containerMessage: null,\n      containerRoleDescriptionMessage: null,\n      itemRoleDescriptionMessage: null,\n      slideRole: 'group',\n      id: null\n    }\n  });\n  swiper.a11y = {\n    clicked: false\n  };\n  let liveRegion = null;\n  function notify(message) {\n    const notification = liveRegion;\n    if (notification.length === 0) return;\n    notification.innerHTML = '';\n    notification.innerHTML = message;\n  }\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getRandomNumber(size = 16) {\n    const randomChar = () => Math.round(16 * Math.random()).toString(16);\n    return 'x'.repeat(size).replace(/x/g, randomChar);\n  }\n  function makeElFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '0');\n    });\n  }\n  function makeElNotFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '-1');\n    });\n  }\n  function addElRole(el, role) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('role', role);\n    });\n  }\n  function addElRoleDescription(el, description) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-roledescription', description);\n    });\n  }\n  function addElControls(el, controls) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-controls', controls);\n    });\n  }\n  function addElLabel(el, label) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-label', label);\n    });\n  }\n  function addElId(el, id) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('id', id);\n    });\n  }\n  function addElLive(el, live) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-live', live);\n    });\n  }\n  function disableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', true);\n    });\n  }\n  function enableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', false);\n    });\n  }\n  function onEnterOrSpaceKey(e) {\n    if (e.keyCode !== 13 && e.keyCode !== 32) return;\n    const params = swiper.params.a11y;\n    const targetEl = e.target;\n    if (swiper.pagination && swiper.pagination.el && (targetEl === swiper.pagination.el || swiper.pagination.el.contains(e.target))) {\n      if (!e.target.matches(classesToSelector(swiper.params.pagination.bulletClass))) return;\n    }\n    if (swiper.navigation && swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        notify(params.lastSlideMessage);\n      } else {\n        notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        notify(params.firstSlideMessage);\n      } else {\n        notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && targetEl.matches(classesToSelector(swiper.params.pagination.bulletClass))) {\n      targetEl.click();\n    }\n  }\n  function updateNavigation() {\n    if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (prevEl) {\n      if (swiper.isBeginning) {\n        disableEl(prevEl);\n        makeElNotFocusable(prevEl);\n      } else {\n        enableEl(prevEl);\n        makeElFocusable(prevEl);\n      }\n    }\n    if (nextEl) {\n      if (swiper.isEnd) {\n        disableEl(nextEl);\n        makeElNotFocusable(nextEl);\n      } else {\n        enableEl(nextEl);\n        makeElFocusable(nextEl);\n      }\n    }\n  }\n  function hasPagination() {\n    return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n  }\n  function hasClickablePagination() {\n    return hasPagination() && swiper.params.pagination.clickable;\n  }\n  function updatePagination() {\n    const params = swiper.params.a11y;\n    if (!hasPagination()) return;\n    swiper.pagination.bullets.forEach(bulletEl => {\n      if (swiper.params.pagination.clickable) {\n        makeElFocusable(bulletEl);\n        if (!swiper.params.pagination.renderBullet) {\n          addElRole(bulletEl, 'button');\n          addElLabel(bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, elementIndex(bulletEl) + 1));\n        }\n      }\n      if (bulletEl.matches(classesToSelector(swiper.params.pagination.bulletActiveClass))) {\n        bulletEl.setAttribute('aria-current', 'true');\n      } else {\n        bulletEl.removeAttribute('aria-current');\n      }\n    });\n  }\n  const initNavEl = (el, wrapperId, message) => {\n    makeElFocusable(el);\n    if (el.tagName !== 'BUTTON') {\n      addElRole(el, 'button');\n      el.addEventListener('keydown', onEnterOrSpaceKey);\n    }\n    addElLabel(el, message);\n    addElControls(el, wrapperId);\n  };\n  const handlePointerDown = () => {\n    swiper.a11y.clicked = true;\n  };\n  const handlePointerUp = () => {\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        if (!swiper.destroyed) {\n          swiper.a11y.clicked = false;\n        }\n      });\n    });\n  };\n  const handleFocus = e => {\n    if (swiper.a11y.clicked) return;\n    const slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n    if (!slideEl || !swiper.slides.includes(slideEl)) return;\n    const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\n    const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\n    if (isActive || isVisible) return;\n    if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\n    if (swiper.isHorizontal()) {\n      swiper.el.scrollLeft = 0;\n    } else {\n      swiper.el.scrollTop = 0;\n    }\n    swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\n  };\n  const initSlides = () => {\n    const params = swiper.params.a11y;\n    if (params.itemRoleDescriptionMessage) {\n      addElRoleDescription(swiper.slides, params.itemRoleDescriptionMessage);\n    }\n    if (params.slideRole) {\n      addElRole(swiper.slides, params.slideRole);\n    }\n    const slidesLength = swiper.slides.length;\n    if (params.slideLabelMessage) {\n      swiper.slides.forEach((slideEl, index) => {\n        const slideIndex = swiper.params.loop ? parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10) : index;\n        const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n        addElLabel(slideEl, ariaLabelMessage);\n      });\n    }\n  };\n  const init = () => {\n    const params = swiper.params.a11y;\n    swiper.el.append(liveRegion);\n\n    // Container\n    const containerEl = swiper.el;\n    if (params.containerRoleDescriptionMessage) {\n      addElRoleDescription(containerEl, params.containerRoleDescriptionMessage);\n    }\n    if (params.containerMessage) {\n      addElLabel(containerEl, params.containerMessage);\n    }\n\n    // Wrapper\n    const wrapperEl = swiper.wrapperEl;\n    const wrapperId = params.id || wrapperEl.getAttribute('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n    const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n    addElId(wrapperEl, wrapperId);\n    addElLive(wrapperEl, live);\n\n    // Slide\n    initSlides();\n\n    // Navigation\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => initNavEl(el, wrapperId, params.nextSlideMessage));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => initNavEl(el, wrapperId, params.prevSlideMessage));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.addEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.addEventListener('focus', handleFocus, true);\n    swiper.el.addEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.addEventListener('pointerup', handlePointerUp, true);\n  };\n  function destroy() {\n    if (liveRegion && liveRegion.length > 0) liveRegion.remove();\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.removeEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.removeEventListener('focus', handleFocus, true);\n    swiper.el.removeEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.removeEventListener('pointerup', handlePointerUp, true);\n  }\n  on('beforeInit', () => {\n    liveRegion = createElement('span', swiper.params.a11y.notificationClass);\n    liveRegion.setAttribute('aria-live', 'assertive');\n    liveRegion.setAttribute('aria-atomic', 'true');\n    if (swiper.isElement) {\n      liveRegion.setAttribute('slot', 'container-end');\n    }\n  });\n  on('afterInit', () => {\n    if (!swiper.params.a11y.enabled) return;\n    init();\n  });\n  on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\n    if (!swiper.params.a11y.enabled) return;\n    initSlides();\n  });\n  on('fromEdge toEdge afterInit lock unlock', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updateNavigation();\n  });\n  on('paginationUpdate', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updatePagination();\n  });\n  on('destroy', () => {\n    if (!swiper.params.a11y.enabled) return;\n    destroy();\n  });\n}","/* eslint no-underscore-dangle: \"off\" */\n/* eslint no-use-before-define: \"off\" */\nimport { getDocument } from 'ssr-window';\nexport default function Autoplay({\n  swiper,\n  extendParams,\n  on,\n  emit,\n  params\n}) {\n  swiper.autoplay = {\n    running: false,\n    paused: false,\n    timeLeft: 0\n  };\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false\n    }\n  });\n  let timeout;\n  let raf;\n  let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayTimeLeft;\n  let autoplayStartTime = new Date().getTime;\n  let wasPaused;\n  let isTouched;\n  let pausedByTouch;\n  let touchStartTimeout;\n  let slideChanged;\n  let pausedByInteraction;\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\n    if (e.target !== swiper.wrapperEl) return;\n    swiper.wrapperEl.removeEventListener('transitionend', onTransitionEnd);\n    resume();\n  }\n  const calcTimeLeft = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) {\n      wasPaused = true;\n    } else if (wasPaused) {\n      autoplayDelayCurrent = autoplayTimeLeft;\n      wasPaused = false;\n    }\n    const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\n    swiper.autoplay.timeLeft = timeLeft;\n    emit('autoplayTimeLeft', timeLeft, timeLeft / autoplayDelayTotal);\n    raf = requestAnimationFrame(() => {\n      calcTimeLeft();\n    });\n  };\n  const getSlideDelay = () => {\n    let activeSlideEl;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      activeSlideEl = swiper.slides.filter(slideEl => slideEl.classList.contains('swiper-slide-active'))[0];\n    } else {\n      activeSlideEl = swiper.slides[swiper.activeIndex];\n    }\n    if (!activeSlideEl) return undefined;\n    const currentSlideDelay = parseInt(activeSlideEl.getAttribute('data-swiper-autoplay'), 10);\n    return currentSlideDelay;\n  };\n  const run = delayForce => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    cancelAnimationFrame(raf);\n    calcTimeLeft();\n    let delay = typeof delayForce === 'undefined' ? swiper.params.autoplay.delay : delayForce;\n    autoplayDelayTotal = swiper.params.autoplay.delay;\n    autoplayDelayCurrent = swiper.params.autoplay.delay;\n    const currentSlideDelay = getSlideDelay();\n    if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === 'undefined') {\n      delay = currentSlideDelay;\n      autoplayDelayTotal = currentSlideDelay;\n      autoplayDelayCurrent = currentSlideDelay;\n    }\n    autoplayTimeLeft = delay;\n    const speed = swiper.params.speed;\n    const proceed = () => {\n      if (!swiper || swiper.destroyed) return;\n      if (swiper.params.autoplay.reverseDirection) {\n        if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\n          swiper.slidePrev(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, speed, true, true);\n          emit('autoplay');\n        }\n      } else {\n        if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\n          swiper.slideNext(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, speed, true, true);\n          emit('autoplay');\n        }\n      }\n      if (swiper.params.cssMode) {\n        autoplayStartTime = new Date().getTime();\n        requestAnimationFrame(() => {\n          run();\n        });\n      }\n    };\n    if (delay > 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        proceed();\n      }, delay);\n    } else {\n      requestAnimationFrame(() => {\n        proceed();\n      });\n    }\n\n    // eslint-disable-next-line\n    return delay;\n  };\n  const start = () => {\n    swiper.autoplay.running = true;\n    run();\n    emit('autoplayStart');\n  };\n  const stop = () => {\n    swiper.autoplay.running = false;\n    clearTimeout(timeout);\n    cancelAnimationFrame(raf);\n    emit('autoplayStop');\n  };\n  const pause = (internal, reset) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    clearTimeout(timeout);\n    if (!internal) {\n      pausedByInteraction = true;\n    }\n    const proceed = () => {\n      emit('autoplayPause');\n      if (swiper.params.autoplay.waitForTransition) {\n        swiper.wrapperEl.addEventListener('transitionend', onTransitionEnd);\n      } else {\n        resume();\n      }\n    };\n    swiper.autoplay.paused = true;\n    if (reset) {\n      if (slideChanged) {\n        autoplayTimeLeft = swiper.params.autoplay.delay;\n      }\n      slideChanged = false;\n      proceed();\n      return;\n    }\n    const delay = autoplayTimeLeft || swiper.params.autoplay.delay;\n    autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\n    if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\n    proceed();\n  };\n  const resume = () => {\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\n    autoplayStartTime = new Date().getTime();\n    if (pausedByInteraction) {\n      pausedByInteraction = false;\n      run(autoplayTimeLeft);\n    } else {\n      run();\n    }\n    swiper.autoplay.paused = false;\n    emit('autoplayResume');\n  };\n  const onVisibilityChange = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    const document = getDocument();\n    if (document.visibilityState === 'hidden') {\n      pausedByInteraction = true;\n      pause(true);\n    }\n    if (document.visibilityState === 'visible') {\n      resume();\n    }\n  };\n  const onPointerEnter = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByInteraction = true;\n    pause(true);\n  };\n  const onPointerLeave = e => {\n    if (e.pointerType !== 'mouse') return;\n    if (swiper.autoplay.paused) {\n      resume();\n    }\n  };\n  const attachMouseEvents = () => {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.el.addEventListener('pointerenter', onPointerEnter);\n      swiper.el.addEventListener('pointerleave', onPointerLeave);\n    }\n  };\n  const detachMouseEvents = () => {\n    swiper.el.removeEventListener('pointerenter', onPointerEnter);\n    swiper.el.removeEventListener('pointerleave', onPointerLeave);\n  };\n  const attachDocumentEvents = () => {\n    const document = getDocument();\n    document.addEventListener('visibilitychange', onVisibilityChange);\n  };\n  const detachDocumentEvents = () => {\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  };\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      attachMouseEvents();\n      attachDocumentEvents();\n      autoplayStartTime = new Date().getTime();\n      start();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n    detachDocumentEvents();\n    if (swiper.autoplay.running) {\n      stop();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (internal || !swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n      return;\n    }\n    isTouched = true;\n    pausedByTouch = false;\n    pausedByInteraction = false;\n    touchStartTimeout = setTimeout(() => {\n      pausedByInteraction = true;\n      pausedByTouch = true;\n      pause(true);\n    }, 200);\n  });\n  on('touchEnd', () => {\n    if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\n    clearTimeout(touchStartTimeout);\n    clearTimeout(timeout);\n    if (swiper.params.autoplay.disableOnInteraction) {\n      pausedByTouch = false;\n      isTouched = false;\n      return;\n    }\n    if (pausedByTouch && swiper.params.cssMode) resume();\n    pausedByTouch = false;\n    isTouched = false;\n  });\n  on('slideChange', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    slideChanged = true;\n  });\n  Object.assign(swiper.autoplay, {\n    start,\n    stop,\n    pause,\n    resume\n  });\n}","/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\nimport { elementTransitionEnd, nextTick } from '../../shared/utils.js';\nexport default function Controller({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide' // or 'container'\n    }\n  });\n\n  swiper.controller = {\n    control: undefined\n  };\n  function LinearSpline(x, y) {\n    const binarySearch = function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }();\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n    };\n    return this;\n  }\n  function getInterpolateFunction(c) {\n    swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n  }\n  function setTranslate(_t, byController) {\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    const Swiper = swiper.constructor;\n    function setControlledTranslate(c) {\n      if (c.destroyed) return;\n\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        if (Number.isNaN(multiplier) || !Number.isFinite(multiplier)) {\n          multiplier = 1;\n        }\n        controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n      }\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  }\n  function setTransition(duration, byController) {\n    const Swiper = swiper.constructor;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      if (c.destroyed) return;\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        elementTransitionEnd(c.wrapperEl, () => {\n          if (!controlled) return;\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  }\n  function removeSpline() {\n    if (!swiper.controller.control) return;\n    if (swiper.controller.spline) {\n      swiper.controller.spline = undefined;\n      delete swiper.controller.spline;\n    }\n  }\n  on('beforeInit', () => {\n    if (typeof window !== 'undefined' && (\n    // eslint-disable-line\n    typeof swiper.params.controller.control === 'string' || swiper.params.controller.control instanceof HTMLElement)) {\n      const controlElement = document.querySelector(swiper.params.controller.control);\n      if (controlElement && controlElement.swiper) {\n        swiper.controller.control = controlElement.swiper;\n      } else if (controlElement) {\n        const onControllerSwiper = e => {\n          swiper.controller.control = e.detail[0];\n          swiper.update();\n          controlElement.removeEventListener('init', onControllerSwiper);\n        };\n        controlElement.addEventListener('init', onControllerSwiper);\n      }\n      return;\n    }\n    swiper.controller.control = swiper.params.controller.control;\n  });\n  on('update', () => {\n    removeSpline();\n  });\n  on('resize', () => {\n    removeSpline();\n  });\n  on('observerUpdate', () => {\n    removeSpline();\n  });\n  on('setTranslate', (_s, translate, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTranslate(translate, byController);\n  });\n  on('setTransition', (_s, duration, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTransition(duration, byController);\n  });\n  Object.assign(swiper.controller, {\n    setTranslate,\n    setTransition\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCards({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      rotate: true,\n      perSlideRotate: 2,\n      perSlideOffset: 8\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = swiper.translate;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = slideEl.swiperSlideOffset;\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.wrapperEl.style.transform = `translateX(${swiper.minTranslate()}px)`;\n      }\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -params.perSlideRotate * progress;\n      let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rotate : 0}deg)\n        scale(${scaleString})\n      `;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCoverflow({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      scale: 1,\n      modifier: 1,\n      slideShadows: true\n    }\n  });\n  const setTranslate = () => {\n    const {\n      width: swiperWidth,\n      height: swiperHeight,\n      slides,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const slideEl = slides[i];\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = slideEl.swiperSlideOffset;\n      const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n      const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n      let stretch = params.stretch;\n      // Allow percentage to make a relative stretch for responsive sliders\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = parseFloat(params.stretch) / 100 * slideSize;\n      }\n      let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n      let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n      let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier);\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n      if (Math.abs(scale) < 0.001) scale = 0;\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = slideTransform;\n      slideEl.style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBeforeEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n        let shadowAfterEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n        if (!shadowBeforeEl) {\n          shadowBeforeEl = createShadow(params, slideEl, isHorizontal ? 'left' : 'top');\n        }\n        if (!shadowAfterEl) {\n          shadowAfterEl = createShadow(params, slideEl, isHorizontal ? 'right' : 'bottom');\n        }\n        if (shadowBeforeEl) shadowBeforeEl.style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if (shadowAfterEl) shadowAfterEl.style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n  };\n  effectInit({\n    effect: 'coverflow',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCreative({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    creativeEffect: {\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      }\n    }\n  });\n  const getTranslateValue = value => {\n    if (typeof value === 'string') return value;\n    return `${value}px`;\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      wrapperEl,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.creativeEffect;\n    const {\n      progressMultiplier: multiplier\n    } = params;\n    const isCenteredSlides = swiper.params.centeredSlides;\n    if (isCenteredSlides) {\n      const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n      wrapperEl.style.transform = `translateX(calc(50% - ${margin}px))`;\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideEl.progress, -params.limitProgress), params.limitProgress);\n      let originalProgress = progress;\n      if (!isCenteredSlides) {\n        originalProgress = Math.min(Math.max(slideEl.originalProgress, -params.limitProgress), params.limitProgress);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      const r = [0, 0, 0];\n      let custom = false;\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n      let data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1\n      };\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      }\n      // set translate\n      t.forEach((value, index) => {\n        t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n      });\n      // set rotates\n      r.forEach((value, index) => {\n        r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n      });\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const translateString = t.join(', ');\n      const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n      const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n      const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n      const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`;\n\n      // Set shadows\n      if (custom && data.shadow || !custom) {\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl && data.shadow) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) {\n          const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n          shadowEl.style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n      targetEl.style.opacity = opacityString;\n      if (data.origin) {\n        targetEl.style.transformOrigin = data.origin;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'creative',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => swiper.params.creativeEffect.perspective,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import effectInit from '../../shared/effect-init.js';\nimport { createElement } from '../../shared/utils.js';\nexport default function EffectCube({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94\n    }\n  });\n  const createSlideShadows = (slideEl, progress, isHorizontal) => {\n    let shadowBefore = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}`);\n      slideEl.append(shadowBefore);\n    }\n    if (!shadowAfter) {\n      shadowAfter = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}`);\n      slideEl.append(shadowAfter);\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // create new ones\n    const isHorizontal = swiper.isHorizontal();\n    swiper.slides.forEach(slideEl => {\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      createSlideShadows(slideEl, progress, isHorizontal);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      wrapperEl,\n      slides,\n      width: swiperWidth,\n      height: swiperHeight,\n      rtlTranslate: rtl,\n      size: swiperSize,\n      browser\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl = swiper.slidesEl.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          swiper.slidesEl.append(cubeShadowEl);\n        }\n        cubeShadowEl.style.height = `${swiperWidth}px`;\n      } else {\n        cubeShadowEl = el.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          el.append(cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + round * 4 * swiperSize;\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = 3 * swiperSize + swiperSize * 4 * round;\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = slideIndex * 90 + progress * 90;\n        if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n      }\n      slideEl.style.transform = transform;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, isHorizontal);\n      }\n    }\n    wrapperEl.style.transformOrigin = `50% 50% -${swiperSize / 2}px`;\n    wrapperEl.style['-webkit-transform-origin'] = `50% 50% -${swiperSize / 2}px`;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl.style.transform = `translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`;\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n        const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        cubeShadowEl.style.transform = `scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`;\n      }\n    }\n    const zFactor = (browser.isSafari || browser.isWebView) && browser.needPerspectiveFix ? -swiperSize / 2 : 0;\n    wrapperEl.style.transform = `translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`;\n    wrapperEl.style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);\n  };\n  const setTransition = duration => {\n    const {\n      el,\n      slides\n    } = swiper;\n    slides.forEach(slideEl => {\n      slideEl.style.transitionDuration = `${duration}ms`;\n      slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(subEl => {\n        subEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      const shadowEl = el.querySelector('.swiper-cube-shadow');\n      if (shadowEl) shadowEl.style.transitionDuration = `${duration}ms`;\n    }\n  };\n  effectInit({\n    effect: 'cube',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.cubeEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      resistanceRatio: 0,\n      spaceBetween: 0,\n      centeredSlides: false,\n      virtualTranslate: true\n    })\n  });\n}","import effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFade({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    fadeEffect: {\n      crossFade: false\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides\n    } = swiper;\n    const params = swiper.params.fadeEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = swiper.slides[i];\n      const offset = slideEl.swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(slideEl.progress), 0) : 1 + Math.min(Math.max(slideEl.progress, -1), 0);\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.opacity = slideOpacity;\n      targetEl.style.transform = `translate3d(${tx}px, ${ty}px, 0px)`;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'fade',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFlip({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true\n    }\n  });\n  const createSlideShadows = (slideEl, progress, params) => {\n    let shadowBefore = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createShadow(params, slideEl, swiper.isHorizontal() ? 'left' : 'top');\n    }\n    if (!shadowAfter) {\n      shadowAfter = createShadow(params, slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // Set shadows\n    const params = swiper.params.flipEffect;\n    swiper.slides.forEach(slideEl => {\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      createSlideShadows(slideEl, progress, params);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.flipEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, params);\n      }\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.flipEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import { elementTransitionEnd, now } from '../../shared/utils.js';\nexport default function freeMode({\n  swiper,\n  extendParams,\n  emit,\n  once\n}) {\n  extendParams({\n    freeMode: {\n      enabled: false,\n      momentum: true,\n      momentumRatio: 1,\n      momentumBounce: true,\n      momentumBounceRatio: 1,\n      momentumVelocityRatio: 1,\n      sticky: false,\n      minimumVelocity: 0.02\n    }\n  });\n  function onTouchStart() {\n    const translate = swiper.getTranslate();\n    swiper.setTranslate(translate);\n    swiper.setTransition(0);\n    swiper.touchEventsData.velocities.length = 0;\n    swiper.freeMode.onTouchEnd({\n      currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n    });\n  }\n  function onTouchMove() {\n    const {\n      touchEventsData: data,\n      touches\n    } = swiper;\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: now()\n    });\n  }\n  function onTouchEnd({\n    currentPos\n  }) {\n    const {\n      params,\n      wrapperEl,\n      rtlTranslate: rtl,\n      snapGrid,\n      touchEventsData: data\n    } = swiper;\n    // Time diff\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime;\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n    if (params.freeMode.momentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeMode.momentumVelocityRatio;\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeMode.momentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeMode.sticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeMode.sticky) {\n          // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeMode.sticky) {\n        swiper.slideToClosest();\n        return;\n      }\n      if (params.freeMode.momentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        elementTransitionEnd(wrapperEl, () => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            elementTransitionEnd(wrapperEl, () => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          elementTransitionEnd(wrapperEl, () => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeMode.sticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      emit('_freeModeNoMomentumRelease');\n    }\n    if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n  }\n  Object.assign(swiper, {\n    freeMode: {\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd\n    }\n  });\n}","export default function Grid({\n  swiper,\n  extendParams\n}) {\n  extendParams({\n    grid: {\n      rows: 1,\n      fill: 'column'\n    }\n  });\n  let slidesNumberEvenToRows;\n  let slidesPerRow;\n  let numFullColumns;\n  const initSlides = slidesLength => {\n    const {\n      slidesPerView\n    } = swiper.params;\n    const {\n      rows,\n      fill\n    } = swiper.params.grid;\n    slidesPerRow = slidesNumberEvenToRows / rows;\n    numFullColumns = Math.floor(slidesLength / rows);\n    if (Math.floor(slidesLength / rows) === slidesLength / rows) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / rows) * rows;\n    }\n    if (slidesPerView !== 'auto' && fill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, slidesPerView * rows);\n    }\n  };\n  const updateSlide = (i, slide, slidesLength, getDirectionLabel) => {\n    const {\n      slidesPerGroup,\n      spaceBetween\n    } = swiper.params;\n    const {\n      rows,\n      fill\n    } = swiper.params.grid;\n    // Set slides order\n    let newSlideOrderIndex;\n    let column;\n    let row;\n    if (fill === 'row' && slidesPerGroup > 1) {\n      const groupIndex = Math.floor(i / (slidesPerGroup * rows));\n      const slideIndexInGroup = i - rows * slidesPerGroup * groupIndex;\n      const columnsInGroup = groupIndex === 0 ? slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * rows * slidesPerGroup) / rows), slidesPerGroup);\n      row = Math.floor(slideIndexInGroup / columnsInGroup);\n      column = slideIndexInGroup - row * columnsInGroup + groupIndex * slidesPerGroup;\n      newSlideOrderIndex = column + row * slidesNumberEvenToRows / rows;\n      slide.style.order = newSlideOrderIndex;\n    } else if (fill === 'column') {\n      column = Math.floor(i / rows);\n      row = i - column * rows;\n      if (column > numFullColumns || column === numFullColumns && row === rows - 1) {\n        row += 1;\n        if (row >= rows) {\n          row = 0;\n          column += 1;\n        }\n      }\n    } else {\n      row = Math.floor(i / slidesPerRow);\n      column = i - row * slidesPerRow;\n    }\n    slide.style[getDirectionLabel('margin-top')] = row !== 0 ? spaceBetween && `${spaceBetween}px` : '';\n  };\n  const updateWrapperSize = (slideSize, snapGrid, getDirectionLabel) => {\n    const {\n      spaceBetween,\n      centeredSlides,\n      roundLengths\n    } = swiper.params;\n    const {\n      rows\n    } = swiper.params.grid;\n    swiper.virtualSize = (slideSize + spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / rows) - spaceBetween;\n    swiper.wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n    if (centeredSlides) {\n      const newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid.splice(0, snapGrid.length);\n      snapGrid.push(...newSlidesGrid);\n    }\n  };\n  swiper.grid = {\n    initSlides,\n    updateSlide,\n    updateWrapperSize\n  };\n}","import { getWindow, getDocument } from 'ssr-window';\nimport { elementChildren } from '../../shared/utils.js';\nexport default function HashNavigation({\n  swiper,\n  extendParams,\n  emit,\n  on\n}) {\n  let initialized = false;\n  const document = getDocument();\n  const window = getWindow();\n  extendParams({\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n      getSlideIndex(_s, hash) {\n        if (swiper.virtual && swiper.params.virtual.enabled) {\n          const slideWithHash = swiper.slides.filter(slideEl => slideEl.getAttribute('data-hash') === hash)[0];\n          if (!slideWithHash) return 0;\n          const index = parseInt(slideWithHash.getAttribute('data-swiper-slide-index'), 10);\n          return index;\n        }\n        return swiper.getSlideIndex(elementChildren(swiper.slidesEl, `.${swiper.params.slideClass}[data-hash=\"${hash}\"], swiper-slide[data-hash=\"${hash}\"]`)[0]);\n      }\n    }\n  });\n  const onHashChange = () => {\n    emit('hashChange');\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') : '';\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.params.hashNavigation.getSlideIndex(swiper, newHash);\n      console.log(newIndex);\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  };\n  const setHash = () => {\n    if (!initialized || !swiper.params.hashNavigation.enabled) return;\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') || activeSlideEl.getAttribute('data-history') : '';\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, `#${activeSlideHash}` || '');\n      emit('hashSet');\n    } else {\n      document.location.hash = activeSlideHash || '';\n      emit('hashSet');\n    }\n  };\n  const init = () => {\n    if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n    initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      const index = swiper.params.hashNavigation.getSlideIndex(swiper, hash);\n      swiper.slideTo(index || 0, speed, swiper.params.runCallbacksOnInit, true);\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      window.addEventListener('hashchange', onHashChange);\n    }\n  };\n  const destroy = () => {\n    if (swiper.params.hashNavigation.watchState) {\n      window.removeEventListener('hashchange', onHashChange);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHash();\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHash();\n    }\n  });\n}","import { getWindow } from 'ssr-window';\nexport default function History({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides',\n      keepQuery: false\n    }\n  });\n  let initialized = false;\n  let paths = {};\n  const slugify = text => {\n    return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n  };\n  const getPathValues = urlOverride => {\n    const window = getWindow();\n    let location;\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n    const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return {\n      key,\n      value\n    };\n  };\n  const setHistory = (key, index) => {\n    const window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    let location;\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n    const slide = swiper.slides[index];\n    let value = slugify(slide.getAttribute('data-history'));\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key ? `${key}/` : ''}${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key ? `${key}/` : ''}${value}`;\n    }\n    if (swiper.params.history.keepQuery) {\n      value += location.search;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({\n        value\n      }, null, value);\n    } else {\n      window.history.pushState({\n        value\n      }, null, value);\n    }\n  };\n  const scrollToSlide = (speed, value, runCallbacks) => {\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides[i];\n        const slideHistory = slugify(slide.getAttribute('data-history'));\n        if (slideHistory === value) {\n          const index = swiper.getSlideIndex(slide);\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n  const setHistoryPopState = () => {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, paths.value, false);\n  };\n  const init = () => {\n    const window = getWindow();\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n    if (!paths.key && !paths.value) {\n      if (!swiper.params.history.replaceState) {\n        window.addEventListener('popstate', setHistoryPopState);\n      }\n      return;\n    }\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n  const destroy = () => {\n    const window = getWindow();\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow, getDocument } from 'ssr-window';\nimport { elementOffset, elementParents } from '../../shared/utils.js';\nexport default function Keyboard({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  const window = getWindow();\n  swiper.keyboard = {\n    enabled: false\n  };\n  extendParams({\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n      pageUpDown: true\n    }\n  });\n  function handle(event) {\n    if (!swiper.enabled) return;\n    const {\n      rtlTranslate: rtl\n    } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    const pageUpDown = swiper.params.keyboard.pageUpDown;\n    const isPageUp = pageUpDown && kc === 33;\n    const isPageDown = pageUpDown && kc === 34;\n    const isArrowLeft = kc === 37;\n    const isArrowRight = kc === 39;\n    const isArrowUp = kc === 38;\n    const isArrowDown = kc === 40;\n    // Directions locks\n    if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (elementParents(swiper.el, `.${swiper.params.slideClass}, swiper-slide`).length > 0 && elementParents(swiper.el, `.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const el = swiper.el;\n      const swiperWidth = el.clientWidth;\n      const swiperHeight = el.clientHeight;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = elementOffset(el);\n      if (rtl) swiperOffset.left -= el.scrollLeft;\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n      if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n    } else {\n      if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if (isPageDown || isArrowDown) swiper.slideNext();\n      if (isPageUp || isArrowUp) swiper.slidePrev();\n    }\n    emit('keyPress', kc);\n    return undefined;\n  }\n  function enable() {\n    if (swiper.keyboard.enabled) return;\n    document.addEventListener('keydown', handle);\n    swiper.keyboard.enabled = true;\n  }\n  function disable() {\n    if (!swiper.keyboard.enabled) return;\n    document.removeEventListener('keydown', handle);\n    swiper.keyboard.enabled = false;\n  }\n  on('init', () => {\n    if (swiper.params.keyboard.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.keyboard.enabled) {\n      disable();\n    }\n  });\n  Object.assign(swiper.keyboard, {\n    enable,\n    disable\n  });\n}","import appendSlide from './methods/appendSlide.js';\nimport prependSlide from './methods/prependSlide.js';\nimport addSlide from './methods/addSlide.js';\nimport removeSlide from './methods/removeSlide.js';\nimport removeAllSlides from './methods/removeAllSlides.js';\nexport default function Manipulation({\n  swiper\n}) {\n  Object.assign(swiper, {\n    appendSlide: appendSlide.bind(swiper),\n    prependSlide: prependSlide.bind(swiper),\n    addSlide: addSlide.bind(swiper),\n    removeSlide: removeSlide.bind(swiper),\n    removeAllSlides: removeAllSlides.bind(swiper)\n  });\n}","export default function addSlide(index, slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.recalcSlides();\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides[i];\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) slidesEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    slidesEl.append(slides);\n  }\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    slidesEl.append(slidesBuffer[i]);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function appendSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  const appendElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.append(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.append(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) appendElement(slides[i]);\n    }\n  } else {\n    appendElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n}","export default function prependSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  const prependElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.prepend(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.prepend(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) prependElement(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    prependElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}","export default function removeAllSlides() {\n  const swiper = this;\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}","export default function removeSlide(slidesIndexes) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","/* eslint-disable consistent-return */\nimport { getWindow } from 'ssr-window';\nimport { now, nextTick } from '../../shared/utils.js';\nexport default function Mousewheel({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarget: 'container',\n      thresholdDelta: null,\n      thresholdTime: null\n    }\n  });\n  swiper.mousewheel = {\n    enabled: false\n  };\n  let timeout;\n  let lastScrollTime = now();\n  let lastEventBeforeSnap;\n  const recentWheelEvents = [];\n  function normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n    if (e.shiftKey && !pX) {\n      // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) {\n        // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else {\n        // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = pX < 1 ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = pY < 1 ? -1 : 1;\n    }\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY\n    };\n  }\n  function handleMouseEnter() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = true;\n  }\n  function handleMouseLeave() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = false;\n  }\n  function animateSlider(newEvent) {\n    if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\n      // Prevent if delta of wheel scroll delta is below configured threshold\n      return false;\n    }\n    if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\n      // Prevent if time between scrolls is below configured threshold\n      return false;\n    }\n\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    lastScrollTime = new window.Date().getTime();\n    // Return false as a default\n    return false;\n  }\n  function releaseScroll(newEvent) {\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  }\n  function handle(event) {\n    let e = event;\n    let disableParentSwiper = true;\n    if (!swiper.enabled) return;\n    const params = swiper.params.mousewheel;\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    const targetElContainsTarget = targetEl && targetEl.contains(e.target);\n    if (!swiper.mouseEntered && !targetElContainsTarget && !params.releaseOnEdges) return true;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n    const data = normalize(e);\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n    if (delta === 0) return true;\n    if (params.invert) delta = -delta;\n\n    // Get the scroll positions\n    let positions = swiper.getTranslate() + delta * params.sensitivity;\n    if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n    if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate();\n\n    // When loop is true:\n    //     the disableParentSwiper will be true.\n    // When loop is false:\n    //     if the scroll positions is not on edge,\n    //     then the disableParentSwiper will be true.\n    //     if the scroll on edge positions,\n    //     then the disableParentSwiper will be false.\n    disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n    if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n    if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event\n      };\n\n      // Keep the most recent events\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n          animateSlider(newEvent);\n        }\n      } else {\n        animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta)\n      };\n      const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        lastEventBeforeSnap = undefined;\n        let position = swiper.getTranslate() + delta * params.sensitivity;\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n        if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n          swiper.updateSlidesClasses();\n        }\n        if (swiper.params.loop) {\n          swiper.loopFix({\n            direction: newEvent.direction < 0 ? 'next' : 'prev',\n            byMousewheel: true\n          });\n        }\n        if (swiper.params.freeMode.sticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(timeout);\n          timeout = undefined;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            timeout = nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n\n          if (!timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            timeout = nextTick(() => {\n              const snapToThreshold = 0.5;\n              lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    return false;\n  }\n  function events(method) {\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    targetEl[method]('mouseenter', handleMouseEnter);\n    targetEl[method]('mouseleave', handleMouseLeave);\n    targetEl[method]('wheel', handle);\n  }\n  function enable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener('wheel', handle);\n      return true;\n    }\n    if (swiper.mousewheel.enabled) return false;\n    events('addEventListener');\n    swiper.mousewheel.enabled = true;\n    return true;\n  }\n  function disable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, handle);\n      return true;\n    }\n    if (!swiper.mousewheel.enabled) return false;\n    events('removeEventListener');\n    swiper.mousewheel.enabled = false;\n    return true;\n  }\n  on('init', () => {\n    if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n      disable();\n    }\n    if (swiper.params.mousewheel.enabled) enable();\n  });\n  on('destroy', () => {\n    if (swiper.params.cssMode) {\n      enable();\n    }\n    if (swiper.mousewheel.enabled) disable();\n  });\n  Object.assign(swiper.mousewheel, {\n    enable,\n    disable\n  });\n}","import createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Navigation({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n      navigationDisabledClass: 'swiper-navigation-disabled'\n    }\n  });\n  swiper.navigation = {\n    nextEl: null,\n    prevEl: null\n  };\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getEl(el) {\n    let res;\n    if (el && typeof el === 'string' && swiper.isElement) {\n      res = swiper.el.shadowRoot.querySelector(el);\n      if (res) return res;\n    }\n    if (el) {\n      if (typeof el === 'string') res = [...document.querySelectorAll(el)];\n      if (swiper.params.uniqueNavElements && typeof el === 'string' && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) {\n        res = swiper.el.querySelector(el);\n      }\n    }\n    if (el && !res) return el;\n    // if (Array.isArray(res) && res.length === 1) res = res[0];\n    return res;\n  }\n  function toggleEl(el, disabled) {\n    const params = swiper.params.navigation;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (subEl) {\n        subEl.classList[disabled ? 'add' : 'remove'](...params.disabledClass.split(' '));\n        if (subEl.tagName === 'BUTTON') subEl.disabled = disabled;\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n        }\n      }\n    });\n  }\n  function update() {\n    // Update Navigation Buttons\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (swiper.params.loop) {\n      toggleEl(prevEl, false);\n      toggleEl(nextEl, false);\n      return;\n    }\n    toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);\n    toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);\n  }\n  function onPrevClick(e) {\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slidePrev();\n    emit('navigationPrev');\n  }\n  function onNextClick(e) {\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slideNext();\n    emit('navigationNext');\n  }\n  function init() {\n    const params = swiper.params.navigation;\n    swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n      nextEl: 'swiper-button-next',\n      prevEl: 'swiper-button-prev'\n    });\n    if (!(params.nextEl || params.prevEl)) return;\n    let nextEl = getEl(params.nextEl);\n    let prevEl = getEl(params.prevEl);\n    Object.assign(swiper.navigation, {\n      nextEl,\n      prevEl\n    });\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const initButton = (el, dir) => {\n      if (el) {\n        el.addEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      }\n      if (!swiper.enabled && el) {\n        el.classList.add(...params.lockClass.split(' '));\n      }\n    };\n    nextEl.forEach(el => initButton(el, 'next'));\n    prevEl.forEach(el => initButton(el, 'prev'));\n  }\n  function destroy() {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const destroyButton = (el, dir) => {\n      el.removeEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      el.classList.remove(...swiper.params.navigation.disabledClass.split(' '));\n    };\n    nextEl.forEach(el => destroyButton(el, 'next'));\n    prevEl.forEach(el => destroyButton(el, 'prev'));\n  }\n  on('init', () => {\n    if (swiper.params.navigation.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      update();\n    }\n  });\n  on('toEdge fromEdge lock unlock', () => {\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.navigation.lockClass));\n  });\n  on('click', (_s, e) => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const targetEl = e.target;\n    if (swiper.params.navigation.hideOnClick && !prevEl.includes(targetEl) && !nextEl.includes(targetEl)) {\n      if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n      let isHidden;\n      if (nextEl.length) {\n        isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      } else if (prevEl.length) {\n        isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      }\n      if (isHidden === true) {\n        emit('navigationShow');\n      } else {\n        emit('navigationHide');\n      }\n      [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.toggle(swiper.params.navigation.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    init();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    destroy();\n  };\n  Object.assign(swiper.navigation, {\n    enable,\n    disable,\n    update,\n    init,\n    destroy\n  });\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nimport { elementIndex, elementOuterSize, elementParents } from '../../shared/utils.js';\nexport default function Pagination({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const pfx = 'swiper-pagination';\n  extendParams({\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets',\n      // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: `${pfx}-bullet`,\n      bulletActiveClass: `${pfx}-bullet-active`,\n      modifierClass: `${pfx}-`,\n      currentClass: `${pfx}-current`,\n      totalClass: `${pfx}-total`,\n      hiddenClass: `${pfx}-hidden`,\n      progressbarFillClass: `${pfx}-progressbar-fill`,\n      progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n      clickableClass: `${pfx}-clickable`,\n      lockClass: `${pfx}-lock`,\n      horizontalClass: `${pfx}-horizontal`,\n      verticalClass: `${pfx}-vertical`,\n      paginationDisabledClass: `${pfx}-disabled`\n    }\n  });\n  swiper.pagination = {\n    el: null,\n    bullets: []\n  };\n  let bulletSize;\n  let dynamicBulletIndex = 0;\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function isPaginationDisabled() {\n    return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;\n  }\n  function setSideBullets(bulletEl, position) {\n    const {\n      bulletActiveClass\n    } = swiper.params.pagination;\n    if (!bulletEl) return;\n    bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n    if (bulletEl) {\n      bulletEl.classList.add(`${bulletActiveClass}-${position}`);\n      bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n      if (bulletEl) {\n        bulletEl.classList.add(`${bulletActiveClass}-${position}-${position}`);\n      }\n    }\n  }\n  function onBulletClick(e) {\n    const bulletEl = e.target.closest(classesToSelector(swiper.params.pagination.bulletClass));\n    if (!bulletEl) {\n      return;\n    }\n    e.preventDefault();\n    const index = elementIndex(bulletEl) * swiper.params.slidesPerGroup;\n    if (swiper.params.loop) {\n      if (swiper.realIndex === index) return;\n      const newSlideIndex = swiper.getSlideIndexByData(index);\n      const currentSlideIndex = swiper.getSlideIndexByData(swiper.realIndex);\n      if (newSlideIndex > swiper.slides.length - swiper.loopedSlides) {\n        swiper.loopFix({\n          direction: newSlideIndex > currentSlideIndex ? 'next' : 'prev',\n          activeSlideIndex: newSlideIndex,\n          slideTo: false\n        });\n      }\n      swiper.slideToLoop(index);\n    } else {\n      swiper.slideTo(index);\n    }\n  }\n  function update() {\n    // Render || Update Pagination bullets/items\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    // Current/Total\n    let current;\n    let previousIndex;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      previousIndex = swiper.previousRealIndex || 0;\n      current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n      previousIndex = swiper.previousSnapIndex;\n    } else {\n      previousIndex = swiper.previousIndex || 0;\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        bulletSize = elementOuterSize(bullets[0], swiper.isHorizontal() ? 'width' : 'height', true);\n        el.forEach(subEl => {\n          subEl.style[swiper.isHorizontal() ? 'width' : 'height'] = `${bulletSize * (params.dynamicMainBullets + 4)}px`;\n        });\n        if (params.dynamicMainBullets > 1 && previousIndex !== undefined) {\n          dynamicBulletIndex += current - (previousIndex || 0);\n          if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (dynamicBulletIndex < 0) {\n            dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = Math.max(current - dynamicBulletIndex, 0);\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.forEach(bulletEl => {\n        const classesToRemove = [...['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`)].map(s => typeof s === 'string' && s.includes(' ') ? s.split(' ') : s).flat();\n        bulletEl.classList.remove(...classesToRemove);\n      });\n      if (el.length > 1) {\n        bullets.forEach(bullet => {\n          const bulletIndex = elementIndex(bullet);\n          if (bulletIndex === current) {\n            bullet.classList.add(...params.bulletActiveClass.split(' '));\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              bullet.classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n            if (bulletIndex === firstIndex) {\n              setSideBullets(bullet, 'prev');\n            }\n            if (bulletIndex === lastIndex) {\n              setSideBullets(bullet, 'next');\n            }\n          }\n        });\n      } else {\n        const bullet = bullets[current];\n        if (bullet) {\n          bullet.classList.add(...params.bulletActiveClass.split(' '));\n        }\n        if (params.dynamicBullets) {\n          const firstDisplayedBullet = bullets[firstIndex];\n          const lastDisplayedBullet = bullets[lastIndex];\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            if (bullets[i]) {\n              bullets[i].classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n          }\n          setSideBullets(firstDisplayedBullet, 'prev');\n          setSideBullets(lastDisplayedBullet, 'next');\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.forEach(bullet => {\n          bullet.style[swiper.isHorizontal() ? offsetProp : 'top'] = `${bulletsOffset}px`;\n        });\n      }\n    }\n    el.forEach((subEl, subElIndex) => {\n      if (params.type === 'fraction') {\n        subEl.querySelectorAll(classesToSelector(params.currentClass)).forEach(fractionEl => {\n          fractionEl.textContent = params.formatFractionCurrent(current + 1);\n        });\n        subEl.querySelectorAll(classesToSelector(params.totalClass)).forEach(totalEl => {\n          totalEl.textContent = params.formatFractionTotal(total);\n        });\n      }\n      if (params.type === 'progressbar') {\n        let progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        const scale = (current + 1) / total;\n        let scaleX = 1;\n        let scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        subEl.querySelectorAll(classesToSelector(params.progressbarFillClass)).forEach(progressEl => {\n          progressEl.style.transform = `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`;\n          progressEl.style.transitionDuration = `${swiper.params.speed}ms`;\n        });\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        subEl.innerHTML = params.renderCustom(swiper, current + 1, total);\n        if (subElIndex === 0) emit('paginationRender', subEl);\n      } else {\n        if (subElIndex === 0) emit('paginationRender', subEl);\n        emit('paginationUpdate', subEl);\n      }\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n      }\n    });\n  }\n  function render() {\n    // Render Container\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      let numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) {\n        numberOfBullets = slidesLength;\n      }\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n      }\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n    }\n    swiper.pagination.bullets = [];\n    el.forEach(subEl => {\n      if (params.type !== 'custom') {\n        subEl.innerHTML = paginationHTML || '';\n      }\n      if (params.type === 'bullets') {\n        swiper.pagination.bullets.push(...subEl.querySelectorAll(classesToSelector(params.bulletClass)));\n      }\n    });\n    if (params.type !== 'custom') {\n      emit('paginationRender', el[0]);\n    }\n  }\n  function init() {\n    swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n      el: 'swiper-pagination'\n    });\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = [...document.querySelectorAll(params.el)];\n    }\n    if (!el) {\n      el = params.el;\n    }\n    if (!el || el.length === 0) return;\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && Array.isArray(el) && el.length > 1) {\n      el = [...swiper.el.querySelectorAll(params.el)];\n      // check if it belongs to another nested Swiper\n      if (el.length > 1) {\n        el = el.filter(subEl => {\n          if (elementParents(subEl, '.swiper')[0] !== swiper.el) return false;\n          return true;\n        })[0];\n      }\n    }\n    if (Array.isArray(el) && el.length === 1) el = el[0];\n    Object.assign(swiper.pagination, {\n      el\n    });\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (params.type === 'bullets' && params.clickable) {\n        subEl.classList.add(params.clickableClass);\n      }\n      subEl.classList.add(params.modifierClass + params.type);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        subEl.classList.add(`${params.modifierClass}${params.type}-dynamic`);\n        dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        subEl.classList.add(params.progressbarOppositeClass);\n      }\n      if (params.clickable) {\n        subEl.addEventListener('click', onBulletClick);\n      }\n      if (!swiper.enabled) {\n        subEl.classList.add(params.lockClass);\n      }\n    });\n  }\n  function destroy() {\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => {\n        subEl.classList.remove(params.hiddenClass);\n        subEl.classList.remove(params.modifierClass + params.type);\n        subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        if (params.clickable) {\n          subEl.removeEventListener('click', onBulletClick);\n        }\n      });\n    }\n    if (swiper.pagination.bullets) swiper.pagination.bullets.forEach(subEl => subEl.classList.remove(...params.bulletActiveClass.split(' ')));\n  }\n  on('changeDirection', () => {\n    if (!swiper.pagination || !swiper.pagination.el) return;\n    const params = swiper.params.pagination;\n    let {\n      el\n    } = swiper.pagination;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.classList.remove(params.horizontalClass, params.verticalClass);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    });\n  });\n  on('init', () => {\n    if (swiper.params.pagination.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      render();\n      update();\n    }\n  });\n  on('activeIndexChange', () => {\n    if (typeof swiper.snapIndex === 'undefined') {\n      update();\n    }\n  });\n  on('snapIndexChange', () => {\n    update();\n  });\n  on('snapGridLengthChange', () => {\n    render();\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.pagination.lockClass));\n    }\n  });\n  on('lock unlock', () => {\n    update();\n  });\n  on('click', (_s, e) => {\n    const targetEl = e.target;\n    let {\n      el\n    } = swiper.pagination;\n    if (!Array.isArray(el)) el = [el].filter(element => !!element);\n    if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {\n      if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n      const isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);\n      if (isHidden === true) {\n        emit('paginationShow');\n      } else {\n        emit('paginationHide');\n      }\n      el.forEach(subEl => subEl.classList.toggle(swiper.params.pagination.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.remove(swiper.params.pagination.paginationDisabledClass));\n    }\n    init();\n    render();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.add(swiper.params.pagination.paginationDisabledClass));\n    }\n    destroy();\n  };\n  Object.assign(swiper.pagination, {\n    enable,\n    disable,\n    render,\n    update,\n    init,\n    destroy\n  });\n}","import { elementChildren } from '../../shared/utils.js';\nexport default function Parallax({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    parallax: {\n      enabled: false\n    }\n  });\n  const setTransform = (el, progress) => {\n    const {\n      rtl\n    } = swiper;\n    const rtlFactor = rtl ? -1 : 1;\n    const p = el.getAttribute('data-swiper-parallax') || '0';\n    let x = el.getAttribute('data-swiper-parallax-x');\n    let y = el.getAttribute('data-swiper-parallax-y');\n    const scale = el.getAttribute('data-swiper-parallax-scale');\n    const opacity = el.getAttribute('data-swiper-parallax-opacity');\n    const rotate = el.getAttribute('data-swiper-parallax-rotate');\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      el.style.opacity = currentOpacity;\n    }\n    let transform = `translate3d(${x}, ${y}, 0px)`;\n    if (typeof scale !== 'undefined' && scale !== null) {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      transform += ` scale(${currentScale})`;\n    }\n    if (rotate && typeof rotate !== 'undefined' && rotate !== null) {\n      const currentRotate = rotate * progress * -1;\n      transform += ` rotate(${currentRotate}deg)`;\n    }\n    el.style.transform = transform;\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      slides,\n      progress,\n      snapGrid\n    } = swiper;\n    elementChildren(el, '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(subEl => {\n      setTransform(subEl, progress);\n    });\n    slides.forEach((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      slideEl.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale], [data-swiper-parallax-rotate]').forEach(subEl => {\n        setTransform(subEl, slideProgress);\n      });\n    });\n  };\n  const setTransition = (duration = swiper.params.speed) => {\n    const {\n      el\n    } = swiper;\n    el.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(parallaxEl => {\n      let parallaxDuration = parseInt(parallaxEl.getAttribute('data-swiper-parallax-duration'), 10) || duration;\n      if (duration === 0) parallaxDuration = 0;\n      parallaxEl.style.transitionDuration = `${parallaxDuration}ms`;\n    });\n  };\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementOffset, nextTick } from '../../shared/utils.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Scrollbar({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  let isTouched = false;\n  let timeout = null;\n  let dragTimeout = null;\n  let dragStartPos;\n  let dragSize;\n  let trackSize;\n  let divider;\n  extendParams({\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n      scrollbarDisabledClass: 'swiper-scrollbar-disabled',\n      horizontalClass: `swiper-scrollbar-horizontal`,\n      verticalClass: `swiper-scrollbar-vertical`\n    }\n  });\n  swiper.scrollbar = {\n    el: null,\n    dragEl: null\n  };\n  function setTranslate() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n    const progress = swiper.params.loop ? swiper.progressLoop : swiper.progress;\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.transform = `translate3d(${newPos}px, 0, 0)`;\n      dragEl.style.width = `${newSize}px`;\n    } else {\n      dragEl.style.transform = `translate3d(0px, ${newPos}px, 0)`;\n      dragEl.style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(timeout);\n      el.style.opacity = 1;\n      timeout = setTimeout(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n  }\n  function setTransition(duration) {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.dragEl.style.transitionDuration = `${duration}ms`;\n  }\n  function updateSize() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    dragEl.style.width = '';\n    dragEl.style.height = '';\n    trackSize = swiper.isHorizontal() ? el.offsetWidth : el.offsetHeight;\n    divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.width = `${dragSize}px`;\n    } else {\n      dragEl.style.height = `${dragSize}px`;\n    }\n    if (divider >= 1) {\n      el.style.display = 'none';\n    } else {\n      el.style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      el.style.opacity = 0;\n    }\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      scrollbar.el.classList[swiper.isLocked ? 'add' : 'remove'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function getPointerPosition(e) {\n    return swiper.isHorizontal() ? e.clientX : e.clientY;\n  }\n  function setDragPosition(e) {\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    let positionRatio;\n    positionRatio = (getPointerPosition(e) - elementOffset(el)[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n    const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  function onDragStart(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    isTouched = true;\n    dragStartPos = e.target === dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n    wrapperEl.style.transitionDuration = '100ms';\n    dragEl.style.transitionDuration = '100ms';\n    setDragPosition(e);\n    clearTimeout(dragTimeout);\n    el.style.transitionDuration = '0ms';\n    if (params.hide) {\n      el.style.opacity = 1;\n    }\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = 'none';\n    }\n    emit('scrollbarDragStart', e);\n  }\n  function onDragMove(e) {\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    if (!isTouched) return;\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    setDragPosition(e);\n    wrapperEl.style.transitionDuration = '0ms';\n    el.style.transitionDuration = '0ms';\n    dragEl.style.transitionDuration = '0ms';\n    emit('scrollbarDragMove', e);\n  }\n  function onDragEnd(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    if (!isTouched) return;\n    isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = '';\n      wrapperEl.style.transitionDuration = '';\n    }\n    if (params.hide) {\n      clearTimeout(dragTimeout);\n      dragTimeout = nextTick(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n    emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  }\n  function events(method) {\n    const {\n      scrollbar,\n      params\n    } = swiper;\n    const el = scrollbar.el;\n    if (!el) return;\n    const target = el;\n    const activeListener = params.passiveListeners ? {\n      passive: false,\n      capture: false\n    } : false;\n    const passiveListener = params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    if (!target) return;\n    const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n    target[eventMethod]('pointerdown', onDragStart, activeListener);\n    document[eventMethod]('pointermove', onDragMove, activeListener);\n    document[eventMethod]('pointerup', onDragEnd, passiveListener);\n  }\n  function enableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('on');\n  }\n  function disableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('off');\n  }\n  function init() {\n    const {\n      scrollbar,\n      el: swiperEl\n    } = swiper;\n    swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n      el: 'swiper-scrollbar'\n    });\n    const params = swiper.params.scrollbar;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = document.querySelectorAll(params.el);\n    } else if (!el) {\n      el = params.el;\n    }\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && el.length > 1 && swiperEl.querySelectorAll(params.el).length === 1) {\n      el = swiperEl.querySelector(params.el);\n    }\n    if (el.length > 0) el = el[0];\n    el.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    let dragEl;\n    if (el) {\n      dragEl = el.querySelector(`.${swiper.params.scrollbar.dragClass}`);\n      if (!dragEl) {\n        dragEl = createElement('div', swiper.params.scrollbar.dragClass);\n        el.append(dragEl);\n      }\n    }\n    Object.assign(scrollbar, {\n      el,\n      dragEl\n    });\n    if (params.draggable) {\n      enableDraggable();\n    }\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function destroy() {\n    const params = swiper.params.scrollbar;\n    const el = swiper.scrollbar.el;\n    if (el) {\n      el.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    }\n    disableDraggable();\n  }\n  on('init', () => {\n    if (swiper.params.scrollbar.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      updateSize();\n      setTranslate();\n    }\n  });\n  on('update resize observerUpdate lock unlock', () => {\n    updateSize();\n  });\n  on('setTranslate', () => {\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    setTransition(duration);\n  });\n  on('enable disable', () => {\n    const {\n      el\n    } = swiper.scrollbar;\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    init();\n    updateSize();\n    setTranslate();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    destroy();\n  };\n  Object.assign(swiper.scrollbar, {\n    enable,\n    disable,\n    updateSize,\n    setTranslate,\n    init,\n    destroy\n  });\n}","import { getDocument } from 'ssr-window';\nimport { elementChildren, isObject } from '../../shared/utils.js';\nexport default function Thumb({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-thumbs'\n    }\n  });\n  let initialized = false;\n  let swiperCreated = false;\n  swiper.thumbs = {\n    swiper: null\n  };\n  function onThumbClick() {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && clickedSlide.classList.contains(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt(thumbsSwiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      swiper.slideToLoop(slideToIndex);\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n  function init() {\n    const {\n      thumbs: thumbsParams\n    } = swiper.params;\n    if (initialized) return false;\n    initialized = true;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Object.assign(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      Object.assign(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper.update();\n    } else if (isObject(thumbsParams.swiper)) {\n      const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n      Object.assign(thumbsSwiperParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n      swiperCreated = true;\n    }\n    swiper.thumbs.swiper.el.classList.add(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', onThumbClick);\n    return true;\n  }\n  function update(initial) {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n    thumbsToActivate = Math.floor(thumbsToActivate);\n    thumbsSwiper.slides.forEach(slideEl => slideEl.classList.remove(thumbActiveClass));\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        elementChildren(thumbsSwiper.slidesEl, `[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).forEach(slideEl => {\n          slideEl.classList.add(thumbActiveClass);\n        });\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        if (thumbsSwiper.slides[swiper.realIndex + i]) {\n          thumbsSwiper.slides[swiper.realIndex + i].classList.add(thumbActiveClass);\n        }\n      }\n    }\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      const currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n      if (thumbsSwiper.params.loop) {\n        const newThumbsSlide = thumbsSwiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') === `${swiper.realIndex}`)[0];\n        newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) {\n          // newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n  }\n  on('beforeInit', () => {\n    const {\n      thumbs\n    } = swiper.params;\n    if (!thumbs || !thumbs.swiper) return;\n    if (typeof thumbs.swiper === 'string' || thumbs.swiper instanceof HTMLElement) {\n      const document = getDocument();\n      const getThumbsElementAndInit = () => {\n        const thumbsElement = typeof thumbs.swiper === 'string' ? document.querySelector(thumbs.swiper) : thumbs.swiper;\n        if (thumbsElement && thumbsElement.swiper) {\n          thumbs.swiper = thumbsElement.swiper;\n          init();\n          update(true);\n        } else if (thumbsElement) {\n          const onThumbsSwiper = e => {\n            thumbs.swiper = e.detail[0];\n            thumbsElement.removeEventListener('init', onThumbsSwiper);\n            init();\n            update(true);\n            thumbs.swiper.update();\n            swiper.update();\n          };\n          thumbsElement.addEventListener('init', onThumbsSwiper);\n        }\n        return thumbsElement;\n      };\n      const watchForThumbsToAppear = () => {\n        if (swiper.destroyed) return;\n        const thumbsElement = getThumbsElementAndInit();\n        if (!thumbsElement) {\n          requestAnimationFrame(watchForThumbsToAppear);\n        }\n      };\n      requestAnimationFrame(watchForThumbsToAppear);\n    } else {\n      init();\n      update(true);\n    }\n  });\n  on('slideChange update resize observerUpdate', () => {\n    update();\n  });\n  on('setTransition', (_s, duration) => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    thumbsSwiper.setTransition(duration);\n  });\n  on('beforeDestroy', () => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    if (swiperCreated) {\n      thumbsSwiper.destroy();\n    }\n  });\n  Object.assign(swiper.thumbs, {\n    init,\n    update\n  });\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementChildren, setCSSProperty } from '../../shared/utils.js';\nexport default function Virtual({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0\n    }\n  });\n  let cssModeTimeout;\n  const document = getDocument();\n  swiper.virtual = {\n    cache: {},\n    from: undefined,\n    to: undefined,\n    slides: [],\n    offset: 0,\n    slidesGrid: []\n  };\n  const tempDOM = document.createElement('div');\n  function renderSlide(slide, index) {\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    // eslint-disable-next-line\n    let slideEl;\n    if (params.renderSlide) {\n      slideEl = params.renderSlide.call(swiper, slide, index);\n      if (typeof slideEl === 'string') {\n        tempDOM.innerHTML = slideEl;\n        slideEl = tempDOM.children[0];\n      }\n    } else if (swiper.isElement) {\n      slideEl = createElement('swiper-slide');\n    } else {\n      slideEl = createElement('div', swiper.params.slideClass);\n    }\n    slideEl.setAttribute('data-swiper-slide-index', index);\n    if (!params.renderSlide) {\n      slideEl.innerHTML = slide;\n    }\n    if (params.cache) swiper.virtual.cache[index] = slideEl;\n    return slideEl;\n  }\n  function update(force) {\n    const {\n      slidesPerView,\n      slidesPerGroup,\n      centeredSlides,\n      loop: isLoop\n    } = swiper.params;\n    const {\n      addSlidesBefore,\n      addSlidesAfter\n    } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      offset: previousOffset\n    } = swiper.virtual;\n    if (!swiper.params.cssMode) {\n      swiper.updateActiveIndex();\n    }\n    const activeIndex = swiper.activeIndex || 0;\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = (isLoop ? slidesPerView : slidesPerGroup) + addSlidesBefore;\n    }\n    let from = activeIndex - slidesBefore;\n    let to = activeIndex + slidesAfter;\n    if (!isLoop) {\n      from = Math.max(from, 0);\n      to = Math.min(to, slides.length - 1);\n    }\n    let offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n    if (isLoop && activeIndex >= slidesBefore) {\n      from -= slidesBefore;\n      if (!centeredSlides) offset += swiper.slidesGrid[0];\n    } else if (isLoop && activeIndex < slidesBefore) {\n      from = -slidesBefore;\n      if (centeredSlides) offset += swiper.slidesGrid[0];\n    }\n    Object.assign(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n      slidesBefore,\n      slidesAfter\n    });\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      emit('virtualUpdate');\n    }\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.forEach(slideEl => {\n          slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n        });\n      }\n      swiper.updateProgress();\n      emit('virtualUpdate');\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()\n      });\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      } else {\n        emit('virtualUpdate');\n      }\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    const getSlideIndex = index => {\n      let slideIndex = index;\n      if (index < 0) {\n        slideIndex = slides.length + index;\n      } else if (slideIndex >= slides.length) {\n        // eslint-disable-next-line\n        slideIndex = slideIndex - slides.length;\n      }\n      return slideIndex;\n    };\n    if (force) {\n      swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}, swiper-slide`).forEach(slideEl => {\n        slideEl.remove();\n      });\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          const slideIndex = getSlideIndex(i);\n          swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${slideIndex}\"], swiper-slide[data-swiper-slide-index=\"${slideIndex}\"]`).forEach(slideEl => {\n            slideEl.remove();\n          });\n        }\n      }\n    }\n    const loopFrom = isLoop ? -slides.length : 0;\n    const loopTo = isLoop ? slides.length * 2 : slides.length;\n    for (let i = loopFrom; i < loopTo; i += 1) {\n      if (i >= from && i <= to) {\n        const slideIndex = getSlideIndex(i);\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(slideIndex);\n        } else {\n          if (i > previousTo) appendIndexes.push(slideIndex);\n          if (i < previousFrom) prependIndexes.push(slideIndex);\n        }\n      }\n    }\n    appendIndexes.forEach(index => {\n      swiper.slidesEl.append(renderSlide(slides[index], index));\n    });\n    if (isLoop) {\n      for (let i = prependIndexes.length - 1; i >= 0; i -= 1) {\n        const index = prependIndexes[i];\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      }\n    } else {\n      prependIndexes.sort((a, b) => b - a);\n      prependIndexes.forEach(index => {\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      });\n    }\n    elementChildren(swiper.slidesEl, '.swiper-slide, swiper-slide').forEach(slideEl => {\n      slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n    });\n    onRendered();\n  }\n  function appendSlide(slides) {\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    update(true);\n  }\n  function prependSlide(slides) {\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach(cachedIndex => {\n        const cachedEl = cache[cachedIndex];\n        const cachedElIndex = cachedEl.getAttribute('data-swiper-slide-index');\n        if (cachedElIndex) {\n          cachedEl.setAttribute('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  }\n  function removeSlide(slidesIndexes) {\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    update(true);\n    swiper.slideTo(activeIndex, 0);\n  }\n  function removeAllSlides() {\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    update(true);\n    swiper.slideTo(0, 0);\n  }\n  on('beforeInit', () => {\n    if (!swiper.params.virtual.enabled) return;\n    let domSlidesAssigned;\n    if (typeof swiper.passedParams.virtual.slides === 'undefined') {\n      const slides = [...swiper.slidesEl.children].filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`));\n      if (slides && slides.length) {\n        swiper.virtual.slides = [...slides];\n        domSlidesAssigned = true;\n        slides.forEach((slideEl, slideIndex) => {\n          slideEl.setAttribute('data-swiper-slide-index', slideIndex);\n          swiper.virtual.cache[slideIndex] = slideEl;\n          slideEl.remove();\n        });\n      }\n    }\n    if (!domSlidesAssigned) {\n      swiper.virtual.slides = swiper.params.virtual.slides;\n    }\n    swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n    if (!swiper.params.initialSlide) {\n      update();\n    }\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode && !swiper._immediateVirtual) {\n      clearTimeout(cssModeTimeout);\n      cssModeTimeout = setTimeout(() => {\n        update();\n      }, 100);\n    } else {\n      update();\n    }\n  });\n  on('init update resize', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n    }\n  });\n  Object.assign(swiper.virtual, {\n    appendSlide,\n    prependSlide,\n    removeSlide,\n    removeAllSlides,\n    update\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementChildren, elementOffset, elementParents, getTranslate } from '../../shared/utils.js';\nexport default function Zoom({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed'\n    }\n  });\n  swiper.zoom = {\n    enabled: false\n  };\n  let currentScale = 1;\n  let isScaling = false;\n  let fakeGestureTouched;\n  let fakeGestureMoved;\n  const evCache = [];\n  const gesture = {\n    originX: 0,\n    originY: 0,\n    slideEl: undefined,\n    slideWidth: undefined,\n    slideHeight: undefined,\n    imageEl: undefined,\n    imageWrapEl: undefined,\n    maxRatio: 3\n  };\n  const image = {\n    isTouched: undefined,\n    isMoved: undefined,\n    currentX: undefined,\n    currentY: undefined,\n    minX: undefined,\n    minY: undefined,\n    maxX: undefined,\n    maxY: undefined,\n    width: undefined,\n    height: undefined,\n    startX: undefined,\n    startY: undefined,\n    touchesStart: {},\n    touchesCurrent: {}\n  };\n  const velocity = {\n    x: undefined,\n    y: undefined,\n    prevPositionX: undefined,\n    prevPositionY: undefined,\n    prevTime: undefined\n  };\n  let scale = 1;\n  Object.defineProperty(swiper.zoom, 'scale', {\n    get() {\n      return scale;\n    },\n    set(value) {\n      if (scale !== value) {\n        const imageEl = gesture.imageEl;\n        const slideEl = gesture.slideEl;\n        emit('zoomChange', value, imageEl, slideEl);\n      }\n      scale = value;\n    }\n  });\n  function getDistanceBetweenTouches() {\n    if (evCache.length < 2) return 1;\n    const x1 = evCache[0].pageX;\n    const y1 = evCache[0].pageY;\n    const x2 = evCache[1].pageX;\n    const y2 = evCache[1].pageY;\n    const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    return distance;\n  }\n  function getScaleOrigin() {\n    if (evCache.length < 2) return {\n      x: null,\n      y: null\n    };\n    const box = gesture.imageEl.getBoundingClientRect();\n    return [(evCache[0].pageX + (evCache[1].pageX - evCache[0].pageX) / 2 - box.x) / currentScale, (evCache[0].pageY + (evCache[1].pageY - evCache[0].pageY) / 2 - box.y) / currentScale];\n  }\n  function getSlideSelector() {\n    return swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  }\n  function eventWithinSlide(e) {\n    const slideSelector = getSlideSelector();\n    if (e.target.matches(slideSelector)) return true;\n    if (swiper.slides.filter(slideEl => slideEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n  function eventWithinZoomContainer(e) {\n    const selector = `.${swiper.params.zoom.containerClass}`;\n    if (e.target.matches(selector)) return true;\n    if ([...swiper.el.querySelectorAll(selector)].filter(containerEl => containerEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n\n  // Events\n  function onGestureStart(e) {\n    if (e.pointerType === 'mouse') {\n      evCache.splice(0, evCache.length);\n    }\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    evCache.push(e);\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureTouched = true;\n    gesture.scaleStart = getDistanceBetweenTouches();\n    if (!gesture.slideEl) {\n      gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      if (!gesture.slideEl) gesture.slideEl = swiper.slides[swiper.activeIndex];\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n      if (!gesture.imageWrapEl) {\n        gesture.imageEl = undefined;\n        return;\n      }\n      gesture.maxRatio = gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    }\n    if (gesture.imageEl) {\n      const [originX, originY] = getScaleOrigin();\n      gesture.originX = originX;\n      gesture.originY = originY;\n      gesture.imageEl.style.transitionDuration = '0ms';\n    }\n    isScaling = true;\n  }\n  function onGestureChange(e) {\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache[pointerIndex] = e;\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureMoved = true;\n    gesture.scaleMove = getDistanceBetweenTouches();\n    if (!gesture.imageEl) {\n      return;\n    }\n    zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n    }\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function onGestureEnd(e) {\n    if (!eventWithinSlide(e)) return;\n    if (e.pointerType === 'mouse' && e.type === 'pointerout') return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache.splice(pointerIndex, 1);\n    if (!fakeGestureTouched || !fakeGestureMoved) {\n      return;\n    }\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    if (!gesture.imageEl) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.imageEl.style.transitionDuration = `${swiper.params.speed}ms`;\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n    currentScale = zoom.scale;\n    isScaling = false;\n    if (zoom.scale > 1 && gesture.slideEl) {\n      gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    } else if (zoom.scale <= 1 && gesture.slideEl) {\n      gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    }\n    if (zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n      gesture.slideEl = undefined;\n    }\n  }\n  function onTouchStart(e) {\n    const device = swiper.device;\n    if (!gesture.imageEl) return;\n    if (image.isTouched) return;\n    if (device.android && e.cancelable) e.preventDefault();\n    image.isTouched = true;\n    const event = evCache.length > 0 ? evCache[0] : e;\n    image.touchesStart.x = event.pageX;\n    image.touchesStart.y = event.pageY;\n  }\n  function onTouchMove(e) {\n    if (!eventWithinSlide(e) || !eventWithinZoomContainer(e)) return;\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !gesture.slideEl) return;\n    if (!image.isMoved) {\n      image.width = gesture.imageEl.offsetWidth;\n      image.height = gesture.imageEl.offsetHeight;\n      image.startX = getTranslate(gesture.imageWrapEl, 'x') || 0;\n      image.startY = getTranslate(gesture.imageWrapEl, 'y') || 0;\n      gesture.slideWidth = gesture.slideEl.offsetWidth;\n      gesture.slideHeight = gesture.slideEl.offsetHeight;\n      gesture.imageWrapEl.style.transitionDuration = '0ms';\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.touchesCurrent.x = evCache.length > 0 ? evCache[0].pageX : e.pageX;\n    image.touchesCurrent.y = evCache.length > 0 ? evCache[0].pageY : e.pageY;\n    const touchesDiff = Math.max(Math.abs(image.touchesCurrent.x - image.touchesStart.x), Math.abs(image.touchesCurrent.y - image.touchesStart.y));\n    if (touchesDiff > 5) {\n      swiper.allowClick = false;\n    }\n    if (!image.isMoved && !isScaling) {\n      if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n        image.isTouched = false;\n        return;\n      }\n      if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n    e.stopPropagation();\n    image.isMoved = true;\n    const scaleRatio = (zoom.scale - currentScale) / (gesture.maxRatio - swiper.params.zoom.minRatio);\n    const {\n      originX,\n      originY\n    } = gesture;\n    image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX + scaleRatio * (image.width - originX * 2);\n    image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY + scaleRatio * (image.height - originY * 2);\n    if (image.currentX < image.minX) {\n      image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n    }\n    if (image.currentY < image.minY) {\n      image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTouchEnd() {\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n    gesture.imageWrapEl.style.transitionDuration = `${momentumDuration}ms`;\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTransitionEnd() {\n    const zoom = swiper.zoom;\n    if (gesture.slideEl && swiper.activeIndex !== swiper.slides.indexOf(gesture.slideEl)) {\n      if (gesture.imageEl) {\n        gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n      }\n      if (gesture.imageWrapEl) {\n        gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n      }\n      gesture.slideEl.classList.remove(`${swiper.params.zoom.zoomedSlideClass}`);\n      zoom.scale = 1;\n      currentScale = 1;\n      gesture.slideEl = undefined;\n      gesture.imageEl = undefined;\n      gesture.imageWrapEl = undefined;\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n  }\n  function zoomIn(e) {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (e && e.target) {\n        gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      }\n      if (!gesture.slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n        } else {\n          gesture.slideEl = swiper.slides[swiper.activeIndex];\n        }\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.touchAction = 'none';\n    }\n    gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.pageX;\n      touchY = e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n    const forceZoomRatio = typeof e === 'number' ? e : null;\n    if (currentScale === 1 && forceZoomRatio) {\n      touchX = undefined;\n      touchY = undefined;\n    }\n    zoom.scale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    currentScale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    if (e && !(currentScale === 1 && forceZoomRatio)) {\n      slideWidth = gesture.slideEl.offsetWidth;\n      slideHeight = gesture.slideEl.offsetHeight;\n      offsetX = elementOffset(gesture.slideEl).left + window.scrollX;\n      offsetY = elementOffset(gesture.slideEl).top + window.scrollY;\n      diffX = offsetX + slideWidth / 2 - touchX;\n      diffY = offsetY + slideHeight / 2 - touchY;\n      imageWidth = gesture.imageEl.offsetWidth;\n      imageHeight = gesture.imageEl.offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n      translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n      translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    if (forceZoomRatio && zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = `translate3d(${translateX}px, ${translateY}px,0)`;\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function zoomOut() {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n      } else {\n        gesture.slideEl = swiper.slides[swiper.activeIndex];\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = '';\n      swiper.wrapperEl.style.touchAction = '';\n    }\n    zoom.scale = 1;\n    currentScale = 1;\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n    gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    gesture.slideEl = undefined;\n    gesture.originX = 0;\n    gesture.originY = 0;\n  }\n\n  // Toggle Zoom\n  function zoomToggle(e) {\n    const zoom = swiper.zoom;\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoomOut();\n    } else {\n      // Zoom In\n      zoomIn(e);\n    }\n  }\n  function getListeners() {\n    const passiveListener = swiper.params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    const activeListenerWithCapture = swiper.params.passiveListeners ? {\n      passive: false,\n      capture: true\n    } : true;\n    return {\n      passiveListener,\n      activeListenerWithCapture\n    };\n  }\n\n  // Attach/Detach Events\n  function enable() {\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.addEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.addEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.addEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.addEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  function disable() {\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n    zoom.enabled = false;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.removeEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.removeEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.removeEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.removeEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  on('init', () => {\n    if (swiper.params.zoom.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    disable();\n  });\n  on('touchStart', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchStart(e);\n  });\n  on('touchEnd', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchEnd(e);\n  });\n  on('doubleTap', (_s, e) => {\n    if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n      zoomToggle(e);\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n      onTransitionEnd();\n    }\n  });\n  on('slideChange', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n      onTransitionEnd();\n    }\n  });\n  Object.assign(swiper.zoom, {\n    enable,\n    disable,\n    in: zoomIn,\n    out: zoomOut,\n    toggle: zoomToggle\n  });\n}","export default function classesToSelector(classes = '') {\n  return `.${classes.trim().replace(/([\\.:!+\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n}","import { createElement, elementChildren } from './utils.js';\nexport default function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n  if (swiper.params.createElements) {\n    Object.keys(checkProps).forEach(key => {\n      if (!params[key] && params.auto === true) {\n        let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];\n        if (!element) {\n          element = createElement('div', checkProps[key]);\n          element.className = checkProps[key];\n          swiper.el.append(element);\n        }\n        params[key] = element;\n        originalParams[key] = element;\n      }\n    });\n  }\n  return params;\n}","import { createElement, getSlideTransformEl } from './utils.js';\nexport default function createShadow(params, slideEl, side) {\n  const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\n  const shadowContainer = getSlideTransformEl(slideEl);\n  let shadowEl = shadowContainer.querySelector(`.${shadowClass}`);\n  if (!shadowEl) {\n    shadowEl = createElement('div', `swiper-slide-shadow${side ? `-${side}` : ''}`);\n    shadowContainer.append(shadowEl);\n  }\n  return shadowEl;\n}","export default function effectInit(params) {\n  const {\n    effect,\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams,\n    perspective,\n    recreateShadows,\n    getEffectParams\n  } = params;\n  on('beforeInit', () => {\n    if (swiper.params.effect !== effect) return;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n    if (perspective && perspective()) {\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n    }\n    const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n    Object.assign(swiper.params, overwriteParamsResult);\n    Object.assign(swiper.originalParams, overwriteParamsResult);\n  });\n  on('setTranslate', () => {\n    if (swiper.params.effect !== effect) return;\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    if (swiper.params.effect !== effect) return;\n    setTransition(duration);\n  });\n  on('transitionEnd', () => {\n    if (swiper.params.effect !== effect) return;\n    if (recreateShadows) {\n      if (!getEffectParams || !getEffectParams().slideShadows) return;\n      // remove shadows\n      swiper.slides.forEach(slideEl => {\n        slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => shadowEl.remove());\n      });\n      // create new one\n      recreateShadows();\n    }\n  });\n  let requireUpdateOnVirtual;\n  on('virtualUpdate', () => {\n    if (swiper.params.effect !== effect) return;\n    if (!swiper.slides.length) {\n      requireUpdateOnVirtual = true;\n    }\n    requestAnimationFrame(() => {\n      if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\n        setTranslate();\n        requireUpdateOnVirtual = false;\n      }\n    });\n  });\n}","import { getSlideTransformEl } from './utils.js';\nexport default function effectTarget(effectParams, slideEl) {\n  const transformEl = getSlideTransformEl(slideEl);\n  if (transformEl !== slideEl) {\n    transformEl.style.backfaceVisibility = 'hidden';\n    transformEl.style['-webkit-backface-visibility'] = 'hidden';\n  }\n  return transformEl;\n}","import { elementTransitionEnd } from './utils.js';\nexport default function effectVirtualTransitionEnd({\n  swiper,\n  duration,\n  transformElements,\n  allSlides\n}) {\n  const {\n    activeIndex\n  } = swiper;\n  const getSlide = el => {\n    if (!el.parentElement) {\n      // assume shadow root\n      const slide = swiper.slides.filter(slideEl => slideEl.shadowEl && slideEl.shadowEl === el.parentNode)[0];\n      return slide;\n    }\n    return el.parentElement;\n  };\n  if (swiper.params.virtualTranslate && duration !== 0) {\n    let eventTriggered = false;\n    let transitionEndTarget;\n    if (allSlides) {\n      transitionEndTarget = transformElements;\n    } else {\n      transitionEndTarget = transformElements.filter(transformEl => {\n        const el = transformEl.classList.contains('swiper-slide-transform') ? getSlide(transformEl) : transformEl;\n        return swiper.getSlideIndex(el) === activeIndex;\n      });\n    }\n    transitionEndTarget.forEach(el => {\n      elementTransitionEnd(el, () => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const evt = new window.CustomEvent('transitionend', {\n          bubbles: true,\n          cancelable: true\n        });\n        swiper.wrapperEl.dispatchEvent(evt);\n      });\n    });\n  }\n}","import { getWindow } from 'ssr-window';\nlet browser;\nfunction calcBrowser() {\n  const window = getWindow();\n  let needPerspectiveFix = false;\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n  if (isSafari()) {\n    const ua = String(window.navigator.userAgent);\n    if (ua.includes('Version/')) {\n      const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n      needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n    }\n  }\n  return {\n    isSafari: needPerspectiveFix || isSafari(),\n    needPerspectiveFix,\n    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n  };\n}\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n  return browser;\n}\nexport { getBrowser };","import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support.js';\nlet deviceCached;\nfunction calcDevice({\n  userAgent\n} = {}) {\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\nfunction getDevice(overrides = {}) {\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n  return deviceCached;\n}\nexport { getDevice };","import { getWindow, getDocument } from 'ssr-window';\nlet support;\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n  };\n}\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n  return support;\n}\nexport { getSupport };","export const processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nexport const preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex !== activeIndex && realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(slideIndexLastInView - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && i > slideIndexLastInView) unlazy(swiper, i);\n    }\n  }\n};","import { getWindow, getDocument } from 'ssr-window';\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach(key => {\n    try {\n      object[key] = null;\n    } catch (e) {\n      // no getter for object\n    }\n    try {\n      delete object[key];\n    } catch (e) {\n      // something got wrong\n    }\n  });\n}\nfunction nextTick(callback, delay = 0) {\n  return setTimeout(callback, delay);\n}\nfunction now() {\n  return Date.now();\n}\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n  if (!style) {\n    style = el.style;\n  }\n  return style;\n}\nfunction getTranslate(el, axis = 'x') {\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n  const curStyle = getComputedStyle(el, null);\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n    }\n    // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n  return curTransform || 0;\n}\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\nfunction extend(...args) {\n  const to = Object(args[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  for (let i = 1; i < args.length; i += 1) {\n    const nextSource = args[i];\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n  return to;\n}\nfunction setCSSProperty(el, varName, varValue) {\n  el.style.setProperty(varName, varValue);\n}\nfunction animateCSSModeScroll({\n  swiper,\n  targetPosition,\n  side\n}) {\n  const window = getWindow();\n  const startPosition = -swiper.translate;\n  let startTime = null;\n  let time;\n  const duration = swiper.params.speed;\n  swiper.wrapperEl.style.scrollSnapType = 'none';\n  window.cancelAnimationFrame(swiper.cssModeFrameID);\n  const dir = targetPosition > startPosition ? 'next' : 'prev';\n  const isOutOfBound = (current, target) => {\n    return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n  };\n  const animate = () => {\n    time = new Date().getTime();\n    if (startTime === null) {\n      startTime = time;\n    }\n    const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n    const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n    let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      currentPosition = targetPosition;\n    }\n    swiper.wrapperEl.scrollTo({\n      [side]: currentPosition\n    });\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.scrollSnapType = '';\n      setTimeout(() => {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n      });\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      return;\n    }\n    swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n  };\n  animate();\n}\nfunction getSlideTransformEl(slideEl) {\n  return slideEl.querySelector('.swiper-slide-transform') || slideEl.shadowEl && slideEl.shadowEl.querySelector('.swiper-slide-transform') || slideEl;\n}\nfunction findElementsInElements(elements = [], selector = '') {\n  const found = [];\n  elements.forEach(el => {\n    found.push(...el.querySelectorAll(selector));\n  });\n  return found;\n}\nfunction elementChildren(element, selector = '') {\n  return [...element.children].filter(el => el.matches(selector));\n}\nfunction createElement(tag, classes = []) {\n  const el = document.createElement(tag);\n  el.classList.add(...(Array.isArray(classes) ? classes : [classes]));\n  return el;\n}\nfunction elementOffset(el) {\n  const window = getWindow();\n  const document = getDocument();\n  const box = el.getBoundingClientRect();\n  const body = document.body;\n  const clientTop = el.clientTop || body.clientTop || 0;\n  const clientLeft = el.clientLeft || body.clientLeft || 0;\n  const scrollTop = el === window ? window.scrollY : el.scrollTop;\n  const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n  return {\n    top: box.top + scrollTop - clientTop,\n    left: box.left + scrollLeft - clientLeft\n  };\n}\nfunction elementPrevAll(el, selector) {\n  const prevEls = [];\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if (prev.matches(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return prevEls;\n}\nfunction elementNextAll(el, selector) {\n  const nextEls = [];\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if (next.matches(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return nextEls;\n}\nfunction elementStyle(el, prop) {\n  const window = getWindow();\n  return window.getComputedStyle(el, null).getPropertyValue(prop);\n}\nfunction elementIndex(el) {\n  let child = el;\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\nfunction elementParents(el, selector) {\n  const parents = []; // eslint-disable-line\n  let parent = el.parentElement; // eslint-disable-line\n  while (parent) {\n    if (selector) {\n      if (parent.matches(selector)) parents.push(parent);\n    } else {\n      parents.push(parent);\n    }\n    parent = parent.parentElement;\n  }\n  return parents;\n}\nfunction elementTransitionEnd(el, callback) {\n  function fireCallBack(e) {\n    if (e.target !== el) return;\n    callback.call(el, e);\n    el.removeEventListener('transitionend', fireCallBack);\n  }\n  if (callback) {\n    el.addEventListener('transitionend', fireCallBack);\n  }\n}\nfunction elementOuterSize(el, size, includeMargins) {\n  const window = getWindow();\n  if (includeMargins) {\n    return el[size === 'width' ? 'offsetWidth' : 'offsetHeight'] + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-right' : 'margin-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-left' : 'margin-bottom'));\n  }\n  return el.offsetWidth;\n}\nexport { animateCSSModeScroll, deleteProps, nextTick, now, getTranslate, isObject, extend, getComputedStyle, setCSSProperty, getSlideTransformEl,\n// dom\nfindElementsInElements, createElement, elementChildren, elementOffset, elementPrevAll, elementNextAll, elementStyle, elementIndex, elementParents, elementTransitionEnd, elementOuterSize };","/**\n * Swiper 9.2.4\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2023 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: April 21, 2023\n */\n\nexport { default as Swiper, default } from './core/core.js';\nexport { default as Virtual } from './modules/virtual/virtual.js';\nexport { default as Keyboard } from './modules/keyboard/keyboard.js';\nexport { default as Mousewheel } from './modules/mousewheel/mousewheel.js';\nexport { default as Navigation } from './modules/navigation/navigation.js';\nexport { default as Pagination } from './modules/pagination/pagination.js';\nexport { default as Scrollbar } from './modules/scrollbar/scrollbar.js';\nexport { default as Parallax } from './modules/parallax/parallax.js';\nexport { default as Zoom } from './modules/zoom/zoom.js';\nexport { default as Controller } from './modules/controller/controller.js';\nexport { default as A11y } from './modules/a11y/a11y.js';\nexport { default as History } from './modules/history/history.js';\nexport { default as HashNavigation } from './modules/hash-navigation/hash-navigation.js';\nexport { default as Autoplay } from './modules/autoplay/autoplay.js';\nexport { default as Thumbs } from './modules/thumbs/thumbs.js';\nexport { default as FreeMode } from './modules/free-mode/free-mode.js';\nexport { default as Grid } from './modules/grid/grid.js';\nexport { default as Manipulation } from './modules/manipulation/manipulation.js';\nexport { default as EffectFade } from './modules/effect-fade/effect-fade.js';\nexport { default as EffectCube } from './modules/effect-cube/effect-cube.js';\nexport { default as EffectFlip } from './modules/effect-flip/effect-flip.js';\nexport { default as EffectCoverflow } from './modules/effect-coverflow/effect-coverflow.js';\nexport { default as EffectCreative } from './modules/effect-creative/effect-creative.js';\nexport { default as EffectCards } from './modules/effect-cards/effect-cards.js';","export const getAppHeight = () => {\r\n    function getHeight (){\r\n        $('html').css('--app-height', $(window).innerHeight() + 'px');\r\n    }\r\n    getHeight();\r\n    window.addEventListener('resize', function (){\r\n        getHeight();\r\n    });\r\n}","export const getScrollWidth = () => {\r\n    $('html').css('--scroll-width', $(window).outerWidth() - $(document).width() + 'px');\r\n}","/* scroll header function */\r\nexport const headerScrollChange = () => {\r\n    $(window).scroll(function() {\r\n        var scroll = $(this).scrollTop();\r\n        if(scroll > 0) {\r\n            $('.header').addClass('scroll');\r\n        } else {\r\n            $('.header').removeClass('scroll');\r\n        }\r\n    });\r\n}\r\n","export const inputCount = () => {\r\n    $('.js-count-btn').click(function (){\r\n        var curInput = $(this).parent().find('.count-input');\r\n        if($(this).attr('data-type') == 'dec'){\r\n            if(parseInt(curInput.val()) <= 1){\r\n                curInput.val(1);\r\n            }\r\n            else{\r\n                curInput.val(parseInt(curInput.val()) - 1);\r\n            }\r\n        }\r\n        else{\r\n            curInput.val(parseInt(curInput.val()) + 1);\r\n        }\r\n        curInput.trigger('change');\r\n    })\r\n}","export const menuBtn = () => {\r\n    // open menu\r\n    $('#hamburger').on('click', function (){\r\n        $('body').toggleClass('overflow menu-show');\r\n        $(this).toggleClass('is-active');\r\n        $('#main-menu').toggleClass('show');\r\n    });\r\n    // close menu\r\n    $(document).click(function (e) {\r\n        if($('#main-menu').has(e.target).length === 0 && $('#hamburger').has(e.target).length === 0 && $('#main-menu').hasClass('show') && !e.target.classList.contains('hamburger')){\r\n            $('body').removeClass('overflow menu-show');\r\n            $('#hamburger').removeClass('is-active');\r\n            $('#main-menu').removeClass('show');\r\n        }\r\n    });\r\n}","export const videoModal = () => {\r\n    $('.js-video-modal').magnificPopup({\r\n        type: 'iframe',\r\n        mainClass: 'mfp-fade',\r\n        tClose: 'Закрыть',\r\n        tLoading: 'Загрузка',\r\n        fixedContentPos: false,\r\n        removalDelay: 160,\r\n        preloader: false,\r\n        callbacks: {\r\n            open: () => {\r\n                $('body').addClass('overflow');\r\n            },\r\n            close: () => {\r\n                $('body').removeClass('overflow');\r\n            }\r\n        }\r\n    });\r\n};\r\nexport const simpleModal = () => {\r\n    $('.js-simple-modal').magnificPopup({\r\n        type: 'inline',\r\n        mainClass: 'mfp-fade',\r\n        tClose: 'Закрыть',\r\n        tLoading: 'Загрузка',\r\n        removalDelay: 160,\r\n        closeBtnInside: true,\r\n        fixedContentPos: true,\r\n        preloader: false,\r\n        callbacks: {\r\n            open: () => {\r\n                $('body').addClass('overflow');\r\n            },\r\n            close: () => {\r\n                $('body').removeClass('overflow');\r\n            }\r\n        }\r\n    });\r\n};\r\nexport const galleryModal = (galleryBlock) => {\r\n    $(galleryBlock).magnificPopup({\r\n        delegate: 'a',\r\n        type: 'image',\r\n        mainClass: 'mfp-fade',\r\n        tClose: 'Закрыть',\r\n        tLoading: 'Загрузка',\r\n        gallery: {\r\n            enabled: true,\r\n            tPrev: 'Назад',\r\n            tNext: 'Вперед',\r\n            tCounter: '<span class=\"mfp-counter\"><span class=\"active\">%curr%</span> / <span>%total%</span></span>'\r\n        },\r\n        image: {\r\n            tError: 'Ошибка загрузки',\r\n        }\r\n    });\r\n};","export const scrollTo = (selector, offset) => {\r\n    $(\"body\").on('click', selector, function(e){\r\n        $('html,body').stop().animate({ scrollTop: $('#' + $(this).attr('data-section')).offset().top - offset }, 1000);\r\n        e.preventDefault();\r\n    });\r\n}","/* TODO how change static images */\r\nimport 'lazysizes/plugins/bgset/ls.bgset.js';\r\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit.js';\r\n// slider\r\nimport Swiper, {Navigation, Pagination, Thumbs, FreeMode} from \"swiper\";\r\n// custom select\r\nimport 'jquery-form-styler';\r\n// functions\r\nimport {headerScrollChange} from \"./_func/_jq/headerScrollChange\";\r\nimport {getAppHeight} from \"./_func/_jq/getAppHeight\";\r\nimport {getScrollWidth} from \"./_func/_jq/getScrollWidth\";\r\nimport {inputCount} from \"./_func/_jq/inputCount\";\r\nimport {simpleModal, videoModal} from \"./_func/_jq/modalMagnific\";\r\nimport {scrollTo} from \"./_func/_jq/scrollTo\";\r\nimport {menuBtn} from \"./_func/_jq/menuBtn\";\r\n/* ------------------- */\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    // app height fix\r\n    getAppHeight();\r\n    getScrollWidth();\r\n    // scroll change\r\n    headerScrollChange();\r\n    // mobile menu\r\n    menuBtn();\r\n    // lang menu\r\n    $('.js-lang-menu').click(function (){\r\n        if($(this).hasClass('active')){\r\n            $(this).removeClass('active');\r\n            $(this).parent().find('.lang-list').slideUp(200);\r\n        }\r\n        else{\r\n            $(this).addClass('active');\r\n            $(this).parent().find('.lang-list').slideDown(200);\r\n        }\r\n    });\r\n    $(document).click(function (e) {\r\n        if(!e.target.classList.contains('js-lang-menu') && $('.js-lang-menu').hasClass('active')){\r\n            $('.js-lang-menu').removeClass('active');\r\n            $('.js-lang-menu').parent().find('.lang-list').slideUp(200);\r\n        }\r\n    });\r\n    // custom selects\r\n    setTimeout(function() {\r\n        $('.select-style').styler();\r\n    }, 100);\r\n    // count function\r\n    inputCount();\r\n\r\n    /* main resize change */\r\n    function changeHeaderResize(){\r\n        if($(window).width() <= 960){\r\n            $('.header__content').addClass('mobile-update');\r\n        }\r\n        else{\r\n            $('.header__content').removeClass('mobile-update');\r\n        }\r\n        if($('.header__content').hasClass('mobile-update')){\r\n            $('.header__content .search-block').prependTo($('.header__content .main-menu'));\r\n            $('.header__content .links-block').appendTo($('.header__content .main-menu'));\r\n            if($(window).width() <= 413){\r\n                $('.header__content .main-menu .main-menu__list').after($('.header__content .phone-link'));\r\n            }\r\n            else{\r\n                $('.header__content .lang-block').after($('.header__content .main-menu .phone-link'));\r\n            }\r\n        }\r\n        else{\r\n            $('.header__content .logo-link').after($('.header__content .main-menu .search-block'));\r\n            $('.header__content .search-block').after($('.header__content .main-menu .links-block'));\r\n        }\r\n    }\r\n    changeHeaderResize();\r\n    $(window).resize(function(){\r\n        changeHeaderResize();\r\n    })\r\n\r\n    /* main page */\r\n    // products slider\r\n    document.querySelectorAll('.products-slider').forEach(productsSlider => {\r\n        var productsSlider = new Swiper(productsSlider, {\r\n            modules: [Navigation],\r\n            lazy: true,\r\n            speed: 800,\r\n            loop: true,\r\n            slidesPerView: 1,\r\n            spaceBetween: 10,\r\n            simulateTouch: false,\r\n            navigation: {\r\n                prevEl: productsSlider.parentElement.parentElement.querySelector('.slider-navigation .nav-btn.prev-btn'),\r\n                nextEl: productsSlider.parentElement.parentElement.querySelector('.slider-navigation .nav-btn.next-btn')\r\n            },\r\n            breakpoints: {\r\n                960: {\r\n                    slidesPerView: 4,\r\n                },\r\n                768: {\r\n                    slidesPerView: 3,\r\n                },\r\n                414: {\r\n                    slidesPerView: 2,\r\n                    spaceBetween: 20\r\n                },\r\n                341: {\r\n                    slidesPerView: 2\r\n                }\r\n            }\r\n        });\r\n    });\r\n    // product slider\r\n    document.querySelectorAll('.product-item .product-slider').forEach(productSlider => {\r\n        var productSlider = new Swiper(productSlider, {\r\n            modules: [Navigation, Pagination],\r\n            lazy: true,\r\n            speed: 800,\r\n            loop: true,\r\n            slidesPerView: 1,\r\n            spaceBetween: 10,\r\n            pagination: {\r\n                clickable: true,\r\n                el: productSlider.parentElement.parentElement.querySelector('.slider-pagination')\r\n            }\r\n        });\r\n    });\r\n    // answers slider\r\n    var answersSlider = new Swiper('#answers-slider', {\r\n        modules: [Navigation],\r\n        lazy: true,\r\n        speed: 800,\r\n        simulateTouch: false,\r\n        loop: true,\r\n        slidesPerView: 1,\r\n        spaceBetween: 30,\r\n        navigation: {\r\n            prevEl: '.main-answers .slider-navigation .nav-btn.prev-btn',\r\n            nextEl: '.main-answers .slider-navigation .nav-btn.next-btn'\r\n        },\r\n        breakpoints: {\r\n            1200: {\r\n                slidesPerView: 3\r\n            },\r\n            768: {\r\n                slidesPerView: 2,\r\n            }\r\n        }\r\n    });\r\n    // answers video\r\n    document.querySelectorAll('.answer-item').forEach(videoAnswer => {\r\n        if(videoAnswer.querySelector('.item-video') !== null){\r\n            videoAnswer.addEventListener('mouseover', function (){\r\n                var videoItem = this.querySelector('.item-video');\r\n                videoItem.play();\r\n            });\r\n            videoAnswer.addEventListener('touchstart', function (){\r\n                var videoItem = this.querySelector('.item-video');\r\n                videoItem.play();\r\n            });\r\n            videoAnswer.addEventListener('mouseout', function (){\r\n                var videoItem = this.querySelector('.item-video');\r\n                videoItem.pause();\r\n                // videoItem.currentTime = 0;\r\n            });\r\n            videoAnswer.addEventListener('touchend', function (){\r\n                var videoItem = this.querySelector('.item-video');\r\n                videoItem.pause();\r\n                // videoItem.currentTime = 0;\r\n            });\r\n        }\r\n    });\r\n    // calc function\r\n    $('#main-calc').change(function (){\r\n        console.log('test');\r\n        var name  = $(this).find('select[name=\"equip\"] option:checked').val(),\r\n            power  = parseInt($(this).find('select[name=\"equip\"] option:checked').attr('data-power')),\r\n            profit = parseInt($(this).find('select[name=\"equip\"] option:checked').attr('data-profit')),\r\n            service_price = parseFloat($(this).find('select[name=\"equip\"] option:checked').attr('data-price')),\r\n            count  = parseInt($(this).find('input[name=\"count\"]').val()),\r\n            btc  = parseInt($(this).attr('data-btc')),\r\n            dollar  = parseInt($(this).attr('data-btc'));\r\n        $(this).find('input[name=\"service_price\"]').val(service_price);\r\n        var result = ((btc * count * profit) - (count * power / 1000 * 24 * service_price * 1/dollar))*31;\r\n        $(this).find('.result_value').text('$ ' + parseInt(result));\r\n    });\r\n    // answers info\r\n    $('.js-info-link').click(function (){\r\n        if($(this).hasClass('active')){\r\n            $(this).removeClass('active').parent().find('.item-descr').slideUp(300);\r\n        }\r\n        else{\r\n            $(this).addClass('active').parent().find('.item-descr').slideDown(300);\r\n        }\r\n    });\r\n\r\n    /* product page */\r\n    if($('.product-main').length > 0){\r\n        var productThumbs = new Swiper(\"#mproduct-thumb\", {\r\n            modules: [Thumbs, FreeMode],\r\n            speed: 800,\r\n            spaceBetween: 15,\r\n            slidesPerView: 5,\r\n            direction: 'vertical',\r\n            freeMode: true,\r\n            watchSlidesProgress: true,\r\n        });\r\n        var productMain = new Swiper(\"#mproduct-slider\", {\r\n            modules: [Thumbs, FreeMode],\r\n            speed: 800,\r\n            spaceBetween: 10,\r\n            thumbs: {\r\n                swiper: productThumbs,\r\n            },\r\n        });\r\n    }\r\n\r\n    /* shop page */\r\n    // scroll link\r\n    scrollTo('.js-scroll-link', -50);\r\n    // calc range\r\n    if(document.getElementById('range')){\r\n        var btc_range = document.getElementById('range'),\r\n            btc_from = parseInt(btc_range.getAttribute('data-from')),\r\n            btc_to = parseInt(btc_range.getAttribute('data-to'));\r\n        noUiSlider.create(btc_range, {\r\n            start: btc_from,\r\n            connect: 'lower',\r\n            step: 500,\r\n            tooltips: true,\r\n            format: {\r\n                from: function (value) {\r\n                    return parseInt(value);\r\n                },\r\n                to: function (value) {\r\n                    return parseInt(value);\r\n                }\r\n            },\r\n            range: {\r\n                'min': btc_from,\r\n                'max': btc_to\r\n            }\r\n        });\r\n        btc_range.noUiSlider.on('update', function (values, handle){\r\n        $('#shop-calc').trigger('change');\r\n    });\r\n    }\r\n    // shop calc\r\n    $('#shop-calc').on('change', function (){\r\n        var power = parseFloat($(this).attr('data-power')),\r\n            days = parseInt($(this).attr('data-days')),\r\n            electro = parseInt($(this).attr('data-electro')),\r\n            count = parseInt($(this).find('input[name=\"packet\"]:checked').val()),\r\n            dollar = parseInt($(this).attr('data-dollar')),\r\n            btc = btc_range.noUiSlider.get();\r\n        var result = (btc * (count * power )) * dollar * days - (count * electro);\r\n        $(this).find('.result-block').text(parseInt(result).toLocaleString('ru'));\r\n    });\r\n\r\n    /* modals */\r\n    videoModal();\r\n    simpleModal();\r\n})"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}