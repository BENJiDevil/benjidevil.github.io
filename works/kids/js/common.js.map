{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/lazysizes/lazysizes.js","node_modules/lazysizes/plugins/bgset/ls.bgset.js","node_modules/lazysizes/plugins/parent-fit/ls.parent-fit.js","node_modules/ssr-window/ssr-window.esm.js","node_modules/swiper/core/breakpoints/getBreakpoint.js","node_modules/swiper/core/breakpoints/index.js","node_modules/swiper/core/breakpoints/setBreakpoint.js","node_modules/swiper/core/check-overflow/index.js","node_modules/swiper/core/classes/addClasses.js","node_modules/swiper/core/classes/index.js","node_modules/swiper/core/classes/removeClasses.js","node_modules/swiper/core/core.js","node_modules/swiper/core/defaults.js","node_modules/swiper/core/events-emitter.js","node_modules/swiper/core/events/index.js","node_modules/swiper/core/events/onClick.js","node_modules/swiper/core/events/onLoad.js","node_modules/swiper/core/events/onResize.js","node_modules/swiper/core/events/onScroll.js","node_modules/swiper/core/events/onTouchEnd.js","node_modules/swiper/core/events/onTouchMove.js","node_modules/swiper/core/events/onTouchStart.js","node_modules/swiper/core/grab-cursor/index.js","node_modules/swiper/core/grab-cursor/setGrabCursor.js","node_modules/swiper/core/grab-cursor/unsetGrabCursor.js","node_modules/swiper/core/loop/index.js","node_modules/swiper/core/loop/loopCreate.js","node_modules/swiper/core/loop/loopDestroy.js","node_modules/swiper/core/loop/loopFix.js","node_modules/swiper/core/moduleExtendParams.js","node_modules/swiper/core/modules/observer/observer.js","node_modules/swiper/core/modules/resize/resize.js","node_modules/swiper/core/slide/index.js","node_modules/swiper/core/slide/slideNext.js","node_modules/swiper/core/slide/slidePrev.js","node_modules/swiper/core/slide/slideReset.js","node_modules/swiper/core/slide/slideTo.js","node_modules/swiper/core/slide/slideToClickedSlide.js","node_modules/swiper/core/slide/slideToClosest.js","node_modules/swiper/core/slide/slideToLoop.js","node_modules/swiper/core/transition/index.js","node_modules/swiper/core/transition/setTransition.js","node_modules/swiper/core/transition/transitionEmit.js","node_modules/swiper/core/transition/transitionEnd.js","node_modules/swiper/core/transition/transitionStart.js","node_modules/swiper/core/translate/getTranslate.js","node_modules/swiper/core/translate/index.js","node_modules/swiper/core/translate/maxTranslate.js","node_modules/swiper/core/translate/minTranslate.js","node_modules/swiper/core/translate/setTranslate.js","node_modules/swiper/core/translate/translateTo.js","node_modules/swiper/core/update/index.js","node_modules/swiper/core/update/updateActiveIndex.js","node_modules/swiper/core/update/updateAutoHeight.js","node_modules/swiper/core/update/updateClickedSlide.js","node_modules/swiper/core/update/updateProgress.js","node_modules/swiper/core/update/updateSize.js","node_modules/swiper/core/update/updateSlides.js","node_modules/swiper/core/update/updateSlidesClasses.js","node_modules/swiper/core/update/updateSlidesOffset.js","node_modules/swiper/core/update/updateSlidesProgress.js","node_modules/swiper/modules/a11y/a11y.js","node_modules/swiper/modules/autoplay/autoplay.js","node_modules/swiper/modules/controller/controller.js","node_modules/swiper/modules/effect-cards/effect-cards.js","node_modules/swiper/modules/effect-coverflow/effect-coverflow.js","node_modules/swiper/modules/effect-creative/effect-creative.js","node_modules/swiper/modules/effect-cube/effect-cube.js","node_modules/swiper/modules/effect-fade/effect-fade.js","node_modules/swiper/modules/effect-flip/effect-flip.js","node_modules/swiper/modules/free-mode/free-mode.js","node_modules/swiper/modules/grid/grid.js","node_modules/swiper/modules/hash-navigation/hash-navigation.js","node_modules/swiper/modules/history/history.js","node_modules/swiper/modules/keyboard/keyboard.js","node_modules/swiper/modules/manipulation/manipulation.js","node_modules/swiper/modules/manipulation/methods/addSlide.js","node_modules/swiper/modules/manipulation/methods/appendSlide.js","node_modules/swiper/modules/manipulation/methods/prependSlide.js","node_modules/swiper/modules/manipulation/methods/removeAllSlides.js","node_modules/swiper/modules/manipulation/methods/removeSlide.js","node_modules/swiper/modules/mousewheel/mousewheel.js","node_modules/swiper/modules/navigation/navigation.js","node_modules/swiper/modules/pagination/pagination.js","node_modules/swiper/modules/parallax/parallax.js","node_modules/swiper/modules/scrollbar/scrollbar.js","node_modules/swiper/modules/thumbs/thumbs.js","node_modules/swiper/modules/virtual/virtual.js","node_modules/swiper/modules/zoom/zoom.js","node_modules/swiper/shared/classes-to-selector.js","node_modules/swiper/shared/create-element-if-not-defined.js","node_modules/swiper/shared/create-shadow.js","node_modules/swiper/shared/effect-init.js","node_modules/swiper/shared/effect-target.js","node_modules/swiper/shared/effect-virtual-transition-end.js","node_modules/swiper/shared/get-browser.js","node_modules/swiper/shared/get-device.js","node_modules/swiper/shared/get-support.js","node_modules/swiper/shared/process-lazy-preloader.js","node_modules/swiper/shared/utils.js","node_modules/swiper/swiper.esm.js","src/js/_func/_jq/getAppHeight.js","src/js/_func/_jq/modalMagnific.js","src/js/common.js"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","(function(window, factory) {\n\tvar lazySizes = factory(window, window.document, Date);\n\twindow.lazySizes = lazySizes;\n\tif(typeof module == 'object' && module.exports){\n\t\tmodule.exports = lazySizes;\n\t}\n}(typeof window != 'undefined' ?\n      window : {}, \n/**\n * import(\"./types/global\")\n * @typedef { import(\"./types/lazysizes-config\").LazySizesConfigPartial } LazySizesConfigPartial\n */\nfunction l(window, document, Date) { // Pass in the window Date function also for SSR because the Date class can be lost\n\t'use strict';\n\t/*jshint eqnull:true */\n\n\tvar lazysizes,\n\t\t/**\n\t\t * @type { LazySizesConfigPartial }\n\t\t */\n\t\tlazySizesCfg;\n\n\t(function(){\n\t\tvar prop;\n\n\t\tvar lazySizesDefaults = {\n\t\t\tlazyClass: 'lazyload',\n\t\t\tloadedClass: 'lazyloaded',\n\t\t\tloadingClass: 'lazyloading',\n\t\t\tpreloadClass: 'lazypreload',\n\t\t\terrorClass: 'lazyerror',\n\t\t\t//strictClass: 'lazystrict',\n\t\t\tautosizesClass: 'lazyautosizes',\n\t\t\tfastLoadedClass: 'ls-is-cached',\n\t\t\tiframeLoadMode: 0,\n\t\t\tsrcAttr: 'data-src',\n\t\t\tsrcsetAttr: 'data-srcset',\n\t\t\tsizesAttr: 'data-sizes',\n\t\t\t//preloadAfterLoad: false,\n\t\t\tminSize: 40,\n\t\t\tcustomMedia: {},\n\t\t\tinit: true,\n\t\t\texpFactor: 1.5,\n\t\t\thFac: 0.8,\n\t\t\tloadMode: 2,\n\t\t\tloadHidden: true,\n\t\t\tricTimeout: 0,\n\t\t\tthrottleDelay: 125,\n\t\t};\n\n\t\tlazySizesCfg = window.lazySizesConfig || window.lazysizesConfig || {};\n\n\t\tfor(prop in lazySizesDefaults){\n\t\t\tif(!(prop in lazySizesCfg)){\n\t\t\t\tlazySizesCfg[prop] = lazySizesDefaults[prop];\n\t\t\t}\n\t\t}\n\t})();\n\n\tif (!document || !document.getElementsByClassName) {\n\t\treturn {\n\t\t\tinit: function () {},\n\t\t\t/**\n\t\t\t * @type { LazySizesConfigPartial }\n\t\t\t */\n\t\t\tcfg: lazySizesCfg,\n\t\t\t/**\n\t\t\t * @type { true }\n\t\t\t */\n\t\t\tnoSupport: true,\n\t\t};\n\t}\n\n\tvar docElem = document.documentElement;\n\n\tvar supportPicture = window.HTMLPictureElement;\n\n\tvar _addEventListener = 'addEventListener';\n\n\tvar _getAttribute = 'getAttribute';\n\n\t/**\n\t * Update to bind to window because 'this' becomes null during SSR\n\t * builds.\n\t */\n\tvar addEventListener = window[_addEventListener].bind(window);\n\n\tvar setTimeout = window.setTimeout;\n\n\tvar requestAnimationFrame = window.requestAnimationFrame || setTimeout;\n\n\tvar requestIdleCallback = window.requestIdleCallback;\n\n\tvar regPicture = /^picture$/i;\n\n\tvar loadEvents = ['load', 'error', 'lazyincluded', '_lazyloaded'];\n\n\tvar regClassCache = {};\n\n\tvar forEach = Array.prototype.forEach;\n\n\t/**\n\t * @param ele {Element}\n\t * @param cls {string}\n\t */\n\tvar hasClass = function(ele, cls) {\n\t\tif(!regClassCache[cls]){\n\t\t\tregClassCache[cls] = new RegExp('(\\\\s|^)'+cls+'(\\\\s|$)');\n\t\t}\n\t\treturn regClassCache[cls].test(ele[_getAttribute]('class') || '') && regClassCache[cls];\n\t};\n\n\t/**\n\t * @param ele {Element}\n\t * @param cls {string}\n\t */\n\tvar addClass = function(ele, cls) {\n\t\tif (!hasClass(ele, cls)){\n\t\t\tele.setAttribute('class', (ele[_getAttribute]('class') || '').trim() + ' ' + cls);\n\t\t}\n\t};\n\n\t/**\n\t * @param ele {Element}\n\t * @param cls {string}\n\t */\n\tvar removeClass = function(ele, cls) {\n\t\tvar reg;\n\t\tif ((reg = hasClass(ele,cls))) {\n\t\t\tele.setAttribute('class', (ele[_getAttribute]('class') || '').replace(reg, ' '));\n\t\t}\n\t};\n\n\tvar addRemoveLoadEvents = function(dom, fn, add){\n\t\tvar action = add ? _addEventListener : 'removeEventListener';\n\t\tif(add){\n\t\t\taddRemoveLoadEvents(dom, fn);\n\t\t}\n\t\tloadEvents.forEach(function(evt){\n\t\t\tdom[action](evt, fn);\n\t\t});\n\t};\n\n\t/**\n\t * @param elem { Element }\n\t * @param name { string }\n\t * @param detail { any }\n\t * @param noBubbles { boolean }\n\t * @param noCancelable { boolean }\n\t * @returns { CustomEvent }\n\t */\n\tvar triggerEvent = function(elem, name, detail, noBubbles, noCancelable){\n\t\tvar event = document.createEvent('Event');\n\n\t\tif(!detail){\n\t\t\tdetail = {};\n\t\t}\n\n\t\tdetail.instance = lazysizes;\n\n\t\tevent.initEvent(name, !noBubbles, !noCancelable);\n\n\t\tevent.detail = detail;\n\n\t\telem.dispatchEvent(event);\n\t\treturn event;\n\t};\n\n\tvar updatePolyfill = function (el, full){\n\t\tvar polyfill;\n\t\tif( !supportPicture && ( polyfill = (window.picturefill || lazySizesCfg.pf) ) ){\n\t\t\tif(full && full.src && !el[_getAttribute]('srcset')){\n\t\t\t\tel.setAttribute('srcset', full.src);\n\t\t\t}\n\t\t\tpolyfill({reevaluate: true, elements: [el]});\n\t\t} else if(full && full.src){\n\t\t\tel.src = full.src;\n\t\t}\n\t};\n\n\tvar getCSS = function (elem, style){\n\t\treturn (getComputedStyle(elem, null) || {})[style];\n\t};\n\n\t/**\n\t *\n\t * @param elem { Element }\n\t * @param parent { Element }\n\t * @param [width] {number}\n\t * @returns {number}\n\t */\n\tvar getWidth = function(elem, parent, width){\n\t\twidth = width || elem.offsetWidth;\n\n\t\twhile(width < lazySizesCfg.minSize && parent && !elem._lazysizesWidth){\n\t\t\twidth =  parent.offsetWidth;\n\t\t\tparent = parent.parentNode;\n\t\t}\n\n\t\treturn width;\n\t};\n\n\tvar rAF = (function(){\n\t\tvar running, waiting;\n\t\tvar firstFns = [];\n\t\tvar secondFns = [];\n\t\tvar fns = firstFns;\n\n\t\tvar run = function(){\n\t\t\tvar runFns = fns;\n\n\t\t\tfns = firstFns.length ? secondFns : firstFns;\n\n\t\t\trunning = true;\n\t\t\twaiting = false;\n\n\t\t\twhile(runFns.length){\n\t\t\t\trunFns.shift()();\n\t\t\t}\n\n\t\t\trunning = false;\n\t\t};\n\n\t\tvar rafBatch = function(fn, queue){\n\t\t\tif(running && !queue){\n\t\t\t\tfn.apply(this, arguments);\n\t\t\t} else {\n\t\t\t\tfns.push(fn);\n\n\t\t\t\tif(!waiting){\n\t\t\t\t\twaiting = true;\n\t\t\t\t\t(document.hidden ? setTimeout : requestAnimationFrame)(run);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\trafBatch._lsFlush = run;\n\n\t\treturn rafBatch;\n\t})();\n\n\tvar rAFIt = function(fn, simple){\n\t\treturn simple ?\n\t\t\tfunction() {\n\t\t\t\trAF(fn);\n\t\t\t} :\n\t\t\tfunction(){\n\t\t\t\tvar that = this;\n\t\t\t\tvar args = arguments;\n\t\t\t\trAF(function(){\n\t\t\t\t\tfn.apply(that, args);\n\t\t\t\t});\n\t\t\t}\n\t\t;\n\t};\n\n\tvar throttle = function(fn){\n\t\tvar running;\n\t\tvar lastTime = 0;\n\t\tvar gDelay = lazySizesCfg.throttleDelay;\n\t\tvar rICTimeout = lazySizesCfg.ricTimeout;\n\t\tvar run = function(){\n\t\t\trunning = false;\n\t\t\tlastTime = Date.now();\n\t\t\tfn();\n\t\t};\n\t\tvar idleCallback = requestIdleCallback && rICTimeout > 49 ?\n\t\t\tfunction(){\n\t\t\t\trequestIdleCallback(run, {timeout: rICTimeout});\n\n\t\t\t\tif(rICTimeout !== lazySizesCfg.ricTimeout){\n\t\t\t\t\trICTimeout = lazySizesCfg.ricTimeout;\n\t\t\t\t}\n\t\t\t} :\n\t\t\trAFIt(function(){\n\t\t\t\tsetTimeout(run);\n\t\t\t}, true)\n\t\t;\n\n\t\treturn function(isPriority){\n\t\t\tvar delay;\n\n\t\t\tif((isPriority = isPriority === true)){\n\t\t\t\trICTimeout = 33;\n\t\t\t}\n\n\t\t\tif(running){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\trunning =  true;\n\n\t\t\tdelay = gDelay - (Date.now() - lastTime);\n\n\t\t\tif(delay < 0){\n\t\t\t\tdelay = 0;\n\t\t\t}\n\n\t\t\tif(isPriority || delay < 9){\n\t\t\t\tidleCallback();\n\t\t\t} else {\n\t\t\t\tsetTimeout(idleCallback, delay);\n\t\t\t}\n\t\t};\n\t};\n\n\t//based on http://modernjavascript.blogspot.de/2013/08/building-better-debounce.html\n\tvar debounce = function(func) {\n\t\tvar timeout, timestamp;\n\t\tvar wait = 99;\n\t\tvar run = function(){\n\t\t\ttimeout = null;\n\t\t\tfunc();\n\t\t};\n\t\tvar later = function() {\n\t\t\tvar last = Date.now() - timestamp;\n\n\t\t\tif (last < wait) {\n\t\t\t\tsetTimeout(later, wait - last);\n\t\t\t} else {\n\t\t\t\t(requestIdleCallback || run)(run);\n\t\t\t}\n\t\t};\n\n\t\treturn function() {\n\t\t\ttimestamp = Date.now();\n\n\t\t\tif (!timeout) {\n\t\t\t\ttimeout = setTimeout(later, wait);\n\t\t\t}\n\t\t};\n\t};\n\n\tvar loader = (function(){\n\t\tvar preloadElems, isCompleted, resetPreloadingTimer, loadMode, started;\n\n\t\tvar eLvW, elvH, eLtop, eLleft, eLright, eLbottom, isBodyHidden;\n\n\t\tvar regImg = /^img$/i;\n\t\tvar regIframe = /^iframe$/i;\n\n\t\tvar supportScroll = ('onscroll' in window) && !(/(gle|ing)bot/.test(navigator.userAgent));\n\n\t\tvar shrinkExpand = 0;\n\t\tvar currentExpand = 0;\n\n\t\tvar isLoading = 0;\n\t\tvar lowRuns = -1;\n\n\t\tvar resetPreloading = function(e){\n\t\t\tisLoading--;\n\t\t\tif(!e || isLoading < 0 || !e.target){\n\t\t\t\tisLoading = 0;\n\t\t\t}\n\t\t};\n\n\t\tvar isVisible = function (elem) {\n\t\t\tif (isBodyHidden == null) {\n\t\t\t\tisBodyHidden = getCSS(document.body, 'visibility') == 'hidden';\n\t\t\t}\n\n\t\t\treturn isBodyHidden || !(getCSS(elem.parentNode, 'visibility') == 'hidden' && getCSS(elem, 'visibility') == 'hidden');\n\t\t};\n\n\t\tvar isNestedVisible = function(elem, elemExpand){\n\t\t\tvar outerRect;\n\t\t\tvar parent = elem;\n\t\t\tvar visible = isVisible(elem);\n\n\t\t\teLtop -= elemExpand;\n\t\t\teLbottom += elemExpand;\n\t\t\teLleft -= elemExpand;\n\t\t\teLright += elemExpand;\n\n\t\t\twhile(visible && (parent = parent.offsetParent) && parent != document.body && parent != docElem){\n\t\t\t\tvisible = ((getCSS(parent, 'opacity') || 1) > 0);\n\n\t\t\t\tif(visible && getCSS(parent, 'overflow') != 'visible'){\n\t\t\t\t\touterRect = parent.getBoundingClientRect();\n\t\t\t\t\tvisible = eLright > outerRect.left &&\n\t\t\t\t\t\teLleft < outerRect.right &&\n\t\t\t\t\t\teLbottom > outerRect.top - 1 &&\n\t\t\t\t\t\teLtop < outerRect.bottom + 1\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn visible;\n\t\t};\n\n\t\tvar checkElements = function() {\n\t\t\tvar eLlen, i, rect, autoLoadElem, loadedSomething, elemExpand, elemNegativeExpand, elemExpandVal,\n\t\t\t\tbeforeExpandVal, defaultExpand, preloadExpand, hFac;\n\t\t\tvar lazyloadElems = lazysizes.elements;\n\n\t\t\tif((loadMode = lazySizesCfg.loadMode) && isLoading < 8 && (eLlen = lazyloadElems.length)){\n\n\t\t\t\ti = 0;\n\n\t\t\t\tlowRuns++;\n\n\t\t\t\tfor(; i < eLlen; i++){\n\n\t\t\t\t\tif(!lazyloadElems[i] || lazyloadElems[i]._lazyRace){continue;}\n\n\t\t\t\t\tif(!supportScroll || (lazysizes.prematureUnveil && lazysizes.prematureUnveil(lazyloadElems[i]))){unveilElement(lazyloadElems[i]);continue;}\n\n\t\t\t\t\tif(!(elemExpandVal = lazyloadElems[i][_getAttribute]('data-expand')) || !(elemExpand = elemExpandVal * 1)){\n\t\t\t\t\t\telemExpand = currentExpand;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!defaultExpand) {\n\t\t\t\t\t\tdefaultExpand = (!lazySizesCfg.expand || lazySizesCfg.expand < 1) ?\n\t\t\t\t\t\t\tdocElem.clientHeight > 500 && docElem.clientWidth > 500 ? 500 : 370 :\n\t\t\t\t\t\t\tlazySizesCfg.expand;\n\n\t\t\t\t\t\tlazysizes._defEx = defaultExpand;\n\n\t\t\t\t\t\tpreloadExpand = defaultExpand * lazySizesCfg.expFactor;\n\t\t\t\t\t\thFac = lazySizesCfg.hFac;\n\t\t\t\t\t\tisBodyHidden = null;\n\n\t\t\t\t\t\tif(currentExpand < preloadExpand && isLoading < 1 && lowRuns > 2 && loadMode > 2 && !document.hidden){\n\t\t\t\t\t\t\tcurrentExpand = preloadExpand;\n\t\t\t\t\t\t\tlowRuns = 0;\n\t\t\t\t\t\t} else if(loadMode > 1 && lowRuns > 1 && isLoading < 6){\n\t\t\t\t\t\t\tcurrentExpand = defaultExpand;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcurrentExpand = shrinkExpand;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(beforeExpandVal !== elemExpand){\n\t\t\t\t\t\teLvW = innerWidth + (elemExpand * hFac);\n\t\t\t\t\t\telvH = innerHeight + elemExpand;\n\t\t\t\t\t\telemNegativeExpand = elemExpand * -1;\n\t\t\t\t\t\tbeforeExpandVal = elemExpand;\n\t\t\t\t\t}\n\n\t\t\t\t\trect = lazyloadElems[i].getBoundingClientRect();\n\n\t\t\t\t\tif ((eLbottom = rect.bottom) >= elemNegativeExpand &&\n\t\t\t\t\t\t(eLtop = rect.top) <= elvH &&\n\t\t\t\t\t\t(eLright = rect.right) >= elemNegativeExpand * hFac &&\n\t\t\t\t\t\t(eLleft = rect.left) <= eLvW &&\n\t\t\t\t\t\t(eLbottom || eLright || eLleft || eLtop) &&\n\t\t\t\t\t\t(lazySizesCfg.loadHidden || isVisible(lazyloadElems[i])) &&\n\t\t\t\t\t\t((isCompleted && isLoading < 3 && !elemExpandVal && (loadMode < 3 || lowRuns < 4)) || isNestedVisible(lazyloadElems[i], elemExpand))){\n\t\t\t\t\t\tunveilElement(lazyloadElems[i]);\n\t\t\t\t\t\tloadedSomething = true;\n\t\t\t\t\t\tif(isLoading > 9){break;}\n\t\t\t\t\t} else if(!loadedSomething && isCompleted && !autoLoadElem &&\n\t\t\t\t\t\tisLoading < 4 && lowRuns < 4 && loadMode > 2 &&\n\t\t\t\t\t\t(preloadElems[0] || lazySizesCfg.preloadAfterLoad) &&\n\t\t\t\t\t\t(preloadElems[0] || (!elemExpandVal && ((eLbottom || eLright || eLleft || eLtop) || lazyloadElems[i][_getAttribute](lazySizesCfg.sizesAttr) != 'auto')))){\n\t\t\t\t\t\tautoLoadElem = preloadElems[0] || lazyloadElems[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(autoLoadElem && !loadedSomething){\n\t\t\t\t\tunveilElement(autoLoadElem);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tvar throttledCheckElements = throttle(checkElements);\n\n\t\tvar switchLoadingClass = function(e){\n\t\t\tvar elem = e.target;\n\n\t\t\tif (elem._lazyCache) {\n\t\t\t\tdelete elem._lazyCache;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresetPreloading(e);\n\t\t\taddClass(elem, lazySizesCfg.loadedClass);\n\t\t\tremoveClass(elem, lazySizesCfg.loadingClass);\n\t\t\taddRemoveLoadEvents(elem, rafSwitchLoadingClass);\n\t\t\ttriggerEvent(elem, 'lazyloaded');\n\t\t};\n\t\tvar rafedSwitchLoadingClass = rAFIt(switchLoadingClass);\n\t\tvar rafSwitchLoadingClass = function(e){\n\t\t\trafedSwitchLoadingClass({target: e.target});\n\t\t};\n\n\t\tvar changeIframeSrc = function(elem, src){\n\t\t\tvar loadMode = elem.getAttribute('data-load-mode') || lazySizesCfg.iframeLoadMode;\n\n\t\t\t// loadMode can be also a string!\n\t\t\tif (loadMode == 0) {\n\t\t\t\telem.contentWindow.location.replace(src);\n\t\t\t} else if (loadMode == 1) {\n\t\t\t\telem.src = src;\n\t\t\t}\n\t\t};\n\n\t\tvar handleSources = function(source){\n\t\t\tvar customMedia;\n\n\t\t\tvar sourceSrcset = source[_getAttribute](lazySizesCfg.srcsetAttr);\n\n\t\t\tif( (customMedia = lazySizesCfg.customMedia[source[_getAttribute]('data-media') || source[_getAttribute]('media')]) ){\n\t\t\t\tsource.setAttribute('media', customMedia);\n\t\t\t}\n\n\t\t\tif(sourceSrcset){\n\t\t\t\tsource.setAttribute('srcset', sourceSrcset);\n\t\t\t}\n\t\t};\n\n\t\tvar lazyUnveil = rAFIt(function (elem, detail, isAuto, sizes, isImg){\n\t\t\tvar src, srcset, parent, isPicture, event, firesLoad;\n\n\t\t\tif(!(event = triggerEvent(elem, 'lazybeforeunveil', detail)).defaultPrevented){\n\n\t\t\t\tif(sizes){\n\t\t\t\t\tif(isAuto){\n\t\t\t\t\t\taddClass(elem, lazySizesCfg.autosizesClass);\n\t\t\t\t\t} else {\n\t\t\t\t\t\telem.setAttribute('sizes', sizes);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsrcset = elem[_getAttribute](lazySizesCfg.srcsetAttr);\n\t\t\t\tsrc = elem[_getAttribute](lazySizesCfg.srcAttr);\n\n\t\t\t\tif(isImg) {\n\t\t\t\t\tparent = elem.parentNode;\n\t\t\t\t\tisPicture = parent && regPicture.test(parent.nodeName || '');\n\t\t\t\t}\n\n\t\t\t\tfiresLoad = detail.firesLoad || (('src' in elem) && (srcset || src || isPicture));\n\n\t\t\t\tevent = {target: elem};\n\n\t\t\t\taddClass(elem, lazySizesCfg.loadingClass);\n\n\t\t\t\tif(firesLoad){\n\t\t\t\t\tclearTimeout(resetPreloadingTimer);\n\t\t\t\t\tresetPreloadingTimer = setTimeout(resetPreloading, 2500);\n\t\t\t\t\taddRemoveLoadEvents(elem, rafSwitchLoadingClass, true);\n\t\t\t\t}\n\n\t\t\t\tif(isPicture){\n\t\t\t\t\tforEach.call(parent.getElementsByTagName('source'), handleSources);\n\t\t\t\t}\n\n\t\t\t\tif(srcset){\n\t\t\t\t\telem.setAttribute('srcset', srcset);\n\t\t\t\t} else if(src && !isPicture){\n\t\t\t\t\tif(regIframe.test(elem.nodeName)){\n\t\t\t\t\t\tchangeIframeSrc(elem, src);\n\t\t\t\t\t} else {\n\t\t\t\t\t\telem.src = src;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(isImg && (srcset || isPicture)){\n\t\t\t\t\tupdatePolyfill(elem, {src: src});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(elem._lazyRace){\n\t\t\t\tdelete elem._lazyRace;\n\t\t\t}\n\t\t\tremoveClass(elem, lazySizesCfg.lazyClass);\n\n\t\t\trAF(function(){\n\t\t\t\t// Part of this can be removed as soon as this fix is older: https://bugs.chromium.org/p/chromium/issues/detail?id=7731 (2015)\n\t\t\t\tvar isLoaded = elem.complete && elem.naturalWidth > 1;\n\n\t\t\t\tif( !firesLoad || isLoaded){\n\t\t\t\t\tif (isLoaded) {\n\t\t\t\t\t\taddClass(elem, lazySizesCfg.fastLoadedClass);\n\t\t\t\t\t}\n\t\t\t\t\tswitchLoadingClass(event);\n\t\t\t\t\telem._lazyCache = true;\n\t\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t\tif ('_lazyCache' in elem) {\n\t\t\t\t\t\t\tdelete elem._lazyCache;\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 9);\n\t\t\t\t}\n\t\t\t\tif (elem.loading == 'lazy') {\n\t\t\t\t\tisLoading--;\n\t\t\t\t}\n\t\t\t}, true);\n\t\t});\n\n\t\t/**\n\t\t *\n\t\t * @param elem { Element }\n\t\t */\n\t\tvar unveilElement = function (elem){\n\t\t\tif (elem._lazyRace) {return;}\n\t\t\tvar detail;\n\n\t\t\tvar isImg = regImg.test(elem.nodeName);\n\n\t\t\t//allow using sizes=\"auto\", but don't use. it's invalid. Use data-sizes=\"auto\" or a valid value for sizes instead (i.e.: sizes=\"80vw\")\n\t\t\tvar sizes = isImg && (elem[_getAttribute](lazySizesCfg.sizesAttr) || elem[_getAttribute]('sizes'));\n\t\t\tvar isAuto = sizes == 'auto';\n\n\t\t\tif( (isAuto || !isCompleted) && isImg && (elem[_getAttribute]('src') || elem.srcset) && !elem.complete && !hasClass(elem, lazySizesCfg.errorClass) && hasClass(elem, lazySizesCfg.lazyClass)){return;}\n\n\t\t\tdetail = triggerEvent(elem, 'lazyunveilread').detail;\n\n\t\t\tif(isAuto){\n\t\t\t\t autoSizer.updateElem(elem, true, elem.offsetWidth);\n\t\t\t}\n\n\t\t\telem._lazyRace = true;\n\t\t\tisLoading++;\n\n\t\t\tlazyUnveil(elem, detail, isAuto, sizes, isImg);\n\t\t};\n\n\t\tvar afterScroll = debounce(function(){\n\t\t\tlazySizesCfg.loadMode = 3;\n\t\t\tthrottledCheckElements();\n\t\t});\n\n\t\tvar altLoadmodeScrollListner = function(){\n\t\t\tif(lazySizesCfg.loadMode == 3){\n\t\t\t\tlazySizesCfg.loadMode = 2;\n\t\t\t}\n\t\t\tafterScroll();\n\t\t};\n\n\t\tvar onload = function(){\n\t\t\tif(isCompleted){return;}\n\t\t\tif(Date.now() - started < 999){\n\t\t\t\tsetTimeout(onload, 999);\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\tisCompleted = true;\n\n\t\t\tlazySizesCfg.loadMode = 3;\n\n\t\t\tthrottledCheckElements();\n\n\t\t\taddEventListener('scroll', altLoadmodeScrollListner, true);\n\t\t};\n\n\t\treturn {\n\t\t\t_: function(){\n\t\t\t\tstarted = Date.now();\n\n\t\t\t\tlazysizes.elements = document.getElementsByClassName(lazySizesCfg.lazyClass);\n\t\t\t\tpreloadElems = document.getElementsByClassName(lazySizesCfg.lazyClass + ' ' + lazySizesCfg.preloadClass);\n\n\t\t\t\taddEventListener('scroll', throttledCheckElements, true);\n\n\t\t\t\taddEventListener('resize', throttledCheckElements, true);\n\n\t\t\t\taddEventListener('pageshow', function (e) {\n\t\t\t\t\tif (e.persisted) {\n\t\t\t\t\t\tvar loadingElements = document.querySelectorAll('.' + lazySizesCfg.loadingClass);\n\n\t\t\t\t\t\tif (loadingElements.length && loadingElements.forEach) {\n\t\t\t\t\t\t\trequestAnimationFrame(function () {\n\t\t\t\t\t\t\t\tloadingElements.forEach( function (img) {\n\t\t\t\t\t\t\t\t\tif (img.complete) {\n\t\t\t\t\t\t\t\t\t\tunveilElement(img);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif(window.MutationObserver){\n\t\t\t\t\tnew MutationObserver( throttledCheckElements ).observe( docElem, {childList: true, subtree: true, attributes: true} );\n\t\t\t\t} else {\n\t\t\t\t\tdocElem[_addEventListener]('DOMNodeInserted', throttledCheckElements, true);\n\t\t\t\t\tdocElem[_addEventListener]('DOMAttrModified', throttledCheckElements, true);\n\t\t\t\t\tsetInterval(throttledCheckElements, 999);\n\t\t\t\t}\n\n\t\t\t\taddEventListener('hashchange', throttledCheckElements, true);\n\n\t\t\t\t//, 'fullscreenchange'\n\t\t\t\t['focus', 'mouseover', 'click', 'load', 'transitionend', 'animationend'].forEach(function(name){\n\t\t\t\t\tdocument[_addEventListener](name, throttledCheckElements, true);\n\t\t\t\t});\n\n\t\t\t\tif((/d$|^c/.test(document.readyState))){\n\t\t\t\t\tonload();\n\t\t\t\t} else {\n\t\t\t\t\taddEventListener('load', onload);\n\t\t\t\t\tdocument[_addEventListener]('DOMContentLoaded', throttledCheckElements);\n\t\t\t\t\tsetTimeout(onload, 20000);\n\t\t\t\t}\n\n\t\t\t\tif(lazysizes.elements.length){\n\t\t\t\t\tcheckElements();\n\t\t\t\t\trAF._lsFlush();\n\t\t\t\t} else {\n\t\t\t\t\tthrottledCheckElements();\n\t\t\t\t}\n\t\t\t},\n\t\t\tcheckElems: throttledCheckElements,\n\t\t\tunveil: unveilElement,\n\t\t\t_aLSL: altLoadmodeScrollListner,\n\t\t};\n\t})();\n\n\n\tvar autoSizer = (function(){\n\t\tvar autosizesElems;\n\n\t\tvar sizeElement = rAFIt(function(elem, parent, event, width){\n\t\t\tvar sources, i, len;\n\t\t\telem._lazysizesWidth = width;\n\t\t\twidth += 'px';\n\n\t\t\telem.setAttribute('sizes', width);\n\n\t\t\tif(regPicture.test(parent.nodeName || '')){\n\t\t\t\tsources = parent.getElementsByTagName('source');\n\t\t\t\tfor(i = 0, len = sources.length; i < len; i++){\n\t\t\t\t\tsources[i].setAttribute('sizes', width);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(!event.detail.dataAttr){\n\t\t\t\tupdatePolyfill(elem, event.detail);\n\t\t\t}\n\t\t});\n\t\t/**\n\t\t *\n\t\t * @param elem {Element}\n\t\t * @param dataAttr\n\t\t * @param [width] { number }\n\t\t */\n\t\tvar getSizeElement = function (elem, dataAttr, width){\n\t\t\tvar event;\n\t\t\tvar parent = elem.parentNode;\n\n\t\t\tif(parent){\n\t\t\t\twidth = getWidth(elem, parent, width);\n\t\t\t\tevent = triggerEvent(elem, 'lazybeforesizes', {width: width, dataAttr: !!dataAttr});\n\n\t\t\t\tif(!event.defaultPrevented){\n\t\t\t\t\twidth = event.detail.width;\n\n\t\t\t\t\tif(width && width !== elem._lazysizesWidth){\n\t\t\t\t\t\tsizeElement(elem, parent, event, width);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tvar updateElementsSizes = function(){\n\t\t\tvar i;\n\t\t\tvar len = autosizesElems.length;\n\t\t\tif(len){\n\t\t\t\ti = 0;\n\n\t\t\t\tfor(; i < len; i++){\n\t\t\t\t\tgetSizeElement(autosizesElems[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tvar debouncedUpdateElementsSizes = debounce(updateElementsSizes);\n\n\t\treturn {\n\t\t\t_: function(){\n\t\t\t\tautosizesElems = document.getElementsByClassName(lazySizesCfg.autosizesClass);\n\t\t\t\taddEventListener('resize', debouncedUpdateElementsSizes);\n\t\t\t},\n\t\t\tcheckElems: debouncedUpdateElementsSizes,\n\t\t\tupdateElem: getSizeElement\n\t\t};\n\t})();\n\n\tvar init = function(){\n\t\tif(!init.i && document.getElementsByClassName){\n\t\t\tinit.i = true;\n\t\t\tautoSizer._();\n\t\t\tloader._();\n\t\t}\n\t};\n\n\tsetTimeout(function(){\n\t\tif(lazySizesCfg.init){\n\t\t\tinit();\n\t\t}\n\t});\n\n\tlazysizes = {\n\t\t/**\n\t\t * @type { LazySizesConfigPartial }\n\t\t */\n\t\tcfg: lazySizesCfg,\n\t\tautoSizer: autoSizer,\n\t\tloader: loader,\n\t\tinit: init,\n\t\tuP: updatePolyfill,\n\t\taC: addClass,\n\t\trC: removeClass,\n\t\thC: hasClass,\n\t\tfire: triggerEvent,\n\t\tgW: getWidth,\n\t\trAF: rAF,\n\t};\n\n\treturn lazysizes;\n}\n));\n","(function(window, factory) {\n\tvar globalInstall = function(){\n\t\tfactory(window.lazySizes);\n\t\twindow.removeEventListener('lazyunveilread', globalInstall, true);\n\t};\n\n\tfactory = factory.bind(null, window, window.document);\n\n\tif(typeof module == 'object' && module.exports){\n\t\tfactory(require('lazysizes'));\n\t} else if (typeof define == 'function' && define.amd) {\n\t\tdefine(['lazysizes'], factory);\n\t} else if(window.lazySizes) {\n\t\tglobalInstall();\n\t} else {\n\t\twindow.addEventListener('lazyunveilread', globalInstall, true);\n\t}\n}(window, function(window, document, lazySizes) {\n\t'use strict';\n\tif(!window.addEventListener){return;}\n\n\tvar lazySizesCfg = lazySizes.cfg;\n\tvar regWhite = /\\s+/g;\n\tvar regSplitSet = /\\s*\\|\\s+|\\s+\\|\\s*/g;\n\tvar regSource = /^(.+?)(?:\\s+\\[\\s*(.+?)\\s*\\])(?:\\s+\\[\\s*(.+?)\\s*\\])?$/;\n\tvar regType = /^\\s*\\(*\\s*type\\s*:\\s*(.+?)\\s*\\)*\\s*$/;\n\tvar regBgUrlEscape = /\\(|\\)|'/;\n\tvar allowedBackgroundSize = {contain: 1, cover: 1};\n\tvar proxyWidth = function(elem){\n\t\tvar width = lazySizes.gW(elem, elem.parentNode);\n\n\t\tif(!elem._lazysizesWidth || width > elem._lazysizesWidth){\n\t\t\telem._lazysizesWidth = width;\n\t\t}\n\t\treturn elem._lazysizesWidth;\n\t};\n\tvar getBgSize = function(elem){\n\t\tvar bgSize;\n\n\t\tbgSize = (getComputedStyle(elem) || {getPropertyValue: function(){}}).getPropertyValue('background-size');\n\n\t\tif(!allowedBackgroundSize[bgSize] && allowedBackgroundSize[elem.style.backgroundSize]){\n\t\t\tbgSize = elem.style.backgroundSize;\n\t\t}\n\n\t\treturn bgSize;\n\t};\n\tvar setTypeOrMedia = function(source, match){\n\t\tif(match){\n\t\t\tvar typeMatch = match.match(regType);\n\t\t\tif(typeMatch && typeMatch[1]){\n\t\t\t\tsource.setAttribute('type', typeMatch[1]);\n\t\t\t} else {\n\t\t\t\tsource.setAttribute('media', lazySizesCfg.customMedia[match] || match);\n\t\t\t}\n\t\t}\n\t};\n\tvar createPicture = function(sets, elem, img){\n\t\tvar picture = document.createElement('picture');\n\t\tvar sizes = elem.getAttribute(lazySizesCfg.sizesAttr);\n\t\tvar ratio = elem.getAttribute('data-ratio');\n\t\tvar optimumx = elem.getAttribute('data-optimumx');\n\n\t\tif(elem._lazybgset && elem._lazybgset.parentNode == elem){\n\t\t\telem.removeChild(elem._lazybgset);\n\t\t}\n\n\t\tObject.defineProperty(img, '_lazybgset', {\n\t\t\tvalue: elem,\n\t\t\twritable: true\n\t\t});\n\t\tObject.defineProperty(elem, '_lazybgset', {\n\t\t\tvalue: picture,\n\t\t\twritable: true\n\t\t});\n\n\t\tsets = sets.replace(regWhite, ' ').split(regSplitSet);\n\n\t\tpicture.style.display = 'none';\n\t\timg.className = lazySizesCfg.lazyClass;\n\n\t\tif(sets.length == 1 && !sizes){\n\t\t\tsizes = 'auto';\n\t\t}\n\n\t\tsets.forEach(function(set){\n\t\t\tvar match;\n\t\t\tvar source = document.createElement('source');\n\n\t\t\tif(sizes && sizes != 'auto'){\n\t\t\t\tsource.setAttribute('sizes', sizes);\n\t\t\t}\n\n\t\t\tif((match = set.match(regSource))){\n\t\t\t\tsource.setAttribute(lazySizesCfg.srcsetAttr, match[1]);\n\n\t\t\t\tsetTypeOrMedia(source, match[2]);\n\t\t\t\tsetTypeOrMedia(source, match[3]);\n\t\t\t} else {\n\t\t\t\tsource.setAttribute(lazySizesCfg.srcsetAttr, set);\n\t\t\t}\n\n\t\t\tpicture.appendChild(source);\n\t\t});\n\n\t\tif(sizes){\n\t\t\timg.setAttribute(lazySizesCfg.sizesAttr, sizes);\n\t\t\telem.removeAttribute(lazySizesCfg.sizesAttr);\n\t\t\telem.removeAttribute('sizes');\n\t\t}\n\t\tif(optimumx){\n\t\t\timg.setAttribute('data-optimumx', optimumx);\n\t\t}\n\t\tif(ratio) {\n\t\t\timg.setAttribute('data-ratio', ratio);\n\t\t}\n\n\t\tpicture.appendChild(img);\n\n\t\telem.appendChild(picture);\n\t};\n\n\tvar proxyLoad = function(e){\n\t\tif(!e.target._lazybgset){return;}\n\n\t\tvar image = e.target;\n\t\tvar elem = image._lazybgset;\n\t\tvar bg = image.currentSrc || image.src;\n\n\n\t\tif(bg){\n\t\t\tvar useSrc = regBgUrlEscape.test(bg) ? JSON.stringify(bg) : bg;\n\t\t\tvar event = lazySizes.fire(elem, 'bgsetproxy', {\n\t\t\t\tsrc: bg,\n\t\t\t\tuseSrc: useSrc,\n\t\t\t\tfullSrc: null,\n\t\t\t});\n\n\t\t\tif(!event.defaultPrevented){\n\t\t\t\telem.style.backgroundImage = event.detail.fullSrc || 'url(' + event.detail.useSrc + ')';\n\t\t\t}\n\t\t}\n\n\t\tif(image._lazybgsetLoading){\n\t\t\tlazySizes.fire(elem, '_lazyloaded', {}, false, true);\n\t\t\tdelete image._lazybgsetLoading;\n\t\t}\n\t};\n\n\taddEventListener('lazybeforeunveil', function(e){\n\t\tvar set, image, elem;\n\n\t\tif(e.defaultPrevented || !(set = e.target.getAttribute('data-bgset'))){return;}\n\n\t\telem = e.target;\n\t\timage = document.createElement('img');\n\n\t\timage.alt = '';\n\n\t\timage._lazybgsetLoading = true;\n\t\te.detail.firesLoad = true;\n\n\t\tcreatePicture(set, elem, image);\n\n\t\tsetTimeout(function(){\n\t\t\tlazySizes.loader.unveil(image);\n\n\t\t\tlazySizes.rAF(function(){\n\t\t\t\tlazySizes.fire(image, '_lazyloaded', {}, true, true);\n\t\t\t\tif(image.complete) {\n\t\t\t\t\tproxyLoad({target: image});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t});\n\n\tdocument.addEventListener('load', proxyLoad, true);\n\n\twindow.addEventListener('lazybeforesizes', function(e){\n\t\tif(e.detail.instance != lazySizes){return;}\n\t\tif(e.target._lazybgset && e.detail.dataAttr){\n\t\t\tvar elem = e.target._lazybgset;\n\t\t\tvar bgSize = getBgSize(elem);\n\n\t\t\tif(allowedBackgroundSize[bgSize]){\n\t\t\t\te.target._lazysizesParentFit = bgSize;\n\n\t\t\t\tlazySizes.rAF(function(){\n\t\t\t\t\te.target.setAttribute('data-parent-fit', bgSize);\n\t\t\t\t\tif(e.target._lazysizesParentFit){\n\t\t\t\t\t\tdelete e.target._lazysizesParentFit;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, true);\n\n\tdocument.documentElement.addEventListener('lazybeforesizes', function(e){\n\t\tif(e.defaultPrevented || !e.target._lazybgset || e.detail.instance != lazySizes){return;}\n\t\te.detail.width = proxyWidth(e.target._lazybgset);\n\t});\n}));\n","(function(window, factory) {\n\tif(!window) {return;}\n\tvar globalInstall = function(){\n\t\tfactory(window.lazySizes);\n\t\twindow.removeEventListener('lazyunveilread', globalInstall, true);\n\t};\n\n\tfactory = factory.bind(null, window, window.document);\n\n\tif(typeof module == 'object' && module.exports){\n\t\tfactory(require('lazysizes'));\n\t} else if (typeof define == 'function' && define.amd) {\n\t\tdefine(['lazysizes'], factory);\n\t} else if(window.lazySizes) {\n\t\tglobalInstall();\n\t} else {\n\t\twindow.addEventListener('lazyunveilread', globalInstall, true);\n\t}\n}(typeof window != 'undefined' ?\n\twindow : 0, function(window, document, lazySizes) {\n\t'use strict';\n\n\tif(!window.addEventListener){return;}\n\n\tvar regDescriptors = /\\s+(\\d+)(w|h)\\s+(\\d+)(w|h)/;\n\tvar regCssFit = /parent-fit[\"']*\\s*:\\s*[\"']*(contain|cover|width)/;\n\tvar regCssObject = /parent-container[\"']*\\s*:\\s*[\"']*(.+?)(?=(\\s|$|,|'|\"|;))/;\n\tvar regPicture = /^picture$/i;\n\tvar cfg = lazySizes.cfg;\n\n\tvar getCSS = function (elem){\n\t\treturn (getComputedStyle(elem, null) || {});\n\t};\n\n\tvar parentFit = {\n\n\t\tgetParent: function(element, parentSel){\n\t\t\tvar parent = element;\n\t\t\tvar parentNode = element.parentNode;\n\n\t\t\tif((!parentSel || parentSel == 'prev') && parentNode && regPicture.test(parentNode.nodeName || '')){\n\t\t\t\tparentNode = parentNode.parentNode;\n\t\t\t}\n\n\t\t\tif(parentSel != 'self'){\n\t\t\t\tif(parentSel == 'prev'){\n\t\t\t\t\tparent = element.previousElementSibling;\n\t\t\t\t} else if(parentSel && (parentNode.closest || window.jQuery)){\n\t\t\t\t\tparent = (parentNode.closest ?\n\t\t\t\t\t\t\tparentNode.closest(parentSel) :\n\t\t\t\t\t\t\tjQuery(parentNode).closest(parentSel)[0]) ||\n\t\t\t\t\t\tparentNode\n\t\t\t\t\t;\n\t\t\t\t} else {\n\t\t\t\t\tparent = parentNode;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn parent;\n\t\t},\n\n\t\tgetFit: function(element){\n\t\t\tvar tmpMatch, parentObj;\n\t\t\tvar css = getCSS(element);\n\t\t\tvar content = css.content || css.fontFamily;\n\t\t\tvar obj = {\n\t\t\t\tfit: element._lazysizesParentFit || element.getAttribute('data-parent-fit')\n\t\t\t};\n\n\t\t\tif(!obj.fit && content && (tmpMatch = content.match(regCssFit))){\n\t\t\t\tobj.fit = tmpMatch[1];\n\t\t\t}\n\n\t\t\tif(obj.fit){\n\t\t\t\tparentObj = element._lazysizesParentContainer || element.getAttribute('data-parent-container');\n\n\t\t\t\tif(!parentObj && content && (tmpMatch = content.match(regCssObject))){\n\t\t\t\t\tparentObj = tmpMatch[1];\n\t\t\t\t}\n\n\t\t\t\tobj.parent = parentFit.getParent(element, parentObj);\n\n\n\t\t\t} else {\n\t\t\t\tobj.fit = css.objectFit;\n\t\t\t}\n\n\t\t\treturn obj;\n\t\t},\n\n\t\tgetImageRatio: function(element){\n\t\t\tvar i, srcset, media, ratio, match, width, height;\n\t\t\tvar parent = element.parentNode;\n\t\t\tvar elements = parent && regPicture.test(parent.nodeName || '') ?\n\t\t\t\t\tparent.querySelectorAll('source, img') :\n\t\t\t\t\t[element]\n\t\t\t\t;\n\n\t\t\tfor(i = 0; i < elements.length; i++){\n\t\t\t\telement = elements[i];\n\t\t\t\tsrcset = element.getAttribute(cfg.srcsetAttr) || element.getAttribute('srcset') || element.getAttribute('data-pfsrcset') || element.getAttribute('data-risrcset') || '';\n\t\t\t\tmedia = element._lsMedia || element.getAttribute('media');\n\t\t\t\tmedia = cfg.customMedia[element.getAttribute('data-media') || media] || media;\n\n\t\t\t\tif(srcset && (!media || (window.matchMedia && matchMedia(media) || {}).matches )){\n\t\t\t\t\tratio = parseFloat(element.getAttribute('data-aspectratio'));\n\n\t\t\t\t\tif (!ratio) {\n\t\t\t\t\t\tmatch = srcset.match(regDescriptors);\n\n\t\t\t\t\t\tif (match) {\n\t\t\t\t\t\t\tif(match[2] == 'w'){\n\t\t\t\t\t\t\t\twidth = match[1];\n\t\t\t\t\t\t\t\theight = match[3];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\twidth = match[3];\n\t\t\t\t\t\t\t\theight = match[1];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twidth = element.getAttribute('width');\n\t\t\t\t\t\t\theight = element.getAttribute('height');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tratio = width / height;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ratio;\n\t\t},\n\n\t\tcalculateSize: function(element, width){\n\t\t\tvar displayRatio, height, imageRatio, retWidth;\n\t\t\tvar fitObj = this.getFit(element);\n\t\t\tvar fit = fitObj.fit;\n\t\t\tvar fitElem = fitObj.parent;\n\n\t\t\tif(fit != 'width' && ((fit != 'contain' && fit != 'cover') || !(imageRatio = this.getImageRatio(element)))){\n\t\t\t\treturn width;\n\t\t\t}\n\n\t\t\tif(fitElem){\n\t\t\t\twidth = fitElem.clientWidth;\n\t\t\t} else {\n\t\t\t\tfitElem = element;\n\t\t\t}\n\n\t\t\tretWidth = width;\n\n\t\t\tif(fit == 'width'){\n\t\t\t\tretWidth = width;\n\t\t\t} else {\n\t\t\t\theight = fitElem.clientHeight;\n\n\t\t\t\tif((displayRatio =  width / height) && ((fit == 'cover' && displayRatio < imageRatio) || (fit == 'contain' && displayRatio > imageRatio))){\n\t\t\t\t\tretWidth = width * (imageRatio / displayRatio);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn retWidth;\n\t\t}\n\t};\n\n\tlazySizes.parentFit = parentFit;\n\n\tdocument.addEventListener('lazybeforesizes', function(e){\n\t\tif(e.defaultPrevented || e.detail.instance != lazySizes){return;}\n\n\t\tvar element = e.target;\n\t\te.detail.width = parentFit.calculateSize(element, e.detail.width);\n\t});\n}));\n","/**\n * SSR Window 4.0.2\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: December 13, 2021\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        'constructor' in obj &&\n        obj.constructor === Object);\n}\nfunction extend(target = {}, src = {}) {\n    Object.keys(src).forEach((key) => {\n        if (typeof target[key] === 'undefined')\n            target[key] = src[key];\n        else if (isObject(src[key]) &&\n            isObject(target[key]) &&\n            Object.keys(src[key]).length > 0) {\n            extend(target[key], src[key]);\n        }\n    });\n}\n\nconst ssrDocument = {\n    body: {},\n    addEventListener() { },\n    removeEventListener() { },\n    activeElement: {\n        blur() { },\n        nodeName: '',\n    },\n    querySelector() {\n        return null;\n    },\n    querySelectorAll() {\n        return [];\n    },\n    getElementById() {\n        return null;\n    },\n    createEvent() {\n        return {\n            initEvent() { },\n        };\n    },\n    createElement() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute() { },\n            getElementsByTagName() {\n                return [];\n            },\n        };\n    },\n    createElementNS() {\n        return {};\n    },\n    importNode() {\n        return null;\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n};\nfunction getDocument() {\n    const doc = typeof document !== 'undefined' ? document : {};\n    extend(doc, ssrDocument);\n    return doc;\n}\n\nconst ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n        userAgent: '',\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n    history: {\n        replaceState() { },\n        pushState() { },\n        go() { },\n        back() { },\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener() { },\n    removeEventListener() { },\n    getComputedStyle() {\n        return {\n            getPropertyValue() {\n                return '';\n            },\n        };\n    },\n    Image() { },\n    Date() { },\n    screen: {},\n    setTimeout() { },\n    clearTimeout() { },\n    matchMedia() {\n        return {};\n    },\n    requestAnimationFrame(callback) {\n        if (typeof setTimeout === 'undefined') {\n            callback();\n            return null;\n        }\n        return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame(id) {\n        if (typeof setTimeout === 'undefined') {\n            return;\n        }\n        clearTimeout(id);\n    },\n};\nfunction getWindow() {\n    const win = typeof window !== 'undefined' ? window : {};\n    extend(win, ssrWindow);\n    return win;\n}\n\nexport { extend, getDocument, getWindow, ssrDocument, ssrWindow };\n","import { getWindow } from 'ssr-window';\nexport default function getBreakpoint(breakpoints, base = 'window', containerEl) {\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}","import setBreakpoint from './setBreakpoint.js';\nimport getBreakpoint from './getBreakpoint.js';\nexport default {\n  setBreakpoint,\n  getBreakpoint\n};","import { extend } from '../../shared/utils.js';\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate(realIndex);\n    swiper.updateSlides();\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}","function checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\nexport default {\n  checkOverflow\n};","function prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\nexport default function addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    el,\n    device\n  } = swiper;\n  // prettier-ignore\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  el.classList.add(...classNames);\n  swiper.emitContainerClasses();\n}","import addClasses from './addClasses.js';\nimport removeClasses from './removeClasses.js';\nexport default {\n  addClasses,\n  removeClasses\n};","export default function removeClasses() {\n  const swiper = this;\n  const {\n    el,\n    classNames\n  } = swiper;\n  el.classList.remove(...classNames);\n  swiper.emitContainerClasses();\n}","/* eslint no-param-reassign: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport { extend, deleteProps, createElement, elementChildren, elementStyle, elementIndex } from '../shared/utils.js';\nimport { getSupport } from '../shared/get-support.js';\nimport { getDevice } from '../shared/get-device.js';\nimport { getBrowser } from '../shared/get-browser.js';\nimport Resize from './modules/resize/resize.js';\nimport Observer from './modules/observer/observer.js';\nimport eventsEmitter from './events-emitter.js';\nimport update from './update/index.js';\nimport translate from './translate/index.js';\nimport transition from './transition/index.js';\nimport slide from './slide/index.js';\nimport loop from './loop/index.js';\nimport grabCursor from './grab-cursor/index.js';\nimport events from './events/index.js';\nimport breakpoints from './breakpoints/index.js';\nimport classes from './classes/index.js';\nimport checkOverflow from './check-overflow/index.js';\nimport defaults from './defaults.js';\nimport moduleExtendParams from './moduleExtendParams.js';\nimport { processLazyPreloader, preload } from '../shared/process-lazy-preloader.js';\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events,\n  breakpoints,\n  checkOverflow,\n  classes\n};\nconst extendedDefaults = {};\nclass Swiper {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n    const document = getDocument();\n    if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n      const swipers = [];\n      document.querySelectorAll(params.el).forEach(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      // eslint-disable-next-line no-constructor-return\n      return swipers;\n    }\n\n    // Swiper Instance\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        params,\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = extend({}, defaults, allModulesParams);\n\n    // Extend defaults with passed params\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params);\n\n    // add event listeners\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    }\n\n    // Extend Swiper\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: [],\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      cssOverflowAdjustment() {\n        // Returns 0 unless `translate` is > 2**23\n        // Should be subtracted from css values to prevent overflow\n        return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\n      },\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: 0,\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        startMoving: undefined,\n        evCache: []\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper');\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    // eslint-disable-next-line no-constructor-return\n    return swiper;\n  }\n  getSlideIndex(slideEl) {\n    const {\n      slidesEl,\n      params\n    } = this;\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    const firstSlideIndex = elementIndex(slides[0]);\n    return elementIndex(slideEl) - firstSlideIndex;\n  }\n  getSlideIndexByData(index) {\n    return this.getSlideIndex(this.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index)[0]);\n  }\n  recalcSlides() {\n    const swiper = this;\n    const {\n      slidesEl,\n      params\n    } = swiper;\n    swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  }\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n    swiper.emit('enable');\n  }\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n    swiper.emit('disable');\n  }\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.forEach(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n  slidesPerViewDynamic(view = 'current', exact = false) {\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      }\n    });\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        const slides = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides : swiper.slides;\n        translated = swiper.slideTo(slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n    swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n    swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.forEach(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n    if (swiper.rtl) {\n      swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n    swiper.update();\n  }\n  mount(element) {\n    const swiper = this;\n    if (swiper.mounted) return true;\n\n    // Find el\n    let el = element || swiper.params.el;\n    if (typeof el === 'string') {\n      el = document.querySelector(el);\n    }\n    if (!el) {\n      return false;\n    }\n    el.swiper = swiper;\n    if (el.shadowEl) {\n      swiper.isElement = true;\n    }\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = el.shadowRoot.querySelector(getWrapperSelector());\n        // Children needs to return slot items\n        return res;\n      }\n      return elementChildren(el, getWrapperSelector())[0];\n    };\n    // Find Wrapper\n    let wrapperEl = getWrapper();\n    if (!wrapperEl && swiper.params.createElements) {\n      wrapperEl = createElement('div', swiper.params.wrapperClass);\n      el.append(wrapperEl);\n      elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n        wrapperEl.append(slideEl);\n      });\n    }\n    Object.assign(swiper, {\n      el,\n      wrapperEl,\n      slidesEl: swiper.isElement ? el : wrapperEl,\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n      wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n    });\n    return true;\n  }\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    }\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Attach events\n    swiper.attachEvents();\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      } else {\n        imageEl.addEventListener('load', e => {\n          processLazyPreloader(swiper, e.target);\n        });\n      }\n    });\n    preload(swiper);\n\n    // Init Flag\n    swiper.initialized = true;\n    preload(swiper);\n\n    // Emit\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params,\n      el,\n      wrapperEl,\n      slides\n    } = swiper;\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      el.removeAttribute('style');\n      wrapperEl.removeAttribute('style');\n      if (slides && slides.length) {\n        slides.forEach(slideEl => {\n          slideEl.classList.remove(params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n          slideEl.removeAttribute('style');\n          slideEl.removeAttribute('data-swiper-slide-index');\n        });\n      }\n    }\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n    if (deleteInstance !== false) {\n      swiper.el.swiper = null;\n      deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n    Swiper.installModule(module);\n    return Swiper;\n  }\n}\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\nexport default Swiper;","export default {\n  init: true,\n  direction: 'horizontal',\n  oneWayMovement: false,\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 5,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // loop\n  loop: false,\n  loopedSlides: null,\n  loopPreventsSliding: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideActiveClass: 'swiper-slide-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideNextClass: 'swiper-slide-next',\n  slidePrevClass: 'swiper-slide-prev',\n  wrapperClass: 'swiper-wrapper',\n  lazyPreloaderClass: 'swiper-lazy-preloader',\n  lazyPreloadPrevNext: 0,\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};","/* eslint-disable no-underscore-dangle */\n\nexport default {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n    return self;\n  },\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n    return self;\n  },\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n};","import { getDocument } from 'ssr-window';\nimport onTouchStart from './onTouchStart.js';\nimport onTouchMove from './onTouchMove.js';\nimport onTouchEnd from './onTouchEnd.js';\nimport onResize from './onResize.js';\nimport onClick from './onClick.js';\nimport onScroll from './onScroll.js';\nimport onLoad from './onLoad.js';\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    el,\n    wrapperEl,\n    device\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method;\n\n  // Touch Events\n  el[domMethod]('pointerdown', swiper.onTouchStart, {\n    passive: false\n  });\n  document[domMethod]('pointermove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('pointerup', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointercancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerout', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerleave', swiper.onTouchEnd, {\n    passive: true\n  });\n\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n\n  // Images loader\n  el[domMethod]('load', swiper.onLoad, {\n    capture: true\n  });\n};\nfunction attachEvents() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n  swiper.onClick = onClick.bind(swiper);\n  swiper.onLoad = onLoad.bind(swiper);\n  if (!dummyEventAttached) {\n    document.addEventListener('touchstart', dummyEventListener);\n    dummyEventAttached = true;\n  }\n  events(swiper, 'on');\n}\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\nexport default {\n  attachEvents,\n  detachEvents\n};","export default function onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}","import { processLazyPreloader } from '../../shared/process-lazy-preloader.js';\nexport default function onLoad(e) {\n  const swiper = this;\n  processLazyPreloader(swiper, e.target);\n  swiper.update();\n}","export default function onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper;\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n  const isVirtualLoop = isVirtual && params.loop;\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    if (swiper.params.loop && !isVirtual) {\n      swiper.slideToLoop(swiper.realIndex, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    clearTimeout(swiper.autoplay.resizeTimeout);\n    swiper.autoplay.resizeTimeout = setTimeout(() => {\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.resume();\n      }\n    }, 500);\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}","export default function onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, false);\n}","import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === event.pointerId);\n  if (pointerIndex >= 0) {\n    data.evCache.splice(pointerIndex, 1);\n  }\n  if (['pointercancel', 'pointerout', 'pointerleave'].includes(event.type)) {\n    const proceed = event.type === 'pointercancel' && (swiper.browser.isSafari || swiper.browser.isWebView);\n    if (!proceed) {\n      return;\n    }\n  }\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  }\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}","import { getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\nexport default function onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n  if (pointerIndex >= 0) data.evCache[pointerIndex] = e;\n  const targetTouch = data.evCache.length > 1 ? data.evCache[0] : e;\n  const pageX = targetTouch.pageX;\n  const pageY = targetTouch.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    if (!e.target.matches(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        prevX: swiper.touches.currentX,\n        prevY: swiper.touches.currentY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n    return;\n  }\n  if (params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n      return;\n    }\n  }\n  if (document.activeElement) {\n    if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling || swiper.zoom && swiper.params.zoom && swiper.params.zoom.enabled && data.evCache.length > 1) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n  if (params.oneWayMovement) {\n    diff = Math.abs(diff) * (rtl ? 1 : -1);\n    touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n  }\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) {\n    diff = -diff;\n    touchesDiff = -touchesDiff;\n  }\n  const prevTouchesDirection = swiper.touchesDirection;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n  const isLoop = swiper.params.loop && !params.cssMode;\n  if (!data.isMoved) {\n    if (isLoop) {\n      swiper.loopFix({\n        direction: swiper.swipeDirection\n      });\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      const evt = new window.CustomEvent('transitionend', {\n        bubbles: true,\n        cancelable: true\n      });\n      swiper.wrapperEl.dispatchEvent(evt);\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  let loopFixed;\n  if (data.isMoved && prevTouchesDirection !== swiper.touchesDirection && isLoop && Math.abs(diff) >= 1) {\n    // need another loop fix\n    swiper.loopFix({\n      direction: swiper.swipeDirection,\n      setTranslate: true\n    });\n    loopFixed = true;\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if (diff > 0) {\n    if (isLoop && !loopFixed && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.size / 2 : swiper.minTranslate())) {\n      swiper.loopFix({\n        direction: 'prev',\n        setTranslate: true,\n        activeSlideIndex: 0\n      });\n    }\n    if (data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n      }\n    }\n  } else if (diff < 0) {\n    if (isLoop && !loopFixed && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.size / 2 : swiper.maxTranslate())) {\n      swiper.loopFix({\n        direction: 'next',\n        setTranslate: true,\n        activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n      });\n    }\n    if (data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n      }\n    }\n  }\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}","import { getWindow, getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\nexport default function onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n  const data = swiper.touchEventsData;\n  data.evCache.push(event);\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetEl = e.target;\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!swiper.wrapperEl.contains(targetEl)) return;\n  }\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  // eslint-disable-next-line\n  const eventPath = event.composedPath ? event.composedPath() : event.path;\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\n    document.activeElement.blur();\n  }\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n  if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n  swiper.emit('touchStart', e);\n}","import setGrabCursor from './setGrabCursor.js';\nimport unsetGrabCursor from './unsetGrabCursor.js';\nexport default {\n  setGrabCursor,\n  unsetGrabCursor\n};","export default function setGrabCursor(moving) {\n  const swiper = this;\n  if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","export default function unsetGrabCursor() {\n  const swiper = this;\n  if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","import loopCreate from './loopCreate.js';\nimport loopFix from './loopFix.js';\nimport loopDestroy from './loopDestroy.js';\nexport default {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};","import { elementChildren } from '../../shared/utils.js';\nexport default function loopCreate(slideRealIndex) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  slides.forEach((el, index) => {\n    el.setAttribute('data-swiper-slide-index', index);\n  });\n  swiper.loopFix({\n    slideRealIndex,\n    direction: params.centeredSlides ? undefined : 'next'\n  });\n}","export default function loopDestroy() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  swiper.recalcSlides();\n  const newSlidesOrder = [];\n  swiper.slides.forEach(slideEl => {\n    const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n    newSlidesOrder[index] = slideEl;\n  });\n  swiper.slides.forEach(slideEl => {\n    slideEl.removeAttribute('data-swiper-slide-index');\n  });\n  newSlidesOrder.forEach(slideEl => {\n    slidesEl.append(slideEl);\n  });\n  swiper.recalcSlides();\n  swiper.slideTo(swiper.realIndex, 0);\n}","export default function loopFix({\n  slideRealIndex,\n  slideTo = true,\n  direction,\n  setTranslate,\n  activeSlideIndex,\n  byController,\n  byMousewheel\n} = {}) {\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!params.centeredSlides && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10));\n  let loopedSlides = params.loopedSlides || slidesPerView;\n  if (loopedSlides % params.slidesPerGroup !== 0) {\n    loopedSlides += params.slidesPerGroup - loopedSlides % params.slidesPerGroup;\n  }\n  swiper.loopedSlides = loopedSlides;\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  let activeIndex = swiper.activeIndex;\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(swiper.slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0;\n  // prepend last slides before start\n  if (activeSlideIndex < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeSlideIndex, params.slidesPerGroup);\n    for (let i = 0; i < loopedSlides - activeSlideIndex; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      prependSlidesIndexes.push(slides.length - index - 1);\n    }\n  } else if (activeSlideIndex /* + slidesPerView */ > swiper.slides.length - loopedSlides * 2) {\n    slidesAppended = Math.max(activeSlideIndex - (swiper.slides.length - loopedSlides * 2), params.slidesPerGroup);\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      appendSlidesIndexes.push(index);\n    }\n  }\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      slidesEl.prepend(swiper.slides[index]);\n    });\n  }\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      slidesEl.append(swiper.slides[index]);\n    });\n  }\n  swiper.recalcSlides();\n  if (params.slidesPerView === 'auto') {\n    swiper.updateSlides();\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          swiper.slideToLoop(slideRealIndex, 0, false, true);\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        swiper.slideToLoop(slideRealIndex, 0, false, true);\n      }\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      slideTo: false,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix(loopParams);\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix(loopParams);\n    }\n  }\n  swiper.emit('loopFix');\n}","import { extend } from '../shared/utils.js';\nexport default function moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj = {}) {\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        auto: true\n      };\n    }\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}","import { getWindow } from 'ssr-window';\nimport { elementParents } from '../../../shared/utils.js';\nexport default function Observer({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const observers = [];\n  const window = getWindow();\n  const attach = (target, options = {}) => {\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (swiper.__preventObserver__) return;\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n  const init = () => {\n    if (!swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = elementParents(swiper.el);\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    attach(swiper.el, {\n      childList: swiper.params.observeSlideChildren\n    });\n\n    // Observe wrapper\n    attach(swiper.wrapperEl, {\n      attributes: false\n    });\n  };\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}","import { getWindow } from 'ssr-window';\nexport default function Resize({\n  swiper,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}","import slideTo from './slideTo.js';\nimport slideToLoop from './slideToLoop.js';\nimport slideNext from './slideNext.js';\nimport slidePrev from './slidePrev.js';\nimport slideReset from './slideReset.js';\nimport slideToClosest from './slideToClosest.js';\nimport slideToClickedSlide from './slideToClickedSlide.js';\nexport default {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};","/* eslint no-unused-vars: \"off\" */\nexport default function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    enabled,\n    params,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  let perGroup = params.slidesPerGroup;\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'next'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'prev'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n  let prevIndex = 0;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideReset(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function slideTo(index = 0, speed = this.params.speed, runCallbacks = true, internal, initial) {\n  if (typeof index === 'string') {\n    index = parseInt(index, 10);\n  }\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n    return false;\n  }\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex];\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) {\n        return false;\n      }\n    }\n  }\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  // Update progress\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n  // Update Index\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n      if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n        swiper._cssModeVirtualInitialSet = true;\n        requestAnimationFrame(() => {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._immediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n    swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n  }\n  return true;\n}","import { elementChildren, nextTick } from '../../shared/utils.js';\nexport default function slideToClickedSlide() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n        swiper.loopFix();\n        slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideToClosest(speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}","export default function slideToLoop(index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      newIndex = swiper.getSlideIndexByData(newIndex);\n    }\n  }\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}","import setTransition from './setTransition.js';\nimport transitionStart from './transitionStart.js';\nimport transitionEnd from './transitionEnd.js';\nexport default {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};","export default function setTransition(duration, byController) {\n  const swiper = this;\n  if (!swiper.params.cssMode) {\n    swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n  }\n  swiper.emit('setTransition', duration, byController);\n}","export default function transitionEmit({\n  swiper,\n  runCallbacks,\n  direction,\n  step\n}) {\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n  swiper.emit(`transition${step}`);\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n    swiper.emit(`slideChangeTransition${step}`);\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionEnd(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionStart(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}","import { getTranslate } from '../../shared/utils.js';\nexport default function getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    wrapperEl\n  } = swiper;\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n  let currentTranslate = getTranslate(wrapperEl, axis);\n  currentTranslate += swiper.cssOverflowAdjustment();\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}","import getTranslate from './getTranslate.js';\nimport setTranslate from './setTranslate.js';\nimport minTranslate from './minTranslate.js';\nimport maxTranslate from './maxTranslate.js';\nimport translateTo from './translateTo.js';\nexport default {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};","export default function maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}","export default function minTranslate() {\n  return -this.snapGrid[0];\n}","export default function setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    if (swiper.isHorizontal()) {\n      x -= swiper.cssOverflowAdjustment();\n    } else {\n      y -= swiper.cssOverflowAdjustment();\n    }\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  }\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, byController);\n}","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n  return true;\n}","import updateSize from './updateSize.js';\nimport updateSlides from './updateSlides.js';\nimport updateAutoHeight from './updateAutoHeight.js';\nimport updateSlidesOffset from './updateSlidesOffset.js';\nimport updateSlidesProgress from './updateSlidesProgress.js';\nimport updateProgress from './updateProgress.js';\nimport updateSlidesClasses from './updateSlidesClasses.js';\nimport updateActiveIndex from './updateActiveIndex.js';\nimport updateClickedSlide from './updateClickedSlide.js';\nexport default {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};","import { preload } from '../../shared/process-lazy-preloader.js';\nexport function getActiveIndexByTranslate(swiper) {\n  const {\n    slidesGrid,\n    params\n  } = swiper;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  let activeIndex;\n  for (let i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  }\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n  return activeIndex;\n}\nexport default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  const getVirtualRealIndex = aIndex => {\n    let realIndex = aIndex - swiper.virtual.slidesBefore;\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n    return realIndex;\n  };\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.realIndex = getVirtualRealIndex(activeIndex);\n    }\n    return;\n  }\n  // Get real index\n  let realIndex;\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (swiper.slides[activeIndex]) {\n    realIndex = parseInt(swiper.slides[activeIndex].getAttribute('data-swiper-slide-index') || activeIndex, 10);\n  } else {\n    realIndex = activeIndex;\n  }\n  Object.assign(swiper, {\n    previousSnapIndex,\n    snapIndex,\n    previousRealIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}","export default function updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides[swiper.getSlideIndexByData(index)];\n    }\n    return swiper.slides[index];\n  };\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || []).forEach(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n}","export default function updateClickedSlide(e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = e.closest(`.${params.slideClass}, swiper-slide`);\n  let slideFound = false;\n  let slideIndex;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}","export default function updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}","import { elementStyle } from '../../shared/utils.js';\nexport default function updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const el = swiper.el;\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = el.clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = el.clientHeight;\n  }\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n  height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}","import { elementChildren, elementOuterSize, elementStyle, setCSSProperty } from '../../shared/utils.js';\nexport default function updateSlides() {\n  const swiper = this;\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  }\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slidesLength);\n  }\n\n  // Calc slides\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    let slide;\n    if (slides[i]) slide = slides[i];\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n    }\n    if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + params.spaceBetween}px`;\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + params.spaceBetween}px`;\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (params.spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}","import { elementChildren, elementNextAll, elementPrevAll } from '../../shared/utils.js';\nexport default function updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    slidesEl,\n    activeIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const getFilteredSlide = selector => {\n    return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n  };\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n  });\n  let activeSlide;\n  if (isVirtual) {\n    if (params.loop) {\n      let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n      if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n      if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n    } else {\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n    }\n  } else {\n    activeSlide = slides[activeIndex];\n  }\n  if (activeSlide) {\n    // Active classes\n    activeSlide.classList.add(params.slideActiveClass);\n\n    // Next Slide\n    let nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !nextSlide) {\n      nextSlide = slides[0];\n    }\n    if (nextSlide) {\n      nextSlide.classList.add(params.slideNextClass);\n    }\n    // Prev Slide\n    let prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !prevSlide === 0) {\n      prevSlide = slides[slides.length - 1];\n    }\n    if (prevSlide) {\n      prevSlide.classList.add(params.slidePrevClass);\n    }\n  }\n  swiper.emitSlidesClasses();\n}","export default function updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n  // eslint-disable-next-line\n  const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n  }\n}","export default function updateSlidesProgress(translate = this && this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideVisibleClass);\n  });\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n      slides[i].classList.add(params.slideVisibleClass);\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport { createElement, elementIndex } from '../../shared/utils.js';\nexport default function A11y({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n      slideLabelMessage: '{{index}} / {{slidesLength}}',\n      containerMessage: null,\n      containerRoleDescriptionMessage: null,\n      itemRoleDescriptionMessage: null,\n      slideRole: 'group',\n      id: null\n    }\n  });\n  swiper.a11y = {\n    clicked: false\n  };\n  let liveRegion = null;\n  function notify(message) {\n    const notification = liveRegion;\n    if (notification.length === 0) return;\n    notification.innerHTML = '';\n    notification.innerHTML = message;\n  }\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getRandomNumber(size = 16) {\n    const randomChar = () => Math.round(16 * Math.random()).toString(16);\n    return 'x'.repeat(size).replace(/x/g, randomChar);\n  }\n  function makeElFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '0');\n    });\n  }\n  function makeElNotFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '-1');\n    });\n  }\n  function addElRole(el, role) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('role', role);\n    });\n  }\n  function addElRoleDescription(el, description) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-roledescription', description);\n    });\n  }\n  function addElControls(el, controls) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-controls', controls);\n    });\n  }\n  function addElLabel(el, label) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-label', label);\n    });\n  }\n  function addElId(el, id) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('id', id);\n    });\n  }\n  function addElLive(el, live) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-live', live);\n    });\n  }\n  function disableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', true);\n    });\n  }\n  function enableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', false);\n    });\n  }\n  function onEnterOrSpaceKey(e) {\n    if (e.keyCode !== 13 && e.keyCode !== 32) return;\n    const params = swiper.params.a11y;\n    const targetEl = e.target;\n    if (swiper.pagination && swiper.pagination.el && (targetEl === swiper.pagination.el || swiper.pagination.el.contains(e.target))) {\n      if (!e.target.matches(classesToSelector(swiper.params.pagination.bulletClass))) return;\n    }\n    if (swiper.navigation && swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        notify(params.lastSlideMessage);\n      } else {\n        notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        notify(params.firstSlideMessage);\n      } else {\n        notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && targetEl.matches(classesToSelector(swiper.params.pagination.bulletClass))) {\n      targetEl.click();\n    }\n  }\n  function updateNavigation() {\n    if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (prevEl) {\n      if (swiper.isBeginning) {\n        disableEl(prevEl);\n        makeElNotFocusable(prevEl);\n      } else {\n        enableEl(prevEl);\n        makeElFocusable(prevEl);\n      }\n    }\n    if (nextEl) {\n      if (swiper.isEnd) {\n        disableEl(nextEl);\n        makeElNotFocusable(nextEl);\n      } else {\n        enableEl(nextEl);\n        makeElFocusable(nextEl);\n      }\n    }\n  }\n  function hasPagination() {\n    return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n  }\n  function hasClickablePagination() {\n    return hasPagination() && swiper.params.pagination.clickable;\n  }\n  function updatePagination() {\n    const params = swiper.params.a11y;\n    if (!hasPagination()) return;\n    swiper.pagination.bullets.forEach(bulletEl => {\n      if (swiper.params.pagination.clickable) {\n        makeElFocusable(bulletEl);\n        if (!swiper.params.pagination.renderBullet) {\n          addElRole(bulletEl, 'button');\n          addElLabel(bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, elementIndex(bulletEl) + 1));\n        }\n      }\n      if (bulletEl.matches(classesToSelector(swiper.params.pagination.bulletActiveClass))) {\n        bulletEl.setAttribute('aria-current', 'true');\n      } else {\n        bulletEl.removeAttribute('aria-current');\n      }\n    });\n  }\n  const initNavEl = (el, wrapperId, message) => {\n    makeElFocusable(el);\n    if (el.tagName !== 'BUTTON') {\n      addElRole(el, 'button');\n      el.addEventListener('keydown', onEnterOrSpaceKey);\n    }\n    addElLabel(el, message);\n    addElControls(el, wrapperId);\n  };\n  const handlePointerDown = () => {\n    swiper.a11y.clicked = true;\n  };\n  const handlePointerUp = () => {\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        if (!swiper.destroyed) {\n          swiper.a11y.clicked = false;\n        }\n      });\n    });\n  };\n  const handleFocus = e => {\n    if (swiper.a11y.clicked) return;\n    const slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n    if (!slideEl || !swiper.slides.includes(slideEl)) return;\n    const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\n    const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\n    if (isActive || isVisible) return;\n    if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\n    if (swiper.isHorizontal()) {\n      swiper.el.scrollLeft = 0;\n    } else {\n      swiper.el.scrollTop = 0;\n    }\n    swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\n  };\n  const initSlides = () => {\n    const params = swiper.params.a11y;\n    if (params.itemRoleDescriptionMessage) {\n      addElRoleDescription(swiper.slides, params.itemRoleDescriptionMessage);\n    }\n    if (params.slideRole) {\n      addElRole(swiper.slides, params.slideRole);\n    }\n    const slidesLength = swiper.slides.length;\n    if (params.slideLabelMessage) {\n      swiper.slides.forEach((slideEl, index) => {\n        const slideIndex = swiper.params.loop ? parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10) : index;\n        const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n        addElLabel(slideEl, ariaLabelMessage);\n      });\n    }\n  };\n  const init = () => {\n    const params = swiper.params.a11y;\n    swiper.el.append(liveRegion);\n\n    // Container\n    const containerEl = swiper.el;\n    if (params.containerRoleDescriptionMessage) {\n      addElRoleDescription(containerEl, params.containerRoleDescriptionMessage);\n    }\n    if (params.containerMessage) {\n      addElLabel(containerEl, params.containerMessage);\n    }\n\n    // Wrapper\n    const wrapperEl = swiper.wrapperEl;\n    const wrapperId = params.id || wrapperEl.getAttribute('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n    const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n    addElId(wrapperEl, wrapperId);\n    addElLive(wrapperEl, live);\n\n    // Slide\n    initSlides();\n\n    // Navigation\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => initNavEl(el, wrapperId, params.nextSlideMessage));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => initNavEl(el, wrapperId, params.prevSlideMessage));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.addEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.addEventListener('focus', handleFocus, true);\n    swiper.el.addEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.addEventListener('pointerup', handlePointerUp, true);\n  };\n  function destroy() {\n    if (liveRegion && liveRegion.length > 0) liveRegion.remove();\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.removeEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.removeEventListener('focus', handleFocus, true);\n    swiper.el.removeEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.removeEventListener('pointerup', handlePointerUp, true);\n  }\n  on('beforeInit', () => {\n    liveRegion = createElement('span', swiper.params.a11y.notificationClass);\n    liveRegion.setAttribute('aria-live', 'assertive');\n    liveRegion.setAttribute('aria-atomic', 'true');\n    if (swiper.isElement) {\n      liveRegion.setAttribute('slot', 'container-end');\n    }\n  });\n  on('afterInit', () => {\n    if (!swiper.params.a11y.enabled) return;\n    init();\n  });\n  on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\n    if (!swiper.params.a11y.enabled) return;\n    initSlides();\n  });\n  on('fromEdge toEdge afterInit lock unlock', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updateNavigation();\n  });\n  on('paginationUpdate', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updatePagination();\n  });\n  on('destroy', () => {\n    if (!swiper.params.a11y.enabled) return;\n    destroy();\n  });\n}","/* eslint no-underscore-dangle: \"off\" */\n/* eslint no-use-before-define: \"off\" */\nimport { getDocument } from 'ssr-window';\nexport default function Autoplay({\n  swiper,\n  extendParams,\n  on,\n  emit,\n  params\n}) {\n  swiper.autoplay = {\n    running: false,\n    paused: false,\n    timeLeft: 0\n  };\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false\n    }\n  });\n  let timeout;\n  let raf;\n  let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayTimeLeft;\n  let autoplayStartTime = new Date().getTime;\n  let wasPaused;\n  let isTouched;\n  let pausedByTouch;\n  let touchStartTimeout;\n  let slideChanged;\n  let pausedByInteraction;\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\n    if (e.target !== swiper.wrapperEl) return;\n    swiper.wrapperEl.removeEventListener('transitionend', onTransitionEnd);\n    resume();\n  }\n  const calcTimeLeft = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) {\n      wasPaused = true;\n    } else if (wasPaused) {\n      autoplayDelayCurrent = autoplayTimeLeft;\n      wasPaused = false;\n    }\n    const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\n    swiper.autoplay.timeLeft = timeLeft;\n    emit('autoplayTimeLeft', timeLeft, timeLeft / autoplayDelayTotal);\n    raf = requestAnimationFrame(() => {\n      calcTimeLeft();\n    });\n  };\n  const getSlideDelay = () => {\n    let activeSlideEl;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      activeSlideEl = swiper.slides.filter(slideEl => slideEl.classList.contains('swiper-slide-active'))[0];\n    } else {\n      activeSlideEl = swiper.slides[swiper.activeIndex];\n    }\n    if (!activeSlideEl) return undefined;\n    const currentSlideDelay = parseInt(activeSlideEl.getAttribute('data-swiper-autoplay'), 10);\n    return currentSlideDelay;\n  };\n  const run = delayForce => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    cancelAnimationFrame(raf);\n    calcTimeLeft();\n    let delay = typeof delayForce === 'undefined' ? swiper.params.autoplay.delay : delayForce;\n    autoplayDelayTotal = swiper.params.autoplay.delay;\n    autoplayDelayCurrent = swiper.params.autoplay.delay;\n    const currentSlideDelay = getSlideDelay();\n    if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === 'undefined') {\n      delay = currentSlideDelay;\n      autoplayDelayTotal = currentSlideDelay;\n      autoplayDelayCurrent = currentSlideDelay;\n    }\n    autoplayTimeLeft = delay;\n    const speed = swiper.params.speed;\n    const proceed = () => {\n      if (!swiper || swiper.destroyed) return;\n      if (swiper.params.autoplay.reverseDirection) {\n        if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\n          swiper.slidePrev(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, speed, true, true);\n          emit('autoplay');\n        }\n      } else {\n        if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\n          swiper.slideNext(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, speed, true, true);\n          emit('autoplay');\n        }\n      }\n      if (swiper.params.cssMode) {\n        autoplayStartTime = new Date().getTime();\n        requestAnimationFrame(() => {\n          run();\n        });\n      }\n    };\n    if (delay > 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        proceed();\n      }, delay);\n    } else {\n      requestAnimationFrame(() => {\n        proceed();\n      });\n    }\n\n    // eslint-disable-next-line\n    return delay;\n  };\n  const start = () => {\n    swiper.autoplay.running = true;\n    run();\n    emit('autoplayStart');\n  };\n  const stop = () => {\n    swiper.autoplay.running = false;\n    clearTimeout(timeout);\n    cancelAnimationFrame(raf);\n    emit('autoplayStop');\n  };\n  const pause = (internal, reset) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    clearTimeout(timeout);\n    if (!internal) {\n      pausedByInteraction = true;\n    }\n    const proceed = () => {\n      emit('autoplayPause');\n      if (swiper.params.autoplay.waitForTransition) {\n        swiper.wrapperEl.addEventListener('transitionend', onTransitionEnd);\n      } else {\n        resume();\n      }\n    };\n    swiper.autoplay.paused = true;\n    if (reset) {\n      if (slideChanged) {\n        autoplayTimeLeft = swiper.params.autoplay.delay;\n      }\n      slideChanged = false;\n      proceed();\n      return;\n    }\n    const delay = autoplayTimeLeft || swiper.params.autoplay.delay;\n    autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\n    if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\n    proceed();\n  };\n  const resume = () => {\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\n    autoplayStartTime = new Date().getTime();\n    if (pausedByInteraction) {\n      pausedByInteraction = false;\n      run(autoplayTimeLeft);\n    } else {\n      run();\n    }\n    swiper.autoplay.paused = false;\n    emit('autoplayResume');\n  };\n  const onVisibilityChange = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    const document = getDocument();\n    if (document.visibilityState === 'hidden') {\n      pausedByInteraction = true;\n      pause(true);\n    }\n    if (document.visibilityState === 'visible') {\n      resume();\n    }\n  };\n  const onPointerEnter = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByInteraction = true;\n    pause(true);\n  };\n  const onPointerLeave = e => {\n    if (e.pointerType !== 'mouse') return;\n    if (swiper.autoplay.paused) {\n      resume();\n    }\n  };\n  const attachMouseEvents = () => {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.el.addEventListener('pointerenter', onPointerEnter);\n      swiper.el.addEventListener('pointerleave', onPointerLeave);\n    }\n  };\n  const detachMouseEvents = () => {\n    swiper.el.removeEventListener('pointerenter', onPointerEnter);\n    swiper.el.removeEventListener('pointerleave', onPointerLeave);\n  };\n  const attachDocumentEvents = () => {\n    const document = getDocument();\n    document.addEventListener('visibilitychange', onVisibilityChange);\n  };\n  const detachDocumentEvents = () => {\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  };\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      attachMouseEvents();\n      attachDocumentEvents();\n      autoplayStartTime = new Date().getTime();\n      start();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n    detachDocumentEvents();\n    if (swiper.autoplay.running) {\n      stop();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (internal || !swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n      return;\n    }\n    isTouched = true;\n    pausedByTouch = false;\n    pausedByInteraction = false;\n    touchStartTimeout = setTimeout(() => {\n      pausedByInteraction = true;\n      pausedByTouch = true;\n      pause(true);\n    }, 200);\n  });\n  on('touchEnd', () => {\n    if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\n    clearTimeout(touchStartTimeout);\n    clearTimeout(timeout);\n    if (swiper.params.autoplay.disableOnInteraction) {\n      pausedByTouch = false;\n      isTouched = false;\n      return;\n    }\n    if (pausedByTouch && swiper.params.cssMode) resume();\n    pausedByTouch = false;\n    isTouched = false;\n  });\n  on('slideChange', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    slideChanged = true;\n  });\n  Object.assign(swiper.autoplay, {\n    start,\n    stop,\n    pause,\n    resume\n  });\n}","/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\nimport { elementTransitionEnd, nextTick } from '../../shared/utils.js';\nexport default function Controller({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide' // or 'container'\n    }\n  });\n\n  swiper.controller = {\n    control: undefined\n  };\n  function LinearSpline(x, y) {\n    const binarySearch = function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }();\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n    };\n    return this;\n  }\n  function getInterpolateFunction(c) {\n    swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n  }\n  function setTranslate(_t, byController) {\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    const Swiper = swiper.constructor;\n    function setControlledTranslate(c) {\n      if (c.destroyed) return;\n\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        if (Number.isNaN(multiplier) || !Number.isFinite(multiplier)) {\n          multiplier = 1;\n        }\n        controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n      }\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  }\n  function setTransition(duration, byController) {\n    const Swiper = swiper.constructor;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      if (c.destroyed) return;\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        elementTransitionEnd(c.wrapperEl, () => {\n          if (!controlled) return;\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  }\n  function removeSpline() {\n    if (!swiper.controller.control) return;\n    if (swiper.controller.spline) {\n      swiper.controller.spline = undefined;\n      delete swiper.controller.spline;\n    }\n  }\n  on('beforeInit', () => {\n    if (typeof window !== 'undefined' && (\n    // eslint-disable-line\n    typeof swiper.params.controller.control === 'string' || swiper.params.controller.control instanceof HTMLElement)) {\n      const controlElement = document.querySelector(swiper.params.controller.control);\n      if (controlElement && controlElement.swiper) {\n        swiper.controller.control = controlElement.swiper;\n      } else if (controlElement) {\n        const onControllerSwiper = e => {\n          swiper.controller.control = e.detail[0];\n          swiper.update();\n          controlElement.removeEventListener('init', onControllerSwiper);\n        };\n        controlElement.addEventListener('init', onControllerSwiper);\n      }\n      return;\n    }\n    swiper.controller.control = swiper.params.controller.control;\n  });\n  on('update', () => {\n    removeSpline();\n  });\n  on('resize', () => {\n    removeSpline();\n  });\n  on('observerUpdate', () => {\n    removeSpline();\n  });\n  on('setTranslate', (_s, translate, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTranslate(translate, byController);\n  });\n  on('setTransition', (_s, duration, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTransition(duration, byController);\n  });\n  Object.assign(swiper.controller, {\n    setTranslate,\n    setTransition\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCards({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      rotate: true,\n      perSlideRotate: 2,\n      perSlideOffset: 8\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = swiper.translate;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = slideEl.swiperSlideOffset;\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.wrapperEl.style.transform = `translateX(${swiper.minTranslate()}px)`;\n      }\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -params.perSlideRotate * progress;\n      let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rotate : 0}deg)\n        scale(${scaleString})\n      `;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCoverflow({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      scale: 1,\n      modifier: 1,\n      slideShadows: true\n    }\n  });\n  const setTranslate = () => {\n    const {\n      width: swiperWidth,\n      height: swiperHeight,\n      slides,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const slideEl = slides[i];\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = slideEl.swiperSlideOffset;\n      const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n      const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n      let stretch = params.stretch;\n      // Allow percentage to make a relative stretch for responsive sliders\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = parseFloat(params.stretch) / 100 * slideSize;\n      }\n      let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n      let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n      let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier);\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n      if (Math.abs(scale) < 0.001) scale = 0;\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = slideTransform;\n      slideEl.style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBeforeEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n        let shadowAfterEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n        if (!shadowBeforeEl) {\n          shadowBeforeEl = createShadow(params, slideEl, isHorizontal ? 'left' : 'top');\n        }\n        if (!shadowAfterEl) {\n          shadowAfterEl = createShadow(params, slideEl, isHorizontal ? 'right' : 'bottom');\n        }\n        if (shadowBeforeEl) shadowBeforeEl.style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if (shadowAfterEl) shadowAfterEl.style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n  };\n  effectInit({\n    effect: 'coverflow',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCreative({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    creativeEffect: {\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      }\n    }\n  });\n  const getTranslateValue = value => {\n    if (typeof value === 'string') return value;\n    return `${value}px`;\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      wrapperEl,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.creativeEffect;\n    const {\n      progressMultiplier: multiplier\n    } = params;\n    const isCenteredSlides = swiper.params.centeredSlides;\n    if (isCenteredSlides) {\n      const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n      wrapperEl.style.transform = `translateX(calc(50% - ${margin}px))`;\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideEl.progress, -params.limitProgress), params.limitProgress);\n      let originalProgress = progress;\n      if (!isCenteredSlides) {\n        originalProgress = Math.min(Math.max(slideEl.originalProgress, -params.limitProgress), params.limitProgress);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      const r = [0, 0, 0];\n      let custom = false;\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n      let data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1\n      };\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      }\n      // set translate\n      t.forEach((value, index) => {\n        t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n      });\n      // set rotates\n      r.forEach((value, index) => {\n        r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n      });\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const translateString = t.join(', ');\n      const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n      const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n      const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n      const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`;\n\n      // Set shadows\n      if (custom && data.shadow || !custom) {\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl && data.shadow) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) {\n          const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n          shadowEl.style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n      targetEl.style.opacity = opacityString;\n      if (data.origin) {\n        targetEl.style.transformOrigin = data.origin;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'creative',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => swiper.params.creativeEffect.perspective,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import effectInit from '../../shared/effect-init.js';\nimport { createElement } from '../../shared/utils.js';\nexport default function EffectCube({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94\n    }\n  });\n  const createSlideShadows = (slideEl, progress, isHorizontal) => {\n    let shadowBefore = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}`);\n      slideEl.append(shadowBefore);\n    }\n    if (!shadowAfter) {\n      shadowAfter = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}`);\n      slideEl.append(shadowAfter);\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // create new ones\n    const isHorizontal = swiper.isHorizontal();\n    swiper.slides.forEach(slideEl => {\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      createSlideShadows(slideEl, progress, isHorizontal);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      wrapperEl,\n      slides,\n      width: swiperWidth,\n      height: swiperHeight,\n      rtlTranslate: rtl,\n      size: swiperSize,\n      browser\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl = swiper.slidesEl.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          swiper.slidesEl.append(cubeShadowEl);\n        }\n        cubeShadowEl.style.height = `${swiperWidth}px`;\n      } else {\n        cubeShadowEl = el.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          el.append(cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + round * 4 * swiperSize;\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = 3 * swiperSize + swiperSize * 4 * round;\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = slideIndex * 90 + progress * 90;\n        if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n      }\n      slideEl.style.transform = transform;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, isHorizontal);\n      }\n    }\n    wrapperEl.style.transformOrigin = `50% 50% -${swiperSize / 2}px`;\n    wrapperEl.style['-webkit-transform-origin'] = `50% 50% -${swiperSize / 2}px`;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl.style.transform = `translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`;\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n        const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        cubeShadowEl.style.transform = `scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`;\n      }\n    }\n    const zFactor = (browser.isSafari || browser.isWebView) && browser.needPerspectiveFix ? -swiperSize / 2 : 0;\n    wrapperEl.style.transform = `translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`;\n    wrapperEl.style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);\n  };\n  const setTransition = duration => {\n    const {\n      el,\n      slides\n    } = swiper;\n    slides.forEach(slideEl => {\n      slideEl.style.transitionDuration = `${duration}ms`;\n      slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(subEl => {\n        subEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      const shadowEl = el.querySelector('.swiper-cube-shadow');\n      if (shadowEl) shadowEl.style.transitionDuration = `${duration}ms`;\n    }\n  };\n  effectInit({\n    effect: 'cube',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.cubeEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      resistanceRatio: 0,\n      spaceBetween: 0,\n      centeredSlides: false,\n      virtualTranslate: true\n    })\n  });\n}","import effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFade({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    fadeEffect: {\n      crossFade: false\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides\n    } = swiper;\n    const params = swiper.params.fadeEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = swiper.slides[i];\n      const offset = slideEl.swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(slideEl.progress), 0) : 1 + Math.min(Math.max(slideEl.progress, -1), 0);\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.opacity = slideOpacity;\n      targetEl.style.transform = `translate3d(${tx}px, ${ty}px, 0px)`;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'fade',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFlip({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true\n    }\n  });\n  const createSlideShadows = (slideEl, progress, params) => {\n    let shadowBefore = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createShadow(params, slideEl, swiper.isHorizontal() ? 'left' : 'top');\n    }\n    if (!shadowAfter) {\n      shadowAfter = createShadow(params, slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // Set shadows\n    const params = swiper.params.flipEffect;\n    swiper.slides.forEach(slideEl => {\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      createSlideShadows(slideEl, progress, params);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.flipEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, params);\n      }\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.flipEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import { elementTransitionEnd, now } from '../../shared/utils.js';\nexport default function freeMode({\n  swiper,\n  extendParams,\n  emit,\n  once\n}) {\n  extendParams({\n    freeMode: {\n      enabled: false,\n      momentum: true,\n      momentumRatio: 1,\n      momentumBounce: true,\n      momentumBounceRatio: 1,\n      momentumVelocityRatio: 1,\n      sticky: false,\n      minimumVelocity: 0.02\n    }\n  });\n  function onTouchStart() {\n    const translate = swiper.getTranslate();\n    swiper.setTranslate(translate);\n    swiper.setTransition(0);\n    swiper.touchEventsData.velocities.length = 0;\n    swiper.freeMode.onTouchEnd({\n      currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n    });\n  }\n  function onTouchMove() {\n    const {\n      touchEventsData: data,\n      touches\n    } = swiper;\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: now()\n    });\n  }\n  function onTouchEnd({\n    currentPos\n  }) {\n    const {\n      params,\n      wrapperEl,\n      rtlTranslate: rtl,\n      snapGrid,\n      touchEventsData: data\n    } = swiper;\n    // Time diff\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime;\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n    if (params.freeMode.momentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeMode.momentumVelocityRatio;\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeMode.momentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeMode.sticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeMode.sticky) {\n          // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeMode.sticky) {\n        swiper.slideToClosest();\n        return;\n      }\n      if (params.freeMode.momentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        elementTransitionEnd(wrapperEl, () => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            elementTransitionEnd(wrapperEl, () => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          elementTransitionEnd(wrapperEl, () => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeMode.sticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      emit('_freeModeNoMomentumRelease');\n    }\n    if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n  }\n  Object.assign(swiper, {\n    freeMode: {\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd\n    }\n  });\n}","export default function Grid({\n  swiper,\n  extendParams\n}) {\n  extendParams({\n    grid: {\n      rows: 1,\n      fill: 'column'\n    }\n  });\n  let slidesNumberEvenToRows;\n  let slidesPerRow;\n  let numFullColumns;\n  const initSlides = slidesLength => {\n    const {\n      slidesPerView\n    } = swiper.params;\n    const {\n      rows,\n      fill\n    } = swiper.params.grid;\n    slidesPerRow = slidesNumberEvenToRows / rows;\n    numFullColumns = Math.floor(slidesLength / rows);\n    if (Math.floor(slidesLength / rows) === slidesLength / rows) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / rows) * rows;\n    }\n    if (slidesPerView !== 'auto' && fill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, slidesPerView * rows);\n    }\n  };\n  const updateSlide = (i, slide, slidesLength, getDirectionLabel) => {\n    const {\n      slidesPerGroup,\n      spaceBetween\n    } = swiper.params;\n    const {\n      rows,\n      fill\n    } = swiper.params.grid;\n    // Set slides order\n    let newSlideOrderIndex;\n    let column;\n    let row;\n    if (fill === 'row' && slidesPerGroup > 1) {\n      const groupIndex = Math.floor(i / (slidesPerGroup * rows));\n      const slideIndexInGroup = i - rows * slidesPerGroup * groupIndex;\n      const columnsInGroup = groupIndex === 0 ? slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * rows * slidesPerGroup) / rows), slidesPerGroup);\n      row = Math.floor(slideIndexInGroup / columnsInGroup);\n      column = slideIndexInGroup - row * columnsInGroup + groupIndex * slidesPerGroup;\n      newSlideOrderIndex = column + row * slidesNumberEvenToRows / rows;\n      slide.style.order = newSlideOrderIndex;\n    } else if (fill === 'column') {\n      column = Math.floor(i / rows);\n      row = i - column * rows;\n      if (column > numFullColumns || column === numFullColumns && row === rows - 1) {\n        row += 1;\n        if (row >= rows) {\n          row = 0;\n          column += 1;\n        }\n      }\n    } else {\n      row = Math.floor(i / slidesPerRow);\n      column = i - row * slidesPerRow;\n    }\n    slide.style[getDirectionLabel('margin-top')] = row !== 0 ? spaceBetween && `${spaceBetween}px` : '';\n  };\n  const updateWrapperSize = (slideSize, snapGrid, getDirectionLabel) => {\n    const {\n      spaceBetween,\n      centeredSlides,\n      roundLengths\n    } = swiper.params;\n    const {\n      rows\n    } = swiper.params.grid;\n    swiper.virtualSize = (slideSize + spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / rows) - spaceBetween;\n    swiper.wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n    if (centeredSlides) {\n      const newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid.splice(0, snapGrid.length);\n      snapGrid.push(...newSlidesGrid);\n    }\n  };\n  swiper.grid = {\n    initSlides,\n    updateSlide,\n    updateWrapperSize\n  };\n}","import { getWindow, getDocument } from 'ssr-window';\nimport { elementChildren } from '../../shared/utils.js';\nexport default function HashNavigation({\n  swiper,\n  extendParams,\n  emit,\n  on\n}) {\n  let initialized = false;\n  const document = getDocument();\n  const window = getWindow();\n  extendParams({\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n      getSlideIndex(_s, hash) {\n        if (swiper.virtual && swiper.params.virtual.enabled) {\n          const slideWithHash = swiper.slides.filter(slideEl => slideEl.getAttribute('data-hash') === hash)[0];\n          if (!slideWithHash) return 0;\n          const index = parseInt(slideWithHash.getAttribute('data-swiper-slide-index'), 10);\n          return index;\n        }\n        return swiper.getSlideIndex(elementChildren(swiper.slidesEl, `.${swiper.params.slideClass}[data-hash=\"${hash}\"], swiper-slide[data-hash=\"${hash}\"]`)[0]);\n      }\n    }\n  });\n  const onHashChange = () => {\n    emit('hashChange');\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') : '';\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.params.hashNavigation.getSlideIndex(swiper, newHash);\n      console.log(newIndex);\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  };\n  const setHash = () => {\n    if (!initialized || !swiper.params.hashNavigation.enabled) return;\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') || activeSlideEl.getAttribute('data-history') : '';\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, `#${activeSlideHash}` || '');\n      emit('hashSet');\n    } else {\n      document.location.hash = activeSlideHash || '';\n      emit('hashSet');\n    }\n  };\n  const init = () => {\n    if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n    initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      const index = swiper.params.hashNavigation.getSlideIndex(swiper, hash);\n      swiper.slideTo(index || 0, speed, swiper.params.runCallbacksOnInit, true);\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      window.addEventListener('hashchange', onHashChange);\n    }\n  };\n  const destroy = () => {\n    if (swiper.params.hashNavigation.watchState) {\n      window.removeEventListener('hashchange', onHashChange);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHash();\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHash();\n    }\n  });\n}","import { getWindow } from 'ssr-window';\nexport default function History({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides',\n      keepQuery: false\n    }\n  });\n  let initialized = false;\n  let paths = {};\n  const slugify = text => {\n    return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n  };\n  const getPathValues = urlOverride => {\n    const window = getWindow();\n    let location;\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n    const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return {\n      key,\n      value\n    };\n  };\n  const setHistory = (key, index) => {\n    const window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    let location;\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n    const slide = swiper.slides[index];\n    let value = slugify(slide.getAttribute('data-history'));\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key ? `${key}/` : ''}${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key ? `${key}/` : ''}${value}`;\n    }\n    if (swiper.params.history.keepQuery) {\n      value += location.search;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({\n        value\n      }, null, value);\n    } else {\n      window.history.pushState({\n        value\n      }, null, value);\n    }\n  };\n  const scrollToSlide = (speed, value, runCallbacks) => {\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides[i];\n        const slideHistory = slugify(slide.getAttribute('data-history'));\n        if (slideHistory === value) {\n          const index = swiper.getSlideIndex(slide);\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n  const setHistoryPopState = () => {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, paths.value, false);\n  };\n  const init = () => {\n    const window = getWindow();\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n    if (!paths.key && !paths.value) {\n      if (!swiper.params.history.replaceState) {\n        window.addEventListener('popstate', setHistoryPopState);\n      }\n      return;\n    }\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n  const destroy = () => {\n    const window = getWindow();\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow, getDocument } from 'ssr-window';\nimport { elementOffset, elementParents } from '../../shared/utils.js';\nexport default function Keyboard({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  const window = getWindow();\n  swiper.keyboard = {\n    enabled: false\n  };\n  extendParams({\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n      pageUpDown: true\n    }\n  });\n  function handle(event) {\n    if (!swiper.enabled) return;\n    const {\n      rtlTranslate: rtl\n    } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    const pageUpDown = swiper.params.keyboard.pageUpDown;\n    const isPageUp = pageUpDown && kc === 33;\n    const isPageDown = pageUpDown && kc === 34;\n    const isArrowLeft = kc === 37;\n    const isArrowRight = kc === 39;\n    const isArrowUp = kc === 38;\n    const isArrowDown = kc === 40;\n    // Directions locks\n    if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (elementParents(swiper.el, `.${swiper.params.slideClass}, swiper-slide`).length > 0 && elementParents(swiper.el, `.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const el = swiper.el;\n      const swiperWidth = el.clientWidth;\n      const swiperHeight = el.clientHeight;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = elementOffset(el);\n      if (rtl) swiperOffset.left -= el.scrollLeft;\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n      if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n    } else {\n      if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if (isPageDown || isArrowDown) swiper.slideNext();\n      if (isPageUp || isArrowUp) swiper.slidePrev();\n    }\n    emit('keyPress', kc);\n    return undefined;\n  }\n  function enable() {\n    if (swiper.keyboard.enabled) return;\n    document.addEventListener('keydown', handle);\n    swiper.keyboard.enabled = true;\n  }\n  function disable() {\n    if (!swiper.keyboard.enabled) return;\n    document.removeEventListener('keydown', handle);\n    swiper.keyboard.enabled = false;\n  }\n  on('init', () => {\n    if (swiper.params.keyboard.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.keyboard.enabled) {\n      disable();\n    }\n  });\n  Object.assign(swiper.keyboard, {\n    enable,\n    disable\n  });\n}","import appendSlide from './methods/appendSlide.js';\nimport prependSlide from './methods/prependSlide.js';\nimport addSlide from './methods/addSlide.js';\nimport removeSlide from './methods/removeSlide.js';\nimport removeAllSlides from './methods/removeAllSlides.js';\nexport default function Manipulation({\n  swiper\n}) {\n  Object.assign(swiper, {\n    appendSlide: appendSlide.bind(swiper),\n    prependSlide: prependSlide.bind(swiper),\n    addSlide: addSlide.bind(swiper),\n    removeSlide: removeSlide.bind(swiper),\n    removeAllSlides: removeAllSlides.bind(swiper)\n  });\n}","export default function addSlide(index, slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.recalcSlides();\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides[i];\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) slidesEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    slidesEl.append(slides);\n  }\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    slidesEl.append(slidesBuffer[i]);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function appendSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  const appendElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.append(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.append(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) appendElement(slides[i]);\n    }\n  } else {\n    appendElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n}","export default function prependSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  const prependElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.prepend(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.prepend(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) prependElement(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    prependElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}","export default function removeAllSlides() {\n  const swiper = this;\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}","export default function removeSlide(slidesIndexes) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","/* eslint-disable consistent-return */\nimport { getWindow } from 'ssr-window';\nimport { now, nextTick } from '../../shared/utils.js';\nexport default function Mousewheel({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarget: 'container',\n      thresholdDelta: null,\n      thresholdTime: null\n    }\n  });\n  swiper.mousewheel = {\n    enabled: false\n  };\n  let timeout;\n  let lastScrollTime = now();\n  let lastEventBeforeSnap;\n  const recentWheelEvents = [];\n  function normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n    if (e.shiftKey && !pX) {\n      // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) {\n        // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else {\n        // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = pX < 1 ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = pY < 1 ? -1 : 1;\n    }\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY\n    };\n  }\n  function handleMouseEnter() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = true;\n  }\n  function handleMouseLeave() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = false;\n  }\n  function animateSlider(newEvent) {\n    if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\n      // Prevent if delta of wheel scroll delta is below configured threshold\n      return false;\n    }\n    if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\n      // Prevent if time between scrolls is below configured threshold\n      return false;\n    }\n\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    lastScrollTime = new window.Date().getTime();\n    // Return false as a default\n    return false;\n  }\n  function releaseScroll(newEvent) {\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  }\n  function handle(event) {\n    let e = event;\n    let disableParentSwiper = true;\n    if (!swiper.enabled) return;\n    const params = swiper.params.mousewheel;\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    const targetElContainsTarget = targetEl && targetEl.contains(e.target);\n    if (!swiper.mouseEntered && !targetElContainsTarget && !params.releaseOnEdges) return true;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n    const data = normalize(e);\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n    if (delta === 0) return true;\n    if (params.invert) delta = -delta;\n\n    // Get the scroll positions\n    let positions = swiper.getTranslate() + delta * params.sensitivity;\n    if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n    if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate();\n\n    // When loop is true:\n    //     the disableParentSwiper will be true.\n    // When loop is false:\n    //     if the scroll positions is not on edge,\n    //     then the disableParentSwiper will be true.\n    //     if the scroll on edge positions,\n    //     then the disableParentSwiper will be false.\n    disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n    if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n    if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event\n      };\n\n      // Keep the most recent events\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n          animateSlider(newEvent);\n        }\n      } else {\n        animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta)\n      };\n      const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        lastEventBeforeSnap = undefined;\n        let position = swiper.getTranslate() + delta * params.sensitivity;\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n        if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n          swiper.updateSlidesClasses();\n        }\n        if (swiper.params.loop) {\n          swiper.loopFix({\n            direction: newEvent.direction < 0 ? 'next' : 'prev',\n            byMousewheel: true\n          });\n        }\n        if (swiper.params.freeMode.sticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(timeout);\n          timeout = undefined;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            timeout = nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n\n          if (!timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            timeout = nextTick(() => {\n              const snapToThreshold = 0.5;\n              lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    return false;\n  }\n  function events(method) {\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    targetEl[method]('mouseenter', handleMouseEnter);\n    targetEl[method]('mouseleave', handleMouseLeave);\n    targetEl[method]('wheel', handle);\n  }\n  function enable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener('wheel', handle);\n      return true;\n    }\n    if (swiper.mousewheel.enabled) return false;\n    events('addEventListener');\n    swiper.mousewheel.enabled = true;\n    return true;\n  }\n  function disable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, handle);\n      return true;\n    }\n    if (!swiper.mousewheel.enabled) return false;\n    events('removeEventListener');\n    swiper.mousewheel.enabled = false;\n    return true;\n  }\n  on('init', () => {\n    if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n      disable();\n    }\n    if (swiper.params.mousewheel.enabled) enable();\n  });\n  on('destroy', () => {\n    if (swiper.params.cssMode) {\n      enable();\n    }\n    if (swiper.mousewheel.enabled) disable();\n  });\n  Object.assign(swiper.mousewheel, {\n    enable,\n    disable\n  });\n}","import createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Navigation({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n      navigationDisabledClass: 'swiper-navigation-disabled'\n    }\n  });\n  swiper.navigation = {\n    nextEl: null,\n    prevEl: null\n  };\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getEl(el) {\n    let res;\n    if (el && typeof el === 'string' && swiper.isElement) {\n      res = swiper.el.shadowRoot.querySelector(el);\n      if (res) return res;\n    }\n    if (el) {\n      if (typeof el === 'string') res = [...document.querySelectorAll(el)];\n      if (swiper.params.uniqueNavElements && typeof el === 'string' && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) {\n        res = swiper.el.querySelector(el);\n      }\n    }\n    if (el && !res) return el;\n    // if (Array.isArray(res) && res.length === 1) res = res[0];\n    return res;\n  }\n  function toggleEl(el, disabled) {\n    const params = swiper.params.navigation;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (subEl) {\n        subEl.classList[disabled ? 'add' : 'remove'](...params.disabledClass.split(' '));\n        if (subEl.tagName === 'BUTTON') subEl.disabled = disabled;\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n        }\n      }\n    });\n  }\n  function update() {\n    // Update Navigation Buttons\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (swiper.params.loop) {\n      toggleEl(prevEl, false);\n      toggleEl(nextEl, false);\n      return;\n    }\n    toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);\n    toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);\n  }\n  function onPrevClick(e) {\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slidePrev();\n    emit('navigationPrev');\n  }\n  function onNextClick(e) {\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slideNext();\n    emit('navigationNext');\n  }\n  function init() {\n    const params = swiper.params.navigation;\n    swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n      nextEl: 'swiper-button-next',\n      prevEl: 'swiper-button-prev'\n    });\n    if (!(params.nextEl || params.prevEl)) return;\n    let nextEl = getEl(params.nextEl);\n    let prevEl = getEl(params.prevEl);\n    Object.assign(swiper.navigation, {\n      nextEl,\n      prevEl\n    });\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const initButton = (el, dir) => {\n      if (el) {\n        el.addEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      }\n      if (!swiper.enabled && el) {\n        el.classList.add(...params.lockClass.split(' '));\n      }\n    };\n    nextEl.forEach(el => initButton(el, 'next'));\n    prevEl.forEach(el => initButton(el, 'prev'));\n  }\n  function destroy() {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const destroyButton = (el, dir) => {\n      el.removeEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      el.classList.remove(...swiper.params.navigation.disabledClass.split(' '));\n    };\n    nextEl.forEach(el => destroyButton(el, 'next'));\n    prevEl.forEach(el => destroyButton(el, 'prev'));\n  }\n  on('init', () => {\n    if (swiper.params.navigation.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      update();\n    }\n  });\n  on('toEdge fromEdge lock unlock', () => {\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.navigation.lockClass));\n  });\n  on('click', (_s, e) => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const targetEl = e.target;\n    if (swiper.params.navigation.hideOnClick && !prevEl.includes(targetEl) && !nextEl.includes(targetEl)) {\n      if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n      let isHidden;\n      if (nextEl.length) {\n        isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      } else if (prevEl.length) {\n        isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      }\n      if (isHidden === true) {\n        emit('navigationShow');\n      } else {\n        emit('navigationHide');\n      }\n      [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.toggle(swiper.params.navigation.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    init();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    destroy();\n  };\n  Object.assign(swiper.navigation, {\n    enable,\n    disable,\n    update,\n    init,\n    destroy\n  });\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nimport { elementIndex, elementOuterSize, elementParents } from '../../shared/utils.js';\nexport default function Pagination({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const pfx = 'swiper-pagination';\n  extendParams({\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets',\n      // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: `${pfx}-bullet`,\n      bulletActiveClass: `${pfx}-bullet-active`,\n      modifierClass: `${pfx}-`,\n      currentClass: `${pfx}-current`,\n      totalClass: `${pfx}-total`,\n      hiddenClass: `${pfx}-hidden`,\n      progressbarFillClass: `${pfx}-progressbar-fill`,\n      progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n      clickableClass: `${pfx}-clickable`,\n      lockClass: `${pfx}-lock`,\n      horizontalClass: `${pfx}-horizontal`,\n      verticalClass: `${pfx}-vertical`,\n      paginationDisabledClass: `${pfx}-disabled`\n    }\n  });\n  swiper.pagination = {\n    el: null,\n    bullets: []\n  };\n  let bulletSize;\n  let dynamicBulletIndex = 0;\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function isPaginationDisabled() {\n    return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;\n  }\n  function setSideBullets(bulletEl, position) {\n    const {\n      bulletActiveClass\n    } = swiper.params.pagination;\n    if (!bulletEl) return;\n    bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n    if (bulletEl) {\n      bulletEl.classList.add(`${bulletActiveClass}-${position}`);\n      bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n      if (bulletEl) {\n        bulletEl.classList.add(`${bulletActiveClass}-${position}-${position}`);\n      }\n    }\n  }\n  function onBulletClick(e) {\n    const bulletEl = e.target.closest(classesToSelector(swiper.params.pagination.bulletClass));\n    if (!bulletEl) {\n      return;\n    }\n    e.preventDefault();\n    const index = elementIndex(bulletEl) * swiper.params.slidesPerGroup;\n    if (swiper.params.loop) {\n      if (swiper.realIndex === index) return;\n      const newSlideIndex = swiper.getSlideIndexByData(index);\n      const currentSlideIndex = swiper.getSlideIndexByData(swiper.realIndex);\n      if (newSlideIndex > swiper.slides.length - swiper.loopedSlides) {\n        swiper.loopFix({\n          direction: newSlideIndex > currentSlideIndex ? 'next' : 'prev',\n          activeSlideIndex: newSlideIndex,\n          slideTo: false\n        });\n      }\n      swiper.slideToLoop(index);\n    } else {\n      swiper.slideTo(index);\n    }\n  }\n  function update() {\n    // Render || Update Pagination bullets/items\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    // Current/Total\n    let current;\n    let previousIndex;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      previousIndex = swiper.previousRealIndex || 0;\n      current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n      previousIndex = swiper.previousSnapIndex;\n    } else {\n      previousIndex = swiper.previousIndex || 0;\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        bulletSize = elementOuterSize(bullets[0], swiper.isHorizontal() ? 'width' : 'height', true);\n        el.forEach(subEl => {\n          subEl.style[swiper.isHorizontal() ? 'width' : 'height'] = `${bulletSize * (params.dynamicMainBullets + 4)}px`;\n        });\n        if (params.dynamicMainBullets > 1 && previousIndex !== undefined) {\n          dynamicBulletIndex += current - (previousIndex || 0);\n          if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (dynamicBulletIndex < 0) {\n            dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = Math.max(current - dynamicBulletIndex, 0);\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.forEach(bulletEl => {\n        const classesToRemove = [...['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`)].map(s => typeof s === 'string' && s.includes(' ') ? s.split(' ') : s).flat();\n        bulletEl.classList.remove(...classesToRemove);\n      });\n      if (el.length > 1) {\n        bullets.forEach(bullet => {\n          const bulletIndex = elementIndex(bullet);\n          if (bulletIndex === current) {\n            bullet.classList.add(...params.bulletActiveClass.split(' '));\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              bullet.classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n            if (bulletIndex === firstIndex) {\n              setSideBullets(bullet, 'prev');\n            }\n            if (bulletIndex === lastIndex) {\n              setSideBullets(bullet, 'next');\n            }\n          }\n        });\n      } else {\n        const bullet = bullets[current];\n        if (bullet) {\n          bullet.classList.add(...params.bulletActiveClass.split(' '));\n        }\n        if (params.dynamicBullets) {\n          const firstDisplayedBullet = bullets[firstIndex];\n          const lastDisplayedBullet = bullets[lastIndex];\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            if (bullets[i]) {\n              bullets[i].classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n          }\n          setSideBullets(firstDisplayedBullet, 'prev');\n          setSideBullets(lastDisplayedBullet, 'next');\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.forEach(bullet => {\n          bullet.style[swiper.isHorizontal() ? offsetProp : 'top'] = `${bulletsOffset}px`;\n        });\n      }\n    }\n    el.forEach((subEl, subElIndex) => {\n      if (params.type === 'fraction') {\n        subEl.querySelectorAll(classesToSelector(params.currentClass)).forEach(fractionEl => {\n          fractionEl.textContent = params.formatFractionCurrent(current + 1);\n        });\n        subEl.querySelectorAll(classesToSelector(params.totalClass)).forEach(totalEl => {\n          totalEl.textContent = params.formatFractionTotal(total);\n        });\n      }\n      if (params.type === 'progressbar') {\n        let progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        const scale = (current + 1) / total;\n        let scaleX = 1;\n        let scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        subEl.querySelectorAll(classesToSelector(params.progressbarFillClass)).forEach(progressEl => {\n          progressEl.style.transform = `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`;\n          progressEl.style.transitionDuration = `${swiper.params.speed}ms`;\n        });\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        subEl.innerHTML = params.renderCustom(swiper, current + 1, total);\n        if (subElIndex === 0) emit('paginationRender', subEl);\n      } else {\n        if (subElIndex === 0) emit('paginationRender', subEl);\n        emit('paginationUpdate', subEl);\n      }\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n      }\n    });\n  }\n  function render() {\n    // Render Container\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      let numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) {\n        numberOfBullets = slidesLength;\n      }\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n      }\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n    }\n    swiper.pagination.bullets = [];\n    el.forEach(subEl => {\n      if (params.type !== 'custom') {\n        subEl.innerHTML = paginationHTML || '';\n      }\n      if (params.type === 'bullets') {\n        swiper.pagination.bullets.push(...subEl.querySelectorAll(classesToSelector(params.bulletClass)));\n      }\n    });\n    if (params.type !== 'custom') {\n      emit('paginationRender', el[0]);\n    }\n  }\n  function init() {\n    swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n      el: 'swiper-pagination'\n    });\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = [...document.querySelectorAll(params.el)];\n    }\n    if (!el) {\n      el = params.el;\n    }\n    if (!el || el.length === 0) return;\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && Array.isArray(el) && el.length > 1) {\n      el = [...swiper.el.querySelectorAll(params.el)];\n      // check if it belongs to another nested Swiper\n      if (el.length > 1) {\n        el = el.filter(subEl => {\n          if (elementParents(subEl, '.swiper')[0] !== swiper.el) return false;\n          return true;\n        })[0];\n      }\n    }\n    if (Array.isArray(el) && el.length === 1) el = el[0];\n    Object.assign(swiper.pagination, {\n      el\n    });\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (params.type === 'bullets' && params.clickable) {\n        subEl.classList.add(params.clickableClass);\n      }\n      subEl.classList.add(params.modifierClass + params.type);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        subEl.classList.add(`${params.modifierClass}${params.type}-dynamic`);\n        dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        subEl.classList.add(params.progressbarOppositeClass);\n      }\n      if (params.clickable) {\n        subEl.addEventListener('click', onBulletClick);\n      }\n      if (!swiper.enabled) {\n        subEl.classList.add(params.lockClass);\n      }\n    });\n  }\n  function destroy() {\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => {\n        subEl.classList.remove(params.hiddenClass);\n        subEl.classList.remove(params.modifierClass + params.type);\n        subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        if (params.clickable) {\n          subEl.removeEventListener('click', onBulletClick);\n        }\n      });\n    }\n    if (swiper.pagination.bullets) swiper.pagination.bullets.forEach(subEl => subEl.classList.remove(...params.bulletActiveClass.split(' ')));\n  }\n  on('changeDirection', () => {\n    if (!swiper.pagination || !swiper.pagination.el) return;\n    const params = swiper.params.pagination;\n    let {\n      el\n    } = swiper.pagination;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.classList.remove(params.horizontalClass, params.verticalClass);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    });\n  });\n  on('init', () => {\n    if (swiper.params.pagination.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      render();\n      update();\n    }\n  });\n  on('activeIndexChange', () => {\n    if (typeof swiper.snapIndex === 'undefined') {\n      update();\n    }\n  });\n  on('snapIndexChange', () => {\n    update();\n  });\n  on('snapGridLengthChange', () => {\n    render();\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.pagination.lockClass));\n    }\n  });\n  on('lock unlock', () => {\n    update();\n  });\n  on('click', (_s, e) => {\n    const targetEl = e.target;\n    let {\n      el\n    } = swiper.pagination;\n    if (!Array.isArray(el)) el = [el].filter(element => !!element);\n    if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {\n      if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n      const isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);\n      if (isHidden === true) {\n        emit('paginationShow');\n      } else {\n        emit('paginationHide');\n      }\n      el.forEach(subEl => subEl.classList.toggle(swiper.params.pagination.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.remove(swiper.params.pagination.paginationDisabledClass));\n    }\n    init();\n    render();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.add(swiper.params.pagination.paginationDisabledClass));\n    }\n    destroy();\n  };\n  Object.assign(swiper.pagination, {\n    enable,\n    disable,\n    render,\n    update,\n    init,\n    destroy\n  });\n}","import { elementChildren } from '../../shared/utils.js';\nexport default function Parallax({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    parallax: {\n      enabled: false\n    }\n  });\n  const setTransform = (el, progress) => {\n    const {\n      rtl\n    } = swiper;\n    const rtlFactor = rtl ? -1 : 1;\n    const p = el.getAttribute('data-swiper-parallax') || '0';\n    let x = el.getAttribute('data-swiper-parallax-x');\n    let y = el.getAttribute('data-swiper-parallax-y');\n    const scale = el.getAttribute('data-swiper-parallax-scale');\n    const opacity = el.getAttribute('data-swiper-parallax-opacity');\n    const rotate = el.getAttribute('data-swiper-parallax-rotate');\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      el.style.opacity = currentOpacity;\n    }\n    let transform = `translate3d(${x}, ${y}, 0px)`;\n    if (typeof scale !== 'undefined' && scale !== null) {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      transform += ` scale(${currentScale})`;\n    }\n    if (rotate && typeof rotate !== 'undefined' && rotate !== null) {\n      const currentRotate = rotate * progress * -1;\n      transform += ` rotate(${currentRotate}deg)`;\n    }\n    el.style.transform = transform;\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      slides,\n      progress,\n      snapGrid\n    } = swiper;\n    elementChildren(el, '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(subEl => {\n      setTransform(subEl, progress);\n    });\n    slides.forEach((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      slideEl.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale], [data-swiper-parallax-rotate]').forEach(subEl => {\n        setTransform(subEl, slideProgress);\n      });\n    });\n  };\n  const setTransition = (duration = swiper.params.speed) => {\n    const {\n      el\n    } = swiper;\n    el.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(parallaxEl => {\n      let parallaxDuration = parseInt(parallaxEl.getAttribute('data-swiper-parallax-duration'), 10) || duration;\n      if (duration === 0) parallaxDuration = 0;\n      parallaxEl.style.transitionDuration = `${parallaxDuration}ms`;\n    });\n  };\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementOffset, nextTick } from '../../shared/utils.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Scrollbar({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  let isTouched = false;\n  let timeout = null;\n  let dragTimeout = null;\n  let dragStartPos;\n  let dragSize;\n  let trackSize;\n  let divider;\n  extendParams({\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n      scrollbarDisabledClass: 'swiper-scrollbar-disabled',\n      horizontalClass: `swiper-scrollbar-horizontal`,\n      verticalClass: `swiper-scrollbar-vertical`\n    }\n  });\n  swiper.scrollbar = {\n    el: null,\n    dragEl: null\n  };\n  function setTranslate() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n    const progress = swiper.params.loop ? swiper.progressLoop : swiper.progress;\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.transform = `translate3d(${newPos}px, 0, 0)`;\n      dragEl.style.width = `${newSize}px`;\n    } else {\n      dragEl.style.transform = `translate3d(0px, ${newPos}px, 0)`;\n      dragEl.style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(timeout);\n      el.style.opacity = 1;\n      timeout = setTimeout(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n  }\n  function setTransition(duration) {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.dragEl.style.transitionDuration = `${duration}ms`;\n  }\n  function updateSize() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    dragEl.style.width = '';\n    dragEl.style.height = '';\n    trackSize = swiper.isHorizontal() ? el.offsetWidth : el.offsetHeight;\n    divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.width = `${dragSize}px`;\n    } else {\n      dragEl.style.height = `${dragSize}px`;\n    }\n    if (divider >= 1) {\n      el.style.display = 'none';\n    } else {\n      el.style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      el.style.opacity = 0;\n    }\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      scrollbar.el.classList[swiper.isLocked ? 'add' : 'remove'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function getPointerPosition(e) {\n    return swiper.isHorizontal() ? e.clientX : e.clientY;\n  }\n  function setDragPosition(e) {\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    let positionRatio;\n    positionRatio = (getPointerPosition(e) - elementOffset(el)[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n    const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  function onDragStart(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    isTouched = true;\n    dragStartPos = e.target === dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n    wrapperEl.style.transitionDuration = '100ms';\n    dragEl.style.transitionDuration = '100ms';\n    setDragPosition(e);\n    clearTimeout(dragTimeout);\n    el.style.transitionDuration = '0ms';\n    if (params.hide) {\n      el.style.opacity = 1;\n    }\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = 'none';\n    }\n    emit('scrollbarDragStart', e);\n  }\n  function onDragMove(e) {\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    if (!isTouched) return;\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    setDragPosition(e);\n    wrapperEl.style.transitionDuration = '0ms';\n    el.style.transitionDuration = '0ms';\n    dragEl.style.transitionDuration = '0ms';\n    emit('scrollbarDragMove', e);\n  }\n  function onDragEnd(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    if (!isTouched) return;\n    isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = '';\n      wrapperEl.style.transitionDuration = '';\n    }\n    if (params.hide) {\n      clearTimeout(dragTimeout);\n      dragTimeout = nextTick(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n    emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  }\n  function events(method) {\n    const {\n      scrollbar,\n      params\n    } = swiper;\n    const el = scrollbar.el;\n    if (!el) return;\n    const target = el;\n    const activeListener = params.passiveListeners ? {\n      passive: false,\n      capture: false\n    } : false;\n    const passiveListener = params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    if (!target) return;\n    const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n    target[eventMethod]('pointerdown', onDragStart, activeListener);\n    document[eventMethod]('pointermove', onDragMove, activeListener);\n    document[eventMethod]('pointerup', onDragEnd, passiveListener);\n  }\n  function enableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('on');\n  }\n  function disableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('off');\n  }\n  function init() {\n    const {\n      scrollbar,\n      el: swiperEl\n    } = swiper;\n    swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n      el: 'swiper-scrollbar'\n    });\n    const params = swiper.params.scrollbar;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = document.querySelectorAll(params.el);\n    } else if (!el) {\n      el = params.el;\n    }\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && el.length > 1 && swiperEl.querySelectorAll(params.el).length === 1) {\n      el = swiperEl.querySelector(params.el);\n    }\n    if (el.length > 0) el = el[0];\n    el.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    let dragEl;\n    if (el) {\n      dragEl = el.querySelector(`.${swiper.params.scrollbar.dragClass}`);\n      if (!dragEl) {\n        dragEl = createElement('div', swiper.params.scrollbar.dragClass);\n        el.append(dragEl);\n      }\n    }\n    Object.assign(scrollbar, {\n      el,\n      dragEl\n    });\n    if (params.draggable) {\n      enableDraggable();\n    }\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function destroy() {\n    const params = swiper.params.scrollbar;\n    const el = swiper.scrollbar.el;\n    if (el) {\n      el.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    }\n    disableDraggable();\n  }\n  on('init', () => {\n    if (swiper.params.scrollbar.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      updateSize();\n      setTranslate();\n    }\n  });\n  on('update resize observerUpdate lock unlock', () => {\n    updateSize();\n  });\n  on('setTranslate', () => {\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    setTransition(duration);\n  });\n  on('enable disable', () => {\n    const {\n      el\n    } = swiper.scrollbar;\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    init();\n    updateSize();\n    setTranslate();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    destroy();\n  };\n  Object.assign(swiper.scrollbar, {\n    enable,\n    disable,\n    updateSize,\n    setTranslate,\n    init,\n    destroy\n  });\n}","import { getDocument } from 'ssr-window';\nimport { elementChildren, isObject } from '../../shared/utils.js';\nexport default function Thumb({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-thumbs'\n    }\n  });\n  let initialized = false;\n  let swiperCreated = false;\n  swiper.thumbs = {\n    swiper: null\n  };\n  function onThumbClick() {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && clickedSlide.classList.contains(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt(thumbsSwiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      swiper.slideToLoop(slideToIndex);\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n  function init() {\n    const {\n      thumbs: thumbsParams\n    } = swiper.params;\n    if (initialized) return false;\n    initialized = true;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Object.assign(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      Object.assign(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper.update();\n    } else if (isObject(thumbsParams.swiper)) {\n      const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n      Object.assign(thumbsSwiperParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n      swiperCreated = true;\n    }\n    swiper.thumbs.swiper.el.classList.add(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', onThumbClick);\n    return true;\n  }\n  function update(initial) {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n    thumbsToActivate = Math.floor(thumbsToActivate);\n    thumbsSwiper.slides.forEach(slideEl => slideEl.classList.remove(thumbActiveClass));\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        elementChildren(thumbsSwiper.slidesEl, `[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).forEach(slideEl => {\n          slideEl.classList.add(thumbActiveClass);\n        });\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        if (thumbsSwiper.slides[swiper.realIndex + i]) {\n          thumbsSwiper.slides[swiper.realIndex + i].classList.add(thumbActiveClass);\n        }\n      }\n    }\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      const currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n      if (thumbsSwiper.params.loop) {\n        const newThumbsSlide = thumbsSwiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') === `${swiper.realIndex}`)[0];\n        newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) {\n          // newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n  }\n  on('beforeInit', () => {\n    const {\n      thumbs\n    } = swiper.params;\n    if (!thumbs || !thumbs.swiper) return;\n    if (typeof thumbs.swiper === 'string' || thumbs.swiper instanceof HTMLElement) {\n      const document = getDocument();\n      const getThumbsElementAndInit = () => {\n        const thumbsElement = typeof thumbs.swiper === 'string' ? document.querySelector(thumbs.swiper) : thumbs.swiper;\n        if (thumbsElement && thumbsElement.swiper) {\n          thumbs.swiper = thumbsElement.swiper;\n          init();\n          update(true);\n        } else if (thumbsElement) {\n          const onThumbsSwiper = e => {\n            thumbs.swiper = e.detail[0];\n            thumbsElement.removeEventListener('init', onThumbsSwiper);\n            init();\n            update(true);\n            thumbs.swiper.update();\n            swiper.update();\n          };\n          thumbsElement.addEventListener('init', onThumbsSwiper);\n        }\n        return thumbsElement;\n      };\n      const watchForThumbsToAppear = () => {\n        if (swiper.destroyed) return;\n        const thumbsElement = getThumbsElementAndInit();\n        if (!thumbsElement) {\n          requestAnimationFrame(watchForThumbsToAppear);\n        }\n      };\n      requestAnimationFrame(watchForThumbsToAppear);\n    } else {\n      init();\n      update(true);\n    }\n  });\n  on('slideChange update resize observerUpdate', () => {\n    update();\n  });\n  on('setTransition', (_s, duration) => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    thumbsSwiper.setTransition(duration);\n  });\n  on('beforeDestroy', () => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    if (swiperCreated) {\n      thumbsSwiper.destroy();\n    }\n  });\n  Object.assign(swiper.thumbs, {\n    init,\n    update\n  });\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementChildren, setCSSProperty } from '../../shared/utils.js';\nexport default function Virtual({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0\n    }\n  });\n  let cssModeTimeout;\n  const document = getDocument();\n  swiper.virtual = {\n    cache: {},\n    from: undefined,\n    to: undefined,\n    slides: [],\n    offset: 0,\n    slidesGrid: []\n  };\n  const tempDOM = document.createElement('div');\n  function renderSlide(slide, index) {\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    // eslint-disable-next-line\n    let slideEl;\n    if (params.renderSlide) {\n      slideEl = params.renderSlide.call(swiper, slide, index);\n      if (typeof slideEl === 'string') {\n        tempDOM.innerHTML = slideEl;\n        slideEl = tempDOM.children[0];\n      }\n    } else if (swiper.isElement) {\n      slideEl = createElement('swiper-slide');\n    } else {\n      slideEl = createElement('div', swiper.params.slideClass);\n    }\n    slideEl.setAttribute('data-swiper-slide-index', index);\n    if (!params.renderSlide) {\n      slideEl.innerHTML = slide;\n    }\n    if (params.cache) swiper.virtual.cache[index] = slideEl;\n    return slideEl;\n  }\n  function update(force) {\n    const {\n      slidesPerView,\n      slidesPerGroup,\n      centeredSlides,\n      loop: isLoop\n    } = swiper.params;\n    const {\n      addSlidesBefore,\n      addSlidesAfter\n    } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      offset: previousOffset\n    } = swiper.virtual;\n    if (!swiper.params.cssMode) {\n      swiper.updateActiveIndex();\n    }\n    const activeIndex = swiper.activeIndex || 0;\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = (isLoop ? slidesPerView : slidesPerGroup) + addSlidesBefore;\n    }\n    let from = activeIndex - slidesBefore;\n    let to = activeIndex + slidesAfter;\n    if (!isLoop) {\n      from = Math.max(from, 0);\n      to = Math.min(to, slides.length - 1);\n    }\n    let offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n    if (isLoop && activeIndex >= slidesBefore) {\n      from -= slidesBefore;\n      if (!centeredSlides) offset += swiper.slidesGrid[0];\n    } else if (isLoop && activeIndex < slidesBefore) {\n      from = -slidesBefore;\n      if (centeredSlides) offset += swiper.slidesGrid[0];\n    }\n    Object.assign(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n      slidesBefore,\n      slidesAfter\n    });\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      emit('virtualUpdate');\n    }\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.forEach(slideEl => {\n          slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n        });\n      }\n      swiper.updateProgress();\n      emit('virtualUpdate');\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()\n      });\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      } else {\n        emit('virtualUpdate');\n      }\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    const getSlideIndex = index => {\n      let slideIndex = index;\n      if (index < 0) {\n        slideIndex = slides.length + index;\n      } else if (slideIndex >= slides.length) {\n        // eslint-disable-next-line\n        slideIndex = slideIndex - slides.length;\n      }\n      return slideIndex;\n    };\n    if (force) {\n      swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}, swiper-slide`).forEach(slideEl => {\n        slideEl.remove();\n      });\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          const slideIndex = getSlideIndex(i);\n          swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${slideIndex}\"], swiper-slide[data-swiper-slide-index=\"${slideIndex}\"]`).forEach(slideEl => {\n            slideEl.remove();\n          });\n        }\n      }\n    }\n    const loopFrom = isLoop ? -slides.length : 0;\n    const loopTo = isLoop ? slides.length * 2 : slides.length;\n    for (let i = loopFrom; i < loopTo; i += 1) {\n      if (i >= from && i <= to) {\n        const slideIndex = getSlideIndex(i);\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(slideIndex);\n        } else {\n          if (i > previousTo) appendIndexes.push(slideIndex);\n          if (i < previousFrom) prependIndexes.push(slideIndex);\n        }\n      }\n    }\n    appendIndexes.forEach(index => {\n      swiper.slidesEl.append(renderSlide(slides[index], index));\n    });\n    if (isLoop) {\n      for (let i = prependIndexes.length - 1; i >= 0; i -= 1) {\n        const index = prependIndexes[i];\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      }\n    } else {\n      prependIndexes.sort((a, b) => b - a);\n      prependIndexes.forEach(index => {\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      });\n    }\n    elementChildren(swiper.slidesEl, '.swiper-slide, swiper-slide').forEach(slideEl => {\n      slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n    });\n    onRendered();\n  }\n  function appendSlide(slides) {\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    update(true);\n  }\n  function prependSlide(slides) {\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach(cachedIndex => {\n        const cachedEl = cache[cachedIndex];\n        const cachedElIndex = cachedEl.getAttribute('data-swiper-slide-index');\n        if (cachedElIndex) {\n          cachedEl.setAttribute('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  }\n  function removeSlide(slidesIndexes) {\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    update(true);\n    swiper.slideTo(activeIndex, 0);\n  }\n  function removeAllSlides() {\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    update(true);\n    swiper.slideTo(0, 0);\n  }\n  on('beforeInit', () => {\n    if (!swiper.params.virtual.enabled) return;\n    let domSlidesAssigned;\n    if (typeof swiper.passedParams.virtual.slides === 'undefined') {\n      const slides = [...swiper.slidesEl.children].filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`));\n      if (slides && slides.length) {\n        swiper.virtual.slides = [...slides];\n        domSlidesAssigned = true;\n        slides.forEach((slideEl, slideIndex) => {\n          slideEl.setAttribute('data-swiper-slide-index', slideIndex);\n          swiper.virtual.cache[slideIndex] = slideEl;\n          slideEl.remove();\n        });\n      }\n    }\n    if (!domSlidesAssigned) {\n      swiper.virtual.slides = swiper.params.virtual.slides;\n    }\n    swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n    if (!swiper.params.initialSlide) {\n      update();\n    }\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode && !swiper._immediateVirtual) {\n      clearTimeout(cssModeTimeout);\n      cssModeTimeout = setTimeout(() => {\n        update();\n      }, 100);\n    } else {\n      update();\n    }\n  });\n  on('init update resize', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n    }\n  });\n  Object.assign(swiper.virtual, {\n    appendSlide,\n    prependSlide,\n    removeSlide,\n    removeAllSlides,\n    update\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementChildren, elementOffset, elementParents, getTranslate } from '../../shared/utils.js';\nexport default function Zoom({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed'\n    }\n  });\n  swiper.zoom = {\n    enabled: false\n  };\n  let currentScale = 1;\n  let isScaling = false;\n  let fakeGestureTouched;\n  let fakeGestureMoved;\n  const evCache = [];\n  const gesture = {\n    originX: 0,\n    originY: 0,\n    slideEl: undefined,\n    slideWidth: undefined,\n    slideHeight: undefined,\n    imageEl: undefined,\n    imageWrapEl: undefined,\n    maxRatio: 3\n  };\n  const image = {\n    isTouched: undefined,\n    isMoved: undefined,\n    currentX: undefined,\n    currentY: undefined,\n    minX: undefined,\n    minY: undefined,\n    maxX: undefined,\n    maxY: undefined,\n    width: undefined,\n    height: undefined,\n    startX: undefined,\n    startY: undefined,\n    touchesStart: {},\n    touchesCurrent: {}\n  };\n  const velocity = {\n    x: undefined,\n    y: undefined,\n    prevPositionX: undefined,\n    prevPositionY: undefined,\n    prevTime: undefined\n  };\n  let scale = 1;\n  Object.defineProperty(swiper.zoom, 'scale', {\n    get() {\n      return scale;\n    },\n    set(value) {\n      if (scale !== value) {\n        const imageEl = gesture.imageEl;\n        const slideEl = gesture.slideEl;\n        emit('zoomChange', value, imageEl, slideEl);\n      }\n      scale = value;\n    }\n  });\n  function getDistanceBetweenTouches() {\n    if (evCache.length < 2) return 1;\n    const x1 = evCache[0].pageX;\n    const y1 = evCache[0].pageY;\n    const x2 = evCache[1].pageX;\n    const y2 = evCache[1].pageY;\n    const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    return distance;\n  }\n  function getScaleOrigin() {\n    if (evCache.length < 2) return {\n      x: null,\n      y: null\n    };\n    const box = gesture.imageEl.getBoundingClientRect();\n    return [(evCache[0].pageX + (evCache[1].pageX - evCache[0].pageX) / 2 - box.x) / currentScale, (evCache[0].pageY + (evCache[1].pageY - evCache[0].pageY) / 2 - box.y) / currentScale];\n  }\n  function getSlideSelector() {\n    return swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  }\n  function eventWithinSlide(e) {\n    const slideSelector = getSlideSelector();\n    if (e.target.matches(slideSelector)) return true;\n    if (swiper.slides.filter(slideEl => slideEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n  function eventWithinZoomContainer(e) {\n    const selector = `.${swiper.params.zoom.containerClass}`;\n    if (e.target.matches(selector)) return true;\n    if ([...swiper.el.querySelectorAll(selector)].filter(containerEl => containerEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n\n  // Events\n  function onGestureStart(e) {\n    if (e.pointerType === 'mouse') {\n      evCache.splice(0, evCache.length);\n    }\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    evCache.push(e);\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureTouched = true;\n    gesture.scaleStart = getDistanceBetweenTouches();\n    if (!gesture.slideEl) {\n      gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      if (!gesture.slideEl) gesture.slideEl = swiper.slides[swiper.activeIndex];\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n      if (!gesture.imageWrapEl) {\n        gesture.imageEl = undefined;\n        return;\n      }\n      gesture.maxRatio = gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    }\n    if (gesture.imageEl) {\n      const [originX, originY] = getScaleOrigin();\n      gesture.originX = originX;\n      gesture.originY = originY;\n      gesture.imageEl.style.transitionDuration = '0ms';\n    }\n    isScaling = true;\n  }\n  function onGestureChange(e) {\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache[pointerIndex] = e;\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureMoved = true;\n    gesture.scaleMove = getDistanceBetweenTouches();\n    if (!gesture.imageEl) {\n      return;\n    }\n    zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n    }\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function onGestureEnd(e) {\n    if (!eventWithinSlide(e)) return;\n    if (e.pointerType === 'mouse' && e.type === 'pointerout') return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache.splice(pointerIndex, 1);\n    if (!fakeGestureTouched || !fakeGestureMoved) {\n      return;\n    }\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    if (!gesture.imageEl) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.imageEl.style.transitionDuration = `${swiper.params.speed}ms`;\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n    currentScale = zoom.scale;\n    isScaling = false;\n    if (zoom.scale > 1 && gesture.slideEl) {\n      gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    } else if (zoom.scale <= 1 && gesture.slideEl) {\n      gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    }\n    if (zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n      gesture.slideEl = undefined;\n    }\n  }\n  function onTouchStart(e) {\n    const device = swiper.device;\n    if (!gesture.imageEl) return;\n    if (image.isTouched) return;\n    if (device.android && e.cancelable) e.preventDefault();\n    image.isTouched = true;\n    const event = evCache.length > 0 ? evCache[0] : e;\n    image.touchesStart.x = event.pageX;\n    image.touchesStart.y = event.pageY;\n  }\n  function onTouchMove(e) {\n    if (!eventWithinSlide(e) || !eventWithinZoomContainer(e)) return;\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !gesture.slideEl) return;\n    if (!image.isMoved) {\n      image.width = gesture.imageEl.offsetWidth;\n      image.height = gesture.imageEl.offsetHeight;\n      image.startX = getTranslate(gesture.imageWrapEl, 'x') || 0;\n      image.startY = getTranslate(gesture.imageWrapEl, 'y') || 0;\n      gesture.slideWidth = gesture.slideEl.offsetWidth;\n      gesture.slideHeight = gesture.slideEl.offsetHeight;\n      gesture.imageWrapEl.style.transitionDuration = '0ms';\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.touchesCurrent.x = evCache.length > 0 ? evCache[0].pageX : e.pageX;\n    image.touchesCurrent.y = evCache.length > 0 ? evCache[0].pageY : e.pageY;\n    const touchesDiff = Math.max(Math.abs(image.touchesCurrent.x - image.touchesStart.x), Math.abs(image.touchesCurrent.y - image.touchesStart.y));\n    if (touchesDiff > 5) {\n      swiper.allowClick = false;\n    }\n    if (!image.isMoved && !isScaling) {\n      if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n        image.isTouched = false;\n        return;\n      }\n      if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n    e.stopPropagation();\n    image.isMoved = true;\n    const scaleRatio = (zoom.scale - currentScale) / (gesture.maxRatio - swiper.params.zoom.minRatio);\n    const {\n      originX,\n      originY\n    } = gesture;\n    image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX + scaleRatio * (image.width - originX * 2);\n    image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY + scaleRatio * (image.height - originY * 2);\n    if (image.currentX < image.minX) {\n      image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n    }\n    if (image.currentY < image.minY) {\n      image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTouchEnd() {\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n    gesture.imageWrapEl.style.transitionDuration = `${momentumDuration}ms`;\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTransitionEnd() {\n    const zoom = swiper.zoom;\n    if (gesture.slideEl && swiper.activeIndex !== swiper.slides.indexOf(gesture.slideEl)) {\n      if (gesture.imageEl) {\n        gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n      }\n      if (gesture.imageWrapEl) {\n        gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n      }\n      gesture.slideEl.classList.remove(`${swiper.params.zoom.zoomedSlideClass}`);\n      zoom.scale = 1;\n      currentScale = 1;\n      gesture.slideEl = undefined;\n      gesture.imageEl = undefined;\n      gesture.imageWrapEl = undefined;\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n  }\n  function zoomIn(e) {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (e && e.target) {\n        gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      }\n      if (!gesture.slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n        } else {\n          gesture.slideEl = swiper.slides[swiper.activeIndex];\n        }\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.touchAction = 'none';\n    }\n    gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.pageX;\n      touchY = e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n    const forceZoomRatio = typeof e === 'number' ? e : null;\n    if (currentScale === 1 && forceZoomRatio) {\n      touchX = undefined;\n      touchY = undefined;\n    }\n    zoom.scale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    currentScale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    if (e && !(currentScale === 1 && forceZoomRatio)) {\n      slideWidth = gesture.slideEl.offsetWidth;\n      slideHeight = gesture.slideEl.offsetHeight;\n      offsetX = elementOffset(gesture.slideEl).left + window.scrollX;\n      offsetY = elementOffset(gesture.slideEl).top + window.scrollY;\n      diffX = offsetX + slideWidth / 2 - touchX;\n      diffY = offsetY + slideHeight / 2 - touchY;\n      imageWidth = gesture.imageEl.offsetWidth;\n      imageHeight = gesture.imageEl.offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n      translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n      translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    if (forceZoomRatio && zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = `translate3d(${translateX}px, ${translateY}px,0)`;\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function zoomOut() {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n      } else {\n        gesture.slideEl = swiper.slides[swiper.activeIndex];\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = '';\n      swiper.wrapperEl.style.touchAction = '';\n    }\n    zoom.scale = 1;\n    currentScale = 1;\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n    gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    gesture.slideEl = undefined;\n    gesture.originX = 0;\n    gesture.originY = 0;\n  }\n\n  // Toggle Zoom\n  function zoomToggle(e) {\n    const zoom = swiper.zoom;\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoomOut();\n    } else {\n      // Zoom In\n      zoomIn(e);\n    }\n  }\n  function getListeners() {\n    const passiveListener = swiper.params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    const activeListenerWithCapture = swiper.params.passiveListeners ? {\n      passive: false,\n      capture: true\n    } : true;\n    return {\n      passiveListener,\n      activeListenerWithCapture\n    };\n  }\n\n  // Attach/Detach Events\n  function enable() {\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.addEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.addEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.addEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.addEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  function disable() {\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n    zoom.enabled = false;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.removeEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.removeEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.removeEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.removeEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  on('init', () => {\n    if (swiper.params.zoom.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    disable();\n  });\n  on('touchStart', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchStart(e);\n  });\n  on('touchEnd', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchEnd(e);\n  });\n  on('doubleTap', (_s, e) => {\n    if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n      zoomToggle(e);\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n      onTransitionEnd();\n    }\n  });\n  on('slideChange', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n      onTransitionEnd();\n    }\n  });\n  Object.assign(swiper.zoom, {\n    enable,\n    disable,\n    in: zoomIn,\n    out: zoomOut,\n    toggle: zoomToggle\n  });\n}","export default function classesToSelector(classes = '') {\n  return `.${classes.trim().replace(/([\\.:!+\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n}","import { createElement, elementChildren } from './utils.js';\nexport default function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n  if (swiper.params.createElements) {\n    Object.keys(checkProps).forEach(key => {\n      if (!params[key] && params.auto === true) {\n        let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];\n        if (!element) {\n          element = createElement('div', checkProps[key]);\n          element.className = checkProps[key];\n          swiper.el.append(element);\n        }\n        params[key] = element;\n        originalParams[key] = element;\n      }\n    });\n  }\n  return params;\n}","import { createElement, getSlideTransformEl } from './utils.js';\nexport default function createShadow(params, slideEl, side) {\n  const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\n  const shadowContainer = getSlideTransformEl(slideEl);\n  let shadowEl = shadowContainer.querySelector(`.${shadowClass}`);\n  if (!shadowEl) {\n    shadowEl = createElement('div', `swiper-slide-shadow${side ? `-${side}` : ''}`);\n    shadowContainer.append(shadowEl);\n  }\n  return shadowEl;\n}","export default function effectInit(params) {\n  const {\n    effect,\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams,\n    perspective,\n    recreateShadows,\n    getEffectParams\n  } = params;\n  on('beforeInit', () => {\n    if (swiper.params.effect !== effect) return;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n    if (perspective && perspective()) {\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n    }\n    const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n    Object.assign(swiper.params, overwriteParamsResult);\n    Object.assign(swiper.originalParams, overwriteParamsResult);\n  });\n  on('setTranslate', () => {\n    if (swiper.params.effect !== effect) return;\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    if (swiper.params.effect !== effect) return;\n    setTransition(duration);\n  });\n  on('transitionEnd', () => {\n    if (swiper.params.effect !== effect) return;\n    if (recreateShadows) {\n      if (!getEffectParams || !getEffectParams().slideShadows) return;\n      // remove shadows\n      swiper.slides.forEach(slideEl => {\n        slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => shadowEl.remove());\n      });\n      // create new one\n      recreateShadows();\n    }\n  });\n  let requireUpdateOnVirtual;\n  on('virtualUpdate', () => {\n    if (swiper.params.effect !== effect) return;\n    if (!swiper.slides.length) {\n      requireUpdateOnVirtual = true;\n    }\n    requestAnimationFrame(() => {\n      if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\n        setTranslate();\n        requireUpdateOnVirtual = false;\n      }\n    });\n  });\n}","import { getSlideTransformEl } from './utils.js';\nexport default function effectTarget(effectParams, slideEl) {\n  const transformEl = getSlideTransformEl(slideEl);\n  if (transformEl !== slideEl) {\n    transformEl.style.backfaceVisibility = 'hidden';\n    transformEl.style['-webkit-backface-visibility'] = 'hidden';\n  }\n  return transformEl;\n}","import { elementTransitionEnd } from './utils.js';\nexport default function effectVirtualTransitionEnd({\n  swiper,\n  duration,\n  transformElements,\n  allSlides\n}) {\n  const {\n    activeIndex\n  } = swiper;\n  const getSlide = el => {\n    if (!el.parentElement) {\n      // assume shadow root\n      const slide = swiper.slides.filter(slideEl => slideEl.shadowEl && slideEl.shadowEl === el.parentNode)[0];\n      return slide;\n    }\n    return el.parentElement;\n  };\n  if (swiper.params.virtualTranslate && duration !== 0) {\n    let eventTriggered = false;\n    let transitionEndTarget;\n    if (allSlides) {\n      transitionEndTarget = transformElements;\n    } else {\n      transitionEndTarget = transformElements.filter(transformEl => {\n        const el = transformEl.classList.contains('swiper-slide-transform') ? getSlide(transformEl) : transformEl;\n        return swiper.getSlideIndex(el) === activeIndex;\n      });\n    }\n    transitionEndTarget.forEach(el => {\n      elementTransitionEnd(el, () => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const evt = new window.CustomEvent('transitionend', {\n          bubbles: true,\n          cancelable: true\n        });\n        swiper.wrapperEl.dispatchEvent(evt);\n      });\n    });\n  }\n}","import { getWindow } from 'ssr-window';\nlet browser;\nfunction calcBrowser() {\n  const window = getWindow();\n  let needPerspectiveFix = false;\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n  if (isSafari()) {\n    const ua = String(window.navigator.userAgent);\n    if (ua.includes('Version/')) {\n      const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n      needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n    }\n  }\n  return {\n    isSafari: needPerspectiveFix || isSafari(),\n    needPerspectiveFix,\n    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n  };\n}\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n  return browser;\n}\nexport { getBrowser };","import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support.js';\nlet deviceCached;\nfunction calcDevice({\n  userAgent\n} = {}) {\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\nfunction getDevice(overrides = {}) {\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n  return deviceCached;\n}\nexport { getDevice };","import { getWindow, getDocument } from 'ssr-window';\nlet support;\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n  };\n}\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n  return support;\n}\nexport { getSupport };","export const processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nexport const preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex !== activeIndex && realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(slideIndexLastInView - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && i > slideIndexLastInView) unlazy(swiper, i);\n    }\n  }\n};","import { getWindow, getDocument } from 'ssr-window';\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach(key => {\n    try {\n      object[key] = null;\n    } catch (e) {\n      // no getter for object\n    }\n    try {\n      delete object[key];\n    } catch (e) {\n      // something got wrong\n    }\n  });\n}\nfunction nextTick(callback, delay = 0) {\n  return setTimeout(callback, delay);\n}\nfunction now() {\n  return Date.now();\n}\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n  if (!style) {\n    style = el.style;\n  }\n  return style;\n}\nfunction getTranslate(el, axis = 'x') {\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n  const curStyle = getComputedStyle(el, null);\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n    }\n    // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n  return curTransform || 0;\n}\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\nfunction extend(...args) {\n  const to = Object(args[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  for (let i = 1; i < args.length; i += 1) {\n    const nextSource = args[i];\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n  return to;\n}\nfunction setCSSProperty(el, varName, varValue) {\n  el.style.setProperty(varName, varValue);\n}\nfunction animateCSSModeScroll({\n  swiper,\n  targetPosition,\n  side\n}) {\n  const window = getWindow();\n  const startPosition = -swiper.translate;\n  let startTime = null;\n  let time;\n  const duration = swiper.params.speed;\n  swiper.wrapperEl.style.scrollSnapType = 'none';\n  window.cancelAnimationFrame(swiper.cssModeFrameID);\n  const dir = targetPosition > startPosition ? 'next' : 'prev';\n  const isOutOfBound = (current, target) => {\n    return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n  };\n  const animate = () => {\n    time = new Date().getTime();\n    if (startTime === null) {\n      startTime = time;\n    }\n    const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n    const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n    let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      currentPosition = targetPosition;\n    }\n    swiper.wrapperEl.scrollTo({\n      [side]: currentPosition\n    });\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.scrollSnapType = '';\n      setTimeout(() => {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n      });\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      return;\n    }\n    swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n  };\n  animate();\n}\nfunction getSlideTransformEl(slideEl) {\n  return slideEl.querySelector('.swiper-slide-transform') || slideEl.shadowEl && slideEl.shadowEl.querySelector('.swiper-slide-transform') || slideEl;\n}\nfunction findElementsInElements(elements = [], selector = '') {\n  const found = [];\n  elements.forEach(el => {\n    found.push(...el.querySelectorAll(selector));\n  });\n  return found;\n}\nfunction elementChildren(element, selector = '') {\n  return [...element.children].filter(el => el.matches(selector));\n}\nfunction createElement(tag, classes = []) {\n  const el = document.createElement(tag);\n  el.classList.add(...(Array.isArray(classes) ? classes : [classes]));\n  return el;\n}\nfunction elementOffset(el) {\n  const window = getWindow();\n  const document = getDocument();\n  const box = el.getBoundingClientRect();\n  const body = document.body;\n  const clientTop = el.clientTop || body.clientTop || 0;\n  const clientLeft = el.clientLeft || body.clientLeft || 0;\n  const scrollTop = el === window ? window.scrollY : el.scrollTop;\n  const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n  return {\n    top: box.top + scrollTop - clientTop,\n    left: box.left + scrollLeft - clientLeft\n  };\n}\nfunction elementPrevAll(el, selector) {\n  const prevEls = [];\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if (prev.matches(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return prevEls;\n}\nfunction elementNextAll(el, selector) {\n  const nextEls = [];\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if (next.matches(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return nextEls;\n}\nfunction elementStyle(el, prop) {\n  const window = getWindow();\n  return window.getComputedStyle(el, null).getPropertyValue(prop);\n}\nfunction elementIndex(el) {\n  let child = el;\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\nfunction elementParents(el, selector) {\n  const parents = []; // eslint-disable-line\n  let parent = el.parentElement; // eslint-disable-line\n  while (parent) {\n    if (selector) {\n      if (parent.matches(selector)) parents.push(parent);\n    } else {\n      parents.push(parent);\n    }\n    parent = parent.parentElement;\n  }\n  return parents;\n}\nfunction elementTransitionEnd(el, callback) {\n  function fireCallBack(e) {\n    if (e.target !== el) return;\n    callback.call(el, e);\n    el.removeEventListener('transitionend', fireCallBack);\n  }\n  if (callback) {\n    el.addEventListener('transitionend', fireCallBack);\n  }\n}\nfunction elementOuterSize(el, size, includeMargins) {\n  const window = getWindow();\n  if (includeMargins) {\n    return el[size === 'width' ? 'offsetWidth' : 'offsetHeight'] + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-right' : 'margin-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-left' : 'margin-bottom'));\n  }\n  return el.offsetWidth;\n}\nexport { animateCSSModeScroll, deleteProps, nextTick, now, getTranslate, isObject, extend, getComputedStyle, setCSSProperty, getSlideTransformEl,\n// dom\nfindElementsInElements, createElement, elementChildren, elementOffset, elementPrevAll, elementNextAll, elementStyle, elementIndex, elementParents, elementTransitionEnd, elementOuterSize };","/**\n * Swiper 9.2.4\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2023 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: April 21, 2023\n */\n\nexport { default as Swiper, default } from './core/core.js';\nexport { default as Virtual } from './modules/virtual/virtual.js';\nexport { default as Keyboard } from './modules/keyboard/keyboard.js';\nexport { default as Mousewheel } from './modules/mousewheel/mousewheel.js';\nexport { default as Navigation } from './modules/navigation/navigation.js';\nexport { default as Pagination } from './modules/pagination/pagination.js';\nexport { default as Scrollbar } from './modules/scrollbar/scrollbar.js';\nexport { default as Parallax } from './modules/parallax/parallax.js';\nexport { default as Zoom } from './modules/zoom/zoom.js';\nexport { default as Controller } from './modules/controller/controller.js';\nexport { default as A11y } from './modules/a11y/a11y.js';\nexport { default as History } from './modules/history/history.js';\nexport { default as HashNavigation } from './modules/hash-navigation/hash-navigation.js';\nexport { default as Autoplay } from './modules/autoplay/autoplay.js';\nexport { default as Thumbs } from './modules/thumbs/thumbs.js';\nexport { default as FreeMode } from './modules/free-mode/free-mode.js';\nexport { default as Grid } from './modules/grid/grid.js';\nexport { default as Manipulation } from './modules/manipulation/manipulation.js';\nexport { default as EffectFade } from './modules/effect-fade/effect-fade.js';\nexport { default as EffectCube } from './modules/effect-cube/effect-cube.js';\nexport { default as EffectFlip } from './modules/effect-flip/effect-flip.js';\nexport { default as EffectCoverflow } from './modules/effect-coverflow/effect-coverflow.js';\nexport { default as EffectCreative } from './modules/effect-creative/effect-creative.js';\nexport { default as EffectCards } from './modules/effect-cards/effect-cards.js';","export const getAppHeight = () => {\r\n    function getHeight (){\r\n        $('html').css('--app-height', $(window).innerHeight() + 'px');\r\n    }\r\n    getHeight();\r\n    window.addEventListener('resize', function (){\r\n        getHeight();\r\n    });\r\n}","export const videoModal = () => {\r\n    $('.js-video-modal').magnificPopup({\r\n        type: 'iframe',\r\n        mainClass: 'mfp-fade',\r\n        tClose: 'Закрыть',\r\n        tLoading: 'Загрузка',\r\n        fixedContentPos: false,\r\n        removalDelay: 160,\r\n        preloader: false,\r\n        callbacks: {\r\n            open: () => {\r\n                $('body').addClass('overflow');\r\n            },\r\n            close: () => {\r\n                $('body').removeClass('overflow');\r\n            }\r\n        }\r\n    });\r\n};\r\nexport const simpleModal = () => {\r\n    $('.js-simple-modal').magnificPopup({\r\n        type: 'inline',\r\n        mainClass: 'mfp-fade',\r\n        tClose: 'Закрыть',\r\n        tLoading: 'Загрузка',\r\n        removalDelay: 500,\r\n        closeBtnInside: true,\r\n        fixedContentPos: true,\r\n        preloader: false,\r\n        closeMarkup: '<button title=\"%title%\" type=\"button\" class=\"mfp-close\"><i class=\"icon icon-close\"></i></button>',\r\n        callbacks: {\r\n            open: () => {\r\n                $('body').addClass('overflow');\r\n            },\r\n            close: () => {\r\n                $('body').removeClass('overflow');\r\n            }\r\n        }\r\n    });\r\n\r\n    $('.js-info-modal').magnificPopup({\r\n        type: 'inline',\r\n        mainClass: 'mfp-fade info-modal',\r\n        tClose: 'Закрыть',\r\n        tLoading: 'Загрузка',\r\n        removalDelay: 500,\r\n        closeBtnInside: true,\r\n        fixedContentPos: true,\r\n        preloader: false,\r\n        closeMarkup: '<button title=\"%title%\" type=\"button\" class=\"mfp-close\"><i class=\"icon icon-close\"></i></button>',\r\n        callbacks: {\r\n            open: () => {\r\n                $('body').addClass('overflow');\r\n            },\r\n            close: () => {\r\n                $('body').removeClass('overflow');\r\n            }\r\n        }\r\n    });\r\n\r\n    $('.js-video-modal').magnificPopup({\r\n        type: 'inline',\r\n        mainClass: 'mfp-fade video-modal',\r\n        tClose: 'Закрыть',\r\n        tLoading: 'Загрузка',\r\n        removalDelay: 500,\r\n        closeBtnInside: true,\r\n        fixedContentPos: true,\r\n        preloader: false,\r\n        closeMarkup: '<button title=\"%title%\" type=\"button\" class=\"mfp-close\"><i class=\"icon icon-close\"></i></button>',\r\n        callbacks: {\r\n            open: () => {\r\n                $('body').addClass('overflow');\r\n                $('.js-video-start').click(function (){\r\n                    $(this).fadeOut();\r\n                    $(this).parent().find('.modal-descr').fadeOut();\r\n                    var src = $(this).parent().find('.video-file').attr('data-src');\r\n                    $(this).parent().find('.video-file').attr('src', src + '?&autoplay=1');\r\n                    $(this).parent().find('.video-file').fadeIn();\r\n                    $(this).parents().find('.modal-video-style').find('.mfp-close').addClass('active');\r\n                });\r\n            },\r\n            close: () => {\r\n                $('body').removeClass('overflow');\r\n                $('.modal-video-style .js-video-start').show();\r\n                $('.modal-video-style .modal-descr').show();\r\n                $('.modal-video-style .video-file').attr('src', '').hide();\r\n                $('.modal-video-style .mfp-close').removeClass('active');\r\n\r\n\r\n            }\r\n        }\r\n    });\r\n};\r\nexport const galleryModal = (galleryBlock) => {\r\n    $(galleryBlock).magnificPopup({\r\n        delegate: 'a',\r\n        type: 'image',\r\n        mainClass: 'mfp-fade',\r\n        tClose: 'Закрыть',\r\n        tLoading: 'Загрузка',\r\n        gallery: {\r\n            enabled: true,\r\n            tPrev: 'Назад',\r\n            tNext: 'Вперед',\r\n            tCounter: '<span class=\"mfp-counter\"><span class=\"active\">%curr%</span> / <span>%total%</span></span>'\r\n        },\r\n        image: {\r\n            tError: 'Ошибка загрузки',\r\n        }\r\n    });\r\n};","import 'lazysizes/plugins/bgset/ls.bgset.js';\r\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit.js';\r\n// slider\r\nimport Swiper, {Pagination, Parallax, Mousewheel, FreeMode, Autoplay} from \"swiper\";\r\n// modal\r\nimport {getAppHeight} from \"./_func/_jq/getAppHeight\";\r\nimport {simpleModal} from \"./_func/_jq/modalMagnific\";\r\n/* ------------------- */\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    getAppHeight();\r\n    var touchstartY = 0;\r\n    var touchendY = 0;\r\n    /* main slider */\r\n    var mainSlider = new Swiper(\"#main-slider\", {\r\n        modules: [Parallax, Mousewheel],\r\n        speed: 1800,\r\n        parallax: true,\r\n        direction: \"vertical\",\r\n        watchSlidesProgress: true,\r\n        mousewheelControl: true,\r\n        mousewheel: true,\r\n        allowTouchMove: false,\r\n        on: {\r\n            slideChange: function (e){\r\n                if(e.activeIndex == 0){\r\n                    $('#kid').attr('data-position', 0);\r\n                }\r\n                if(e.activeIndex == 1){\r\n                    $('#kid').attr('data-position', 1);\r\n                }\r\n                if(e.activeIndex == 2){\r\n                    $('#kid').attr('data-position', 2);\r\n                    setTimeout(function (){\r\n                        qualitySlider.autoplay.start();\r\n                    }, 3500);\r\n\r\n                }\r\n            }\r\n        }\r\n    });\r\n    /* swipe detection */\r\n    $(window).on('touchstart', function (event){\r\n        touchstartY = event.changedTouches[0].screenY;\r\n    });\r\n    $(window).on('touchend', function (event){\r\n        touchendY = event.changedTouches[0].screenY;\r\n        handleGesure();\r\n    });\r\n    function handleGesure() {\r\n        if(!$('body').hasClass('overflow')){\r\n            if (touchendY < touchstartY && touchstartY - touchendY > 50) {\r\n                mainSlider.slideNext();\r\n            }\r\n            if (touchendY > touchstartY && touchendY - touchstartY > 50) {\r\n                mainSlider.slidePrev();\r\n            }\r\n        }\r\n    }\r\n\r\n    /* main page sliders */\r\n    var qualitySlider = new Swiper(\"#quality-slider\", {\r\n        modules: [ Pagination, Autoplay, FreeMode ],\r\n        speed: 3500,\r\n        slidesPerView: 'auto',\r\n        centeredSlides: true,\r\n        loopedSlides: 2,\r\n        spaceBetween: 0,\r\n        loop: true,\r\n        allowTouchMove: false,\r\n        autoplay: {\r\n            delay: 0,\r\n            disableOnInteraction: false\r\n        },\r\n        freeMode: true,\r\n        pagination: {\r\n            el: \".swiper-pagination\",\r\n            clickable: true,\r\n        },\r\n        on: {\r\n            init: function () {\r\n                this.autoplay.stop();\r\n            }\r\n        }\r\n    });\r\n    document.querySelectorAll('.main-popular .popular-slider').forEach(popularSlider => {\r\n        var popularSlider = new Swiper(popularSlider, {\r\n            speed: 800,\r\n            loop: false,\r\n            slidesPerView: \"auto\",\r\n            spaceBetween: 0\r\n        });\r\n    });\r\n    // change popular sliders\r\n    $('.main-popular .popular-list .popular-list__link').click(function (){\r\n        var curType = $(this).attr('data-type');\r\n        $('.main-popular .popular-list .popular-list__link').removeClass('active');\r\n        $('.main-popular .main-popular__content .popular-slider').hide();\r\n        $(this).addClass('active');\r\n        $('.main-popular .main-popular__content .popular-slider[data-type=\"'+ curType +'\"]').fadeIn(600);\r\n    });\r\n    var fathersSlider = new Swiper(\"#fathers-slider\", {\r\n        modules: [ Pagination ],\r\n        speed: 800,\r\n        spaceBetween: 0,\r\n        slidesPerView: 'auto',\r\n        pagination: {\r\n            el: \".swiper-pagination\",\r\n            clickable: true,\r\n        },\r\n        breakpoints: {\r\n            421: {\r\n                spaceBetween: 0,\r\n                centeredSlides: true\r\n            },\r\n            768: {\r\n                spaceBetween: 0,\r\n                centeredSlides: false\r\n            },\r\n            1024: {\r\n                spaceBetween: 0,\r\n                centeredSlides: false\r\n            }\r\n        }\r\n\r\n    });\r\n    var lifehacksSlider = new Swiper('#lifehacks-slider', {\r\n        modules: [ Pagination ],\r\n        speed: 800,\r\n        loop: false,\r\n        slidesPerView: \"auto\",\r\n        spaceBetween: 0,\r\n        pagination: {\r\n            el: \".swiper-pagination\",\r\n            clickable: true,\r\n        }\r\n    });\r\n    /* phone mask */\r\n    $(\"input[name='phone']\").mask(\"+7 (999) 999-9999\");\r\n    /* file change */\r\n    $('input[type=\"file\"]').change(function (){\r\n        $(this).parent().find('.label span').html('Фаил прикреплен');\r\n    })\r\n    /* quiz links */\r\n    $('#quiz_modal input[name=\"age\"]').change(function (){\r\n        $('#quiz_modal .modal-content__step[data-step=\"5\"] .next-link').attr('data-step', $('#quiz_modal input[name=\"age\"]:checked').attr('data-step'));\r\n    });\r\n    $('.js-step-btn').click(function (){\r\n        var curStep = $(this).attr('data-step');\r\n        $('#quiz_modal .modal-content__step').hide();\r\n        $('#quiz_modal .modal-content__step[data-step=\"'+ curStep +'\"]').fadeIn(500);\r\n    })\r\n    /* modal */\r\n    simpleModal();\r\n\r\n    // tmp to check messages\r\n    /*\r\n    setTimeout(function (){\r\n        $('#history_modal .modal-form-wrapper').hide();\r\n        $('#history_modal .modal-message.success-message').fadeIn();\r\n    }, 4000)\r\n     */\r\n})"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}